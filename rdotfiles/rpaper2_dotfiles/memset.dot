digraph "CFG for 'memset' function" {
	label="CFG for 'memset' function";

	Node0x97e070 [shape=record,label="{%0:\l  %1 = icmp eq i64 %n, 0\l  br i1 %1, label %.loopexit, label %2\l|{<s0>T|<s1>F}}"];
	Node0x97e070:s0 -> Node0x982a40;
	Node0x97e070:s1 -> Node0x982220;
	Node0x982220 [shape=record,label="{%2:\l\l  %3 = trunc i32 %c to i8\l  store i8 %3, i8* %dest, align 1, !tbaa !1\l  %4 = add i64 %n, -1\l  %5 = getelementptr inbounds i8, i8* %dest, i64 %4\l  store i8 %3, i8* %5, align 1, !tbaa !1\l  %6 = icmp ult i64 %n, 3\l  br i1 %6, label %.loopexit, label %7\l|{<s0>T|<s1>F}}"];
	Node0x982220:s0 -> Node0x982a40;
	Node0x982220:s1 -> Node0x9825e0;
	Node0x9825e0 [shape=record,label="{%7:\l\l  %8 = getelementptr inbounds i8, i8* %dest, i64 1\l  store i8 %3, i8* %8, align 1, !tbaa !1\l  %9 = getelementptr inbounds i8, i8* %dest, i64 2\l  store i8 %3, i8* %9, align 1, !tbaa !1\l  %10 = add i64 %n, -2\l  %11 = getelementptr inbounds i8, i8* %dest, i64 %10\l  store i8 %3, i8* %11, align 1, !tbaa !1\l  %12 = add i64 %n, -3\l  %13 = getelementptr inbounds i8, i8* %dest, i64 %12\l  store i8 %3, i8* %13, align 1, !tbaa !1\l  %14 = icmp ult i64 %n, 7\l  br i1 %14, label %.loopexit, label %15\l|{<s0>T|<s1>F}}"];
	Node0x9825e0:s0 -> Node0x982a40;
	Node0x9825e0:s1 -> Node0x982630;
	Node0x982630 [shape=record,label="{%15:\l\l  %16 = getelementptr inbounds i8, i8* %dest, i64 3\l  store i8 %3, i8* %16, align 1, !tbaa !1\l  %17 = add i64 %n, -4\l  %18 = getelementptr inbounds i8, i8* %dest, i64 %17\l  store i8 %3, i8* %18, align 1, !tbaa !1\l  %19 = icmp ult i64 %n, 9\l  br i1 %19, label %.loopexit, label %20\l|{<s0>T|<s1>F}}"];
	Node0x982630:s0 -> Node0x982a40;
	Node0x982630:s1 -> Node0x982680;
	Node0x982680 [shape=record,label="{%20:\l\l  %21 = ptrtoint i8* %dest to i64\l  %22 = sub i64 0, %21\l  %23 = and i64 %22, 3\l  %24 = getelementptr inbounds i8, i8* %dest, i64 %23\l  %25 = sub i64 %n, %23\l  %26 = and i64 %25, -4\l  %27 = and i32 %c, 255\l  %28 = mul nuw i32 %27, 16843009\l  %29 = bitcast i8* %24 to i32*\l  store i32 %28, i32* %29, align 4, !tbaa !1\l  %30 = getelementptr inbounds i8, i8* %24, i64 %26\l  %31 = getelementptr inbounds i8, i8* %30, i64 -4\l  %32 = bitcast i8* %31 to i32*\l  store i32 %28, i32* %32, align 4, !tbaa !1\l  %33 = icmp ult i64 %26, 9\l  br i1 %33, label %.loopexit, label %34\l|{<s0>T|<s1>F}}"];
	Node0x982680:s0 -> Node0x982a40;
	Node0x982680:s1 -> Node0x9826d0;
	Node0x9826d0 [shape=record,label="{%34:\l\l  %35 = getelementptr inbounds i8, i8* %24, i64 4\l  %36 = bitcast i8* %35 to i32*\l  store i32 %28, i32* %36, align 4, !tbaa !1\l  %37 = getelementptr inbounds i8, i8* %24, i64 8\l  %38 = bitcast i8* %37 to i32*\l  store i32 %28, i32* %38, align 4, !tbaa !1\l  %39 = getelementptr inbounds i8, i8* %30, i64 -12\l  %40 = bitcast i8* %39 to i32*\l  store i32 %28, i32* %40, align 4, !tbaa !1\l  %41 = getelementptr inbounds i8, i8* %30, i64 -8\l  %42 = bitcast i8* %41 to i32*\l  store i32 %28, i32* %42, align 4, !tbaa !1\l  %43 = icmp ult i64 %26, 25\l  br i1 %43, label %.loopexit, label %44\l|{<s0>T|<s1>F}}"];
	Node0x9826d0:s0 -> Node0x982a40;
	Node0x9826d0:s1 -> Node0x982720;
	Node0x982720 [shape=record,label="{%44:\l\l  %45 = getelementptr inbounds i8, i8* %24, i64 12\l  %46 = insertelement \<4 x i32\> undef, i32 %28, i32 0\l  %47 = insertelement \<4 x i32\> %46, i32 %28, i32 1\l  %48 = insertelement \<4 x i32\> %47, i32 %28, i32 2\l  %49 = insertelement \<4 x i32\> %48, i32 %28, i32 3\l  %50 = bitcast i8* %45 to \<4 x i32\>*\l  store \<4 x i32\> %49, \<4 x i32\>* %50, align 4, !tbaa !1\l  %51 = getelementptr inbounds i8, i8* %30, i64 -28\l  %52 = bitcast i8* %51 to \<4 x i32\>*\l  store \<4 x i32\> %49, \<4 x i32\>* %52, align 4, !tbaa !1\l  %53 = ptrtoint i8* %24 to i64\l  %54 = and i64 %53, 4\l  %55 = or i64 %54, 24\l  %56 = sub i64 %26, %55\l  %57 = zext i32 %28 to i64\l  %58 = shl nuw i64 %57, 32\l  %59 = or i64 %58, %57\l  %60 = icmp ugt i64 %56, 31\l  br i1 %60, label %.lr.ph.preheader, label %.loopexit\l|{<s0>T|<s1>F}}"];
	Node0x982720:s0 -> Node0x982770;
	Node0x982720:s1 -> Node0x982a40;
	Node0x982770 [shape=record,label="{.lr.ph.preheader:                                 \l  %61 = getelementptr inbounds i8, i8* %24, i64 %55\l  %62 = sub i64 0, %21\l  %63 = and i64 %62, 3\l  %64 = sub i64 %n, %63\l  %65 = add i64 %64, -32\l  %66 = and i64 %65, -4\l  %67 = sub i64 %66, %55\l  %68 = lshr i64 %67, 5\l  %69 = add nuw nsw i64 %68, 1\l  %xtraiter = and i64 %69, 3\l  %lcmp.mod = icmp eq i64 %xtraiter, 0\l  br i1 %lcmp.mod, label %.lr.ph.preheader.split, label %.lr.ph.prol.preheader\l|{<s0>T|<s1>F}}"];
	Node0x982770:s0 -> Node0x9828b0;
	Node0x982770:s1 -> Node0x9827c0;
	Node0x9827c0 [shape=record,label="{.lr.ph.prol.preheader:                            \l  br label %.lr.ph.prol\l}"];
	Node0x9827c0 -> Node0x982810;
	Node0x982810 [shape=record,label="{.lr.ph.prol:                                      \l  %.013.prol = phi i64 [ %77, %.lr.ph.prol ], [ %56, %.lr.ph.prol.preheader ]\l  %s.02.prol = phi i8* [ %78, %.lr.ph.prol ], [ %61, %.lr.ph.prol.preheader ]\l  %prol.iter = phi i64 [ %prol.iter.sub, %.lr.ph.prol ], [ %xtraiter,\l... %.lr.ph.prol.preheader ]\l  %70 = bitcast i8* %s.02.prol to i64*\l  store i64 %59, i64* %70, align 8, !tbaa !1\l  %71 = getelementptr inbounds i8, i8* %s.02.prol, i64 8\l  %72 = bitcast i8* %71 to i64*\l  store i64 %59, i64* %72, align 8, !tbaa !1\l  %73 = getelementptr inbounds i8, i8* %s.02.prol, i64 16\l  %74 = bitcast i8* %73 to i64*\l  store i64 %59, i64* %74, align 8, !tbaa !1\l  %75 = getelementptr inbounds i8, i8* %s.02.prol, i64 24\l  %76 = bitcast i8* %75 to i64*\l  store i64 %59, i64* %76, align 8, !tbaa !1\l  %77 = add i64 %.013.prol, -32\l  %78 = getelementptr inbounds i8, i8* %s.02.prol, i64 32\l  %prol.iter.sub = add i64 %prol.iter, -1\l  %prol.iter.cmp = icmp eq i64 %prol.iter.sub, 0\l  br i1 %prol.iter.cmp, label %.lr.ph.preheader.split.loopexit, label\l... %.lr.ph.prol, !llvm.loop !4\l|{<s0>T|<s1>F}}"];
	Node0x982810:s0 -> Node0x982860;
	Node0x982810:s1 -> Node0x982810;
	Node0x982860 [shape=record,label="{.lr.ph.preheader.split.loopexit:                  \l  %.lcssa4 = phi i8* [ %78, %.lr.ph.prol ]\l  %.lcssa = phi i64 [ %77, %.lr.ph.prol ]\l  br label %.lr.ph.preheader.split\l}"];
	Node0x982860 -> Node0x9828b0;
	Node0x9828b0 [shape=record,label="{.lr.ph.preheader.split:                           \l  %.013.unr = phi i64 [ %56, %.lr.ph.preheader ], [ %.lcssa,\l... %.lr.ph.preheader.split.loopexit ]\l  %s.02.unr = phi i8* [ %61, %.lr.ph.preheader ], [ %.lcssa4,\l... %.lr.ph.preheader.split.loopexit ]\l  %79 = icmp ult i64 %67, 96\l  br i1 %79, label %.loopexit.loopexit, label %.lr.ph.preheader.split.split\l|{<s0>T|<s1>F}}"];
	Node0x9828b0:s0 -> Node0x9829f0;
	Node0x9828b0:s1 -> Node0x982900;
	Node0x982900 [shape=record,label="{.lr.ph.preheader.split.split:                     \l  br label %.lr.ph\l}"];
	Node0x982900 -> Node0x982950;
	Node0x982950 [shape=record,label="{.lr.ph:                                           \l  %.013 = phi i64 [ %.013.unr, %.lr.ph.preheader.split.split ], [ %111,\l... %.lr.ph ]\l  %s.02 = phi i8* [ %s.02.unr, %.lr.ph.preheader.split.split ], [ %112,\l... %.lr.ph ]\l  %80 = bitcast i8* %s.02 to i64*\l  store i64 %59, i64* %80, align 8, !tbaa !1\l  %81 = getelementptr inbounds i8, i8* %s.02, i64 8\l  %82 = bitcast i8* %81 to i64*\l  store i64 %59, i64* %82, align 8, !tbaa !1\l  %83 = getelementptr inbounds i8, i8* %s.02, i64 16\l  %84 = bitcast i8* %83 to i64*\l  store i64 %59, i64* %84, align 8, !tbaa !1\l  %85 = getelementptr inbounds i8, i8* %s.02, i64 24\l  %86 = bitcast i8* %85 to i64*\l  store i64 %59, i64* %86, align 8, !tbaa !1\l  %87 = getelementptr inbounds i8, i8* %s.02, i64 32\l  %88 = bitcast i8* %87 to i64*\l  store i64 %59, i64* %88, align 8, !tbaa !1\l  %89 = getelementptr inbounds i8, i8* %s.02, i64 40\l  %90 = bitcast i8* %89 to i64*\l  store i64 %59, i64* %90, align 8, !tbaa !1\l  %91 = getelementptr inbounds i8, i8* %s.02, i64 48\l  %92 = bitcast i8* %91 to i64*\l  store i64 %59, i64* %92, align 8, !tbaa !1\l  %93 = getelementptr inbounds i8, i8* %s.02, i64 56\l  %94 = bitcast i8* %93 to i64*\l  store i64 %59, i64* %94, align 8, !tbaa !1\l  %95 = getelementptr inbounds i8, i8* %s.02, i64 64\l  %96 = bitcast i8* %95 to i64*\l  store i64 %59, i64* %96, align 8, !tbaa !1\l  %97 = getelementptr inbounds i8, i8* %s.02, i64 72\l  %98 = bitcast i8* %97 to i64*\l  store i64 %59, i64* %98, align 8, !tbaa !1\l  %99 = getelementptr inbounds i8, i8* %s.02, i64 80\l  %100 = bitcast i8* %99 to i64*\l  store i64 %59, i64* %100, align 8, !tbaa !1\l  %101 = getelementptr inbounds i8, i8* %s.02, i64 88\l  %102 = bitcast i8* %101 to i64*\l  store i64 %59, i64* %102, align 8, !tbaa !1\l  %103 = getelementptr inbounds i8, i8* %s.02, i64 96\l  %104 = bitcast i8* %103 to i64*\l  store i64 %59, i64* %104, align 8, !tbaa !1\l  %105 = getelementptr inbounds i8, i8* %s.02, i64 104\l  %106 = bitcast i8* %105 to i64*\l  store i64 %59, i64* %106, align 8, !tbaa !1\l  %107 = getelementptr inbounds i8, i8* %s.02, i64 112\l  %108 = bitcast i8* %107 to i64*\l  store i64 %59, i64* %108, align 8, !tbaa !1\l  %109 = getelementptr inbounds i8, i8* %s.02, i64 120\l  %110 = bitcast i8* %109 to i64*\l  store i64 %59, i64* %110, align 8, !tbaa !1\l  %111 = add i64 %.013, -128\l  %112 = getelementptr inbounds i8, i8* %s.02, i64 128\l  %113 = icmp ugt i64 %111, 31\l  br i1 %113, label %.lr.ph, label %.loopexit.loopexit.unr-lcssa\l|{<s0>T|<s1>F}}"];
	Node0x982950:s0 -> Node0x982950;
	Node0x982950:s1 -> Node0x9829a0;
	Node0x9829a0 [shape=record,label="{.loopexit.loopexit.unr-lcssa:                     \l  br label %.loopexit.loopexit\l}"];
	Node0x9829a0 -> Node0x9829f0;
	Node0x9829f0 [shape=record,label="{.loopexit.loopexit:                               \l  br label %.loopexit\l}"];
	Node0x9829f0 -> Node0x982a40;
	Node0x982a40 [shape=record,label="{.loopexit:                                        \l  ret i8* %dest\l}"];
}
