digraph "CFG for '__pthread_exit' function" {
	label="CFG for '__pthread_exit' function";

	Node0x2414980 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%1:\l  %2 = alloca %struct.__sigset_t, align 8\l  %3 = tail call %struct.__pthread* asm mov %fs:0,$0,\l... =r,~\{dirflag\},~\{fpsr\},~\{flags\}() #26, !srcloc !1086\l  %4 = bitcast %struct.__sigset_t* %2 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %4) #27\l  %5 = getelementptr inbounds %struct.__pthread, %struct.__pthread* %3, i64 0,\l... i32 11\l  store volatile i8 1, i8* %5, align 8, !tbaa !1087\l  %6 = getelementptr inbounds %struct.__pthread, %struct.__pthread* %3, i64 0,\l... i32 12\l  store volatile i8 0, i8* %6, align 1, !tbaa !1095\l  %7 = getelementptr inbounds %struct.__pthread, %struct.__pthread* %3, i64 0,\l... i32 19\l  store i8* %0, i8** %7, align 8, !tbaa !1096\l  %8 = getelementptr inbounds %struct.__pthread, %struct.__pthread* %3, i64 0,\l... i32 20\l  %9 = load %struct.__ptcb*, %struct.__ptcb** %8, align 8, !tbaa !1097\l  %10 = icmp eq %struct.__ptcb* %9, null\l  br i1 %10, label %24, label %11\l|{<s0>T|<s1>F}}"];
	Node0x2414980:s0 -> Node0x24153b0;
	Node0x2414980:s1 -> Node0x2415310;
	Node0x2415310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6a38570",label="{%11:\l11:                                               \l  %12 = bitcast %struct.__ptcb** %8 to i64*\l  br label %13\l}"];
	Node0x2415310 -> Node0x2415360;
	Node0x2415360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%13:\l13:                                               \l  %14 = phi %struct.__ptcb* [ %9, %11 ], [ %22, %13 ]\l  %15 = getelementptr inbounds %struct.__ptcb, %struct.__ptcb* %14, i64 0, i32\l... 0\l  %16 = load void (i8*)*, void (i8*)** %15, align 8, !tbaa !1098\l  %17 = getelementptr inbounds %struct.__ptcb, %struct.__ptcb* %14, i64 0, i32\l... 1\l  %18 = load i8*, i8** %17, align 8, !tbaa !1100\l  %19 = getelementptr inbounds %struct.__ptcb, %struct.__ptcb* %14, i64 0, i32\l... 2\l  %20 = bitcast %struct.__ptcb** %19 to i64*\l  %21 = load i64, i64* %20, align 8, !tbaa !1101\l  store i64 %21, i64* %12, align 8, !tbaa !1097\l  tail call void %16(i8* %18) #28\l  %22 = load %struct.__ptcb*, %struct.__ptcb** %8, align 8, !tbaa !1097\l  %23 = icmp eq %struct.__ptcb* %22, null\l  br i1 %23, label %24, label %13\l|{<s0>T|<s1>F}}"];
	Node0x2415360:s0 -> Node0x24153b0;
	Node0x2415360:s1 -> Node0x2415360;
	Node0x24153b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%24:\l24:                                               \l  tail call void @__pthread_tsd_run_dtors() #29\l  %25 = getelementptr inbounds %struct.__pthread, %struct.__pthread* %3, i64\l... 0, i32 25, i64 0\l  tail call fastcc void @__lock(i32* nonnull %25) #29\l  call fastcc void @__block_app_sigs(i8* nonnull %4) #29\l  call fastcc void @__tl_lock() #30\l  %26 = getelementptr inbounds %struct.__pthread, %struct.__pthread* %3, i64\l... 0, i32 3\l  %27 = load %struct.__pthread*, %struct.__pthread** %26, align 8, !tbaa !1102\l  %28 = icmp eq %struct.__pthread* %27, %3\l  br i1 %28, label %29, label %30\l|{<s0>T|<s1>F}}"];
	Node0x24153b0:s0 -> Node0x2415400;
	Node0x24153b0:s1 -> Node0x2415450;
	Node0x2415400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#4f69d970",label="{%29:\l29:                                               \l  call fastcc void @__tl_unlock() #30\l  call fastcc void @__restore_sigs(i8* nonnull %4) #29\l  call fastcc void @__unlock(i32* nonnull %25) #29\l  call fastcc void @exit(i32 0) #31\l  unreachable\l}"];
	Node0x2415450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%30:\l30:                                               \l  %31 = ptrtoint %struct.__pthread* %27 to i64\l  %32 = getelementptr inbounds %struct.__libc, %struct.__libc* @__libc, i64 0,\l... i32 3\l  %33 = load volatile i32, i32* %32, align 4, !tbaa !1103\l  %34 = add nsw i32 %33, -1\l  %35 = getelementptr inbounds %struct.__libc, %struct.__libc* @__libc, i64 0,\l... i32 3\l  store volatile i32 %34, i32* %35, align 4, !tbaa !1103\l  %36 = getelementptr inbounds %struct.__pthread, %struct.__pthread* %3, i64\l... 0, i32 2\l  %37 = bitcast %struct.__pthread** %36 to i64*\l  %38 = load i64, i64* %37, align 8, !tbaa !1106\l  %39 = getelementptr inbounds %struct.__pthread, %struct.__pthread* %27, i64\l... 0, i32 2\l  %40 = bitcast %struct.__pthread** %39 to i64*\l  store i64 %38, i64* %40, align 8, !tbaa !1106\l  %41 = load %struct.__pthread*, %struct.__pthread** %36, align 8, !tbaa !1106\l  %42 = getelementptr inbounds %struct.__pthread, %struct.__pthread* %41, i64\l... 0, i32 3\l  %43 = bitcast %struct.__pthread** %42 to i64*\l  store i64 %31, i64* %43, align 8, !tbaa !1102\l  store %struct.__pthread* %3, %struct.__pthread** %26, align 8, !tbaa !1102\l  store %struct.__pthread* %3, %struct.__pthread** %36, align 8, !tbaa !1106\l  call fastcc void @__vm_lock() #29\l  %44 = getelementptr inbounds %struct.__pthread, %struct.__pthread* %3, i64\l... 0, i32 22, i32 0\l  %45 = load volatile i8*, i8** %44, align 8, !tbaa !1107\l  %46 = bitcast i8* %45 to i8**\l  %47 = icmp ne i8* %45, null\l  %48 = icmp ne i8** %44, %46\l  %49 = and i1 %47, %48\l  br i1 %49, label %50, label %83\l|{<s0>T|<s1>F}}"];
	Node0x2415450:s0 -> Node0x24154a0;
	Node0x2415450:s1 -> Node0x2415630;
	Node0x24154a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%50:\l50:                                               \l  %51 = getelementptr inbounds %struct.__pthread, %struct.__pthread* %3, i64\l... 0, i32 22, i32 2\l  br label %52\l}"];
	Node0x24154a0 -> Node0x24154f0;
	Node0x24154f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%52:\l52:                                               \l  %53 = phi i8** [ %46, %50 ], [ %79, %77 ]\l  %54 = phi i8* [ %45, %50 ], [ %78, %77 ]\l  %55 = getelementptr inbounds i8, i8* %54, i64 -32\l  %56 = getelementptr inbounds i8, i8* %54, i64 -24\l  %57 = bitcast i8* %56 to i32*\l  %58 = load volatile i32, i32* %57, align 8, !tbaa !1108\l  %59 = bitcast i8* %55 to i32*\l  %60 = load i32, i32* %59, align 8, !tbaa !1108\l  store volatile i8* %54, i8** %51, align 8, !tbaa !1109\l  %61 = load volatile i8*, i8** %53, align 8, !tbaa !1110\l  store volatile i8* %61, i8** %44, align 8, !tbaa !1107\l  %62 = getelementptr inbounds i8, i8* %54, i64 -28\l  %63 = bitcast i8* %62 to i32*\l  %64 = call i32 asm sideeffect xchg $0, $1,\l... =r,=*m,0,~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}(i32* nonnull %63, i32\l... 1073741824) #27, !srcloc !1111\l  store volatile i8* null, i8** %51, align 8, !tbaa !1109\l  %65 = icmp slt i32 %64, 0\l  %66 = icmp ne i32 %58, 0\l  %67 = or i1 %66, %65\l  br i1 %67, label %68, label %77\l|{<s0>T|<s1>F}}"];
	Node0x24154f0:s0 -> Node0x2415540;
	Node0x24154f0:s1 -> Node0x24155e0;
	Node0x2415540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%68:\l68:                                               \l  %69 = trunc i32 %60 to i8\l  %70 = icmp slt i8 %69, 0\l  %71 = ptrtoint i8* %62 to i64\l  %72 = select i1 %70, i64 1, i64 129\l  %73 = call i64 asm sideeffect syscall,\l... =\{ax\},\{ax\},\{di\},\{si\},\{dx\},~\{rcx\},~\{r11\},~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}\l...(i64 202, i64 %71, i64 %72, i64 1) #27, !srcloc !1112\l  %74 = icmp eq i64 %73, -38\l  br i1 %74, label %75, label %77\l|{<s0>T|<s1>F}}"];
	Node0x2415540:s0 -> Node0x2415590;
	Node0x2415540:s1 -> Node0x24155e0;
	Node0x2415590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%75:\l75:                                               \l  %76 = call i64 asm sideeffect syscall,\l... =\{ax\},\{ax\},\{di\},\{si\},\{dx\},~\{rcx\},~\{r11\},~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}\l...(i64 202, i64 %71, i64 1, i64 1) #27, !srcloc !1112\l  br label %77\l}"];
	Node0x2415590 -> Node0x24155e0;
	Node0x24155e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%77:\l77:                                               \l  %78 = load volatile i8*, i8** %44, align 8, !tbaa !1107\l  %79 = bitcast i8* %78 to i8**\l  %80 = icmp ne i8* %78, null\l  %81 = icmp ne i8** %44, %79\l  %82 = and i1 %80, %81\l  br i1 %82, label %52, label %83\l|{<s0>T|<s1>F}}"];
	Node0x24155e0:s0 -> Node0x24154f0;
	Node0x24155e0:s1 -> Node0x2415630;
	Node0x2415630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%83:\l83:                                               \l  call fastcc void @__vm_unlock() #29\l  call fastcc void @__do_orphaned_stdio_locks() #29\l  call fastcc void @__dl_thread_cleanup() #29\l  %84 = getelementptr inbounds %struct.__pthread, %struct.__pthread* %3, i64\l... 0, i32 9\l  %85 = call i32 asm sideeffect lock \l  %86 = icmp eq i32 %85, 2\l  br i1 %86, label %87, label %101\l|{<s0>T|<s1>F}}"];
	Node0x2415630:s0 -> Node0x2415680;
	Node0x2415630:s1 -> Node0x24157c0;
	Node0x2415680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%87:\l87:                                               \l  %88 = getelementptr inbounds %struct.__pthread, %struct.__pthread* %3, i64\l... 0, i32 14\l  %89 = load i8*, i8** %88, align 8, !tbaa !1114\l  %90 = icmp eq i8* %89, null\l  br i1 %90, label %101, label %91\l|{<s0>T|<s1>F}}"];
	Node0x2415680:s0 -> Node0x24157c0;
	Node0x2415680:s1 -> Node0x24156d0;
	Node0x24156d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%91:\l91:                                               \l  call fastcc void @__block_all_sigs(i8* nonnull %4) #29\l  %92 = getelementptr inbounds %struct.__pthread, %struct.__pthread* %3, i64\l... 0, i32 22, i32 1\l  %93 = load i64, i64* %92, align 8, !tbaa !1115\l  %94 = icmp eq i64 %93, 0\l  br i1 %94, label %97, label %95\l|{<s0>T|<s1>F}}"];
	Node0x24156d0:s0 -> Node0x2415770;
	Node0x24156d0:s1 -> Node0x2415720;
	Node0x2415720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%95:\l95:                                               \l  %96 = call i64 asm sideeffect syscall,\l... =\{ax\},\{ax\},\{di\},\{si\},~\{rcx\},~\{r11\},~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}(i64\l... 273, i64 0, i64 24) #27, !srcloc !1116\l  br label %97\l}"];
	Node0x2415720 -> Node0x2415770;
	Node0x2415770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%97:\l97:                                               \l  call fastcc void @__vm_wait() #29\l  %98 = load i8*, i8** %88, align 8, !tbaa !1114\l  %99 = getelementptr inbounds %struct.__pthread, %struct.__pthread* %3, i64\l... 0, i32 15\l  %100 = load i64, i64* %99, align 8, !tbaa !1117\l  call void @__unmapself(i8* %98, i64 %100) #29\l  br label %101\l}"];
	Node0x2415770 -> Node0x24157c0;
	Node0x24157c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%101:\l101:                                              \l  %102 = ptrtoint i32* %84 to i64\l  %103 = call i64 asm sideeffect syscall,\l... =\{ax\},\{ax\},\{di\},\{si\},\{dx\},~\{rcx\},~\{r11\},~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}\l...(i64 202, i64 %102, i64 129, i64 1) #27, !srcloc !1112\l  %104 = icmp eq i64 %103, -38\l  br i1 %104, label %105, label %107\l|{<s0>T|<s1>F}}"];
	Node0x24157c0:s0 -> Node0x2415810;
	Node0x24157c0:s1 -> Node0x2415860;
	Node0x2415810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%105:\l105:                                              \l  %106 = call i64 asm sideeffect syscall,\l... =\{ax\},\{ax\},\{di\},\{si\},\{dx\},~\{rcx\},~\{r11\},~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}\l...(i64 202, i64 %102, i64 1, i64 1) #27, !srcloc !1112\l  br label %107\l}"];
	Node0x2415810 -> Node0x2415860;
	Node0x2415860 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%107:\l107:                                              \l  %108 = getelementptr inbounds %struct.__pthread, %struct.__pthread* %3, i64\l... 0, i32 7\l  store i32 0, i32* %108, align 8, !tbaa !1118\l  call fastcc void @__unlock(i32* nonnull %25) #29\l  br label %109\l}"];
	Node0x2415860 -> Node0x24158b0;
	Node0x24158b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%109:\l109:                                              \l  %110 = call i64 asm sideeffect syscall,\l... =\{ax\},\{ax\},\{di\},~\{rcx\},~\{r11\},~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}(i64 60,\l... i64 0) #27, !srcloc !1119\l  br label %109\l}"];
	Node0x24158b0 -> Node0x24158b0;
}
