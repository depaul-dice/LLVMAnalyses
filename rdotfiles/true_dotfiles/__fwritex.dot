digraph "CFG for '__fwritex' function" {
	label="CFG for '__fwritex' function";

	Node0x169bcb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%3:\l  %4 = getelementptr inbounds %struct._IO_FILE.0, %struct._IO_FILE.0* %2, i64\l... 0, i32 4\l  %5 = load i8*, i8** %4, align 8, !tbaa !1086\l  %6 = icmp eq i8* %5, null\l  br i1 %6, label %9, label %7\l|{<s0>T|<s1>F}}"];
	Node0x169bcb0:s0 -> Node0x169bdd0;
	Node0x169bcb0:s1 -> Node0x169bd80;
	Node0x169bd80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%7:\l7:                                                \l  %8 = ptrtoint i8* %5 to i64\l  br label %16\l}"];
	Node0x169bd80 -> Node0x169be70;
	Node0x169bdd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%9:\l9:                                                \l  %10 = bitcast %struct._IO_FILE.0* %2 to %struct._IO_FILE.970*\l  %11 = tail call i32 @__towrite(%struct._IO_FILE.970* nonnull %10) #26\l  %12 = icmp eq i32 %11, 0\l  br i1 %12, label %13, label %if.end.icp12\l|{<s0>T|<s1>F}}"];
	Node0x169bdd0:s0 -> Node0x169be20;
	Node0x169bdd0:s1 -> Node0x169c500;
	Node0x169be20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%13:\l13:                                               \l  %14 = bitcast i8** %4 to i64*\l  %15 = load i64, i64* %14, align 8, !tbaa !1086\l  br label %16\l}"];
	Node0x169be20 -> Node0x169be70;
	Node0x169be70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%16:\l16:                                               \l  %17 = phi i64 [ %15, %13 ], [ %8, %7 ]\l  %18 = getelementptr inbounds %struct._IO_FILE.0, %struct._IO_FILE.0* %2, i64\l... 0, i32 5\l  %19 = bitcast i8** %18 to i64*\l  %20 = load i64, i64* %19, align 8, !tbaa !1093\l  %21 = sub i64 %17, %20\l  %22 = icmp ult i64 %21, %1\l  %23 = inttoptr i64 %20 to i8*\l  br i1 %22, label %24, label %39\l|{<s0>T|<s1>F}}"];
	Node0x169be70:s0 -> Node0x169bec0;
	Node0x169be70:s1 -> Node0x169c0f0;
	Node0x169bec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%24:\l24:                                               \l  %25 = getelementptr inbounds %struct._IO_FILE.0, %struct._IO_FILE.0* %2, i64\l... 0, i32 9\l  %26 = load i64 (%struct._IO_FILE.0*, i8*, i64)*, i64 (%struct._IO_FILE.0*,\l... i8*, i64)** %25, align 8, !tbaa !1094\l  %27 = bitcast i64 (%struct._IO_FILE.466*, i8*, i64)* @__stdio_write to i64\l... (%struct._IO_FILE.0*, i8*, i64)*\l  %28 = icmp eq i64 (%struct._IO_FILE.0*, i8*, i64)* %26, %27\l  br i1 %28, label %if.true.direct_targ10, label %if.false.orig_indirect11\l|{<s0>T|<s1>F}}"];
	Node0x169bec0:s0 -> Node0x169bf10;
	Node0x169bec0:s1 -> Node0x169bf60;
	Node0x169bf10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{if.true.direct_targ10:                            \l  %29 = bitcast %struct._IO_FILE.0* %2 to %struct._IO_FILE.466*\l  %30 = tail call i64 @__stdio_write(%struct._IO_FILE.466* nonnull %29, i8*\l... %0, i64 %1) #27\l  br label %if.end.icp12\l}"];
	Node0x169bf10 -> Node0x169c500;
	Node0x169bf60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{if.false.orig_indirect11:                         \l  %31 = icmp eq i64 (%struct._IO_FILE.0*, i8*, i64)* %26, @sn_write\l  br i1 %31, label %if.true.direct_targ13, label %if.false.orig_indirect14\l|{<s0>T|<s1>F}}"];
	Node0x169bf60:s0 -> Node0x169bfb0;
	Node0x169bf60:s1 -> Node0x169c000;
	Node0x169bfb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{if.true.direct_targ13:                            \l  %32 = tail call i64 @sn_write(%struct._IO_FILE.0* nonnull %2, i8* %0, i64\l... %1) #27\l  br label %if.end.icp12\l}"];
	Node0x169bfb0 -> Node0x169c500;
	Node0x169c000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{if.false.orig_indirect14:                         \l  %33 = bitcast i64 (%struct._IO_FILE.466*, i8*, i64)* @__stdout_write to i64\l... (%struct._IO_FILE.0*, i8*, i64)*\l  %34 = icmp eq i64 (%struct._IO_FILE.0*, i8*, i64)* %26, %33\l  br i1 %34, label %if.true.direct_targ16, label %if.false.orig_indirect17\l|{<s0>T|<s1>F}}"];
	Node0x169c000:s0 -> Node0x169c050;
	Node0x169c000:s1 -> Node0x169c0a0;
	Node0x169c050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{if.true.direct_targ16:                            \l  %35 = bitcast %struct._IO_FILE.0* %2 to %struct._IO_FILE.466*\l  %36 = tail call i64 @__stdout_write(%struct._IO_FILE.466* nonnull %35, i8*\l... %0, i64 %1) #27\l  br label %if.end.icp12\l}"];
	Node0x169c050 -> Node0x169c500;
	Node0x169c0a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{if.false.orig_indirect17:                         \l  %37 = icmp eq i64 (%struct._IO_FILE.0*, i8*, i64)* %26, @wrap_write\l  call void @llvm.assume(i1 %37)\l  %38 = tail call i64 @wrap_write(%struct._IO_FILE.0* nonnull %2, i8* %0, i64\l... %1) #27\l  br label %if.end.icp12\l}"];
	Node0x169c0a0 -> Node0x169c500;
	Node0x169c0f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%39:\l39:                                               \l  %40 = getelementptr inbounds %struct._IO_FILE.0, %struct._IO_FILE.0* %2, i64\l... 0, i32 20\l  %41 = load i32, i32* %40, align 8, !tbaa !1095\l  %42 = icmp sgt i32 %41, -1\l  br i1 %42, label %43, label %72\l|{<s0>T|<s1>F}}"];
	Node0x169c0f0:s0 -> Node0x169c140;
	Node0x169c0f0:s1 -> Node0x169c4b0;
	Node0x169c140 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%43:\l43:                                               \l  %44 = phi i64 [ %47, %46 ], [ %1, %39 ]\l  %45 = icmp eq i64 %44, 0\l  br i1 %45, label %72, label %46\l|{<s0>T|<s1>F}}"];
	Node0x169c140:s0 -> Node0x169c4b0;
	Node0x169c140:s1 -> Node0x169c190;
	Node0x169c190 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%46:\l46:                                               \l  %47 = add i64 %44, -1\l  %48 = getelementptr inbounds i8, i8* %0, i64 %47\l  %49 = load i8, i8* %48, align 1, !tbaa !1096\l  %50 = icmp eq i8 %49, 10\l  br i1 %50, label %51, label %43\l|{<s0>T|<s1>F}}"];
	Node0x169c190:s0 -> Node0x169c1e0;
	Node0x169c190:s1 -> Node0x169c140;
	Node0x169c1e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%51:\l51:                                               \l  %52 = getelementptr inbounds %struct._IO_FILE.0, %struct._IO_FILE.0* %2, i64\l... 0, i32 9\l  %53 = load i64 (%struct._IO_FILE.0*, i8*, i64)*, i64 (%struct._IO_FILE.0*,\l... i8*, i64)** %52, align 8, !tbaa !1094\l  %54 = bitcast i64 (%struct._IO_FILE.466*, i8*, i64)* @__stdio_write to i64\l... (%struct._IO_FILE.0*, i8*, i64)*\l  %55 = icmp eq i64 (%struct._IO_FILE.0*, i8*, i64)* %53, %54\l  br i1 %55, label %if.true.direct_targ, label %if.false.orig_indirect\l|{<s0>T|<s1>F}}"];
	Node0x169c1e0:s0 -> Node0x169c230;
	Node0x169c1e0:s1 -> Node0x169c280;
	Node0x169c230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{if.true.direct_targ:                              \l  %56 = bitcast %struct._IO_FILE.0* %2 to %struct._IO_FILE.466*\l  %57 = tail call i64 @__stdio_write(%struct._IO_FILE.466* %56, i8* nonnull\l... %0, i64 %44) #27\l  br label %if.end.icp\l}"];
	Node0x169c230 -> Node0x169c410;
	Node0x169c280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{if.false.orig_indirect:                           \l  %58 = icmp eq i64 (%struct._IO_FILE.0*, i8*, i64)* %53, @sn_write\l  br i1 %58, label %if.true.direct_targ1, label %if.false.orig_indirect2\l|{<s0>T|<s1>F}}"];
	Node0x169c280:s0 -> Node0x169c2d0;
	Node0x169c280:s1 -> Node0x169c320;
	Node0x169c2d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#abc8fd70",label="{if.true.direct_targ1:                             \l  %59 = tail call i64 @sn_write(%struct._IO_FILE.0* %2, i8* nonnull %0, i64\l... %44) #27\l  br label %if.end.icp\l}"];
	Node0x169c2d0 -> Node0x169c410;
	Node0x169c320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{if.false.orig_indirect2:                          \l  %60 = bitcast i64 (%struct._IO_FILE.466*, i8*, i64)* @__stdout_write to i64\l... (%struct._IO_FILE.0*, i8*, i64)*\l  %61 = icmp eq i64 (%struct._IO_FILE.0*, i8*, i64)* %53, %60\l  br i1 %61, label %if.true.direct_targ4, label %if.false.orig_indirect5\l|{<s0>T|<s1>F}}"];
	Node0x169c320:s0 -> Node0x169c370;
	Node0x169c320:s1 -> Node0x169c3c0;
	Node0x169c370 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#96b7ff70",label="{if.true.direct_targ4:                             \l  %62 = bitcast %struct._IO_FILE.0* %2 to %struct._IO_FILE.466*\l  %63 = tail call i64 @__stdout_write(%struct._IO_FILE.466* %62, i8* nonnull\l... %0, i64 %44) #27\l  br label %if.end.icp\l}"];
	Node0x169c370 -> Node0x169c410;
	Node0x169c3c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{if.false.orig_indirect5:                          \l  %64 = icmp eq i64 (%struct._IO_FILE.0*, i8*, i64)* %53, @wrap_write\l  call void @llvm.assume(i1 %64)\l  %65 = tail call i64 @wrap_write(%struct._IO_FILE.0* %2, i8* nonnull %0, i64\l... %44) #27\l  br label %if.end.icp\l}"];
	Node0x169c3c0 -> Node0x169c410;
	Node0x169c410 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{if.end.icp:                                       \l  %66 = phi i64 [ %57, %if.true.direct_targ ], [ %44, %if.true.direct_targ1 ],\l... [ %65, %if.false.orig_indirect5 ], [ %63, %if.true.direct_targ4 ]\l  %67 = icmp ult i64 %66, %44\l  br i1 %67, label %if.end.icp12, label %68\l|{<s0>T|<s1>F}}"];
	Node0x169c410:s0 -> Node0x169c500;
	Node0x169c410:s1 -> Node0x169c460;
	Node0x169c460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cedaeb70",label="{%68:\l68:                                               \l  %69 = getelementptr inbounds i8, i8* %0, i64 %44\l  %70 = sub i64 %1, %44\l  %71 = load i8*, i8** %18, align 8, !tbaa !1093\l  br label %72\l}"];
	Node0x169c460 -> Node0x169c4b0;
	Node0x169c4b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%72:\l72:                                               \l  %73 = phi i8* [ %71, %68 ], [ %23, %39 ], [ %23, %43 ]\l  %74 = phi i64 [ %70, %68 ], [ %1, %39 ], [ %1, %43 ]\l  %75 = phi i8* [ %69, %68 ], [ %0, %39 ], [ %0, %43 ]\l  %76 = phi i64 [ %44, %68 ], [ 0, %39 ], [ 0, %43 ]\l  %77 = tail call fastcc i8* @memcpy(i8* %73, i8* %75, i64 %74) #26\l  %78 = load i8*, i8** %18, align 8, !tbaa !1093\l  %79 = getelementptr inbounds i8, i8* %78, i64 %74\l  store i8* %79, i8** %18, align 8, !tbaa !1093\l  %80 = add i64 %76, %74\l  br label %if.end.icp12\l}"];
	Node0x169c4b0 -> Node0x169c500;
	Node0x169c500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{if.end.icp12:                                     \l  %81 = phi i64 [ %80, %72 ], [ %66, %if.end.icp ], [ 0, %9 ], [ %30,\l... %if.true.direct_targ10 ], [ %1, %if.true.direct_targ13 ], [ %38,\l... %if.false.orig_indirect17 ], [ %36, %if.true.direct_targ16 ]\l  ret i64 %81\l}"];
}
