digraph "CFG for 'wcsrtombs' function" {
	label="CFG for 'wcsrtombs' function";

	Node0x157c7c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%4:\l  %5 = alloca [4 x i8], align 1\l  %6 = getelementptr inbounds [4 x i8], [4 x i8]* %5, i64 0, i64 0\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #26\l  %7 = icmp eq i8* %0, null\l  br i1 %7, label %12, label %8\l|{<s0>T|<s1>F}}"];
	Node0x157c7c0:s0 -> Node0x157ca40;
	Node0x157c7c0:s1 -> Node0x157c9a0;
	Node0x157c9a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%8:\l8:                                                \l  %9 = icmp ugt i64 %2, 3\l  br i1 %9, label %10, label %30\l|{<s0>T|<s1>F}}"];
	Node0x157c9a0:s0 -> Node0x157c9f0;
	Node0x157c9a0:s1 -> Node0x157cb80;
	Node0x157c9f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%10:\l10:                                               \l  %11 = load i32*, i32** %1, align 8, !tbaa !1086\l  br label %36\l}"];
	Node0x157c9f0 -> Node0x157cc20;
	Node0x157ca40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%12:\l12:                                               \l  %13 = load i32*, i32** %1, align 8, !tbaa !1086\l  %14 = load i32, i32* %13, align 4, !tbaa !1090\l  %15 = icmp eq i32 %14, 0\l  br i1 %15, label %98, label %16\l|{<s0>T|<s1>F}}"];
	Node0x157ca40:s0 -> Node0x157d120;
	Node0x157ca40:s1 -> Node0x157ca90;
	Node0x157ca90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%16:\l16:                                               \l  %17 = phi i32 [ %28, %24 ], [ %14, %12 ]\l  %18 = phi i32* [ %27, %24 ], [ %13, %12 ]\l  %19 = phi i64 [ %26, %24 ], [ 0, %12 ]\l  %20 = icmp ugt i32 %17, 127\l  br i1 %20, label %21, label %24\l|{<s0>T|<s1>F}}"];
	Node0x157ca90:s0 -> Node0x157cae0;
	Node0x157ca90:s1 -> Node0x157cb30;
	Node0x157cae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%21:\l21:                                               \l  %22 = call fastcc i64 @wcrtomb(i8* nonnull %6, i32 %17, %struct.FTW* null)\l... #27\l  %23 = icmp eq i64 %22, -1\l  br i1 %23, label %98, label %24\l|{<s0>T|<s1>F}}"];
	Node0x157cae0:s0 -> Node0x157d120;
	Node0x157cae0:s1 -> Node0x157cb30;
	Node0x157cb30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%24:\l24:                                               \l  %25 = phi i64 [ %22, %21 ], [ 1, %16 ]\l  %26 = add i64 %25, %19\l  %27 = getelementptr inbounds i32, i32* %18, i64 1\l  %28 = load i32, i32* %27, align 4, !tbaa !1090\l  %29 = icmp eq i32 %28, 0\l  br i1 %29, label %98, label %16\l|{<s0>T|<s1>F}}"];
	Node0x157cb30:s0 -> Node0x157d120;
	Node0x157cb30:s1 -> Node0x157ca90;
	Node0x157cb80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%30:\l30:                                               \l  %31 = phi i64 [ %2, %8 ], [ %60, %58 ]\l  %32 = phi i8* [ %0, %8 ], [ %61, %58 ]\l  %33 = icmp eq i64 %31, 0\l  br i1 %33, label %98, label %34\l|{<s0>T|<s1>F}}"];
	Node0x157cb80:s0 -> Node0x157d120;
	Node0x157cb80:s1 -> Node0x157cbd0;
	Node0x157cbd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%34:\l34:                                               \l  %35 = load i32*, i32** %1, align 8, !tbaa !1086\l  br label %64\l}"];
	Node0x157cbd0 -> Node0x157ce50;
	Node0x157cc20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%36:\l36:                                               \l  %37 = phi i32* [ %62, %58 ], [ %11, %10 ]\l  %38 = phi i8* [ %61, %58 ], [ %0, %10 ]\l  %39 = phi i64 [ %60, %58 ], [ %2, %10 ]\l  %40 = load i32, i32* %37, align 4, !tbaa !1090\l  %41 = add i32 %40, -1\l  %42 = icmp ugt i32 %41, 126\l  br i1 %42, label %43, label %53\l|{<s0>T|<s1>F}}"];
	Node0x157cc20:s0 -> Node0x157cc70;
	Node0x157cc20:s1 -> Node0x157cdb0;
	Node0x157cc70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%43:\l43:                                               \l  %44 = icmp eq i32 %40, 0\l  br i1 %44, label %45, label %47\l|{<s0>T|<s1>F}}"];
	Node0x157cc70:s0 -> Node0x157ccc0;
	Node0x157cc70:s1 -> Node0x157cd10;
	Node0x157ccc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%45:\l45:                                               \l  store i8 0, i8* %38, align 1, !tbaa !1092\l  store i32* null, i32** %1, align 8, !tbaa !1086\l  %46 = sub i64 %2, %39\l  br label %98\l}"];
	Node0x157ccc0 -> Node0x157d120;
	Node0x157cd10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%47:\l47:                                               \l  %48 = tail call fastcc i64 @wcrtomb(i8* %38, i32 %40, %struct.FTW* null) #27\l  %49 = icmp eq i64 %48, -1\l  br i1 %49, label %98, label %50\l|{<s0>T|<s1>F}}"];
	Node0x157cd10:s0 -> Node0x157d120;
	Node0x157cd10:s1 -> Node0x157cd60;
	Node0x157cd60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%50:\l50:                                               \l  %51 = getelementptr inbounds i8, i8* %38, i64 %48\l  %52 = sub i64 %39, %48\l  br label %58\l}"];
	Node0x157cd60 -> Node0x157ce00;
	Node0x157cdb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%53:\l53:                                               \l  %54 = trunc i32 %40 to i8\l  %55 = getelementptr inbounds i8, i8* %38, i64 1\l  store i8 %54, i8* %38, align 1, !tbaa !1092\l  %56 = add i64 %39, -1\l  %57 = load i32*, i32** %1, align 8, !tbaa !1086\l  br label %58\l}"];
	Node0x157cdb0 -> Node0x157ce00;
	Node0x157ce00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%58:\l58:                                               \l  %59 = phi i32* [ %37, %50 ], [ %57, %53 ]\l  %60 = phi i64 [ %52, %50 ], [ %56, %53 ]\l  %61 = phi i8* [ %51, %50 ], [ %55, %53 ]\l  %62 = getelementptr inbounds i32, i32* %59, i64 1\l  store i32* %62, i32** %1, align 8, !tbaa !1086\l  %63 = icmp ugt i64 %60, 3\l  br i1 %63, label %36, label %30\l|{<s0>T|<s1>F}}"];
	Node0x157ce00:s0 -> Node0x157cc20;
	Node0x157ce00:s1 -> Node0x157cb80;
	Node0x157ce50 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%64:\l64:                                               \l  %65 = phi i32* [ %96, %92 ], [ %35, %34 ]\l  %66 = phi i8* [ %95, %92 ], [ %32, %34 ]\l  %67 = phi i64 [ %94, %92 ], [ %31, %34 ]\l  %68 = load i32, i32* %65, align 4, !tbaa !1090\l  %69 = add i32 %68, -1\l  %70 = icmp ugt i32 %69, 126\l  br i1 %70, label %71, label %87\l|{<s0>T|<s1>F}}"];
	Node0x157ce50:s0 -> Node0x157cea0;
	Node0x157ce50:s1 -> Node0x157d080;
	Node0x157cea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%71:\l71:                                               \l  %72 = icmp eq i32 %68, 0\l  br i1 %72, label %73, label %75\l|{<s0>T|<s1>F}}"];
	Node0x157cea0:s0 -> Node0x157cef0;
	Node0x157cea0:s1 -> Node0x157cf40;
	Node0x157cef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%73:\l73:                                               \l  store i8 0, i8* %66, align 1, !tbaa !1092\l  store i32* null, i32** %1, align 8, !tbaa !1086\l  %74 = sub i64 %2, %67\l  br label %98\l}"];
	Node0x157cef0 -> Node0x157d120;
	Node0x157cf40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%75:\l75:                                               \l  %76 = call fastcc i64 @wcrtomb(i8* nonnull %6, i32 %68, %struct.FTW* null)\l... #27\l  %77 = icmp eq i64 %76, -1\l  br i1 %77, label %98, label %78\l|{<s0>T|<s1>F}}"];
	Node0x157cf40:s0 -> Node0x157d120;
	Node0x157cf40:s1 -> Node0x157cf90;
	Node0x157cf90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%78:\l78:                                               \l  %79 = icmp ult i64 %67, %76\l  br i1 %79, label %80, label %82\l|{<s0>T|<s1>F}}"];
	Node0x157cf90:s0 -> Node0x157cfe0;
	Node0x157cf90:s1 -> Node0x157d030;
	Node0x157cfe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%80:\l80:                                               \l  %81 = sub i64 %2, %67\l  br label %98\l}"];
	Node0x157cfe0 -> Node0x157d120;
	Node0x157d030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%82:\l82:                                               \l  %83 = load i32, i32* %65, align 4, !tbaa !1090\l  %84 = call fastcc i64 @wcrtomb(i8* %66, i32 %83, %struct.FTW* null) #27\l  %85 = getelementptr inbounds i8, i8* %66, i64 %76\l  %86 = sub i64 %67, %76\l  br label %92\l}"];
	Node0x157d030 -> Node0x157d0d0;
	Node0x157d080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%87:\l87:                                               \l  %88 = trunc i32 %68 to i8\l  %89 = getelementptr inbounds i8, i8* %66, i64 1\l  store i8 %88, i8* %66, align 1, !tbaa !1092\l  %90 = add i64 %67, -1\l  %91 = load i32*, i32** %1, align 8, !tbaa !1086\l  br label %92\l}"];
	Node0x157d080 -> Node0x157d0d0;
	Node0x157d0d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#ca3b3770",label="{%92:\l92:                                               \l  %93 = phi i32* [ %65, %82 ], [ %91, %87 ]\l  %94 = phi i64 [ %86, %82 ], [ %90, %87 ]\l  %95 = phi i8* [ %85, %82 ], [ %89, %87 ]\l  %96 = getelementptr inbounds i32, i32* %93, i64 1\l  store i32* %96, i32** %1, align 8, !tbaa !1086\l  %97 = icmp eq i64 %94, 0\l  br i1 %97, label %98, label %64\l|{<s0>T|<s1>F}}"];
	Node0x157d0d0:s0 -> Node0x157d120;
	Node0x157d0d0:s1 -> Node0x157ce50;
	Node0x157d120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%98:\l98:                                               \l  %99 = phi i64 [ %46, %45 ], [ %81, %80 ], [ %74, %73 ], [ 0, %12 ], [ %2,\l... %30 ], [ -1, %21 ], [ %26, %24 ], [ -1, %75 ], [ %2, %92 ], [ -1, %47 ]\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #26\l  ret i64 %99\l}"];
}
