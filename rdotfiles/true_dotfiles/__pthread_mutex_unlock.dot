digraph "CFG for '__pthread_mutex_unlock' function" {
	label="CFG for '__pthread_mutex_unlock' function";

	Node0x156adf0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%1:\l  %2 = bitcast %struct.pthread_mutex_t* %0 to [10 x i32]*\l  %3 = getelementptr inbounds %struct.pthread_mutex_t,\l... %struct.pthread_mutex_t* %0, i64 0, i32 0, i32 0, i64 1\l  %4 = bitcast i8** %3 to i32*\l  %5 = load volatile i32, i32* %4, align 8, !tbaa !1086\l  %6 = bitcast %struct.pthread_mutex_t* %0 to i32*\l  %7 = load i32, i32* %6, align 8, !tbaa !1086\l  %8 = and i32 %7, 15\l  %9 = and i32 %7, 128\l  %10 = xor i32 %9, 128\l  %11 = icmp eq i32 %8, 0\l  br i1 %11, label %53, label %12\l|{<s0>T|<s1>F}}"];
	Node0x156adf0:s0 -> Node0x156b180;
	Node0x156adf0:s1 -> Node0x156af00;
	Node0x156af00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d8564670",label="{%12:\l12:                                               \l  %13 = tail call %struct.__pthread* asm mov %fs:0,$0,\l... =r,~\{dirflag\},~\{fpsr\},~\{flags\}() #26, !srcloc !1089\l  %14 = getelementptr inbounds [10 x i32], [10 x i32]* %2, i64 0, i64 1\l  %15 = load volatile i32, i32* %14, align 4, !tbaa !1086\l  %16 = and i32 %15, 1073741823\l  %17 = getelementptr inbounds %struct.__pthread, %struct.__pthread* %13, i64\l... 0, i32 7\l  %18 = load i32, i32* %17, align 8, !tbaa !1090\l  %19 = icmp eq i32 %16, %18\l  br i1 %19, label %20, label %97\l|{<s0>T|<s1>F}}"];
	Node0x156af00:s0 -> Node0x156af50;
	Node0x156af00:s1 -> Node0x156b540;
	Node0x156af50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%20:\l20:                                               \l  %21 = and i32 %7, 3\l  %22 = icmp eq i32 %21, 1\l  br i1 %22, label %23, label %29\l|{<s0>T|<s1>F}}"];
	Node0x156af50:s0 -> Node0x156afa0;
	Node0x156af50:s1 -> Node0x156b040;
	Node0x156afa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%23:\l23:                                               \l  %24 = getelementptr inbounds [10 x i32], [10 x i32]* %2, i64 0, i64 5\l  %25 = load i32, i32* %24, align 4, !tbaa !1086\l  %26 = icmp eq i32 %25, 0\l  br i1 %26, label %29, label %27\l|{<s0>T|<s1>F}}"];
	Node0x156afa0:s0 -> Node0x156b040;
	Node0x156afa0:s1 -> Node0x156aff0;
	Node0x156aff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%27:\l27:                                               \l  %28 = add nsw i32 %25, -1\l  store i32 %28, i32* %24, align 4, !tbaa !1086\l  br label %97\l}"];
	Node0x156aff0 -> Node0x156b540;
	Node0x156b040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%29:\l29:                                               \l  %30 = and i32 %7, 4\l  %31 = icmp eq i32 %30, 0\l  %32 = and i32 %15, 1073741824\l  %33 = icmp eq i32 %32, 0\l  %34 = or i1 %31, %33\l  %35 = select i1 %34, i32 0, i32 2147483647\l  %36 = icmp eq i32 %10, 0\l  br i1 %36, label %37, label %41\l|{<s0>T|<s1>F}}"];
	Node0x156b040:s0 -> Node0x156b090;
	Node0x156b040:s1 -> Node0x156b0e0;
	Node0x156b090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%37:\l37:                                               \l  %38 = getelementptr inbounds %struct.pthread_mutex_t,\l... %struct.pthread_mutex_t* %0, i64 0, i32 0, i32 0, i64 4\l  %39 = bitcast i8** %38 to i8*\l  %40 = getelementptr inbounds %struct.__pthread, %struct.__pthread* %13, i64\l... 0, i32 22, i32 2\l  store volatile i8* %39, i8** %40, align 8, !tbaa !1096\l  tail call fastcc void @__vm_lock() #27\l  br label %41\l}"];
	Node0x156b090 -> Node0x156b0e0;
	Node0x156b0e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%41:\l41:                                               \l  %42 = getelementptr inbounds %struct.pthread_mutex_t,\l... %struct.pthread_mutex_t* %0, i64 0, i32 0, i32 0, i64 3\l  %43 = load volatile i8*, i8** %42, align 8, !tbaa !1086\l  %44 = getelementptr inbounds %struct.pthread_mutex_t,\l... %struct.pthread_mutex_t* %0, i64 0, i32 0, i32 0, i64 4\l  %45 = load volatile i8*, i8** %44, align 8, !tbaa !1086\l  %46 = bitcast i8* %43 to i8**\l  store volatile i8* %45, i8** %46, align 8, !tbaa !1097\l  %47 = getelementptr inbounds %struct.__pthread, %struct.__pthread* %13, i64\l... 0, i32 22, i32 0\l  %48 = bitcast i8** %47 to i8*\l  %49 = icmp eq i8* %45, %48\l  br i1 %49, label %53, label %50\l|{<s0>T|<s1>F}}"];
	Node0x156b0e0:s0 -> Node0x156b180;
	Node0x156b0e0:s1 -> Node0x156b130;
	Node0x156b130 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%50:\l50:                                               \l  %51 = getelementptr inbounds i8, i8* %45, i64 -8\l  %52 = bitcast i8* %51 to i8**\l  store volatile i8* %43, i8** %52, align 8, !tbaa !1097\l  br label %53\l}"];
	Node0x156b130 -> Node0x156b180;
	Node0x156b180 [shape=record,color="#b70d28ff", style=filled, fillcolor="#de614d70",label="{%53:\l53:                                               \l  %54 = phi i32 [ 0, %1 ], [ %35, %41 ], [ %35, %50 ]\l  %55 = phi i32 [ undef, %1 ], [ %15, %41 ], [ %15, %50 ]\l  %56 = phi %struct.__pthread* [ undef, %1 ], [ %13, %41 ], [ %13, %50 ]\l  %57 = and i32 %7, 8\l  %58 = icmp eq i32 %57, 0\l  br i1 %58, label %74, label %59\l|{<s0>T|<s1>F}}"];
	Node0x156b180:s0 -> Node0x156b360;
	Node0x156b180:s1 -> Node0x156b1d0;
	Node0x156b1d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%59:\l59:                                               \l  %60 = icmp slt i32 %55, 0\l  br i1 %60, label %65, label %61\l|{<s0>T|<s1>F}}"];
	Node0x156b1d0:s0 -> Node0x156b270;
	Node0x156b1d0:s1 -> Node0x156b220;
	Node0x156b220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%61:\l61:                                               \l  %62 = getelementptr inbounds [10 x i32], [10 x i32]* %2, i64 0, i64 1\l  %63 = tail call i32 asm sideeffect lock \l  %64 = icmp eq i32 %63, %55\l  br i1 %64, label %77, label %65\l|{<s0>T|<s1>F}}"];
	Node0x156b220:s0 -> Node0x156b3b0;
	Node0x156b220:s1 -> Node0x156b270;
	Node0x156b270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%65:\l65:                                               \l  %66 = icmp eq i32 %54, 0\l  br i1 %66, label %68, label %67\l|{<s0>T|<s1>F}}"];
	Node0x156b270:s0 -> Node0x156b310;
	Node0x156b270:s1 -> Node0x156b2c0;
	Node0x156b2c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%67:\l67:                                               \l  tail call void asm sideeffect mov $1, $0 \l  br label %68\l}"];
	Node0x156b2c0 -> Node0x156b310;
	Node0x156b310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%68:\l68:                                               \l  %69 = getelementptr inbounds [10 x i32], [10 x i32]* %2, i64 0, i64 1\l  %70 = ptrtoint i32* %69 to i64\l  %71 = or i32 %10, 7\l  %72 = zext i32 %71 to i64\l  %73 = tail call i64 asm sideeffect syscall,\l... =\{ax\},\{ax\},\{di\},\{si\},~\{rcx\},~\{r11\},~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}(i64\l... 202, i64 %70, i64 %72) #28, !srcloc !1100\l  br label %77\l}"];
	Node0x156b310 -> Node0x156b3b0;
	Node0x156b360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%74:\l74:                                               \l  %75 = getelementptr inbounds [10 x i32], [10 x i32]* %2, i64 0, i64 1\l  %76 = tail call i32 asm sideeffect xchg $0, $1,\l... =r,=*m,0,~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}(i32* nonnull %75, i32 %54)\l... #28, !srcloc !1101\l  br label %77\l}"];
	Node0x156b360 -> Node0x156b3b0;
	Node0x156b3b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#de614d70",label="{%77:\l77:                                               \l  %78 = phi i32 [ %76, %74 ], [ 0, %61 ], [ 0, %68 ]\l  %79 = phi i32 [ %5, %74 ], [ 0, %61 ], [ 0, %68 ]\l  %80 = icmp ne i32 %10, 0\l  %81 = or i1 %11, %80\l  br i1 %81, label %84, label %82\l|{<s0>T|<s1>F}}"];
	Node0x156b3b0:s0 -> Node0x156b450;
	Node0x156b3b0:s1 -> Node0x156b400;
	Node0x156b400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%82:\l82:                                               \l  %83 = getelementptr inbounds %struct.__pthread, %struct.__pthread* %56, i64\l... 0, i32 22, i32 2\l  store volatile i8* null, i8** %83, align 8, !tbaa !1096\l  tail call fastcc void @__vm_unlock() #27\l  br label %84\l}"];
	Node0x156b400 -> Node0x156b450;
	Node0x156b450 [shape=record,color="#b70d28ff", style=filled, fillcolor="#de614d70",label="{%84:\l84:                                               \l  %85 = icmp ne i32 %79, 0\l  %86 = icmp slt i32 %78, 0\l  %87 = or i1 %86, %85\l  br i1 %87, label %88, label %97\l|{<s0>T|<s1>F}}"];
	Node0x156b450:s0 -> Node0x156b4a0;
	Node0x156b450:s1 -> Node0x156b540;
	Node0x156b4a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%88:\l88:                                               \l  %89 = getelementptr inbounds [10 x i32], [10 x i32]* %2, i64 0, i64 1\l  %90 = icmp eq i32 %10, 0\l  %91 = ptrtoint i32* %89 to i64\l  %92 = select i1 %90, i64 1, i64 129\l  %93 = tail call i64 asm sideeffect syscall,\l... =\{ax\},\{ax\},\{di\},\{si\},\{dx\},~\{rcx\},~\{r11\},~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}\l...(i64 202, i64 %91, i64 %92, i64 1) #28, !srcloc !1102\l  %94 = icmp eq i64 %93, -38\l  br i1 %94, label %95, label %97\l|{<s0>T|<s1>F}}"];
	Node0x156b4a0:s0 -> Node0x156b4f0;
	Node0x156b4a0:s1 -> Node0x156b540;
	Node0x156b4f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%95:\l95:                                               \l  %96 = tail call i64 asm sideeffect syscall,\l... =\{ax\},\{ax\},\{di\},\{si\},\{dx\},~\{rcx\},~\{r11\},~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}\l...(i64 202, i64 %91, i64 1, i64 1) #28, !srcloc !1102\l  br label %97\l}"];
	Node0x156b4f0 -> Node0x156b540;
	Node0x156b540 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%97:\l97:                                               \l  %98 = phi i32 [ 0, %84 ], [ 0, %27 ], [ 1, %12 ], [ 0, %88 ], [ 0, %95 ]\l  ret i32 %98\l}"];
}
