digraph "CFG for 'DropremoveHolding' function" {
	label="CFG for 'DropremoveHolding' function";

	Node0x250ea30 [shape=record,label="{%2:\l  %3 = alloca i32, align 4\l  %4 = alloca i32, align 4\l  store i32 %0, i32* %3, align 4\l  store i32 %1, i32* %4, align 4\l  %5 = load i32, i32* %4, align 4\l  %6 = sext i32 %5 to i64\l  %7 = getelementptr inbounds [2 x [16 x i32]], [2 x [16 x i32]]* @holding,\l... i64 0, i64 %6\l  %8 = load i32, i32* %3, align 4\l  %9 = sext i32 %8 to i64\l  %10 = getelementptr inbounds [16 x i32], [16 x i32]* %7, i64 0, i64 %9\l  %11 = load i32, i32* %10, align 4\l  %12 = icmp sgt i32 %11, 0\l  br i1 %12, label %13, label %14\l|{<s0>T|<s1>F}}"];
	Node0x250ea30:s0 -> Node0x250ea80;
	Node0x250ea30:s1 -> Node0x250ead0;
	Node0x250ea80 [shape=record,label="{%13:\l13:                                               \l  br label %18\l}"];
	Node0x250ea80 -> Node0x250eb20;
	Node0x250ead0 [shape=record,label="{%14:\l14:                                               \l  %15 = getelementptr inbounds [23 x i8], [23 x i8]* @.str.2.37, i64 0, i64 0\l  %16 = getelementptr inbounds [8 x i8], [8 x i8]* @.str.1.30, i64 0, i64 0\l  %17 = getelementptr inbounds [33 x i8], [33 x i8]*\l... @__PRETTY_FUNCTION__.DropremoveHolding, i64 0, i64 0\l  call fastcc void @__assert_fail(i8* %15, i8* %16, i32 287, i8* %17) #21\l  unreachable\l}"];
	Node0x250eb20 [shape=record,label="{%18:\l18:                                               \l  %19 = load i32, i32* %4, align 4\l  %20 = sext i32 %19 to i64\l  %21 = getelementptr inbounds [2 x [16 x i32]], [2 x [16 x i32]]* @holding,\l... i64 0, i64 %20\l  %22 = load i32, i32* %3, align 4\l  %23 = sext i32 %22 to i64\l  %24 = getelementptr inbounds [16 x i32], [16 x i32]* %21, i64 0, i64 %23\l  %25 = load i32, i32* %24, align 4\l  %26 = icmp slt i32 %25, 20\l  br i1 %26, label %27, label %28\l|{<s0>T|<s1>F}}"];
	Node0x250eb20:s0 -> Node0x250eb70;
	Node0x250eb20:s1 -> Node0x250ebc0;
	Node0x250eb70 [shape=record,label="{%27:\l27:                                               \l  br label %32\l}"];
	Node0x250eb70 -> Node0x250ec10;
	Node0x250ebc0 [shape=record,label="{%28:\l28:                                               \l  %29 = getelementptr inbounds [24 x i8], [24 x i8]* @.str.3.38, i64 0, i64 0\l  %30 = getelementptr inbounds [8 x i8], [8 x i8]* @.str.1.30, i64 0, i64 0\l  %31 = getelementptr inbounds [33 x i8], [33 x i8]*\l... @__PRETTY_FUNCTION__.DropremoveHolding, i64 0, i64 0\l  call fastcc void @__assert_fail(i8* %29, i8* %30, i32 289, i8* %31) #21\l  unreachable\l}"];
	Node0x250ec10 [shape=record,label="{%32:\l32:                                               \l  %33 = load i32, i32* %3, align 4\l  %34 = sext i32 %33 to i64\l  %35 = getelementptr inbounds [14 x [144 x i32]], [14 x [144 x i32]]*\l... @zobrist, i64 0, i64 %34\l  %36 = load i32, i32* %4, align 4\l  %37 = sext i32 %36 to i64\l  %38 = getelementptr inbounds [2 x [16 x i32]], [2 x [16 x i32]]* @holding,\l... i64 0, i64 %37\l  %39 = load i32, i32* %3, align 4\l  %40 = sext i32 %39 to i64\l  %41 = getelementptr inbounds [16 x i32], [16 x i32]* %38, i64 0, i64 %40\l  %42 = load i32, i32* %41, align 4\l  %43 = sext i32 %42 to i64\l  %44 = getelementptr inbounds [144 x i32], [144 x i32]* %35, i64 0, i64 %43\l  %45 = load i32, i32* %44, align 4\l  %46 = load i32, i32* @hold_hash, align 4\l  %47 = xor i32 %46, %45\l  store i32 %47, i32* @hold_hash, align 4\l  %48 = load i32, i32* %4, align 4\l  %49 = sext i32 %48 to i64\l  %50 = getelementptr inbounds [2 x [16 x i32]], [2 x [16 x i32]]* @holding,\l... i64 0, i64 %49\l  %51 = load i32, i32* %3, align 4\l  %52 = sext i32 %51 to i64\l  %53 = getelementptr inbounds [16 x i32], [16 x i32]* %50, i64 0, i64 %52\l  %54 = load i32, i32* %53, align 4\l  %55 = add nsw i32 %54, -1\l  store i32 %55, i32* %53, align 4\l  %56 = load i32, i32* %4, align 4\l  %57 = sext i32 %56 to i64\l  %58 = getelementptr inbounds [2 x i32], [2 x i32]* @num_holding, i64 0, i64\l... %57\l  %59 = load i32, i32* %58, align 4\l  %60 = add nsw i32 %59, -1\l  store i32 %60, i32* %58, align 4\l  %61 = load i32, i32* %4, align 4\l  %62 = icmp eq i32 %61, 0\l  br i1 %62, label %63, label %71\l|{<s0>T|<s1>F}}"];
	Node0x250ec10:s0 -> Node0x250ec60;
	Node0x250ec10:s1 -> Node0x250ecb0;
	Node0x250ec60 [shape=record,label="{%63:\l63:                                               \l  %64 = load i32, i32* %3, align 4\l  %65 = sext i32 %64 to i64\l  %66 = bitcast [13 x i32]* @hand_value to [0 x i32]*\l  %67 = getelementptr inbounds [0 x i32], [0 x i32]* %66, i64 0, i64 %65\l  %68 = load i32, i32* %67, align 4\l  %69 = load i32, i32* @white_hand_eval, align 4\l  %70 = sub nsw i32 %69, %68\l  store i32 %70, i32* @white_hand_eval, align 4\l  br label %79\l}"];
	Node0x250ec60 -> Node0x250ed00;
	Node0x250ecb0 [shape=record,label="{%71:\l71:                                               \l  %72 = load i32, i32* %3, align 4\l  %73 = sext i32 %72 to i64\l  %74 = bitcast [13 x i32]* @hand_value to [0 x i32]*\l  %75 = getelementptr inbounds [0 x i32], [0 x i32]* %74, i64 0, i64 %73\l  %76 = load i32, i32* %75, align 4\l  %77 = load i32, i32* @black_hand_eval, align 4\l  %78 = sub nsw i32 %77, %76\l  store i32 %78, i32* @black_hand_eval, align 4\l  br label %79\l}"];
	Node0x250ecb0 -> Node0x250ed00;
	Node0x250ed00 [shape=record,label="{%79:\l79:                                               \l  %80 = load i32, i32* %3, align 4\l  %81 = sext i32 %80 to i64\l  %82 = getelementptr inbounds [14 x i32], [14 x i32]* @material, i64 0, i64\l... %81\l  %83 = load i32, i32* %82, align 4\l  %84 = load i32, i32* @Material, align 4\l  %85 = sub nsw i32 %84, %83\l  store i32 %85, i32* @Material, align 4\l  ret void\l}"];
}
