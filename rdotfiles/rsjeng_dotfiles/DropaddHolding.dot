digraph "CFG for 'DropaddHolding' function" {
	label="CFG for 'DropaddHolding' function";

	Node0x2509f80 [shape=record,label="{%2:\l  %3 = alloca i32, align 4\l  %4 = alloca i32, align 4\l  store i32 %0, i32* %3, align 4\l  store i32 %1, i32* %4, align 4\l  %5 = load i32, i32* %4, align 4\l  %6 = sext i32 %5 to i64\l  %7 = getelementptr inbounds [2 x [16 x i32]], [2 x [16 x i32]]* @holding,\l... i64 0, i64 %6\l  %8 = load i32, i32* %3, align 4\l  %9 = sext i32 %8 to i64\l  %10 = getelementptr inbounds [16 x i32], [16 x i32]* %7, i64 0, i64 %9\l  %11 = load i32, i32* %10, align 4\l  %12 = add nsw i32 %11, 1\l  store i32 %12, i32* %10, align 4\l  %13 = load i32, i32* %4, align 4\l  %14 = sext i32 %13 to i64\l  %15 = getelementptr inbounds [2 x i32], [2 x i32]* @num_holding, i64 0, i64\l... %14\l  %16 = load i32, i32* %15, align 4\l  %17 = add nsw i32 %16, 1\l  store i32 %17, i32* %15, align 4\l  %18 = load i32, i32* %3, align 4\l  %19 = sext i32 %18 to i64\l  %20 = getelementptr inbounds [14 x [144 x i32]], [14 x [144 x i32]]*\l... @zobrist, i64 0, i64 %19\l  %21 = load i32, i32* %4, align 4\l  %22 = sext i32 %21 to i64\l  %23 = getelementptr inbounds [2 x [16 x i32]], [2 x [16 x i32]]* @holding,\l... i64 0, i64 %22\l  %24 = load i32, i32* %3, align 4\l  %25 = sext i32 %24 to i64\l  %26 = getelementptr inbounds [16 x i32], [16 x i32]* %23, i64 0, i64 %25\l  %27 = load i32, i32* %26, align 4\l  %28 = sext i32 %27 to i64\l  %29 = getelementptr inbounds [144 x i32], [144 x i32]* %20, i64 0, i64 %28\l  %30 = load i32, i32* %29, align 4\l  %31 = load i32, i32* @hold_hash, align 4\l  %32 = xor i32 %31, %30\l  store i32 %32, i32* @hold_hash, align 4\l  %33 = load i32, i32* %4, align 4\l  %34 = icmp eq i32 %33, 0\l  br i1 %34, label %35, label %43\l|{<s0>T|<s1>F}}"];
	Node0x2509f80:s0 -> Node0x250ccf0;
	Node0x2509f80:s1 -> Node0x250cd40;
	Node0x250ccf0 [shape=record,label="{%35:\l35:                                               \l  %36 = load i32, i32* %3, align 4\l  %37 = sext i32 %36 to i64\l  %38 = bitcast [13 x i32]* @hand_value to [0 x i32]*\l  %39 = getelementptr inbounds [0 x i32], [0 x i32]* %38, i64 0, i64 %37\l  %40 = load i32, i32* %39, align 4\l  %41 = load i32, i32* @white_hand_eval, align 4\l  %42 = add nsw i32 %41, %40\l  store i32 %42, i32* @white_hand_eval, align 4\l  br label %51\l}"];
	Node0x250ccf0 -> Node0x250cd90;
	Node0x250cd40 [shape=record,label="{%43:\l43:                                               \l  %44 = load i32, i32* %3, align 4\l  %45 = sext i32 %44 to i64\l  %46 = bitcast [13 x i32]* @hand_value to [0 x i32]*\l  %47 = getelementptr inbounds [0 x i32], [0 x i32]* %46, i64 0, i64 %45\l  %48 = load i32, i32* %47, align 4\l  %49 = load i32, i32* @black_hand_eval, align 4\l  %50 = add nsw i32 %49, %48\l  store i32 %50, i32* @black_hand_eval, align 4\l  br label %51\l}"];
	Node0x250cd40 -> Node0x250cd90;
	Node0x250cd90 [shape=record,label="{%51:\l51:                                               \l  %52 = load i32, i32* %3, align 4\l  %53 = sext i32 %52 to i64\l  %54 = getelementptr inbounds [14 x i32], [14 x i32]* @material, i64 0, i64\l... %53\l  %55 = load i32, i32* %54, align 4\l  %56 = load i32, i32* @Material, align 4\l  %57 = add nsw i32 %56, %55\l  store i32 %57, i32* @Material, align 4\l  ret void\l}"];
}
