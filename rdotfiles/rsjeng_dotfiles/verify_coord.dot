digraph "CFG for 'verify_coord' function" {
	label="CFG for 'verify_coord' function";

	Node0x27e0f60 [shape=record,label="{%2:\l  %3 = alloca i8*, align 8\l  %4 = alloca %struct.move_s*, align 8\l  %5 = alloca [512 x %struct.move_s], align 16\l  %6 = alloca i32, align 4\l  %7 = alloca i32, align 4\l  %8 = alloca [6 x i8], align 1\l  %9 = alloca i32, align 4\l  %10 = alloca i32, align 4\l  store i8* %0, i8** %3, align 8\l  store %struct.move_s* %1, %struct.move_s** %4, align 8\l  store i32 0, i32* %9, align 4\l  %11 = load i32, i32* @Variant, align 4\l  %12 = icmp eq i32 %11, 4\l  br i1 %12, label %13, label %43\l|{<s0>T|<s1>F}}"];
	Node0x27e0f60:s0 -> Node0x27e5300;
	Node0x27e0f60:s1 -> Node0x27e55d0;
	Node0x27e5300 [shape=record,label="{%13:\l13:                                               \l  store i1 true, i1* @captures, align 1\l  store i32 0, i32* %6, align 4\l  %14 = getelementptr inbounds [512 x %struct.move_s], [512 x %struct.move_s]*\l... %5, i64 0, i64 0\l  call fastcc void @gen(%struct.move_s* %14)\l  %15 = load i32, i32* @numb_moves, align 4\l  store i32 %15, i32* %6, align 4\l  store i1 false, i1* @captures, align 1\l  store i32 1, i32* %10, align 4\l  store i32 0, i32* %7, align 4\l  br label %16\l}"];
	Node0x27e5300 -> Node0x27e5350;
	Node0x27e5350 [shape=record,label="{%16:\l16:                                               \l  %17 = load i32, i32* %7, align 4\l  %18 = load i32, i32* %6, align 4\l  %19 = icmp slt i32 %17, %18\l  br i1 %19, label %20, label %36\l|{<s0>T|<s1>F}}"];
	Node0x27e5350:s0 -> Node0x27e53a0;
	Node0x27e5350:s1 -> Node0x27e54e0;
	Node0x27e53a0 [shape=record,label="{%20:\l20:                                               \l  %21 = getelementptr inbounds [512 x %struct.move_s], [512 x %struct.move_s]*\l... %5, i64 0, i64 0\l  %22 = load i32, i32* %7, align 4\l  call fastcc void @make(%struct.move_s* %21, i32 %22)\l  %23 = getelementptr inbounds [512 x %struct.move_s], [512 x %struct.move_s]*\l... %5, i64 0, i64 0\l  %24 = load i32, i32* %7, align 4\l  %25 = call fastcc i32 @check_legal(%struct.move_s* %23, i32 %24, i32 1)\l  %26 = icmp ne i32 %25, 0\l  br i1 %26, label %27, label %30\l|{<s0>T|<s1>F}}"];
	Node0x27e53a0:s0 -> Node0x27e53f0;
	Node0x27e53a0:s1 -> Node0x27e5440;
	Node0x27e53f0 [shape=record,label="{%27:\l27:                                               \l  store i32 0, i32* %10, align 4\l  %28 = getelementptr inbounds [512 x %struct.move_s], [512 x %struct.move_s]*\l... %5, i64 0, i64 0\l  %29 = load i32, i32* %7, align 4\l  call fastcc void @unmake(%struct.move_s* %28, i32 %29)\l  br label %36\l}"];
	Node0x27e53f0 -> Node0x27e54e0;
	Node0x27e5440 [shape=record,label="{%30:\l30:                                               \l  %31 = getelementptr inbounds [512 x %struct.move_s], [512 x %struct.move_s]*\l... %5, i64 0, i64 0\l  %32 = load i32, i32* %7, align 4\l  call fastcc void @unmake(%struct.move_s* %31, i32 %32)\l  br label %33\l}"];
	Node0x27e5440 -> Node0x27e5490;
	Node0x27e5490 [shape=record,label="{%33:\l33:                                               \l  %34 = load i32, i32* %7, align 4\l  %35 = add nsw i32 %34, 1\l  store i32 %35, i32* %7, align 4\l  br label %16\l}"];
	Node0x27e5490 -> Node0x27e5350;
	Node0x27e54e0 [shape=record,label="{%36:\l36:                                               \l  %37 = load i32, i32* %10, align 4\l  %38 = icmp eq i32 %37, 1\l  br i1 %38, label %39, label %42\l|{<s0>T|<s1>F}}"];
	Node0x27e54e0:s0 -> Node0x27e5530;
	Node0x27e54e0:s1 -> Node0x27e5580;
	Node0x27e5530 [shape=record,label="{%39:\l39:                                               \l  store i1 false, i1* @captures, align 1\l  store i32 0, i32* %6, align 4\l  %40 = getelementptr inbounds [512 x %struct.move_s], [512 x %struct.move_s]*\l... %5, i64 0, i64 0\l  call fastcc void @gen(%struct.move_s* %40)\l  %41 = load i32, i32* @numb_moves, align 4\l  store i32 %41, i32* %6, align 4\l  br label %42\l}"];
	Node0x27e5530 -> Node0x27e5580;
	Node0x27e5580 [shape=record,label="{%42:\l42:                                               \l  br label %46\l}"];
	Node0x27e5580 -> Node0x27e5620;
	Node0x27e55d0 [shape=record,label="{%43:\l43:                                               \l  %44 = getelementptr inbounds [512 x %struct.move_s], [512 x %struct.move_s]*\l... %5, i64 0, i64 0\l  call fastcc void @gen(%struct.move_s* %44)\l  %45 = load i32, i32* @numb_moves, align 4\l  store i32 %45, i32* %6, align 4\l  br label %46\l}"];
	Node0x27e55d0 -> Node0x27e5620;
	Node0x27e5620 [shape=record,label="{%46:\l46:                                               \l  store i32 0, i32* %7, align 4\l  br label %47\l}"];
	Node0x27e5620 -> Node0x27e5670;
	Node0x27e5670 [shape=record,label="{%47:\l47:                                               \l  %48 = load i32, i32* %7, align 4\l  %49 = load i32, i32* %6, align 4\l  %50 = icmp slt i32 %48, %49\l  br i1 %50, label %51, label %81\l|{<s0>T|<s1>F}}"];
	Node0x27e5670:s0 -> Node0x27e56c0;
	Node0x27e5670:s1 -> Node0x27e58a0;
	Node0x27e56c0 [shape=record,label="{%51:\l51:                                               \l  %52 = load i32, i32* %7, align 4\l  %53 = sext i32 %52 to i64\l  %54 = getelementptr inbounds [512 x %struct.move_s], [512 x %struct.move_s]*\l... %5, i64 0, i64 %53\l  %55 = getelementptr inbounds [6 x i8], [6 x i8]* %8, i64 0, i64 0\l  call fastcc void @comp_to_coord(%struct.move_s* byval(%struct.move_s) align\l... 8 %54, i8* %55)\l  %56 = load i8*, i8** %3, align 8\l  %57 = getelementptr inbounds [6 x i8], [6 x i8]* %8, i64 0, i64 0\l  %58 = call fastcc i32 @strcmp(i8* %56, i8* %57) #21\l  %59 = icmp ne i32 %58, 0\l  br i1 %59, label %77, label %60\l|{<s0>T|<s1>F}}"];
	Node0x27e56c0:s0 -> Node0x27e5800;
	Node0x27e56c0:s1 -> Node0x27e5710;
	Node0x27e5710 [shape=record,label="{%60:\l60:                                               \l  %61 = getelementptr inbounds [512 x %struct.move_s], [512 x %struct.move_s]*\l... %5, i64 0, i64 0\l  %62 = load i32, i32* %7, align 4\l  call fastcc void @make(%struct.move_s* %61, i32 %62)\l  %63 = getelementptr inbounds [512 x %struct.move_s], [512 x %struct.move_s]*\l... %5, i64 0, i64 0\l  %64 = load i32, i32* %7, align 4\l  %65 = call fastcc i32 @check_legal(%struct.move_s* %63, i32 %64, i32 1)\l  %66 = icmp ne i32 %65, 0\l  br i1 %66, label %67, label %74\l|{<s0>T|<s1>F}}"];
	Node0x27e5710:s0 -> Node0x27e5760;
	Node0x27e5710:s1 -> Node0x27e57b0;
	Node0x27e5760 [shape=record,label="{%67:\l67:                                               \l  store i32 1, i32* %9, align 4\l  %68 = load %struct.move_s*, %struct.move_s** %4, align 8\l  %69 = load i32, i32* %7, align 4\l  %70 = sext i32 %69 to i64\l  %71 = getelementptr inbounds [512 x %struct.move_s], [512 x %struct.move_s]*\l... %5, i64 0, i64 %70\l  %72 = bitcast %struct.move_s* %68 to i8*\l  %73 = bitcast %struct.move_s* %71 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %72, i8* align 8 %73, i64\l... 24, i1 false)\l  br label %74\l}"];
	Node0x27e5760 -> Node0x27e57b0;
	Node0x27e57b0 [shape=record,label="{%74:\l74:                                               \l  %75 = getelementptr inbounds [512 x %struct.move_s], [512 x %struct.move_s]*\l... %5, i64 0, i64 0\l  %76 = load i32, i32* %7, align 4\l  call fastcc void @unmake(%struct.move_s* %75, i32 %76)\l  br label %77\l}"];
	Node0x27e57b0 -> Node0x27e5800;
	Node0x27e5800 [shape=record,label="{%77:\l77:                                               \l  br label %78\l}"];
	Node0x27e5800 -> Node0x27e5850;
	Node0x27e5850 [shape=record,label="{%78:\l78:                                               \l  %79 = load i32, i32* %7, align 4\l  %80 = add nsw i32 %79, 1\l  store i32 %80, i32* %7, align 4\l  br label %47\l}"];
	Node0x27e5850 -> Node0x27e5670;
	Node0x27e58a0 [shape=record,label="{%81:\l81:                                               \l  %82 = load i32, i32* %9, align 4\l  ret i32 %82\l}"];
}
