digraph "CFG for 'removeHolding' function" {
	label="CFG for 'removeHolding' function";

	Node0x2509bc0 [shape=record,label="{%2:\l  %3 = alloca i32, align 4\l  %4 = alloca i32, align 4\l  store i32 %0, i32* %3, align 4\l  store i32 %1, i32* %4, align 4\l  %5 = load i32, i32* @Variant, align 4\l  %6 = icmp eq i32 %5, 0\l  br i1 %6, label %7, label %64\l|{<s0>T|<s1>F}}"];
	Node0x2509bc0:s0 -> Node0x2509c10;
	Node0x2509bc0:s1 -> Node0x2509e40;
	Node0x2509c10 [shape=record,label="{%7:\l7:                                                \l  %8 = load i32, i32* %4, align 4\l  %9 = sext i32 %8 to i64\l  %10 = getelementptr inbounds [2 x [16 x i32]], [2 x [16 x i32]]* @holding,\l... i64 0, i64 %9\l  %11 = load i32, i32* %3, align 4\l  %12 = sext i32 %11 to i64\l  %13 = getelementptr inbounds [16 x i32], [16 x i32]* %10, i64 0, i64 %12\l  %14 = load i32, i32* %13, align 4\l  %15 = icmp sgt i32 %14, 0\l  br i1 %15, label %16, label %17\l|{<s0>T|<s1>F}}"];
	Node0x2509c10:s0 -> Node0x2509c60;
	Node0x2509c10:s1 -> Node0x2509cb0;
	Node0x2509c60 [shape=record,label="{%16:\l16:                                               \l  br label %21\l}"];
	Node0x2509c60 -> Node0x2509d00;
	Node0x2509cb0 [shape=record,label="{%17:\l17:                                               \l  %18 = getelementptr inbounds [23 x i8], [23 x i8]* @.str.2.37, i64 0, i64 0\l  %19 = getelementptr inbounds [8 x i8], [8 x i8]* @.str.1.30, i64 0, i64 0\l  %20 = getelementptr inbounds [29 x i8], [29 x i8]*\l... @__PRETTY_FUNCTION__.removeHolding, i64 0, i64 0\l  call fastcc void @__assert_fail(i8* %18, i8* %19, i32 245, i8* %20) #21\l  unreachable\l}"];
	Node0x2509d00 [shape=record,label="{%21:\l21:                                               \l  %22 = load i32, i32* %4, align 4\l  %23 = sext i32 %22 to i64\l  %24 = getelementptr inbounds [2 x [16 x i32]], [2 x [16 x i32]]* @holding,\l... i64 0, i64 %23\l  %25 = load i32, i32* %3, align 4\l  %26 = sext i32 %25 to i64\l  %27 = getelementptr inbounds [16 x i32], [16 x i32]* %24, i64 0, i64 %26\l  %28 = load i32, i32* %27, align 4\l  %29 = icmp slt i32 %28, 20\l  br i1 %29, label %30, label %31\l|{<s0>T|<s1>F}}"];
	Node0x2509d00:s0 -> Node0x2509d50;
	Node0x2509d00:s1 -> Node0x2509da0;
	Node0x2509d50 [shape=record,label="{%30:\l30:                                               \l  br label %35\l}"];
	Node0x2509d50 -> Node0x2509df0;
	Node0x2509da0 [shape=record,label="{%31:\l31:                                               \l  %32 = getelementptr inbounds [24 x i8], [24 x i8]* @.str.3.38, i64 0, i64 0\l  %33 = getelementptr inbounds [8 x i8], [8 x i8]* @.str.1.30, i64 0, i64 0\l  %34 = getelementptr inbounds [29 x i8], [29 x i8]*\l... @__PRETTY_FUNCTION__.removeHolding, i64 0, i64 0\l  call fastcc void @__assert_fail(i8* %32, i8* %33, i32 246, i8* %34) #21\l  unreachable\l}"];
	Node0x2509df0 [shape=record,label="{%35:\l35:                                               \l  %36 = load i32, i32* %3, align 4\l  %37 = sext i32 %36 to i64\l  %38 = getelementptr inbounds [14 x [144 x i32]], [14 x [144 x i32]]*\l... @zobrist, i64 0, i64 %37\l  %39 = load i32, i32* %4, align 4\l  %40 = sext i32 %39 to i64\l  %41 = getelementptr inbounds [2 x [16 x i32]], [2 x [16 x i32]]* @holding,\l... i64 0, i64 %40\l  %42 = load i32, i32* %3, align 4\l  %43 = sext i32 %42 to i64\l  %44 = getelementptr inbounds [16 x i32], [16 x i32]* %41, i64 0, i64 %43\l  %45 = load i32, i32* %44, align 4\l  %46 = sext i32 %45 to i64\l  %47 = getelementptr inbounds [144 x i32], [144 x i32]* %38, i64 0, i64 %46\l  %48 = load i32, i32* %47, align 4\l  %49 = load i32, i32* @hold_hash, align 4\l  %50 = xor i32 %49, %48\l  store i32 %50, i32* @hold_hash, align 4\l  %51 = load i32, i32* %4, align 4\l  %52 = sext i32 %51 to i64\l  %53 = getelementptr inbounds [2 x [16 x i32]], [2 x [16 x i32]]* @holding,\l... i64 0, i64 %52\l  %54 = load i32, i32* %3, align 4\l  %55 = sext i32 %54 to i64\l  %56 = getelementptr inbounds [16 x i32], [16 x i32]* %53, i64 0, i64 %55\l  %57 = load i32, i32* %56, align 4\l  %58 = add nsw i32 %57, -1\l  store i32 %58, i32* %56, align 4\l  %59 = load i32, i32* %4, align 4\l  %60 = sext i32 %59 to i64\l  %61 = getelementptr inbounds [2 x i32], [2 x i32]* @num_holding, i64 0, i64\l... %60\l  %62 = load i32, i32* %61, align 4\l  %63 = add nsw i32 %62, -1\l  store i32 %63, i32* %61, align 4\l  br label %64\l}"];
	Node0x2509df0 -> Node0x2509e40;
	Node0x2509e40 [shape=record,label="{%64:\l64:                                               \l  %65 = load i32, i32* %4, align 4\l  %66 = icmp eq i32 %65, 0\l  br i1 %66, label %67, label %75\l|{<s0>T|<s1>F}}"];
	Node0x2509e40:s0 -> Node0x2509e90;
	Node0x2509e40:s1 -> Node0x2509ee0;
	Node0x2509e90 [shape=record,label="{%67:\l67:                                               \l  %68 = load i32, i32* %3, align 4\l  %69 = sext i32 %68 to i64\l  %70 = bitcast [13 x i32]* @hand_value to [0 x i32]*\l  %71 = getelementptr inbounds [0 x i32], [0 x i32]* %70, i64 0, i64 %69\l  %72 = load i32, i32* %71, align 4\l  %73 = load i32, i32* @white_hand_eval, align 4\l  %74 = sub nsw i32 %73, %72\l  store i32 %74, i32* @white_hand_eval, align 4\l  br label %83\l}"];
	Node0x2509e90 -> Node0x2509f30;
	Node0x2509ee0 [shape=record,label="{%75:\l75:                                               \l  %76 = load i32, i32* %3, align 4\l  %77 = sext i32 %76 to i64\l  %78 = bitcast [13 x i32]* @hand_value to [0 x i32]*\l  %79 = getelementptr inbounds [0 x i32], [0 x i32]* %78, i64 0, i64 %77\l  %80 = load i32, i32* %79, align 4\l  %81 = load i32, i32* @black_hand_eval, align 4\l  %82 = sub nsw i32 %81, %80\l  store i32 %82, i32* @black_hand_eval, align 4\l  br label %83\l}"];
	Node0x2509ee0 -> Node0x2509f30;
	Node0x2509f30 [shape=record,label="{%83:\l83:                                               \l  %84 = load i32, i32* %3, align 4\l  %85 = sext i32 %84 to i64\l  %86 = getelementptr inbounds [14 x i32], [14 x i32]* @material, i64 0, i64\l... %85\l  %87 = load i32, i32* %86, align 4\l  %88 = load i32, i32* @Material, align 4\l  %89 = sub nsw i32 %88, %87\l  store i32 %89, i32* @Material, align 4\l  ret void\l}"];
}
