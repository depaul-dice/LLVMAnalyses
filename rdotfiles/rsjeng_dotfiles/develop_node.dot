digraph "CFG for 'develop_node' function" {
	label="CFG for 'develop_node' function";

	Node0x267f3e0 [shape=record,label="{%1:\l  %2 = alloca %struct.node*, align 8\l  %3 = alloca i32, align 4\l  %4 = alloca [512 x %struct.move_s], align 16\l  %5 = alloca i32, align 4\l  %6 = alloca i32, align 4\l  %7 = alloca %struct.node*, align 8\l  %8 = alloca i32, align 4\l  %9 = alloca i32, align 4\l  store %struct.node* %0, %struct.node** %2, align 8\l  %10 = call fastcc i32 @in_check()\l  store i32 %10, i32* %9, align 4\l  %11 = load i32, i32* @Variant, align 4\l  %12 = icmp ne i32 %11, 4\l  br i1 %12, label %13, label %16\l|{<s0>T|<s1>F}}"];
	Node0x267f3e0:s0 -> Node0x268f7c0;
	Node0x267f3e0:s1 -> Node0x268f810;
	Node0x268f7c0 [shape=record,label="{%13:\l13:                                               \l  store i32 0, i32* %3, align 4\l  %14 = getelementptr inbounds [512 x %struct.move_s], [512 x %struct.move_s]*\l... %4, i64 0, i64 0\l  call fastcc void @gen(%struct.move_s* %14)\l  %15 = load i32, i32* @numb_moves, align 4\l  store i32 %15, i32* %3, align 4\l  br label %47\l}"];
	Node0x268f7c0 -> Node0x268fae0;
	Node0x268f810 [shape=record,label="{%16:\l16:                                               \l  store i1 true, i1* @captures, align 1\l  store i32 0, i32* %8, align 4\l  store i32 0, i32* %3, align 4\l  %17 = getelementptr inbounds [512 x %struct.move_s], [512 x %struct.move_s]*\l... %4, i64 0, i64 0\l  call fastcc void @gen(%struct.move_s* %17)\l  %18 = load i32, i32* @numb_moves, align 4\l  store i32 %18, i32* %3, align 4\l  store i1 false, i1* @captures, align 1\l  store i32 0, i32* %5, align 4\l  br label %19\l}"];
	Node0x268f810 -> Node0x268f860;
	Node0x268f860 [shape=record,label="{%19:\l19:                                               \l  %20 = load i32, i32* %5, align 4\l  %21 = load i32, i32* %3, align 4\l  %22 = icmp slt i32 %20, %21\l  br i1 %22, label %23, label %40\l|{<s0>T|<s1>F}}"];
	Node0x268f860:s0 -> Node0x268f8b0;
	Node0x268f860:s1 -> Node0x268f9f0;
	Node0x268f8b0 [shape=record,label="{%23:\l23:                                               \l  %24 = getelementptr inbounds [512 x %struct.move_s], [512 x %struct.move_s]*\l... %4, i64 0, i64 0\l  %25 = load i32, i32* %5, align 4\l  call fastcc void @make(%struct.move_s* %24, i32 %25)\l  %26 = getelementptr inbounds [512 x %struct.move_s], [512 x %struct.move_s]*\l... %4, i64 0, i64 0\l  %27 = load i32, i32* %5, align 4\l  %28 = load i32, i32* %9, align 4\l  %29 = call fastcc i32 @check_legal(%struct.move_s* %26, i32 %27, i32 %28)\l  %30 = icmp ne i32 %29, 0\l  br i1 %30, label %31, label %34\l|{<s0>T|<s1>F}}"];
	Node0x268f8b0:s0 -> Node0x268f900;
	Node0x268f8b0:s1 -> Node0x268f950;
	Node0x268f900 [shape=record,label="{%31:\l31:                                               \l  store i32 1, i32* %8, align 4\l  %32 = getelementptr inbounds [512 x %struct.move_s], [512 x %struct.move_s]*\l... %4, i64 0, i64 0\l  %33 = load i32, i32* %5, align 4\l  call fastcc void @unmake(%struct.move_s* %32, i32 %33)\l  br label %40\l}"];
	Node0x268f900 -> Node0x268f9f0;
	Node0x268f950 [shape=record,label="{%34:\l34:                                               \l  %35 = getelementptr inbounds [512 x %struct.move_s], [512 x %struct.move_s]*\l... %4, i64 0, i64 0\l  %36 = load i32, i32* %5, align 4\l  call fastcc void @unmake(%struct.move_s* %35, i32 %36)\l  br label %37\l}"];
	Node0x268f950 -> Node0x268f9a0;
	Node0x268f9a0 [shape=record,label="{%37:\l37:                                               \l  %38 = load i32, i32* %5, align 4\l  %39 = add nsw i32 %38, 1\l  store i32 %39, i32* %5, align 4\l  br label %19\l}"];
	Node0x268f9a0 -> Node0x268f860;
	Node0x268f9f0 [shape=record,label="{%40:\l40:                                               \l  %41 = load i32, i32* %8, align 4\l  %42 = icmp eq i32 %41, 0\l  br i1 %42, label %43, label %46\l|{<s0>T|<s1>F}}"];
	Node0x268f9f0:s0 -> Node0x268fa40;
	Node0x268f9f0:s1 -> Node0x268fa90;
	Node0x268fa40 [shape=record,label="{%43:\l43:                                               \l  store i1 false, i1* @captures, align 1\l  store i32 0, i32* %3, align 4\l  %44 = getelementptr inbounds [512 x %struct.move_s], [512 x %struct.move_s]*\l... %4, i64 0, i64 0\l  call fastcc void @gen(%struct.move_s* %44)\l  %45 = load i32, i32* @numb_moves, align 4\l  store i32 %45, i32* %3, align 4\l  br label %46\l}"];
	Node0x268fa40 -> Node0x268fa90;
	Node0x268fa90 [shape=record,label="{%46:\l46:                                               \l  br label %47\l}"];
	Node0x268fa90 -> Node0x268fae0;
	Node0x268fae0 [shape=record,label="{%47:\l47:                                               \l  %48 = load i32, i32* %3, align 4\l  %49 = sext i32 %48 to i64\l  %50 = mul i64 %49, 8\l  %51 = trunc i64 %50 to i32\l  %52 = call fastcc i8* @Xmalloc(i32 %51)\l  %53 = bitcast i8* %52 to %struct.node**\l  %54 = load %struct.node*, %struct.node** %2, align 8\l  %55 = getelementptr inbounds %struct.node, %struct.node* %54, i32 0, i32 6\l  store %struct.node** %53, %struct.node*** %55, align 8\l  store i32 0, i32* %6, align 4\l  store i32 0, i32* %5, align 4\l  br label %56\l}"];
	Node0x268fae0 -> Node0x268fb30;
	Node0x268fb30 [shape=record,label="{%56:\l56:                                               \l  %57 = load i32, i32* %5, align 4\l  %58 = load i32, i32* %3, align 4\l  %59 = icmp slt i32 %57, %58\l  br i1 %59, label %60, label %120\l|{<s0>T|<s1>F}}"];
	Node0x268fb30:s0 -> Node0x268fb80;
	Node0x268fb30:s1 -> Node0x268fd10;
	Node0x268fb80 [shape=record,label="{%60:\l60:                                               \l  %61 = load i32, i32* @hash, align 4\l  %62 = load i32, i32* @move_number, align 4\l  %63 = load i32, i32* @ply, align 4\l  %64 = add nsw i32 %62, %63\l  %65 = sub nsw i32 %64, 1\l  %66 = sext i32 %65 to i64\l  %67 = getelementptr inbounds [600 x i32], [600 x i32]* @hash_history, i64 0,\l... i64 %66\l  store i32 %61, i32* %67, align 4\l  %68 = getelementptr inbounds [512 x %struct.move_s], [512 x %struct.move_s]*\l... %4, i64 0, i64 0\l  %69 = load i32, i32* %5, align 4\l  call fastcc void @make(%struct.move_s* %68, i32 %69)\l  %70 = getelementptr inbounds [512 x %struct.move_s], [512 x %struct.move_s]*\l... %4, i64 0, i64 0\l  %71 = load i32, i32* %5, align 4\l  %72 = load i32, i32* %9, align 4\l  %73 = call fastcc i32 @check_legal(%struct.move_s* %70, i32 %71, i32 %72)\l  %74 = icmp ne i32 %73, 0\l  br i1 %74, label %75, label %113\l|{<s0>T|<s1>F}}"];
	Node0x268fb80:s0 -> Node0x268fbd0;
	Node0x268fb80:s1 -> Node0x268fc20;
	Node0x268fbd0 [shape=record,label="{%75:\l75:                                               \l  %76 = call fastcc i8* @Xmalloc(i32 56)\l  %77 = bitcast i8* %76 to %struct.node*\l  store %struct.node* %77, %struct.node** %7, align 8\l  %78 = load %struct.node*, %struct.node** %7, align 8\l  %79 = getelementptr inbounds %struct.node, %struct.node* %78, i32 0, i32 0\l  store i8 0, i8* %79, align 8\l  %80 = load %struct.node*, %struct.node** %7, align 8\l  %81 = getelementptr inbounds %struct.node, %struct.node* %80, i32 0, i32 5\l  store i32 1, i32* %81, align 8\l  %82 = load %struct.node*, %struct.node** %7, align 8\l  %83 = getelementptr inbounds %struct.node, %struct.node* %82, i32 0, i32 4\l  store i32 1, i32* %83, align 4\l  %84 = load %struct.node*, %struct.node** %7, align 8\l  %85 = getelementptr inbounds %struct.node, %struct.node* %84, i32 0, i32 1\l  store i8 0, i8* %85, align 1\l  %86 = load %struct.node*, %struct.node** %2, align 8\l  %87 = load %struct.node*, %struct.node** %7, align 8\l  %88 = getelementptr inbounds %struct.node, %struct.node* %87, i32 0, i32 7\l  store %struct.node* %86, %struct.node** %88, align 8\l  %89 = load %struct.node*, %struct.node** %7, align 8\l  %90 = getelementptr inbounds %struct.node, %struct.node* %89, i32 0, i32 3\l  store i8 0, i8* %90, align 1\l  %91 = load %struct.node*, %struct.node** %7, align 8\l  %92 = getelementptr inbounds %struct.node, %struct.node* %91, i32 0, i32 2\l  store i8 0, i8* %92, align 2\l  %93 = load %struct.node*, %struct.node** %7, align 8\l  %94 = getelementptr inbounds %struct.node, %struct.node* %93, i32 0, i32 8\l  %95 = load i32, i32* %5, align 4\l  %96 = sext i32 %95 to i64\l  %97 = getelementptr inbounds [512 x %struct.move_s], [512 x %struct.move_s]*\l... %4, i64 0, i64 %96\l  %98 = bitcast %struct.move_s* %94 to i8*\l  %99 = bitcast %struct.move_s* %97 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %98, i8* align 8 %99, i64\l... 24, i1 false)\l  %100 = load %struct.node*, %struct.node** %7, align 8\l  %101 = load %struct.node*, %struct.node** %2, align 8\l  %102 = getelementptr inbounds %struct.node, %struct.node* %101, i32 0, i32 6\l  %103 = load %struct.node**, %struct.node*** %102, align 8\l  %104 = load i32, i32* %6, align 4\l  %105 = sext i32 %104 to i64\l  %106 = getelementptr inbounds %struct.node*, %struct.node** %103, i64 %105\l  store %struct.node* %100, %struct.node** %106, align 8\l  %107 = load i32, i32* %6, align 4\l  %108 = add nsw i32 %107, 1\l  store i32 %108, i32* %6, align 4\l  %109 = load %struct.node*, %struct.node** %7, align 8\l  call fastcc void @pn_eval(%struct.node* %109)\l  %110 = load %struct.node*, %struct.node** %7, align 8\l  call fastcc void @set_proof_and_disproof_numbers(%struct.node* %110)\l  %111 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %4, i64 0, i64 0\l  %112 = load i32, i32* %5, align 4\l  call fastcc void @unmake(%struct.move_s* %111, i32 %112)\l  br label %116\l}"];
	Node0x268fbd0 -> Node0x268fc70;
	Node0x268fc20 [shape=record,label="{%113:\l113:                                              \l  %114 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %4, i64 0, i64 0\l  %115 = load i32, i32* %5, align 4\l  call fastcc void @unmake(%struct.move_s* %114, i32 %115)\l  br label %116\l}"];
	Node0x268fc20 -> Node0x268fc70;
	Node0x268fc70 [shape=record,label="{%116:\l116:                                              \l  br label %117\l}"];
	Node0x268fc70 -> Node0x268fcc0;
	Node0x268fcc0 [shape=record,label="{%117:\l117:                                              \l  %118 = load i32, i32* %5, align 4\l  %119 = add nsw i32 %118, 1\l  store i32 %119, i32* %5, align 4\l  br label %56\l}"];
	Node0x268fcc0 -> Node0x268fb30;
	Node0x268fd10 [shape=record,label="{%120:\l120:                                              \l  %121 = load %struct.node*, %struct.node** %2, align 8\l  %122 = getelementptr inbounds %struct.node, %struct.node* %121, i32 0, i32 2\l  store i8 1, i8* %122, align 2\l  %123 = load i32, i32* %6, align 4\l  %124 = trunc i32 %123 to i8\l  %125 = load %struct.node*, %struct.node** %2, align 8\l  %126 = getelementptr inbounds %struct.node, %struct.node* %125, i32 0, i32 1\l  store i8 %124, i8* %126, align 1\l  %127 = load %struct.node*, %struct.node** %2, align 8\l  %128 = getelementptr inbounds %struct.node, %struct.node* %127, i32 0, i32 1\l  %129 = load i8, i8* %128, align 1\l  %130 = zext i8 %129 to i32\l  %131 = icmp eq i32 %130, 0\l  br i1 %131, label %132, label %160\l|{<s0>T|<s1>F}}"];
	Node0x268fd10:s0 -> Node0x268fd60;
	Node0x268fd10:s1 -> Node0x268ffe0;
	Node0x268fd60 [shape=record,label="{%132:\l132:                                              \l  %133 = load %struct.node*, %struct.node** %2, align 8\l  %134 = getelementptr inbounds %struct.node, %struct.node* %133, i32 0, i32 2\l  store i8 0, i8* %134, align 2\l  %135 = load %struct.node*, %struct.node** %2, align 8\l  %136 = getelementptr inbounds %struct.node, %struct.node* %135, i32 0, i32 3\l  store i8 1, i8* %136, align 1\l  %137 = load i32, i32* @Variant, align 4\l  %138 = icmp ne i32 %137, 3\l  br i1 %138, label %139, label %145\l|{<s0>T|<s1>F}}"];
	Node0x268fd60:s0 -> Node0x268fdb0;
	Node0x268fd60:s1 -> Node0x268fe50;
	Node0x268fdb0 [shape=record,label="{%139:\l139:                                              \l  %140 = load i32, i32* @Variant, align 4\l  %141 = icmp ne i32 %140, 4\l  br i1 %141, label %142, label %145\l|{<s0>T|<s1>F}}"];
	Node0x268fdb0:s0 -> Node0x268fe00;
	Node0x268fdb0:s1 -> Node0x268fe50;
	Node0x268fe00 [shape=record,label="{%142:\l142:                                              \l  %143 = load %struct.node*, %struct.node** %2, align 8\l  %144 = getelementptr inbounds %struct.node, %struct.node* %143, i32 0, i32 0\l  store i8 3, i8* %144, align 8\l  br label %159\l}"];
	Node0x268fe00 -> Node0x268ff90;
	Node0x268fe50 [shape=record,label="{%145:\l145:                                              \l  %146 = load i32, i32* @white_to_move, align 4\l  %147 = icmp ne i32 %146, 0\l  %148 = zext i1 %147 to i64\l  %149 = select i1 %147, i32 0, i32 1\l  %150 = load i32, i32* @root_to_move, align 4\l  %151 = icmp eq i32 %149, %150\l  br i1 %151, label %152, label %155\l|{<s0>T|<s1>F}}"];
	Node0x268fe50:s0 -> Node0x268fea0;
	Node0x268fe50:s1 -> Node0x268fef0;
	Node0x268fea0 [shape=record,label="{%152:\l152:                                              \l  %153 = load %struct.node*, %struct.node** %2, align 8\l  %154 = getelementptr inbounds %struct.node, %struct.node* %153, i32 0, i32 0\l  store i8 1, i8* %154, align 8\l  br label %158\l}"];
	Node0x268fea0 -> Node0x268ff40;
	Node0x268fef0 [shape=record,label="{%155:\l155:                                              \l  %156 = load %struct.node*, %struct.node** %2, align 8\l  %157 = getelementptr inbounds %struct.node, %struct.node* %156, i32 0, i32 0\l  store i8 0, i8* %157, align 8\l  br label %158\l}"];
	Node0x268fef0 -> Node0x268ff40;
	Node0x268ff40 [shape=record,label="{%158:\l158:                                              \l  br label %159\l}"];
	Node0x268ff40 -> Node0x268ff90;
	Node0x268ff90 [shape=record,label="{%159:\l159:                                              \l  br label %160\l}"];
	Node0x268ff90 -> Node0x268ffe0;
	Node0x268ffe0 [shape=record,label="{%160:\l160:                                              \l  %161 = load i32, i32* %3, align 4\l  %162 = load i32, i32* @nodecount, align 4\l  %163 = add nsw i32 %162, %161\l  store i32 %163, i32* @nodecount, align 4\l  %164 = load i32, i32* %3, align 4\l  %165 = load i32, i32* @frees, align 4\l  %166 = add nsw i32 %165, %164\l  store i32 %166, i32* @frees, align 4\l  ret void\l}"];
}
