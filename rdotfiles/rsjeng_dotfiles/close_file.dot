digraph "CFG for 'close_file' function" {
	label="CFG for 'close_file' function";

	Node0x29ac9d0 [shape=record,label="{%1:\l  %2 = icmp eq %struct._IO_FILE.35* %0, null\l  br i1 %2, label %45, label %3\l|{<s0>T|<s1>F}}"];
	Node0x29ac9d0:s0 -> Node0x29acdb0;
	Node0x29ac9d0:s1 -> Node0x29aca90;
	Node0x29aca90 [shape=record,label="{%3:\l3:                                                \l  %4 = getelementptr inbounds %struct._IO_FILE.35, %struct._IO_FILE.35* %0,\l... i64 0, i32 19\l  %5 = load volatile i32, i32* %4, align 4, !tbaa !2\l  %6 = icmp sgt i32 %5, -1\l  br i1 %6, label %7, label %10\l|{<s0>T|<s1>F}}"];
	Node0x29aca90:s0 -> Node0x29acae0;
	Node0x29aca90:s1 -> Node0x29acb30;
	Node0x29acae0 [shape=record,label="{%7:\l7:                                                \l  %8 = bitcast %struct._IO_FILE.35* %0 to %struct._IO_FILE.132*\l  %9 = tail call i32 @__lockfile(%struct._IO_FILE.132* nonnull %8) #21\l  br label %10\l}"];
	Node0x29acae0 -> Node0x29acb30;
	Node0x29acb30 [shape=record,label="{%10:\l10:                                               \l  %11 = getelementptr inbounds %struct._IO_FILE.35, %struct._IO_FILE.35* %0,\l... i64 0, i32 5\l  %12 = load i8*, i8** %11, align 8, !tbaa !9\l  %13 = getelementptr inbounds %struct._IO_FILE.35, %struct._IO_FILE.35* %0,\l... i64 0, i32 7\l  %14 = load i8*, i8** %13, align 8, !tbaa !10\l  %15 = icmp eq i8* %12, %14\l  br i1 %15, label %if.end.icp3, label %16\l|{<s0>T|<s1>F}}"];
	Node0x29acb30:s0 -> Node0x29acd10;
	Node0x29acb30:s1 -> Node0x29acb80;
	Node0x29acb80 [shape=record,label="{%16:\l16:                                               \l  %17 = getelementptr inbounds %struct._IO_FILE.35, %struct._IO_FILE.35* %0,\l... i64 0, i32 9\l  %18 = load i64 (%struct._IO_FILE.35*, i8*, i64)*, i64 (%struct._IO_FILE.35*,\l... i8*, i64)** %17, align 8, !tbaa !11\l  %19 = bitcast i64 (%struct._IO_FILE.141*, i8*, i64)* @__stdio_read to i64\l... (%struct._IO_FILE.35*, i8*, i64)*\l  %20 = icmp eq i64 (%struct._IO_FILE.35*, i8*, i64)* %18, %19\l  br i1 %20, label %if.true.direct_targ1, label %if.false.orig_indirect2\l|{<s0>T|<s1>F}}"];
	Node0x29acb80:s0 -> Node0x29acbd0;
	Node0x29acb80:s1 -> Node0x29acc20;
	Node0x29acbd0 [shape=record,label="{if.true.direct_targ1:                             \l  %21 = bitcast %struct._IO_FILE.35* %0 to %struct._IO_FILE.141*\l  %22 = tail call i64 @__stdio_read(%struct._IO_FILE.141* nonnull %21, i8*\l... null, i64 0) #22\l  br label %if.end.icp3\l}"];
	Node0x29acbd0 -> Node0x29acd10;
	Node0x29acc20 [shape=record,label="{if.false.orig_indirect2:                          \l  %23 = bitcast i64 (%struct._IO_FILE.145*, i8*, i64)* @__stdio_write to i64\l... (%struct._IO_FILE.35*, i8*, i64)*\l  %24 = icmp eq i64 (%struct._IO_FILE.35*, i8*, i64)* %18, %23\l  br i1 %24, label %if.true.direct_targ4, label %if.false.orig_indirect5\l|{<s0>T|<s1>F}}"];
	Node0x29acc20:s0 -> Node0x29acc70;
	Node0x29acc20:s1 -> Node0x29accc0;
	Node0x29acc70 [shape=record,label="{if.true.direct_targ4:                             \l  %25 = bitcast %struct._IO_FILE.35* %0 to %struct._IO_FILE.145*\l  %26 = tail call i64 @__stdio_write(%struct._IO_FILE.145* nonnull %25, i8*\l... null, i64 0) #22\l  br label %if.end.icp3\l}"];
	Node0x29acc70 -> Node0x29acd10;
	Node0x29accc0 [shape=record,label="{if.false.orig_indirect5:                          \l  %27 = bitcast i64 (%struct._IO_FILE.145*, i8*, i64)* @__stdout_write to i64\l... (%struct._IO_FILE.35*, i8*, i64)*\l  %28 = icmp eq i64 (%struct._IO_FILE.35*, i8*, i64)* %18, %27\l  call void @llvm.assume(i1 %28)\l  %29 = bitcast %struct._IO_FILE.35* %0 to %struct._IO_FILE.145*\l  %30 = tail call i64 @__stdout_write(%struct._IO_FILE.145* nonnull %29, i8*\l... null, i64 0) #22\l  br label %if.end.icp3\l}"];
	Node0x29accc0 -> Node0x29acd10;
	Node0x29acd10 [shape=record,label="{if.end.icp3:                                      \l  %31 = getelementptr inbounds %struct._IO_FILE.35, %struct._IO_FILE.35* %0,\l... i64 0, i32 1\l  %32 = load i8*, i8** %31, align 8, !tbaa !12\l  %33 = getelementptr inbounds %struct._IO_FILE.35, %struct._IO_FILE.35* %0,\l... i64 0, i32 2\l  %34 = load i8*, i8** %33, align 8, !tbaa !13\l  %35 = icmp eq i8* %32, %34\l  br i1 %35, label %45, label %if.true.direct_targ\l|{<s0>T|<s1>F}}"];
	Node0x29acd10:s0 -> Node0x29acdb0;
	Node0x29acd10:s1 -> Node0x29acd60;
	Node0x29acd60 [shape=record,label="{if.true.direct_targ:                              \l  %36 = getelementptr inbounds %struct._IO_FILE.35, %struct._IO_FILE.35* %0,\l... i64 0, i32 10\l  %37 = load i64 (%struct._IO_FILE.35*, i64, i32)*, i64 (%struct._IO_FILE.35*,\l... i64, i32)** %36, align 8, !tbaa !14\l  %38 = bitcast i64 (%struct._IO_FILE.143*, i64, i32)* @__stdio_seek to i64\l... (%struct._IO_FILE.35*, i64, i32)*\l  %39 = icmp eq i64 (%struct._IO_FILE.35*, i64, i32)* %37, %38\l  call void @llvm.assume(i1 %39)\l  %40 = ptrtoint i8* %32 to i64\l  %41 = ptrtoint i8* %34 to i64\l  %42 = sub i64 %40, %41\l  %43 = bitcast %struct._IO_FILE.35* %0 to %struct._IO_FILE.143*\l  %44 = tail call i64 @__stdio_seek(%struct._IO_FILE.143* nonnull %43, i64\l... %42, i32 1) #22\l  br label %45\l}"];
	Node0x29acd60 -> Node0x29acdb0;
	Node0x29acdb0 [shape=record,label="{%45:\l45:                                               \l  ret void\l}"];
}
