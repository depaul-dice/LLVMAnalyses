digraph "CFG for 'findlowest' function" {
	label="CFG for 'findlowest' function";

	Node0x257ad30 [shape=record,label="{%2:\l  %3 = alloca i32, align 4\l  %4 = alloca i32, align 4\l  %5 = alloca i32, align 4\l  %6 = alloca i32, align 4\l  %7 = alloca %struct.see_data, align 4\l  %8 = alloca i32, align 4\l  store i32 %0, i32* %3, align 4\l  store i32 %1, i32* %4, align 4\l  %9 = load i32, i32* %4, align 4\l  store i32 %9, i32* %5, align 4\l  %10 = load i32, i32* %3, align 4\l  %11 = sext i32 %10 to i64\l  %12 = getelementptr inbounds [2 x [16 x %struct.see_data]], [2 x [16 x\l... %struct.see_data]]* @see_attackers, i64 0, i64 %11\l  %13 = load i32, i32* %4, align 4\l  %14 = sext i32 %13 to i64\l  %15 = getelementptr inbounds [16 x %struct.see_data], [16 x\l... %struct.see_data]* %12, i64 0, i64 %14\l  %16 = getelementptr inbounds %struct.see_data, %struct.see_data* %15, i32 0,\l... i32 0\l  %17 = load i32, i32* %16, align 8\l  %18 = sext i32 %17 to i64\l  %19 = getelementptr inbounds [14 x i32], [14 x i32]* @material, i64 0, i64\l... %18\l  %20 = load i32, i32* %19, align 4\l  %21 = call fastcc i32 @abs(i32 %20) #21\l  store i32 %21, i32* %6, align 4\l  %22 = load i32, i32* %4, align 4\l  store i32 %22, i32* %8, align 4\l  br label %23\l}"];
	Node0x257ad30 -> Node0x2586c60;
	Node0x2586c60 [shape=record,label="{%23:\l23:                                               \l  %24 = load i32, i32* %8, align 4\l  %25 = load i32, i32* %3, align 4\l  %26 = sext i32 %25 to i64\l  %27 = getelementptr inbounds [2 x i32], [2 x i32]* @see_num_attackers, i64\l... 0, i64 %26\l  %28 = load i32, i32* %27, align 4\l  %29 = icmp slt i32 %24, %28\l  br i1 %29, label %30, label %63\l|{<s0>T|<s1>F}}"];
	Node0x2586c60:s0 -> Node0x2586cb0;
	Node0x2586c60:s1 -> Node0x2586df0;
	Node0x2586cb0 [shape=record,label="{%30:\l30:                                               \l  %31 = load i32, i32* %3, align 4\l  %32 = sext i32 %31 to i64\l  %33 = getelementptr inbounds [2 x [16 x %struct.see_data]], [2 x [16 x\l... %struct.see_data]]* @see_attackers, i64 0, i64 %32\l  %34 = load i32, i32* %8, align 4\l  %35 = sext i32 %34 to i64\l  %36 = getelementptr inbounds [16 x %struct.see_data], [16 x\l... %struct.see_data]* %33, i64 0, i64 %35\l  %37 = getelementptr inbounds %struct.see_data, %struct.see_data* %36, i32 0,\l... i32 0\l  %38 = load i32, i32* %37, align 8\l  %39 = sext i32 %38 to i64\l  %40 = getelementptr inbounds [14 x i32], [14 x i32]* @material, i64 0, i64\l... %39\l  %41 = load i32, i32* %40, align 4\l  %42 = call fastcc i32 @abs(i32 %41) #21\l  %43 = load i32, i32* %6, align 4\l  %44 = icmp slt i32 %42, %43\l  br i1 %44, label %45, label %59\l|{<s0>T|<s1>F}}"];
	Node0x2586cb0:s0 -> Node0x2586d00;
	Node0x2586cb0:s1 -> Node0x2586d50;
	Node0x2586d00 [shape=record,label="{%45:\l45:                                               \l  %46 = load i32, i32* %8, align 4\l  store i32 %46, i32* %5, align 4\l  %47 = load i32, i32* %3, align 4\l  %48 = sext i32 %47 to i64\l  %49 = getelementptr inbounds [2 x [16 x %struct.see_data]], [2 x [16 x\l... %struct.see_data]]* @see_attackers, i64 0, i64 %48\l  %50 = load i32, i32* %8, align 4\l  %51 = sext i32 %50 to i64\l  %52 = getelementptr inbounds [16 x %struct.see_data], [16 x\l... %struct.see_data]* %49, i64 0, i64 %51\l  %53 = getelementptr inbounds %struct.see_data, %struct.see_data* %52, i32 0,\l... i32 0\l  %54 = load i32, i32* %53, align 8\l  %55 = sext i32 %54 to i64\l  %56 = getelementptr inbounds [14 x i32], [14 x i32]* @material, i64 0, i64\l... %55\l  %57 = load i32, i32* %56, align 4\l  %58 = call fastcc i32 @abs(i32 %57) #21\l  store i32 %58, i32* %6, align 4\l  br label %59\l}"];
	Node0x2586d00 -> Node0x2586d50;
	Node0x2586d50 [shape=record,label="{%59:\l59:                                               \l  br label %60\l}"];
	Node0x2586d50 -> Node0x2586da0;
	Node0x2586da0 [shape=record,label="{%60:\l60:                                               \l  %61 = load i32, i32* %8, align 4\l  %62 = add nsw i32 %61, 1\l  store i32 %62, i32* %8, align 4\l  br label %23\l}"];
	Node0x2586da0 -> Node0x2586c60;
	Node0x2586df0 [shape=record,label="{%63:\l63:                                               \l  %64 = load i32, i32* %3, align 4\l  %65 = sext i32 %64 to i64\l  %66 = getelementptr inbounds [2 x [16 x %struct.see_data]], [2 x [16 x\l... %struct.see_data]]* @see_attackers, i64 0, i64 %65\l  %67 = load i32, i32* %4, align 4\l  %68 = sext i32 %67 to i64\l  %69 = getelementptr inbounds [16 x %struct.see_data], [16 x\l... %struct.see_data]* %66, i64 0, i64 %68\l  %70 = bitcast %struct.see_data* %7 to i8*\l  %71 = bitcast %struct.see_data* %69 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %70, i8* align 8 %71, i64\l... 8, i1 false)\l  %72 = load i32, i32* %3, align 4\l  %73 = sext i32 %72 to i64\l  %74 = getelementptr inbounds [2 x [16 x %struct.see_data]], [2 x [16 x\l... %struct.see_data]]* @see_attackers, i64 0, i64 %73\l  %75 = load i32, i32* %4, align 4\l  %76 = sext i32 %75 to i64\l  %77 = getelementptr inbounds [16 x %struct.see_data], [16 x\l... %struct.see_data]* %74, i64 0, i64 %76\l  %78 = load i32, i32* %3, align 4\l  %79 = sext i32 %78 to i64\l  %80 = getelementptr inbounds [2 x [16 x %struct.see_data]], [2 x [16 x\l... %struct.see_data]]* @see_attackers, i64 0, i64 %79\l  %81 = load i32, i32* %5, align 4\l  %82 = sext i32 %81 to i64\l  %83 = getelementptr inbounds [16 x %struct.see_data], [16 x\l... %struct.see_data]* %80, i64 0, i64 %82\l  %84 = bitcast %struct.see_data* %77 to i8*\l  %85 = bitcast %struct.see_data* %83 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %84, i8* align 8 %85, i64\l... 8, i1 false)\l  %86 = load i32, i32* %3, align 4\l  %87 = sext i32 %86 to i64\l  %88 = getelementptr inbounds [2 x [16 x %struct.see_data]], [2 x [16 x\l... %struct.see_data]]* @see_attackers, i64 0, i64 %87\l  %89 = load i32, i32* %5, align 4\l  %90 = sext i32 %89 to i64\l  %91 = getelementptr inbounds [16 x %struct.see_data], [16 x\l... %struct.see_data]* %88, i64 0, i64 %90\l  %92 = bitcast %struct.see_data* %91 to i8*\l  %93 = bitcast %struct.see_data* %7 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %92, i8* align 4 %93, i64\l... 8, i1 false)\l  ret void\l}"];
}
