digraph "CFG for 'Bishop' function" {
	label="CFG for 'Bishop' function";

	Node0x25c0d30 [shape=record,label="{%2:\l  %3 = alloca i32, align 4\l  %4 = alloca i32, align 4\l  %5 = alloca i32, align 4\l  %6 = alloca i32, align 4\l  %7 = alloca i32, align 4\l  store i32 %0, i32* %3, align 4\l  store i32 %1, i32* %4, align 4\l  store i32 0, i32* %5, align 4\l  %8 = load i32, i32* %4, align 4\l  %9 = xor i32 %8, 1\l  store i32 %9, i32* %7, align 4\l  %10 = load i32, i32* %5, align 4\l  %11 = add nsw i32 %10, 325\l  store i32 %11, i32* %5, align 4\l  %12 = load i32, i32* %3, align 4\l  %13 = sext i32 %12 to i64\l  %14 = bitcast \<\{ [118 x i32], [26 x i32] \}\>* @sbishop to [144 x i32]*\l  %15 = getelementptr inbounds [144 x i32], [144 x i32]* %14, i64 0, i64 %13\l  %16 = load i32, i32* %15, align 4\l  %17 = load i32, i32* %5, align 4\l  %18 = add nsw i32 %17, %16\l  store i32 %18, i32* %5, align 4\l  %19 = load i32, i32* %3, align 4\l  %20 = sext i32 %19 to i64\l  %21 = getelementptr inbounds [144 x [144 x i32]], [144 x [144 x i32]]*\l... @distance, i64 0, i64 %20\l  %22 = load i32, i32* %7, align 4\l  %23 = sext i32 %22 to i64\l  %24 = getelementptr inbounds [2 x i32], [2 x i32]* @king_locs, i64 0, i64 %23\l  %25 = load i32, i32* %24, align 4\l  %26 = sext i32 %25 to i64\l  %27 = getelementptr inbounds [144 x i32], [144 x i32]* %21, i64 0, i64 %26\l  %28 = load i32, i32* %27, align 4\l  %29 = sext i32 %28 to i64\l  %30 = getelementptr inbounds [8 x i32], [8 x i32]* @std_b_tropism, i64 0,\l... i64 %29\l  %31 = load i32, i32* %30, align 4\l  %32 = load i32, i32* %5, align 4\l  %33 = add nsw i32 %32, %31\l  store i32 %33, i32* %5, align 4\l  %34 = load i32, i32* %3, align 4\l  %35 = call fastcc i32 @bishop_mobility(i32 %34)\l  %36 = shl i32 %35, 1\l  store i32 %36, i32* %6, align 4\l  %37 = load i32, i32* %6, align 4\l  %38 = icmp sle i32 %37, 2\l  br i1 %38, label %39, label %42\l|{<s0>T|<s1>F}}"];
	Node0x25c0d30:s0 -> Node0x25c48d0;
	Node0x25c0d30:s1 -> Node0x25c4920;
	Node0x25c48d0 [shape=record,label="{%39:\l39:                                               \l  %40 = load i32, i32* %6, align 4\l  %41 = sub nsw i32 %40, 5\l  store i32 %41, i32* %6, align 4\l  br label %42\l}"];
	Node0x25c48d0 -> Node0x25c4920;
	Node0x25c4920 [shape=record,label="{%42:\l42:                                               \l  %43 = load i32, i32* %6, align 4\l  %44 = load i32, i32* %5, align 4\l  %45 = add nsw i32 %44, %43\l  store i32 %45, i32* %5, align 4\l  %46 = load i32, i32* %4, align 4\l  %47 = icmp eq i32 %46, 0\l  br i1 %47, label %48, label %55\l|{<s0>T|<s1>F}}"];
	Node0x25c4920:s0 -> Node0x25c4970;
	Node0x25c4920:s1 -> Node0x25c4a10;
	Node0x25c4970 [shape=record,label="{%48:\l48:                                               \l  %49 = load i32, i32* %3, align 4\l  %50 = icmp eq i32 %49, 39\l  br i1 %50, label %51, label %55\l|{<s0>T|<s1>F}}"];
	Node0x25c4970:s0 -> Node0x25c49c0;
	Node0x25c4970:s1 -> Node0x25c4a10;
	Node0x25c49c0 [shape=record,label="{%51:\l51:                                               \l  %52 = getelementptr inbounds [144 x i32], [144 x i32]* @board, i64 0, i64 52\l  %53 = load i32, i32* %52, align 16\l  %54 = icmp eq i32 %53, 1\l  br i1 %54, label %65, label %55\l|{<s0>T|<s1>F}}"];
	Node0x25c49c0:s0 -> Node0x25c4b00;
	Node0x25c49c0:s1 -> Node0x25c4a10;
	Node0x25c4a10 [shape=record,label="{%55:\l55:                                               \l  %56 = load i32, i32* %4, align 4\l  %57 = icmp eq i32 %56, 1\l  br i1 %57, label %58, label %68\l|{<s0>T|<s1>F}}"];
	Node0x25c4a10:s0 -> Node0x25c4a60;
	Node0x25c4a10:s1 -> Node0x25c4b50;
	Node0x25c4a60 [shape=record,label="{%58:\l58:                                               \l  %59 = load i32, i32* %3, align 4\l  %60 = icmp eq i32 %59, 99\l  br i1 %60, label %61, label %68\l|{<s0>T|<s1>F}}"];
	Node0x25c4a60:s0 -> Node0x25c4ab0;
	Node0x25c4a60:s1 -> Node0x25c4b50;
	Node0x25c4ab0 [shape=record,label="{%61:\l61:                                               \l  %62 = getelementptr inbounds [144 x i32], [144 x i32]* @board, i64 0, i64 88\l  %63 = load i32, i32* %62, align 16\l  %64 = icmp eq i32 %63, 2\l  br i1 %64, label %65, label %68\l|{<s0>T|<s1>F}}"];
	Node0x25c4ab0:s0 -> Node0x25c4b00;
	Node0x25c4ab0:s1 -> Node0x25c4b50;
	Node0x25c4b00 [shape=record,label="{%65:\l65:                                               \l  %66 = load i32, i32* %5, align 4\l  %67 = sub nsw i32 %66, 5\l  store i32 %67, i32* %5, align 4\l  br label %68\l}"];
	Node0x25c4b00 -> Node0x25c4b50;
	Node0x25c4b50 [shape=record,label="{%68:\l68:                                               \l  %69 = load i32, i32* %4, align 4\l  %70 = icmp eq i32 %69, 1\l  br i1 %70, label %71, label %74\l|{<s0>T|<s1>F}}"];
	Node0x25c4b50:s0 -> Node0x25c4ba0;
	Node0x25c4b50:s1 -> Node0x25c4bf0;
	Node0x25c4ba0 [shape=record,label="{%71:\l71:                                               \l  %72 = load i32, i32* %5, align 4\l  %73 = sub nsw i32 0, %72\l  store i32 %73, i32* %5, align 4\l  br label %74\l}"];
	Node0x25c4ba0 -> Node0x25c4bf0;
	Node0x25c4bf0 [shape=record,label="{%74:\l74:                                               \l  %75 = load i32, i32* %5, align 4\l  ret i32 %75\l}"];
}
