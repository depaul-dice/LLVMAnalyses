digraph "CFG for 'post_thinking' function" {
	label="CFG for 'post_thinking' function";

	Node0x27eae00 [shape=record,label="{%1:\l  %2 = alloca i32, align 4\l  %3 = alloca i32, align 4\l  %4 = alloca i32, align 4\l  %5 = alloca i32, align 4\l  %6 = alloca i32, align 4\l  %7 = alloca [256 x i8], align 16\l  %8 = alloca [256 x i8], align 16\l  %9 = alloca double, align 8\l  store i32 %0, i32* %2, align 4\l  store i32 0, i32* %4, align 4\l  %10 = call fastcc i64 @rtime()\l  %11 = load i64, i64* @start_time, align 8\l  %12 = call fastcc i32 @rdifftime(i64 %10, i64 %11)\l  store i32 %12, i32* %6, align 4\l  %13 = load i32, i32* %6, align 4\l  %14 = icmp sgt i32 %13, 0\l  br i1 %14, label %15, label %24\l|{<s0>T|<s1>F}}"];
	Node0x27eae00:s0 -> Node0x27eb120;
	Node0x27eae00:s1 -> Node0x27ecc20;
	Node0x27eb120 [shape=record,label="{%15:\l15:                                               \l  %16 = load i32, i32* @nodes, align 4\l  %17 = sitofp i32 %16 to double\l  %18 = fmul double 1.000000e+02, %17\l  %19 = load i32, i32* %6, align 4\l  %20 = sitofp i32 %19 to double\l  %21 = fdiv double %18, %20\l  store double %21, double* %9, align 8\l  %22 = load double, double* %9, align 8\l  %23 = fptosi double %22 to i32\l  store i32 %23, i32* %5, align 4\l  br label %26\l}"];
	Node0x27eb120 -> Node0x27ecc70;
	Node0x27ecc20 [shape=record,label="{%24:\l24:                                               \l  %25 = load i32, i32* @nodes, align 4\l  store i32 %25, i32* %5, align 4\l  br label %26\l}"];
	Node0x27ecc20 -> Node0x27ecc70;
	Node0x27ecc70 [shape=record,label="{%26:\l26:                                               \l  %27 = load i32, i32* @xb_mode, align 4\l  %28 = icmp ne i32 %27, 0\l  br i1 %28, label %29, label %36\l|{<s0>T|<s1>F}}"];
	Node0x27ecc70:s0 -> Node0x27eccc0;
	Node0x27ecc70:s1 -> Node0x27ecd10;
	Node0x27eccc0 [shape=record,label="{%29:\l29:                                               \l  %30 = load i32, i32* @i_depth, align 4\l  %31 = load i32, i32* %2, align 4\l  %32 = load i32, i32* %6, align 4\l  %33 = load i32, i32* @nodes, align 4\l  %34 = getelementptr inbounds [18 x i8], [18 x i8]* @.str.50.400, i64 0, i64 0\l  %35 = call i32 (i8*, ...) @printf(i8* %34, i32 %30, i32 %31, i32 %32, i32\l... %33)\l  br label %51\l}"];
	Node0x27eccc0 -> Node0x27ecd60;
	Node0x27ecd10 [shape=record,label="{%36:\l36:                                               \l  %37 = load i32, i32* @i_depth, align 4\l  %38 = load i32, i32* %2, align 4\l  %39 = icmp slt i32 %38, 0\l  %40 = zext i1 %39 to i64\l  %41 = select i1 %39, i32 45, i32 32\l  %42 = load i32, i32* %2, align 4\l  %43 = sdiv i32 %42, 100\l  %44 = call fastcc i32 @abs(i32 %43) #21\l  %45 = load i32, i32* %2, align 4\l  %46 = srem i32 %45, 100\l  %47 = call fastcc i32 @abs(i32 %46) #21\l  %48 = load i32, i32* @nodes, align 4\l  %49 = getelementptr inbounds [20 x i8], [20 x i8]* @.str.51.401, i64 0, i64 0\l  %50 = call i32 (i8*, ...) @printf(i8* %49, i32 %37, i32 %41, i32 %44, i32\l... %47, i32 %48)\l  br label %51\l}"];
	Node0x27ecd10 -> Node0x27ecd60;
	Node0x27ecd60 [shape=record,label="{%51:\l51:                                               \l  %52 = getelementptr inbounds [300 x [300 x %struct.move_s]], [300 x [300 x\l... %struct.move_s]]* @pv, i64 0, i64 1, i64 1, i32 0\l  %53 = load i32, i32* %52, align 8\l  %54 = icmp ne i32 %53, 0\l  br i1 %54, label %55, label %62\l|{<s0>T|<s1>F}}"];
	Node0x27ecd60:s0 -> Node0x27ecdb0;
	Node0x27ecd60:s1 -> Node0x27ece00;
	Node0x27ecdb0 [shape=record,label="{%55:\l55:                                               \l  %56 = getelementptr inbounds [300 x [300 x %struct.move_s]], [300 x [300 x\l... %struct.move_s]]* @pv, i64 0, i64 1, i64 1, i32 0\l  %57 = load i32, i32* %56, align 8\l  %58 = sext i32 %57 to i64\l  %59 = getelementptr inbounds [144 x i32], [144 x i32]* @board, i64 0, i64 %58\l  %60 = load i32, i32* %59, align 4\l  %61 = icmp eq i32 %60, 13\l  br i1 %61, label %73, label %62\l|{<s0>T|<s1>F}}"];
	Node0x27ecdb0:s0 -> Node0x27ecea0;
	Node0x27ecdb0:s1 -> Node0x27ece00;
	Node0x27ece00 [shape=record,label="{%62:\l62:                                               \l  %63 = getelementptr inbounds [300 x [300 x %struct.move_s]], [300 x [300 x\l... %struct.move_s]]* @pv, i64 0, i64 1, i64 1, i32 0\l  %64 = load i32, i32* %63, align 8\l  %65 = icmp eq i32 %64, 0\l  br i1 %65, label %66, label %75\l|{<s0>T|<s1>F}}"];
	Node0x27ece00:s0 -> Node0x27ece50;
	Node0x27ece00:s1 -> Node0x27ecef0;
	Node0x27ece50 [shape=record,label="{%66:\l66:                                               \l  %67 = getelementptr inbounds [300 x [300 x %struct.move_s]], [300 x [300 x\l... %struct.move_s]]* @pv, i64 0, i64 1, i64 1, i32 1\l  %68 = load i32, i32* %67, align 4\l  %69 = sext i32 %68 to i64\l  %70 = getelementptr inbounds [144 x i32], [144 x i32]* @board, i64 0, i64 %69\l  %71 = load i32, i32* %70, align 4\l  %72 = icmp ne i32 %71, 13\l  br i1 %72, label %73, label %75\l|{<s0>T|<s1>F}}"];
	Node0x27ece50:s0 -> Node0x27ecea0;
	Node0x27ece50:s1 -> Node0x27ecef0;
	Node0x27ecea0 [shape=record,label="{%73:\l73:                                               \l  %74 = getelementptr inbounds [300 x [300 x %struct.move_s]], [300 x [300 x\l... %struct.move_s]]* @pv, i64 0, i64 1, i64 1\l  call fastcc void @unmake(%struct.move_s* %74, i32 0)\l  store i32 1, i32* %4, align 4\l  br label %75\l}"];
	Node0x27ecea0 -> Node0x27ecef0;
	Node0x27ecef0 [shape=record,label="{%75:\l75:                                               \l  store i32 1, i32* %3, align 4\l  br label %76\l}"];
	Node0x27ecef0 -> Node0x27ecf40;
	Node0x27ecf40 [shape=record,label="{%76:\l76:                                               \l  %77 = load i32, i32* %3, align 4\l  %78 = getelementptr inbounds [300 x i32], [300 x i32]* @pv_length, i64 0,\l... i64 1\l  %79 = load i32, i32* %78, align 4\l  %80 = icmp slt i32 %77, %79\l  br i1 %80, label %81, label %97\l|{<s0>T|<s1>F}}"];
	Node0x27ecf40:s0 -> Node0x27ecf90;
	Node0x27ecf40:s1 -> Node0x27ed030;
	Node0x27ecf90 [shape=record,label="{%81:\l81:                                               \l  %82 = load i32, i32* %3, align 4\l  %83 = sext i32 %82 to i64\l  %84 = getelementptr inbounds [300 x [300 x %struct.move_s]], [300 x [300 x\l... %struct.move_s]]* @pv, i64 0, i64 1\l  %85 = getelementptr inbounds [300 x %struct.move_s], [300 x %struct.move_s]*\l... %84, i64 0, i64 %83\l  %86 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 0\l  call fastcc void @comp_to_san(%struct.move_s* byval(%struct.move_s) align 8\l... %85, i8* %86)\l  %87 = load i32, i32* %3, align 4\l  %88 = sext i32 %87 to i64\l  %89 = getelementptr inbounds [300 x [300 x %struct.move_s]], [300 x [300 x\l... %struct.move_s]]* @pv, i64 0, i64 1\l  %90 = getelementptr inbounds [300 x %struct.move_s], [300 x %struct.move_s]*\l... %89, i64 0, i64 %88\l  call fastcc void @make(%struct.move_s* %90, i32 0)\l  %91 = getelementptr inbounds [256 x i8], [256 x i8]* %7, i64 0, i64 0\l  %92 = getelementptr inbounds [4 x i8], [4 x i8]* @.str.52.402, i64 0, i64 0\l  %93 = call i32 (i8*, ...) @printf(i8* %92, i8* %91)\l  br label %94\l}"];
	Node0x27ecf90 -> Node0x27ecfe0;
	Node0x27ecfe0 [shape=record,label="{%94:\l94:                                               \l  %95 = load i32, i32* %3, align 4\l  %96 = add nsw i32 %95, 1\l  store i32 %96, i32* %3, align 4\l  br label %76\l}"];
	Node0x27ecfe0 -> Node0x27ecf40;
	Node0x27ed030 [shape=record,label="{%97:\l97:                                               \l  %98 = getelementptr inbounds [256 x i8], [256 x i8]* %8, i64 0, i64 0\l  call void @llvm.memset.p0i8.i64(i8* align 16 %98, i8 0, i64 256, i1 false)\l  %99 = getelementptr inbounds [256 x i8], [256 x i8]* %8, i64 0, i64 0\l  call fastcc void @hash_extract_pv(i32 7, i8* %99)\l  %100 = getelementptr inbounds [256 x i8], [256 x i8]* %8, i64 0, i64 0\l  %101 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.53.403, i64 0, i64 0\l  %102 = call i32 (i8*, ...) @printf(i8* %101, i8* %100)\l  %103 = getelementptr inbounds [300 x i32], [300 x i32]* @pv_length, i64 0,\l... i64 1\l  %104 = load i32, i32* %103, align 4\l  %105 = sub nsw i32 %104, 1\l  store i32 %105, i32* %3, align 4\l  br label %106\l}"];
	Node0x27ed030 -> Node0x27ed080;
	Node0x27ed080 [shape=record,label="{%106:\l106:                                              \l  %107 = load i32, i32* %3, align 4\l  %108 = icmp sgt i32 %107, 0\l  br i1 %108, label %109, label %117\l|{<s0>T|<s1>F}}"];
	Node0x27ed080:s0 -> Node0x27ed0d0;
	Node0x27ed080:s1 -> Node0x27ed170;
	Node0x27ed0d0 [shape=record,label="{%109:\l109:                                              \l  %110 = load i32, i32* %3, align 4\l  %111 = sext i32 %110 to i64\l  %112 = getelementptr inbounds [300 x [300 x %struct.move_s]], [300 x [300 x\l... %struct.move_s]]* @pv, i64 0, i64 1\l  %113 = getelementptr inbounds [300 x %struct.move_s], [300 x\l... %struct.move_s]* %112, i64 0, i64 %111\l  call fastcc void @unmake(%struct.move_s* %113, i32 0)\l  br label %114\l}"];
	Node0x27ed0d0 -> Node0x27ed120;
	Node0x27ed120 [shape=record,label="{%114:\l114:                                              \l  %115 = load i32, i32* %3, align 4\l  %116 = add nsw i32 %115, -1\l  store i32 %116, i32* %3, align 4\l  br label %106\l}"];
	Node0x27ed120 -> Node0x27ed080;
	Node0x27ed170 [shape=record,label="{%117:\l117:                                              \l  %118 = load i32, i32* %4, align 4\l  %119 = icmp ne i32 %118, 0\l  br i1 %119, label %120, label %122\l|{<s0>T|<s1>F}}"];
	Node0x27ed170:s0 -> Node0x27ed1c0;
	Node0x27ed170:s1 -> Node0x27ed210;
	Node0x27ed1c0 [shape=record,label="{%120:\l120:                                              \l  %121 = getelementptr inbounds [300 x [300 x %struct.move_s]], [300 x [300 x\l... %struct.move_s]]* @pv, i64 0, i64 1, i64 1\l  call fastcc void @make(%struct.move_s* %121, i32 0)\l  br label %122\l}"];
	Node0x27ed1c0 -> Node0x27ed210;
	Node0x27ed210 [shape=record,label="{%122:\l122:                                              \l  %123 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.54.404, i64 0, i64 0\l  %124 = call i32 (i8*, ...) @printf(i8* %123)\l  ret void\l}"];
}
