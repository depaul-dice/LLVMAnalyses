digraph "CFG for 'realloc' function" {
	label="CFG for 'realloc' function";

	Node0x2028e10 [shape=record,label="{%2:\l  %3 = icmp eq i8* %0, null\l  br i1 %3, label %4, label %6\l|{<s0>T|<s1>F}}"];
	Node0x2028e10:s0 -> Node0x2028e60;
	Node0x2028e10:s1 -> Node0x2028f40;
	Node0x2028e60 [shape=record,label="{%4:\l4:                                                \l  %5 = tail call fastcc i8* @malloc(i64 %1) #18\l  br label %235\l}"];
	Node0x2028e60 -> Node0x202a820;
	Node0x2028f40 [shape=record,label="{%6:\l6:                                                \l  %7 = add i64 %1, -1\l  %8 = icmp ugt i64 %7, 9223372036854771679\l  br i1 %8, label %9, label %11\l|{<s0>T|<s1>F}}"];
	Node0x2028f40:s0 -> Node0x2029880;
	Node0x2028f40:s1 -> Node0x20298d0;
	Node0x2029880 [shape=record,label="{%9:\l9:                                                \l  %10 = icmp eq i64 %1, 0\l  br i1 %10, label %16, label %14\l|{<s0>T|<s1>F}}"];
	Node0x2029880:s0 -> Node0x2029970;
	Node0x2029880:s1 -> Node0x2029920;
	Node0x20298d0 [shape=record,label="{%11:\l11:                                               \l  %12 = add nuw nsw i64 %1, 47\l  %13 = and i64 %12, -32\l  br label %16\l}"];
	Node0x20298d0 -> Node0x2029970;
	Node0x2029920 [shape=record,label="{%14:\l14:                                               \l  %15 = tail call fastcc i32* @__errno_location() #19\l  store i32 12, i32* %15, align 4, !tbaa !2\l  br label %235\l}"];
	Node0x2029920 -> Node0x202a820;
	Node0x2029970 [shape=record,label="{%16:\l16:                                               \l  %17 = phi i64 [ 32, %9 ], [ %13, %11 ]\l  %18 = getelementptr inbounds i8, i8* %0, i64 -16\l  %19 = getelementptr inbounds i8, i8* %0, i64 -8\l  %20 = bitcast i8* %19 to i64*\l  %21 = load i64, i64* %20, align 8, !tbaa !6\l  %22 = and i64 %21, -2\l  %23 = and i64 %21, 1\l  %24 = icmp eq i64 %23, 0\l  br i1 %24, label %25, label %55\l|{<s0>T|<s1>F}}"];
	Node0x2029970:s0 -> Node0x20299c0;
	Node0x2029970:s1 -> Node0x2029bf0;
	Node0x20299c0 [shape=record,label="{%25:\l25:                                               \l  %26 = bitcast i8* %18 to i64*\l  %27 = load i64, i64* %26, align 8, !tbaa !10\l  %28 = sub i64 0, %27\l  %29 = getelementptr inbounds i8, i8* %18, i64 %28\l  %30 = add i64 %27, %22\l  %31 = add i64 %27, %17\l  %32 = and i64 %27, 1\l  %33 = icmp eq i64 %32, 0\l  br i1 %33, label %35, label %34\l|{<s0>T|<s1>F}}"];
	Node0x20299c0:s0 -> Node0x2029a60;
	Node0x20299c0:s1 -> Node0x2029a10;
	Node0x2029a10 [shape=record,label="{%34:\l34:                                               \l  tail call void asm sideeffect hlt,\l... ~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}() #20, !srcloc !11\l  br label %35\l}"];
	Node0x2029a10 -> Node0x2029a60;
	Node0x2029a60 [shape=record,label="{%35:\l35:                                               \l  %36 = icmp ult i64 %31, 4096\l  br i1 %36, label %37, label %41\l|{<s0>T|<s1>F}}"];
	Node0x2029a60:s0 -> Node0x2029ab0;
	Node0x2029a60:s1 -> Node0x2029b00;
	Node0x2029ab0 [shape=record,label="{%37:\l37:                                               \l  %38 = add nsw i64 %17, -16\l  %39 = tail call fastcc i8* @malloc(i64 %38) #18\l  %40 = icmp eq i8* %39, null\l  br i1 %40, label %41, label %214\l|{<s0>T|<s1>F}}"];
	Node0x2029ab0:s0 -> Node0x2029b00;
	Node0x2029ab0:s1 -> Node0x202a690;
	Node0x2029b00 [shape=record,label="{%41:\l41:                                               \l  %42 = add i64 %31, 4095\l  %43 = and i64 %42, -4096\l  %44 = icmp eq i64 %30, %43\l  br i1 %44, label %235, label %45\l|{<s0>T|<s1>F}}"];
	Node0x2029b00:s0 -> Node0x202a820;
	Node0x2029b00:s1 -> Node0x2029b50;
	Node0x2029b50 [shape=record,label="{%45:\l45:                                               \l  %46 = tail call i8* (i8*, i64, i64, i32, ...) @__mremap(i8* nonnull %29, i64\l... %30, i64 %43, i32 1) #19\l  %47 = inttoptr i64 -1 to i8*\l  %48 = icmp eq i8* %46, %47\l  br i1 %48, label %208, label %49\l|{<s0>T|<s1>F}}"];
	Node0x2029b50:s0 -> Node0x202a5f0;
	Node0x2029b50:s1 -> Node0x2029ba0;
	Node0x2029ba0 [shape=record,label="{%49:\l49:                                               \l  %50 = getelementptr inbounds i8, i8* %46, i64 %27\l  %51 = sub i64 %43, %27\l  %52 = getelementptr inbounds i8, i8* %50, i64 8\l  %53 = bitcast i8* %52 to i64*\l  store i64 %51, i64* %53, align 8, !tbaa !6\l  %54 = getelementptr inbounds i8, i8* %50, i64 16\l  br label %235\l}"];
	Node0x2029ba0 -> Node0x202a820;
	Node0x2029bf0 [shape=record,label="{%55:\l55:                                               \l  %56 = getelementptr inbounds i8, i8* %18, i64 %22\l  %57 = bitcast i8* %56 to %struct.chunk*\l  %58 = bitcast i8* %56 to i64*\l  %59 = load i64, i64* %58, align 8, !tbaa !10\l  %60 = icmp eq i64 %59, %21\l  br i1 %60, label %62, label %61\l|{<s0>T|<s1>F}}"];
	Node0x2029bf0:s0 -> Node0x2029c90;
	Node0x2029bf0:s1 -> Node0x2029c40;
	Node0x2029c40 [shape=record,label="{%61:\l61:                                               \l  tail call void asm sideeffect hlt,\l... ~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}() #20, !srcloc !11\l  br label %62\l}"];
	Node0x2029c40 -> Node0x2029c90;
	Node0x2029c90 [shape=record,label="{%62:\l62:                                               \l  %63 = icmp ugt i64 %17, %22\l  br i1 %63, label %64, label %187\l|{<s0>T|<s1>F}}"];
	Node0x2029c90:s0 -> Node0x2029ce0;
	Node0x2029c90:s1 -> Node0x202a500;
	Node0x2029ce0 [shape=record,label="{%64:\l64:                                               \l  %65 = getelementptr inbounds i8, i8* %56, i64 8\l  %66 = bitcast i8* %65 to i64*\l  %67 = load i64, i64* %66, align 8, !tbaa !6\l  %68 = and i64 %67, 1\l  %69 = icmp eq i64 %68, 0\l  br i1 %69, label %70, label %187\l|{<s0>T|<s1>F}}"];
	Node0x2029ce0:s0 -> Node0x2029d30;
	Node0x2029ce0:s1 -> Node0x202a500;
	Node0x2029d30 [shape=record,label="{%70:\l70:                                               \l  %71 = phi i64 [ %178, %177 ], [ %67, %64 ]\l  %72 = lshr i64 %71, 5\l  %73 = add nsw i64 %72, -1\l  %74 = icmp ult i64 %73, 33\l  br i1 %74, label %92, label %75\l|{<s0>T|<s1>F}}"];
	Node0x2029d30:s0 -> Node0x2029ec0;
	Node0x2029d30:s1 -> Node0x2029d80;
	Node0x2029d80 [shape=record,label="{%75:\l75:                                               \l  %76 = icmp ult i64 %73, 512\l  br i1 %76, label %77, label %83\l|{<s0>T|<s1>F}}"];
	Node0x2029d80:s0 -> Node0x2029dd0;
	Node0x2029d80:s1 -> Node0x2029e20;
	Node0x2029dd0 [shape=record,label="{%77:\l77:                                               \l  %78 = lshr i64 %73, 3\l  %79 = add nsw i64 %78, -4\l  %80 = getelementptr inbounds [60 x i8], [60 x i8]* @bin_tab, i64 0, i64 %79\l  %81 = load i8, i8* %80, align 1, !tbaa !12\l  %82 = zext i8 %81 to i64\l  br label %92\l}"];
	Node0x2029dd0 -> Node0x2029ec0;
	Node0x2029e20 [shape=record,label="{%83:\l83:                                               \l  %84 = icmp ugt i64 %73, 7168\l  br i1 %84, label %92, label %85\l|{<s0>T|<s1>F}}"];
	Node0x2029e20:s0 -> Node0x2029ec0;
	Node0x2029e20:s1 -> Node0x2029e70;
	Node0x2029e70 [shape=record,label="{%85:\l85:                                               \l  %86 = lshr i64 %73, 7\l  %87 = add nsw i64 %86, -4\l  %88 = getelementptr inbounds [60 x i8], [60 x i8]* @bin_tab, i64 0, i64 %87\l  %89 = load i8, i8* %88, align 1, !tbaa !12\l  %90 = zext i8 %89 to i64\l  %91 = add nuw nsw i64 %90, 16\l  br label %92\l}"];
	Node0x2029e70 -> Node0x2029ec0;
	Node0x2029ec0 [shape=record,label="{%92:\l92:                                               \l  %93 = phi i64 [ %82, %77 ], [ %91, %85 ], [ 63, %83 ], [ %73, %70 ]\l  %94 = getelementptr inbounds %struct.anon.52, %struct.anon.52* @mal, i64 0,\l... i32 1, i64 %93, i32 0, i64 0\l  %95 = getelementptr inbounds %struct.__libc, %struct.__libc* @__libc, i64 0,\l... i32 3\l  %96 = load volatile i32, i32* %95, align 4, !tbaa !13\l  %97 = icmp eq i32 %96, 0\l  br i1 %97, label %106, label %98\l|{<s0>T|<s1>F}}"];
	Node0x2029ec0:s0 -> Node0x202a000;
	Node0x2029ec0:s1 -> Node0x2029f10;
	Node0x2029f10 [shape=record,label="{%98:\l98:                                               \l  %99 = tail call i32 asm sideeffect xchg $0, $1,\l... =r,=*m,0,~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}(i32* nonnull %94, i32 1)\l... #20, !srcloc !16\l  %100 = icmp eq i32 %99, 0\l  br i1 %100, label %106, label %101\l|{<s0>T|<s1>F}}"];
	Node0x2029f10:s0 -> Node0x202a000;
	Node0x2029f10:s1 -> Node0x2029f60;
	Node0x2029f60 [shape=record,label="{%101:\l101:                                              \l  %102 = getelementptr inbounds %struct.anon.52, %struct.anon.52* @mal, i64 0,\l... i32 1, i64 %93, i32 0, i64 1\l  br label %103\l}"];
	Node0x2029f60 -> Node0x2029fb0;
	Node0x2029fb0 [shape=record,label="{%103:\l103:                                              \l  tail call fastcc void @__wait(i32* nonnull %94, i32* nonnull %102, i32 1,\l... i32 1) #19\l  %104 = tail call i32 asm sideeffect xchg $0, $1,\l... =r,=*m,0,~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}(i32* nonnull %94, i32 1)\l... #20, !srcloc !16\l  %105 = icmp eq i32 %104, 0\l  br i1 %105, label %106, label %103\l|{<s0>T|<s1>F}}"];
	Node0x2029fb0:s0 -> Node0x202a000;
	Node0x2029fb0:s1 -> Node0x2029fb0;
	Node0x202a000 [shape=record,label="{%106:\l106:                                              \l  %107 = getelementptr inbounds %struct.anon.52, %struct.anon.52* @mal, i64 0,\l... i32 1, i64 %93, i32 1\l  %108 = load %struct.chunk*, %struct.chunk** %107, align 8, !tbaa !17\l  %109 = icmp eq %struct.chunk* %108, null\l  br i1 %109, label %110, label %115\l|{<s0>T|<s1>F}}"];
	Node0x202a000:s0 -> Node0x202a050;
	Node0x202a000:s1 -> Node0x202a0a0;
	Node0x202a050 [shape=record,label="{%110:\l110:                                              \l  %111 = getelementptr inbounds %struct.chunk*, %struct.chunk** %107, i64 -2\l  %112 = getelementptr inbounds %struct.anon.52, %struct.anon.52* @mal, i64 0,\l... i32 1, i64 %93, i32 2\l  %113 = bitcast %struct.chunk** %112 to %struct.chunk***\l  store %struct.chunk** %111, %struct.chunk*** %113, align 8, !tbaa !19\l  %114 = bitcast %struct.chunk** %107 to %struct.chunk***\l  store %struct.chunk** %111, %struct.chunk*** %114, align 8, !tbaa !17\l  br label %115\l}"];
	Node0x202a050 -> Node0x202a0a0;
	Node0x202a0a0 [shape=record,label="{%115:\l115:                                              \l  %116 = load i64, i64* %66, align 8, !tbaa !6\l  %117 = icmp eq i64 %116, %71\l  br i1 %117, label %118, label %164\l|{<s0>T|<s1>F}}"];
	Node0x202a0a0:s0 -> Node0x202a0f0;
	Node0x202a0a0:s1 -> Node0x202a320;
	Node0x202a0f0 [shape=record,label="{%118:\l118:                                              \l  %119 = getelementptr inbounds i8, i8* %56, i64 24\l  %120 = bitcast i8* %119 to %struct.chunk**\l  %121 = load %struct.chunk*, %struct.chunk** %120, align 8, !tbaa !20\l  %122 = getelementptr inbounds i8, i8* %56, i64 16\l  %123 = bitcast i8* %122 to %struct.chunk**\l  %124 = load %struct.chunk*, %struct.chunk** %123, align 8, !tbaa !21\l  %125 = icmp eq %struct.chunk* %121, %124\l  br i1 %125, label %128, label %126\l|{<s0>T|<s1>F}}"];
	Node0x202a0f0:s0 -> Node0x202a190;
	Node0x202a0f0:s1 -> Node0x202a140;
	Node0x202a140 [shape=record,label="{%126:\l126:                                              \l  %127 = ptrtoint %struct.chunk* %124 to i64\l  br label %136\l}"];
	Node0x202a140 -> Node0x202a1e0;
	Node0x202a190 [shape=record,label="{%128:\l128:                                              \l  %129 = shl nuw i64 1, %93\l  %130 = xor i64 %129, -1\l  %131 = getelementptr inbounds %struct.anon.52, %struct.anon.52* @mal, i64 0,\l... i32 0\l  tail call void asm sideeffect lock \l  %132 = bitcast i8* %122 to i64*\l  %133 = load i64, i64* %132, align 8, !tbaa !21\l  %134 = load %struct.chunk*, %struct.chunk** %120, align 8, !tbaa !20\l  %135 = load i64, i64* %66, align 8, !tbaa !6\l  br label %136\l}"];
	Node0x202a190 -> Node0x202a1e0;
	Node0x202a1e0 [shape=record,label="{%136:\l136:                                              \l  %137 = phi i64 [ %135, %128 ], [ %71, %126 ]\l  %138 = phi %struct.chunk* [ %134, %128 ], [ %121, %126 ]\l  %139 = phi i64 [ %133, %128 ], [ %127, %126 ]\l  %140 = ptrtoint %struct.chunk* %138 to i64\l  %141 = getelementptr inbounds %struct.chunk, %struct.chunk* %138, i64 0, i32\l... 2\l  %142 = bitcast %struct.chunk** %141 to i64*\l  store i64 %139, i64* %142, align 8, !tbaa !21\l  %143 = load %struct.chunk*, %struct.chunk** %123, align 8, !tbaa !21\l  %144 = getelementptr inbounds %struct.chunk, %struct.chunk* %143, i64 0, i32\l... 3\l  %145 = bitcast %struct.chunk** %144 to i64*\l  store i64 %140, i64* %145, align 8, !tbaa !20\l  %146 = or i64 %137, 1\l  store i64 %146, i64* %66, align 8, !tbaa !6\l  %147 = and i64 %137, -2\l  %148 = getelementptr inbounds i8, i8* %56, i64 %147\l  %149 = bitcast i8* %148 to i64*\l  %150 = load i64, i64* %149, align 8, !tbaa !10\l  %151 = or i64 %150, 1\l  store i64 %151, i64* %149, align 8, !tbaa !10\l  %152 = load volatile i32, i32* %94, align 8, !tbaa !2\l  %153 = icmp eq i32 %152, 0\l  br i1 %153, label %181, label %154\l|{<s0>T|<s1>F}}"];
	Node0x202a1e0:s0 -> Node0x202a4b0;
	Node0x202a1e0:s1 -> Node0x202a230;
	Node0x202a230 [shape=record,label="{%154:\l154:                                              \l  tail call void asm sideeffect mov $1, $0 \l  %155 = getelementptr inbounds %struct.anon.52, %struct.anon.52* @mal, i64 0,\l... i32 1, i64 %93, i32 0, i64 1\l  %156 = load volatile i32, i32* %155, align 4, !tbaa !2\l  %157 = icmp eq i32 %156, 0\l  br i1 %157, label %181, label %158\l|{<s0>T|<s1>F}}"];
	Node0x202a230:s0 -> Node0x202a4b0;
	Node0x202a230:s1 -> Node0x202a280;
	Node0x202a280 [shape=record,label="{%158:\l158:                                              \l  %159 = ptrtoint i32* %94 to i64\l  %160 = tail call i64 asm sideeffect syscall,\l... =\{ax\},\{ax\},\{di\},\{si\},\{dx\},~\{rcx\},~\{r11\},~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}\l...(i64 202, i64 %159, i64 129, i64 1) #20, !srcloc !24\l  %161 = icmp eq i64 %160, -38\l  br i1 %161, label %162, label %181\l|{<s0>T|<s1>F}}"];
	Node0x202a280:s0 -> Node0x202a2d0;
	Node0x202a280:s1 -> Node0x202a4b0;
	Node0x202a2d0 [shape=record,label="{%162:\l162:                                              \l  %163 = tail call i64 asm sideeffect syscall,\l... =\{ax\},\{ax\},\{di\},\{si\},\{dx\},~\{rcx\},~\{r11\},~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}\l...(i64 202, i64 %159, i64 1, i64 1) #20, !srcloc !24\l  br label %181\l}"];
	Node0x202a2d0 -> Node0x202a4b0;
	Node0x202a320 [shape=record,label="{%164:\l164:                                              \l  %165 = load volatile i32, i32* %94, align 8, !tbaa !2\l  %166 = icmp eq i32 %165, 0\l  br i1 %166, label %177, label %167\l|{<s0>T|<s1>F}}"];
	Node0x202a320:s0 -> Node0x202a460;
	Node0x202a320:s1 -> Node0x202a370;
	Node0x202a370 [shape=record,label="{%167:\l167:                                              \l  tail call void asm sideeffect mov $1, $0 \l  %168 = getelementptr inbounds %struct.anon.52, %struct.anon.52* @mal, i64 0,\l... i32 1, i64 %93, i32 0, i64 1\l  %169 = load volatile i32, i32* %168, align 4, !tbaa !2\l  %170 = icmp eq i32 %169, 0\l  br i1 %170, label %177, label %171\l|{<s0>T|<s1>F}}"];
	Node0x202a370:s0 -> Node0x202a460;
	Node0x202a370:s1 -> Node0x202a3c0;
	Node0x202a3c0 [shape=record,label="{%171:\l171:                                              \l  %172 = ptrtoint i32* %94 to i64\l  %173 = tail call i64 asm sideeffect syscall,\l... =\{ax\},\{ax\},\{di\},\{si\},\{dx\},~\{rcx\},~\{r11\},~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}\l...(i64 202, i64 %172, i64 129, i64 1) #20, !srcloc !24\l  %174 = icmp eq i64 %173, -38\l  br i1 %174, label %175, label %177\l|{<s0>T|<s1>F}}"];
	Node0x202a3c0:s0 -> Node0x202a410;
	Node0x202a3c0:s1 -> Node0x202a460;
	Node0x202a410 [shape=record,label="{%175:\l175:                                              \l  %176 = tail call i64 asm sideeffect syscall,\l... =\{ax\},\{ax\},\{di\},\{si\},\{dx\},~\{rcx\},~\{r11\},~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}\l...(i64 202, i64 %172, i64 1, i64 1) #20, !srcloc !24\l  br label %177\l}"];
	Node0x202a410 -> Node0x202a460;
	Node0x202a460 [shape=record,label="{%177:\l177:                                              \l  %178 = load i64, i64* %66, align 8, !tbaa !6\l  %179 = and i64 %178, 1\l  %180 = icmp eq i64 %179, 0\l  br i1 %180, label %70, label %187\l|{<s0>T|<s1>F}}"];
	Node0x202a460:s0 -> Node0x2029d30;
	Node0x202a460:s1 -> Node0x202a500;
	Node0x202a4b0 [shape=record,label="{%181:\l181:                                              \l  %182 = load i64, i64* %66, align 8, !tbaa !6\l  %183 = and i64 %182, -2\l  %184 = add i64 %183, %22\l  %185 = getelementptr inbounds i8, i8* %56, i64 %183\l  %186 = bitcast i8* %185 to %struct.chunk*\l  br label %187\l}"];
	Node0x202a4b0 -> Node0x202a500;
	Node0x202a500 [shape=record,label="{%187:\l187:                                              \l  %188 = phi %struct.chunk* [ %186, %181 ], [ %57, %62 ], [ %57, %64 ], [ %57,\l... %177 ]\l  %189 = phi i64 [ %184, %181 ], [ %22, %62 ], [ %22, %64 ], [ %22, %177 ]\l  %190 = or i64 %189, 1\l  store i64 %190, i64* %20, align 8, !tbaa !6\l  %191 = getelementptr inbounds %struct.chunk, %struct.chunk* %188, i64 0, i32\l... 0\l  store i64 %190, i64* %191, align 8, !tbaa !10\l  %192 = icmp ugt i64 %17, %189\l  br i1 %192, label %208, label %193\l|{<s0>T|<s1>F}}"];
	Node0x202a500:s0 -> Node0x202a5f0;
	Node0x202a500:s1 -> Node0x202a550;
	Node0x202a550 [shape=record,label="{%193:\l193:                                              \l  %194 = and i64 %189, -2\l  %195 = add i64 %194, -16\l  %196 = icmp ugt i64 %195, %17\l  br i1 %196, label %197, label %235\l|{<s0>T|<s1>F}}"];
	Node0x202a550:s0 -> Node0x202a5a0;
	Node0x202a550:s1 -> Node0x202a820;
	Node0x202a5a0 [shape=record,label="{%197:\l197:                                              \l  %198 = getelementptr inbounds i8, i8* %18, i64 %194\l  %199 = getelementptr inbounds i8, i8* %18, i64 %17\l  %200 = bitcast i8* %199 to %struct.chunk*\l  %201 = or i64 %17, 1\l  %202 = bitcast i8* %199 to i64*\l  store i64 %201, i64* %202, align 8, !tbaa !10\l  %203 = sub i64 %194, %17\l  %204 = or i64 %203, 1\l  %205 = getelementptr inbounds i8, i8* %199, i64 8\l  %206 = bitcast i8* %205 to i64*\l  store i64 %204, i64* %206, align 8, !tbaa !6\l  %207 = bitcast i8* %198 to i64*\l  store i64 %204, i64* %207, align 8, !tbaa !10\l  store i64 %201, i64* %20, align 8, !tbaa !6\l  tail call fastcc void @__bin_chunk(%struct.chunk* nonnull %200) #19\l  br label %235\l}"];
	Node0x202a5a0 -> Node0x202a820;
	Node0x202a5f0 [shape=record,label="{%208:\l208:                                              \l  %209 = add i64 %17, -16\l  %210 = tail call fastcc i8* @malloc(i64 %209) #18\l  %211 = icmp eq i8* %210, null\l  br i1 %211, label %235, label %212\l|{<s0>T|<s1>F}}"];
	Node0x202a5f0:s0 -> Node0x202a820;
	Node0x202a5f0:s1 -> Node0x202a640;
	Node0x202a640 [shape=record,label="{%212:\l212:                                              \l  %213 = add i64 %22, -16\l  br label %214\l}"];
	Node0x202a640 -> Node0x202a690;
	Node0x202a690 [shape=record,label="{%214:\l214:                                              \l  %215 = phi i64 [ %213, %212 ], [ %38, %37 ]\l  %216 = phi i8* [ %210, %212 ], [ %39, %37 ]\l  %217 = tail call fastcc i8* @memcpy(i8* nonnull %216, i8* nonnull %0, i64\l... %215) #19\l  %218 = load i64, i64* %20, align 8, !tbaa !6\l  %219 = and i64 %218, 1\l  %220 = icmp eq i64 %219, 0\l  br i1 %220, label %221, label %233\l|{<s0>T|<s1>F}}"];
	Node0x202a690:s0 -> Node0x202a6e0;
	Node0x202a690:s1 -> Node0x202a7d0;
	Node0x202a6e0 [shape=record,label="{%221:\l221:                                              \l  %222 = bitcast i8* %18 to i64*\l  %223 = load i64, i64* %222, align 8, !tbaa !10\l  %224 = sub i64 0, %223\l  %225 = getelementptr inbounds i8, i8* %18, i64 %224\l  %226 = and i64 %218, -2\l  %227 = add i64 %223, %226\l  %228 = and i64 %223, 1\l  %229 = icmp eq i64 %228, 0\l  br i1 %229, label %231, label %230\l|{<s0>T|<s1>F}}"];
	Node0x202a6e0:s0 -> Node0x202a780;
	Node0x202a6e0:s1 -> Node0x202a730;
	Node0x202a730 [shape=record,label="{%230:\l230:                                              \l  tail call void asm sideeffect hlt,\l... ~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}() #20, !srcloc !11\l  br label %231\l}"];
	Node0x202a730 -> Node0x202a780;
	Node0x202a780 [shape=record,label="{%231:\l231:                                              \l  %232 = tail call fastcc i32 @__munmap(i8* nonnull %225, i64 %227) #19\l  br label %235\l}"];
	Node0x202a780 -> Node0x202a820;
	Node0x202a7d0 [shape=record,label="{%233:\l233:                                              \l  %234 = bitcast i8* %18 to %struct.chunk*\l  tail call fastcc void @__bin_chunk(%struct.chunk* nonnull %234) #19\l  br label %235\l}"];
	Node0x202a7d0 -> Node0x202a820;
	Node0x202a820 [shape=record,label="{%235:\l235:                                              \l  %236 = phi i8* [ %5, %4 ], [ null, %14 ], [ null, %208 ], [ %0, %193 ], [\l... %0, %197 ], [ %216, %231 ], [ %216, %233 ], [ %0, %41 ], [ %54, %49 ]\l  ret i8* %236\l}"];
}
