digraph "CFG for 'main' function" {
	label="CFG for 'main' function";

	Node0x102cbd0 [shape=record,label="{%2:\l  %3 = alloca i32, align 4\l  %4 = alloca i32, align 4\l  %5 = alloca i8**, align 8\l  %6 = alloca [25 x i8], align 16\l  %7 = alloca [25 x i8], align 16\l  %8 = alloca [2 x i8], align 1\l  %9 = alloca i32, align 4\l  %10 = alloca [4 x i8], align 1\l  %11 = alloca i32, align 4\l  %12 = alloca [2 x i8], align 1\l  %13 = alloca i32, align 4\l  %14 = alloca float, align 4\l  %15 = alloca [3 x i32], align 4\l  %16 = alloca %struct._IO_FILE*, align 8\l  store i32 0, i32* %3, align 4\l  store i32 %0, i32* %4, align 4\l  store i8** %1, i8*** %5, align 8\l  %17 = bitcast [3 x i32]* %15 to i8*\l  %18 = bitcast [3 x i32]* @__const.main.bonus to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %17, i8* align 4 %18, i64\l... 12, i1 false)\l  %19 = getelementptr inbounds [3 x i32], [3 x i32]* %15, i64 0, i64 0\l  store i32 10, i32* %19, align 4\l  %20 = getelementptr inbounds [3 x i32], [3 x i32]* %15, i64 0, i64 1\l  store i32 20, i32* %20, align 4\l  %21 = getelementptr inbounds [3 x i32], [3 x i32]* %15, i64 0, i64 2\l  store i32 30, i32* %21, align 4\l  %22 = getelementptr inbounds [25 x i8], [25 x i8]* %6, i64 0, i64 0\l  %23 = bitcast %struct._IO_FILE.19** @stdin to %struct._IO_FILE**\l  %24 = load %struct._IO_FILE*, %struct._IO_FILE** %23, align 8\l  %25 = bitcast i8* (i8*, i32, %struct._IO_FILE.5*)* @fgets to i8* (i8*, i32,\l... %struct._IO_FILE*)*\l  %26 = call i8* %25(i8* %22, i32 24, %struct._IO_FILE* %24)\l  %27 = getelementptr inbounds [25 x i8], [25 x i8]* %7, i64 0, i64 0\l  %28 = bitcast %struct._IO_FILE.19** @stdin to %struct._IO_FILE**\l  %29 = load %struct._IO_FILE*, %struct._IO_FILE** %28, align 8\l  %30 = bitcast i8* (i8*, i32, %struct._IO_FILE.5*)* @fgets to i8* (i8*, i32,\l... %struct._IO_FILE*)*\l  %31 = call i8* %30(i8* %27, i32 24, %struct._IO_FILE* %29)\l  %32 = getelementptr inbounds [4 x i8], [4 x i8]* %10, i64 0, i64 0\l  %33 = bitcast %struct._IO_FILE.19** @stdin to %struct._IO_FILE**\l  %34 = load %struct._IO_FILE*, %struct._IO_FILE** %33, align 8\l  %35 = bitcast i8* (i8*, i32, %struct._IO_FILE.5*)* @fgets to i8* (i8*, i32,\l... %struct._IO_FILE*)*\l  %36 = call i8* %35(i8* %32, i32 4, %struct._IO_FILE* %34)\l  %37 = getelementptr inbounds [4 x i8], [4 x i8]* %10, i64 0, i64 0\l  %38 = call fastcc i32 @atoi(i8* %37) #17\l  store i32 %38, i32* %11, align 4\l  %39 = getelementptr inbounds [2 x i8], [2 x i8]* %12, i64 0, i64 0\l  %40 = bitcast %struct._IO_FILE.19** @stdin to %struct._IO_FILE**\l  %41 = load %struct._IO_FILE*, %struct._IO_FILE** %40, align 8\l  %42 = bitcast i8* (i8*, i32, %struct._IO_FILE.5*)* @fgets to i8* (i8*, i32,\l... %struct._IO_FILE*)*\l  %43 = call i8* %42(i8* %39, i32 2, %struct._IO_FILE* %41)\l  %44 = getelementptr inbounds [2 x i8], [2 x i8]* %12, i64 0, i64 0\l  %45 = call fastcc i32 @atoi(i8* %44) #17\l  store i32 %45, i32* %13, align 4\l  %46 = getelementptr inbounds [8 x i8], [8 x i8]* @.str, i64 0, i64 0\l  %47 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.1, i64 0, i64 0\l  %48 = bitcast %struct._IO_FILE.11* (i8*, i8*)* @fopen to %struct._IO_FILE*\l... (i8*, i8*)*\l  %49 = call %struct._IO_FILE* %48(i8* %46, i8* %47)\l  store %struct._IO_FILE* %49, %struct._IO_FILE** %16, align 8\l  %50 = getelementptr inbounds [25 x i8], [25 x i8]* %7, i64 0, i64 0\l  %51 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.2, i64 0, i64 0\l  %52 = call fastcc i32 @strncmp(i8* %50, i8* %51, i64 1) #17\l  %53 = icmp eq i32 %52, 0\l  br i1 %53, label %54, label %58\l|{<s0>T|<s1>F}}"];
	Node0x102cbd0:s0 -> Node0x1048f60;
	Node0x102cbd0:s1 -> Node0x1048fb0;
	Node0x1048f60 [shape=record,label="{%54:\l54:                                               \l  %55 = load i32, i32* %11, align 4\l  %56 = getelementptr inbounds [10 x i8], [10 x i8]* @.str.3, i64 0, i64 0\l  %57 = call fastcc float @SRaise(i8* %56, i32 %55)\l  store float %57, float* %14, align 4\l  br label %83\l}"];
	Node0x1048f60 -> Node0x10492f0;
	Node0x1048fb0 [shape=record,label="{%58:\l58:                                               \l  %59 = getelementptr inbounds [25 x i8], [25 x i8]* %7, i64 0, i64 0\l  %60 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.4, i64 0, i64 0\l  %61 = call fastcc i32 @strncmp(i8* %59, i8* %60, i64 1) #17\l  %62 = icmp eq i32 %61, 0\l  br i1 %62, label %63, label %82\l|{<s0>T|<s1>F}}"];
	Node0x1048fb0:s0 -> Node0x1049000;
	Node0x1048fb0:s1 -> Node0x10492a0;
	Node0x1049000 [shape=record,label="{%63:\l63:                                               \l  %64 = getelementptr inbounds [25 x i8], [25 x i8]* %6, i64 0, i64 0\l  %65 = load i32, i32* %11, align 4\l  %66 = load i32, i32* %13, align 4\l  %67 = call fastcc float @MRaise(i8* %64, i32 %65, i32 %66)\l  store float %67, float* %14, align 4\l  %68 = getelementptr inbounds [2 x i8], [2 x i8]* %8, i64 0, i64 0\l  %69 = bitcast %struct._IO_FILE.19** @stdin to %struct._IO_FILE**\l  %70 = load %struct._IO_FILE*, %struct._IO_FILE** %69, align 8\l  %71 = bitcast i8* (i8*, i32, %struct._IO_FILE.5*)* @fgets to i8* (i8*, i32,\l... %struct._IO_FILE*)*\l  %72 = call i8* %71(i8* %68, i32 2, %struct._IO_FILE* %70)\l  %73 = getelementptr inbounds [2 x i8], [2 x i8]* %8, i64 0, i64 0\l  %74 = call fastcc i32 @atoi(i8* %73) #17\l  store i32 %74, i32* %9, align 4\l  %75 = load i32, i32* %9, align 4\l  %76 = sext i32 %75 to i64\l  %77 = getelementptr inbounds [3 x i32], [3 x i32]* %15, i64 0, i64 %76\l  %78 = load i32, i32* %77, align 4\l  %79 = sitofp i32 %78 to float\l  %80 = load float, float* %14, align 4\l  %81 = fadd float %80, %79\l  store float %81, float* %14, align 4\l  br label %82\l}"];
	Node0x1049000 -> Node0x10492a0;
	Node0x10492a0 [shape=record,label="{%82:\l82:                                               \l  br label %83\l}"];
	Node0x10492a0 -> Node0x10492f0;
	Node0x10492f0 [shape=record,label="{%83:\l83:                                               \l  %84 = load %struct._IO_FILE*, %struct._IO_FILE** %16, align 8\l  %85 = bitcast i32 (%struct._IO_FILE.5*)* @fclose to i32 (%struct._IO_FILE*)*\l  %86 = call i32 %85(%struct._IO_FILE* %84)\l  ret i32 0\l}"];
}
