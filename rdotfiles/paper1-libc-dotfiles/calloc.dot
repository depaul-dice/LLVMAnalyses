digraph "CFG for 'calloc' function" {
	label="CFG for 'calloc' function";

	Node0x22f9910 [shape=record,label="{%2:\l  %3 = icmp eq i64 %1, 0\l  br i1 %3, label %9, label %4\l|{<s0>T|<s1>F}}"];
	Node0x22f9910:s0 -> Node0x22fa430;
	Node0x22f9910:s1 -> Node0x22f9960;
	Node0x22f9960 [shape=record,label="{%4:\l4:                                                \l  %5 = tail call \{ i64, i1 \} @llvm.umul.with.overflow.i64(i64 %1, i64 %0)\l  %6 = extractvalue \{ i64, i1 \} %5, 1\l  br i1 %6, label %7, label %9\l|{<s0>T|<s1>F}}"];
	Node0x22f9960:s0 -> Node0x22f99b0;
	Node0x22f9960:s1 -> Node0x22fa430;
	Node0x22f99b0 [shape=record,label="{%7:\l7:                                                \l  %8 = tail call i32* @___errno_location() #20\l  store i32 12, i32* %8, align 4, !tbaa !73\l  br label %76\l}"];
	Node0x22f99b0 -> Node0x22fa840;
	Node0x22fa430 [shape=record,label="{%9:\l9:                                                \l  %10 = mul i64 %1, %0\l  %11 = tail call i8* @malloc(i64 %10) #21\l  %12 = icmp eq i8* %11, null\l  br i1 %12, label %76, label %13\l|{<s0>T|<s1>F}}"];
	Node0x22fa430:s0 -> Node0x22fa840;
	Node0x22fa430:s1 -> Node0x22fa480;
	Node0x22fa480 [shape=record,label="{%13:\l13:                                               \l  %14 = load i32, i32* @__malloc_replaced, align 4, !tbaa !73\l  %15 = icmp eq i32 %14, 0\l  br i1 %15, label %16, label %73\l|{<s0>T|<s1>F}}"];
	Node0x22fa480:s0 -> Node0x22fa4d0;
	Node0x22fa480:s1 -> Node0x22fa7f0;
	Node0x22fa4d0 [shape=record,label="{%16:\l16:                                               \l  %17 = getelementptr inbounds i8, i8* %11, i64 -8\l  %18 = bitcast i8* %17 to i64*\l  %19 = load i64, i64* %18, align 8, !tbaa !77\l  %20 = and i64 %19, 1\l  %21 = icmp eq i64 %20, 0\l  br i1 %21, label %76, label %22\l|{<s0>T|<s1>F}}"];
	Node0x22fa4d0:s0 -> Node0x22fa840;
	Node0x22fa4d0:s1 -> Node0x22fa520;
	Node0x22fa520 [shape=record,label="{%22:\l22:                                               \l  %23 = icmp ugt i64 %10, 4095\l  br i1 %23, label %24, label %73\l|{<s0>T|<s1>F}}"];
	Node0x22fa520:s0 -> Node0x22fa570;
	Node0x22fa520:s1 -> Node0x22fa7f0;
	Node0x22fa570 [shape=record,label="{%24:\l24:                                               \l  %25 = getelementptr inbounds i8, i8* %11, i64 %10\l  %26 = ptrtoint i8* %25 to i64\l  %27 = and i64 %26, 4095\l  %28 = sub nsw i64 0, %27\l  %29 = getelementptr inbounds i8, i8* %25, i64 %28\l  %30 = tail call i8* @memset(i8* nonnull %29, i32 0, i64 %27) #20\l  %31 = ptrtoint i8* %30 to i64\l  %32 = ptrtoint i8* %11 to i64\l  %33 = sub i64 %31, %32\l  %34 = icmp ult i64 %33, 4096\l  br i1 %34, label %73, label %35\l|{<s0>T|<s1>F}}"];
	Node0x22fa570:s0 -> Node0x22fa7f0;
	Node0x22fa570:s1 -> Node0x22fa5c0;
	Node0x22fa5c0 [shape=record,label="{%35:\l35:                                               \l  %36 = phi i8* [ %69, %64 ], [ %30, %24 ]\l  %37 = getelementptr i8, i8* %36, i64 -4096\l  br label %38\l}"];
	Node0x22fa5c0 -> Node0x22fa610;
	Node0x22fa610 [shape=record,label="{%38:\l38:                                               \l  %39 = phi i64 [ 4096, %35 ], [ %97, %96 ]\l  %40 = phi i8* [ %36, %35 ], [ %91, %96 ]\l  %41 = getelementptr inbounds i8, i8* %40, i64 -8\l  %42 = bitcast i8* %41 to i64*\l  %43 = load i64, i64* %42, align 8, !tbaa !81\l  %44 = getelementptr inbounds i8, i8* %40, i64 -16\l  %45 = bitcast i8* %44 to i64*\l  %46 = load i64, i64* %45, align 8, !tbaa !81\l  %47 = or i64 %46, %43\l  %48 = icmp eq i64 %47, 0\l  br i1 %48, label %49, label %64\l|{<s0>T|<s1>F}}"];
	Node0x22fa610:s0 -> Node0x22fa660;
	Node0x22fa610:s1 -> Node0x22fa7a0;
	Node0x22fa660 [shape=record,label="{%49:\l49:                                               \l  %50 = getelementptr inbounds i8, i8* %40, i64 -24\l  %51 = bitcast i8* %50 to i64*\l  %52 = load i64, i64* %51, align 8, !tbaa !81\l  %53 = getelementptr inbounds i8, i8* %40, i64 -32\l  %54 = bitcast i8* %53 to i64*\l  %55 = load i64, i64* %54, align 8, !tbaa !81\l  %56 = or i64 %55, %52\l  %57 = icmp eq i64 %56, 0\l  br i1 %57, label %78, label %62\l|{<s0>T|<s1>F}}"];
	Node0x22fa660:s0 -> Node0x22fa890;
	Node0x22fa660:s1 -> Node0x22fa750;
	Node0x22fa6b0 [shape=record,label="{%58:\l58:                                               \l  %59 = add nsw i64 %39, -48\l  br label %64\l}"];
	Node0x22fa6b0 -> Node0x22fa7a0;
	Node0x22fa700 [shape=record,label="{%60:\l60:                                               \l  %61 = add nsw i64 %39, -32\l  br label %64\l}"];
	Node0x22fa700 -> Node0x22fa7a0;
	Node0x22fa750 [shape=record,label="{%62:\l62:                                               \l  %63 = add nsw i64 %39, -16\l  br label %64\l}"];
	Node0x22fa750 -> Node0x22fa7a0;
	Node0x22fa7a0 [shape=record,label="{%64:\l64:                                               \l  %65 = phi i8* [ %82, %58 ], [ %53, %60 ], [ %44, %62 ], [ %37, %96 ], [ %40,\l... %38 ]\l  %66 = phi i64 [ %59, %58 ], [ %61, %60 ], [ %63, %62 ], [ 0, %96 ], [ %39,\l... %38 ]\l  %67 = sub i64 0, %66\l  %68 = getelementptr inbounds i8, i8* %65, i64 %67\l  %69 = tail call i8* @memset(i8* %68, i32 0, i64 %66) #20\l  %70 = ptrtoint i8* %69 to i64\l  %71 = sub i64 %70, %32\l  %72 = icmp ult i64 %71, 4096\l  br i1 %72, label %73, label %35\l|{<s0>T|<s1>F}}"];
	Node0x22fa7a0:s0 -> Node0x22fa7f0;
	Node0x22fa7a0:s1 -> Node0x22fa5c0;
	Node0x22fa7f0 [shape=record,label="{%73:\l73:                                               \l  %74 = phi i64 [ %10, %13 ], [ %10, %22 ], [ %33, %24 ], [ %71, %64 ]\l  %75 = tail call i8* @memset(i8* nonnull %11, i32 0, i64 %74) #20\l  br label %76\l}"];
	Node0x22fa7f0 -> Node0x22fa840;
	Node0x22fa840 [shape=record,label="{%76:\l76:                                               \l  %77 = phi i8* [ null, %7 ], [ %75, %73 ], [ null, %9 ], [ %11, %16 ]\l  ret i8* %77\l}"];
	Node0x22fa890 [shape=record,label="{%78:\l78:                                               \l  %79 = getelementptr inbounds i8, i8* %40, i64 -40\l  %80 = bitcast i8* %79 to i64*\l  %81 = load i64, i64* %80, align 8, !tbaa !81\l  %82 = getelementptr inbounds i8, i8* %40, i64 -48\l  %83 = bitcast i8* %82 to i64*\l  %84 = load i64, i64* %83, align 8, !tbaa !81\l  %85 = or i64 %84, %81\l  %86 = icmp eq i64 %85, 0\l  br i1 %86, label %87, label %60\l|{<s0>T|<s1>F}}"];
	Node0x22fa890:s0 -> Node0x22fa8e0;
	Node0x22fa890:s1 -> Node0x22fa700;
	Node0x22fa8e0 [shape=record,label="{%87:\l87:                                               \l  %88 = getelementptr inbounds i8, i8* %40, i64 -56\l  %89 = bitcast i8* %88 to i64*\l  %90 = load i64, i64* %89, align 8, !tbaa !81\l  %91 = getelementptr inbounds i8, i8* %40, i64 -64\l  %92 = bitcast i8* %91 to i64*\l  %93 = load i64, i64* %92, align 8, !tbaa !81\l  %94 = or i64 %93, %90\l  %95 = icmp eq i64 %94, 0\l  br i1 %95, label %96, label %58\l|{<s0>T|<s1>F}}"];
	Node0x22fa8e0:s0 -> Node0x22fa930;
	Node0x22fa8e0:s1 -> Node0x22fa6b0;
	Node0x22fa930 [shape=record,label="{%96:\l96:                                               \l  %97 = add nsw i64 %39, -64\l  %98 = icmp eq i64 %97, 0\l  br i1 %98, label %64, label %38\l|{<s0>T|<s1>F}}"];
	Node0x22fa930:s0 -> Node0x22fa7a0;
	Node0x22fa930:s1 -> Node0x22fa610;
}
