digraph "CFG for 'fflush' function" {
	label="CFG for 'fflush' function";

	Node0x280bf30 [shape=record,label="{%1:\l  %2 = icmp eq %struct._IO_FILE.48* %0, null\l  br i1 %2, label %3, label %56\l|{<s0>T|<s1>F}}"];
	Node0x280bf30:s0 -> Node0x280c1c0;
	Node0x280bf30:s1 -> Node0x280c5d0;
	Node0x280c1c0 [shape=record,label="{%3:\l3:                                                \l  %4 = bitcast %struct._IO_FILE.63** @__stdout_used to %struct._IO_FILE.48**\l  %5 = load volatile %struct._IO_FILE.48*, %struct._IO_FILE.48** %4, align 8,\l... !tbaa !2\l  %6 = icmp eq %struct._IO_FILE.48* %5, null\l  br i1 %6, label %11, label %7\l|{<s0>T|<s1>F}}"];
	Node0x280c1c0:s0 -> Node0x280c260;
	Node0x280c1c0:s1 -> Node0x280c210;
	Node0x280c210 [shape=record,label="{%7:\l7:                                                \l  %8 = bitcast %struct._IO_FILE.63** @__stdout_used to %struct._IO_FILE.48**\l  %9 = load volatile %struct._IO_FILE.48*, %struct._IO_FILE.48** %8, align 8,\l... !tbaa !2\l  %10 = tail call i32 @fflush(%struct._IO_FILE.48* %9) #19\l  br label %11\l}"];
	Node0x280c210 -> Node0x280c260;
	Node0x280c260 [shape=record,label="{%11:\l11:                                               \l  %12 = phi i32 [ %10, %7 ], [ 0, %3 ]\l  %13 = bitcast %struct._IO_FILE.63** @__stderr_used to %struct._IO_FILE.48**\l  %14 = load volatile %struct._IO_FILE.48*, %struct._IO_FILE.48** %13, align\l... 8, !tbaa !2\l  %15 = icmp eq %struct._IO_FILE.48* %14, null\l  br i1 %15, label %21, label %16\l|{<s0>T|<s1>F}}"];
	Node0x280c260:s0 -> Node0x280c300;
	Node0x280c260:s1 -> Node0x280c2b0;
	Node0x280c2b0 [shape=record,label="{%16:\l16:                                               \l  %17 = bitcast %struct._IO_FILE.63** @__stderr_used to %struct._IO_FILE.48**\l  %18 = load volatile %struct._IO_FILE.48*, %struct._IO_FILE.48** %17, align\l... 8, !tbaa !2\l  %19 = tail call i32 @fflush(%struct._IO_FILE.48* %18) #19\l  %20 = or i32 %19, %12\l  br label %21\l}"];
	Node0x280c2b0 -> Node0x280c300;
	Node0x280c300 [shape=record,label="{%21:\l21:                                               \l  %22 = phi i32 [ %20, %16 ], [ %12, %11 ]\l  %23 = tail call %struct._IO_FILE.48** @__ofl_lock() #20\l  %24 = load %struct._IO_FILE.48*, %struct._IO_FILE.48** %23, align 8, !tbaa !2\l  %25 = icmp eq %struct._IO_FILE.48* %24, null\l  br i1 %25, label %54, label %26\l|{<s0>T|<s1>F}}"];
	Node0x280c300:s0 -> Node0x280c580;
	Node0x280c300:s1 -> Node0x280c350;
	Node0x280c350 [shape=record,label="{%26:\l26:                                               \l  %27 = phi %struct._IO_FILE.48* [ %52, %50 ], [ %24, %21 ]\l  %28 = phi i32 [ %46, %50 ], [ %22, %21 ]\l  %29 = getelementptr inbounds %struct._IO_FILE.48, %struct._IO_FILE.48* %27,\l... i64 0, i32 19\l  %30 = load volatile i32, i32* %29, align 4, !tbaa !6\l  %31 = icmp sgt i32 %30, -1\l  br i1 %31, label %32, label %35\l|{<s0>T|<s1>F}}"];
	Node0x280c350:s0 -> Node0x280c3a0;
	Node0x280c350:s1 -> Node0x280c3f0;
	Node0x280c3a0 [shape=record,label="{%32:\l32:                                               \l  %33 = bitcast %struct._IO_FILE.48* %27 to %struct._IO_FILE.117*\l  %34 = tail call i32 @__lockfile(%struct._IO_FILE.117* nonnull %33) #20\l  br label %35\l}"];
	Node0x280c3a0 -> Node0x280c3f0;
	Node0x280c3f0 [shape=record,label="{%35:\l35:                                               \l  %36 = phi i32 [ %34, %32 ], [ 0, %26 ]\l  %37 = getelementptr inbounds %struct._IO_FILE.48, %struct._IO_FILE.48* %27,\l... i64 0, i32 5\l  %38 = load i8*, i8** %37, align 8, !tbaa !10\l  %39 = getelementptr inbounds %struct._IO_FILE.48, %struct._IO_FILE.48* %27,\l... i64 0, i32 7\l  %40 = load i8*, i8** %39, align 8, !tbaa !11\l  %41 = icmp eq i8* %38, %40\l  br i1 %41, label %45, label %42\l|{<s0>T|<s1>F}}"];
	Node0x280c3f0:s0 -> Node0x280c490;
	Node0x280c3f0:s1 -> Node0x280c440;
	Node0x280c440 [shape=record,label="{%42:\l42:                                               \l  %43 = tail call i32 @fflush(%struct._IO_FILE.48* nonnull %27) #19\l  %44 = or i32 %43, %28\l  br label %45\l}"];
	Node0x280c440 -> Node0x280c490;
	Node0x280c490 [shape=record,label="{%45:\l45:                                               \l  %46 = phi i32 [ %44, %42 ], [ %28, %35 ]\l  %47 = icmp eq i32 %36, 0\l  br i1 %47, label %50, label %48\l|{<s0>T|<s1>F}}"];
	Node0x280c490:s0 -> Node0x280c530;
	Node0x280c490:s1 -> Node0x280c4e0;
	Node0x280c4e0 [shape=record,label="{%48:\l48:                                               \l  %49 = bitcast %struct._IO_FILE.48* %27 to %struct._IO_FILE.117*\l  tail call void @__unlockfile(%struct._IO_FILE.117* nonnull %49) #20\l  br label %50\l}"];
	Node0x280c4e0 -> Node0x280c530;
	Node0x280c530 [shape=record,label="{%50:\l50:                                               \l  %51 = getelementptr inbounds %struct._IO_FILE.48, %struct._IO_FILE.48* %27,\l... i64 0, i32 14\l  %52 = load %struct._IO_FILE.48*, %struct._IO_FILE.48** %51, align 8, !tbaa !2\l  %53 = icmp eq %struct._IO_FILE.48* %52, null\l  br i1 %53, label %54, label %26\l|{<s0>T|<s1>F}}"];
	Node0x280c530:s0 -> Node0x280c580;
	Node0x280c530:s1 -> Node0x280c350;
	Node0x280c580 [shape=record,label="{%54:\l54:                                               \l  %55 = phi i32 [ %22, %21 ], [ %46, %50 ]\l  tail call fastcc void @__ofl_unlock() #20\l  br label %113\l}"];
	Node0x280c580 -> Node0x280ca80;
	Node0x280c5d0 [shape=record,label="{%56:\l56:                                               \l  %57 = getelementptr inbounds %struct._IO_FILE.48, %struct._IO_FILE.48* %0,\l... i64 0, i32 19\l  %58 = load volatile i32, i32* %57, align 4, !tbaa !6\l  %59 = icmp sgt i32 %58, -1\l  br i1 %59, label %60, label %63\l|{<s0>T|<s1>F}}"];
	Node0x280c5d0:s0 -> Node0x280c620;
	Node0x280c5d0:s1 -> Node0x280c670;
	Node0x280c620 [shape=record,label="{%60:\l60:                                               \l  %61 = bitcast %struct._IO_FILE.48* %0 to %struct._IO_FILE.117*\l  %62 = tail call i32 @__lockfile(%struct._IO_FILE.117* nonnull %61) #20\l  br label %63\l}"];
	Node0x280c620 -> Node0x280c670;
	Node0x280c670 [shape=record,label="{%63:\l63:                                               \l  %64 = phi i32 [ %62, %60 ], [ 0, %56 ]\l  %65 = getelementptr inbounds %struct._IO_FILE.48, %struct._IO_FILE.48* %0,\l... i64 0, i32 5\l  %66 = load i8*, i8** %65, align 8, !tbaa !10\l  %67 = getelementptr inbounds %struct._IO_FILE.48, %struct._IO_FILE.48* %0,\l... i64 0, i32 7\l  %68 = load i8*, i8** %67, align 8, !tbaa !11\l  %69 = icmp eq i8* %66, %68\l  br i1 %69, label %91, label %70\l|{<s0>T|<s1>F}}"];
	Node0x280c670:s0 -> Node0x280c940;
	Node0x280c670:s1 -> Node0x280c6c0;
	Node0x280c6c0 [shape=record,label="{%70:\l70:                                               \l  %71 = getelementptr inbounds %struct._IO_FILE.48, %struct._IO_FILE.48* %0,\l... i64 0, i32 9\l  %72 = load i64 (%struct._IO_FILE.48*, i8*, i64)*, i64 (%struct._IO_FILE.48*,\l... i8*, i64)** %71, align 8, !tbaa !12\l  %73 = bitcast i64 (%struct._IO_FILE.124*, i8*, i64)* @__stdio_read to i64\l... (%struct._IO_FILE.48*, i8*, i64)*\l  %74 = icmp eq i64 (%struct._IO_FILE.48*, i8*, i64)* %72, %73\l  br i1 %74, label %if.true.direct_targ1, label %if.false.orig_indirect2\l|{<s0>T|<s1>F}}"];
	Node0x280c6c0:s0 -> Node0x280c710;
	Node0x280c6c0:s1 -> Node0x280c760;
	Node0x280c710 [shape=record,label="{if.true.direct_targ1:                             \l  %75 = bitcast %struct._IO_FILE.48* %0 to %struct._IO_FILE.124*\l  %76 = tail call i64 @__stdio_read(%struct._IO_FILE.124* nonnull %75, i8*\l... null, i64 0) #21\l  br label %if.end.icp3\l}"];
	Node0x280c710 -> Node0x280c850;
	Node0x280c760 [shape=record,label="{if.false.orig_indirect2:                          \l  %77 = bitcast i64 (%struct._IO_FILE.128*, i8*, i64)* @__stdio_write to i64\l... (%struct._IO_FILE.48*, i8*, i64)*\l  %78 = icmp eq i64 (%struct._IO_FILE.48*, i8*, i64)* %72, %77\l  br i1 %78, label %if.true.direct_targ4, label %if.false.orig_indirect5\l|{<s0>T|<s1>F}}"];
	Node0x280c760:s0 -> Node0x280c7b0;
	Node0x280c760:s1 -> Node0x280c800;
	Node0x280c7b0 [shape=record,label="{if.true.direct_targ4:                             \l  %79 = bitcast %struct._IO_FILE.48* %0 to %struct._IO_FILE.128*\l  %80 = tail call i64 @__stdio_write(%struct._IO_FILE.128* nonnull %79, i8*\l... null, i64 0) #21\l  br label %if.end.icp3\l}"];
	Node0x280c7b0 -> Node0x280c850;
	Node0x280c800 [shape=record,label="{if.false.orig_indirect5:                          \l  %81 = bitcast i64 (%struct._IO_FILE.128*, i8*, i64)* @__stdout_write to i64\l... (%struct._IO_FILE.48*, i8*, i64)*\l  %82 = icmp eq i64 (%struct._IO_FILE.48*, i8*, i64)* %72, %81\l  call void @llvm.assume(i1 %82)\l  %83 = bitcast %struct._IO_FILE.48* %0 to %struct._IO_FILE.128*\l  %84 = tail call i64 @__stdout_write(%struct._IO_FILE.128* nonnull %83, i8*\l... null, i64 0) #21\l  br label %if.end.icp3\l}"];
	Node0x280c800 -> Node0x280c850;
	Node0x280c850 [shape=record,label="{if.end.icp3:                                      \l  %85 = load i8*, i8** %65, align 8, !tbaa !10\l  %86 = icmp eq i8* %85, null\l  br i1 %86, label %87, label %91\l|{<s0>T|<s1>F}}"];
	Node0x280c850:s0 -> Node0x280c8a0;
	Node0x280c850:s1 -> Node0x280c940;
	Node0x280c8a0 [shape=record,label="{%87:\l87:                                               \l  %88 = icmp eq i32 %64, 0\l  br i1 %88, label %113, label %89\l|{<s0>T|<s1>F}}"];
	Node0x280c8a0:s0 -> Node0x280ca80;
	Node0x280c8a0:s1 -> Node0x280c8f0;
	Node0x280c8f0 [shape=record,label="{%89:\l89:                                               \l  %90 = bitcast %struct._IO_FILE.48* %0 to %struct._IO_FILE.117*\l  tail call void @__unlockfile(%struct._IO_FILE.117* nonnull %90) #20\l  br label %113\l}"];
	Node0x280c8f0 -> Node0x280ca80;
	Node0x280c940 [shape=record,label="{%91:\l91:                                               \l  %92 = getelementptr inbounds %struct._IO_FILE.48, %struct._IO_FILE.48* %0,\l... i64 0, i32 1\l  %93 = load i8*, i8** %92, align 8, !tbaa !13\l  %94 = getelementptr inbounds %struct._IO_FILE.48, %struct._IO_FILE.48* %0,\l... i64 0, i32 2\l  %95 = load i8*, i8** %94, align 8, !tbaa !14\l  %96 = icmp eq i8* %93, %95\l  br i1 %96, label %106, label %if.true.direct_targ\l|{<s0>T|<s1>F}}"];
	Node0x280c940:s0 -> Node0x280c9e0;
	Node0x280c940:s1 -> Node0x280c990;
	Node0x280c990 [shape=record,label="{if.true.direct_targ:                              \l  %97 = getelementptr inbounds %struct._IO_FILE.48, %struct._IO_FILE.48* %0,\l... i64 0, i32 10\l  %98 = load i64 (%struct._IO_FILE.48*, i64, i32)*, i64 (%struct._IO_FILE.48*,\l... i64, i32)** %97, align 8, !tbaa !15\l  %99 = bitcast i64 (%struct._IO_FILE.126*, i64, i32)* @__stdio_seek to i64\l... (%struct._IO_FILE.48*, i64, i32)*\l  %100 = icmp eq i64 (%struct._IO_FILE.48*, i64, i32)* %98, %99\l  call void @llvm.assume(i1 %100)\l  %101 = ptrtoint i8* %93 to i64\l  %102 = ptrtoint i8* %95 to i64\l  %103 = sub i64 %101, %102\l  %104 = bitcast %struct._IO_FILE.48* %0 to %struct._IO_FILE.126*\l  %105 = tail call i64 @__stdio_seek(%struct._IO_FILE.126* nonnull %104, i64\l... %103, i32 1) #21\l  br label %106\l}"];
	Node0x280c990 -> Node0x280c9e0;
	Node0x280c9e0 [shape=record,label="{%106:\l106:                                              \l  %107 = getelementptr inbounds %struct._IO_FILE.48, %struct._IO_FILE.48* %0,\l... i64 0, i32 4\l  store i8* null, i8** %67, align 8, !tbaa !11\l  %108 = bitcast i8** %107 to \<2 x i8*\>*\l  store \<2 x i8*\> zeroinitializer, \<2 x i8*\>* %108, align 8, !tbaa !2\l  %109 = bitcast i8** %92 to \<2 x i8*\>*\l  store \<2 x i8*\> zeroinitializer, \<2 x i8*\>* %109, align 8, !tbaa !2\l  %110 = icmp eq i32 %64, 0\l  br i1 %110, label %113, label %111\l|{<s0>T|<s1>F}}"];
	Node0x280c9e0:s0 -> Node0x280ca80;
	Node0x280c9e0:s1 -> Node0x280ca30;
	Node0x280ca30 [shape=record,label="{%111:\l111:                                              \l  %112 = bitcast %struct._IO_FILE.48* %0 to %struct._IO_FILE.117*\l  tail call void @__unlockfile(%struct._IO_FILE.117* nonnull %112) #20\l  br label %113\l}"];
	Node0x280ca30 -> Node0x280ca80;
	Node0x280ca80 [shape=record,label="{%113:\l113:                                              \l  %114 = phi i32 [ %55, %54 ], [ -1, %87 ], [ -1, %89 ], [ 0, %106 ], [ 0,\l... %111 ]\l  ret i32 %114\l}"];
}
