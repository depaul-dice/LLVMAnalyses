digraph "CFG for 'resize_prob' function" {
	label="CFG for 'resize_prob' function";

	Node0x275f9f0 [shape=record,label="{%1:\l  %2 = alloca i64, align 8\l  %3 = alloca %struct.network*, align 8\l  %4 = alloca %struct.arc*, align 8\l  %5 = alloca %struct.node*, align 8\l  %6 = alloca %struct.node*, align 8\l  %7 = alloca %struct.node*, align 8\l  %8 = alloca i64, align 8\l  store %struct.network* %0, %struct.network** %3, align 8\l  %9 = load %struct.network*, %struct.network** %3, align 8\l  %10 = getelementptr inbounds %struct.network, %struct.network* %9, i32 0,\l... i32 9\l  %11 = load i64, i64* %10, align 8\l  %12 = icmp sge i64 %11, 3\l  br i1 %12, label %13, label %14\l|{<s0>T|<s1>F}}"];
	Node0x275f9f0:s0 -> Node0x2761f80;
	Node0x275f9f0:s1 -> Node0x2763da0;
	Node0x2761f80 [shape=record,label="{%13:\l13:                                               \l  br label %18\l}"];
	Node0x2761f80 -> Node0x2763df0;
	Node0x2763da0 [shape=record,label="{%14:\l14:                                               \l  %15 = getelementptr inbounds [20 x i8], [20 x i8]* @.str.16, i64 0, i64 0\l  %16 = getelementptr inbounds [11 x i8], [11 x i8]* @.str.1.17, i64 0, i64 0\l  %17 = getelementptr inbounds [30 x i8], [30 x i8]*\l... @__PRETTY_FUNCTION__.resize_prob, i64 0, i64 0\l  call fastcc void @__assert_fail(i8* %15, i8* %16, i32 39, i8* %17) #19\l  unreachable\l}"];
	Node0x2763df0 [shape=record,label="{%18:\l18:                                               \l  %19 = load %struct.network*, %struct.network** %3, align 8\l  %20 = getelementptr inbounds %struct.network, %struct.network* %19, i32 0,\l... i32 9\l  %21 = load i64, i64* %20, align 8\l  %22 = load %struct.network*, %struct.network** %3, align 8\l  %23 = getelementptr inbounds %struct.network, %struct.network* %22, i32 0,\l... i32 4\l  %24 = load i64, i64* %23, align 8\l  %25 = add nsw i64 %24, %21\l  store i64 %25, i64* %23, align 8\l  %26 = load %struct.network*, %struct.network** %3, align 8\l  %27 = getelementptr inbounds %struct.network, %struct.network* %26, i32 0,\l... i32 9\l  %28 = load i64, i64* %27, align 8\l  %29 = load %struct.network*, %struct.network** %3, align 8\l  %30 = getelementptr inbounds %struct.network, %struct.network* %29, i32 0,\l... i32 8\l  %31 = load i64, i64* %30, align 8\l  %32 = add nsw i64 %31, %28\l  store i64 %32, i64* %30, align 8\l  %33 = load %struct.network*, %struct.network** %3, align 8\l  %34 = getelementptr inbounds %struct.network, %struct.network* %33, i32 0,\l... i32 23\l  %35 = load %struct.arc*, %struct.arc** %34, align 8\l  %36 = bitcast %struct.arc* %35 to i8*\l  %37 = load %struct.network*, %struct.network** %3, align 8\l  %38 = getelementptr inbounds %struct.network, %struct.network* %37, i32 0,\l... i32 4\l  %39 = load i64, i64* %38, align 8\l  %40 = mul i64 %39, 64\l  %41 = call fastcc i8* @realloc(i8* %36, i64 %40) #7\l  %42 = bitcast i8* %41 to %struct.arc*\l  store %struct.arc* %42, %struct.arc** %4, align 8\l  %43 = load %struct.arc*, %struct.arc** %4, align 8\l  %44 = icmp ne %struct.arc* %43, null\l  br i1 %44, label %55, label %45\l|{<s0>T|<s1>F}}"];
	Node0x2763df0:s0 -> Node0x2763e90;
	Node0x2763df0:s1 -> Node0x2763e40;
	Node0x2763e40 [shape=record,label="{%45:\l45:                                               \l  %46 = load %struct.network*, %struct.network** %3, align 8\l  %47 = getelementptr inbounds %struct.network, %struct.network* %46, i32 0,\l... i32 0\l  %48 = getelementptr inbounds [200 x i8], [200 x i8]* %47, i64 0, i64 0\l  %49 = getelementptr inbounds [31 x i8], [31 x i8]* @.str.2.18, i64 0, i64 0\l  %50 = call i32 (i8*, ...) @printf(i8* %49, i8* %48)\l  %51 = bitcast %struct._IO_FILE.63** @stdout to %struct._IO_FILE**\l  %52 = load %struct._IO_FILE*, %struct._IO_FILE** %51, align 8\l  %53 = bitcast i32 (%struct._IO_FILE.48*)* @fflush to i32 (%struct._IO_FILE*)*\l  %54 = call i32 %53(%struct._IO_FILE* %52)\l  store i64 -1, i64* %2, align 8\l  br label %108\l}"];
	Node0x2763e40 -> Node0x27640c0;
	Node0x2763e90 [shape=record,label="{%55:\l55:                                               \l  %56 = load %struct.arc*, %struct.arc** %4, align 8\l  %57 = ptrtoint %struct.arc* %56 to i64\l  %58 = load %struct.network*, %struct.network** %3, align 8\l  %59 = getelementptr inbounds %struct.network, %struct.network* %58, i32 0,\l... i32 23\l  %60 = load %struct.arc*, %struct.arc** %59, align 8\l  %61 = ptrtoint %struct.arc* %60 to i64\l  %62 = sub i64 %57, %61\l  store i64 %62, i64* %8, align 8\l  %63 = load %struct.arc*, %struct.arc** %4, align 8\l  %64 = load %struct.network*, %struct.network** %3, align 8\l  %65 = getelementptr inbounds %struct.network, %struct.network* %64, i32 0,\l... i32 23\l  store %struct.arc* %63, %struct.arc** %65, align 8\l  %66 = load %struct.arc*, %struct.arc** %4, align 8\l  %67 = load %struct.network*, %struct.network** %3, align 8\l  %68 = getelementptr inbounds %struct.network, %struct.network* %67, i32 0,\l... i32 5\l  %69 = load i64, i64* %68, align 8\l  %70 = getelementptr inbounds %struct.arc, %struct.arc* %66, i64 %69\l  %71 = load %struct.network*, %struct.network** %3, align 8\l  %72 = getelementptr inbounds %struct.network, %struct.network* %71, i32 0,\l... i32 24\l  store %struct.arc* %70, %struct.arc** %72, align 8\l  %73 = load %struct.network*, %struct.network** %3, align 8\l  %74 = getelementptr inbounds %struct.network, %struct.network* %73, i32 0,\l... i32 21\l  %75 = load %struct.node*, %struct.node** %74, align 8\l  store %struct.node* %75, %struct.node** %5, align 8\l  store %struct.node* %75, %struct.node** %7, align 8\l  %76 = load %struct.node*, %struct.node** %5, align 8\l  %77 = getelementptr inbounds %struct.node, %struct.node* %76, i32 1\l  store %struct.node* %77, %struct.node** %5, align 8\l  %78 = load %struct.network*, %struct.network** %3, align 8\l  %79 = getelementptr inbounds %struct.network, %struct.network* %78, i32 0,\l... i32 22\l  %80 = load %struct.node*, %struct.node** %79, align 8\l  %81 = bitcast %struct.node* %80 to i8*\l  %82 = bitcast i8* %81 to %struct.node*\l  store %struct.node* %82, %struct.node** %6, align 8\l  br label %83\l}"];
	Node0x2763e90 -> Node0x2763ee0;
	Node0x2763ee0 [shape=record,label="{%83:\l83:                                               \l  %84 = load %struct.node*, %struct.node** %5, align 8\l  %85 = load %struct.node*, %struct.node** %6, align 8\l  %86 = icmp ult %struct.node* %84, %85\l  br i1 %86, label %87, label %107\l|{<s0>T|<s1>F}}"];
	Node0x2763ee0:s0 -> Node0x2763f30;
	Node0x2763ee0:s1 -> Node0x2764070;
	Node0x2763f30 [shape=record,label="{%87:\l87:                                               \l  %88 = load %struct.node*, %struct.node** %5, align 8\l  %89 = getelementptr inbounds %struct.node, %struct.node* %88, i32 0, i32 3\l  %90 = load %struct.node*, %struct.node** %89, align 8\l  %91 = load %struct.node*, %struct.node** %7, align 8\l  %92 = icmp ne %struct.node* %90, %91\l  br i1 %92, label %93, label %103\l|{<s0>T|<s1>F}}"];
	Node0x2763f30:s0 -> Node0x2763f80;
	Node0x2763f30:s1 -> Node0x2763fd0;
	Node0x2763f80 [shape=record,label="{%93:\l93:                                               \l  %94 = load %struct.node*, %struct.node** %5, align 8\l  %95 = getelementptr inbounds %struct.node, %struct.node* %94, i32 0, i32 6\l  %96 = load %struct.arc*, %struct.arc** %95, align 8\l  %97 = ptrtoint %struct.arc* %96 to i64\l  %98 = load i64, i64* %8, align 8\l  %99 = add i64 %97, %98\l  %100 = inttoptr i64 %99 to %struct.arc*\l  %101 = load %struct.node*, %struct.node** %5, align 8\l  %102 = getelementptr inbounds %struct.node, %struct.node* %101, i32 0, i32 6\l  store %struct.arc* %100, %struct.arc** %102, align 8\l  br label %103\l}"];
	Node0x2763f80 -> Node0x2763fd0;
	Node0x2763fd0 [shape=record,label="{%103:\l103:                                              \l  br label %104\l}"];
	Node0x2763fd0 -> Node0x2764020;
	Node0x2764020 [shape=record,label="{%104:\l104:                                              \l  %105 = load %struct.node*, %struct.node** %5, align 8\l  %106 = getelementptr inbounds %struct.node, %struct.node* %105, i32 1\l  store %struct.node* %106, %struct.node** %5, align 8\l  br label %83\l}"];
	Node0x2764020 -> Node0x2763ee0;
	Node0x2764070 [shape=record,label="{%107:\l107:                                              \l  store i64 0, i64* %2, align 8\l  br label %108\l}"];
	Node0x2764070 -> Node0x27640c0;
	Node0x27640c0 [shape=record,label="{%108:\l108:                                              \l  %109 = load i64, i64* %2, align 8\l  ret i64 %109\l}"];
}
