digraph "CFG for 'malloc' function" {
	label="CFG for 'malloc' function";

	Node0x27d1fd0 [shape=record,label="{%1:\l  %2 = alloca i64, align 8\l  %3 = add i64 %0, -1\l  %4 = icmp ugt i64 %3, 9223372036854771679\l  br i1 %4, label %5, label %9\l|{<s0>T|<s1>F}}"];
	Node0x27d1fd0:s0 -> Node0x27d3050;
	Node0x27d1fd0:s1 -> Node0x27d30f0;
	Node0x27d3050 [shape=record,label="{%5:\l5:                                                \l  %6 = icmp eq i64 %0, 0\l  br i1 %6, label %30, label %7\l|{<s0>T|<s1>F}}"];
	Node0x27d3050:s0 -> Node0x27d3230;
	Node0x27d3050:s1 -> Node0x27d30a0;
	Node0x27d30a0 [shape=record,label="{%7:\l7:                                                \l  %8 = tail call fastcc i32* @__errno_location() #19\l  store i32 12, i32* %8, align 4, !tbaa !2\l  br label %340\l}"];
	Node0x27d30a0 -> Node0x27d4450;
	Node0x27d30f0 [shape=record,label="{%9:\l9:                                                \l  %10 = add nuw nsw i64 %0, 47\l  %11 = and i64 %10, -32\l  %12 = icmp ugt i64 %11, 229376\l  br i1 %12, label %13, label %26\l|{<s0>T|<s1>F}}"];
	Node0x27d30f0:s0 -> Node0x27d3140;
	Node0x27d30f0:s1 -> Node0x27d31e0;
	Node0x27d3140 [shape=record,label="{%13:\l13:                                               \l  %14 = add nuw i64 %11, 4111\l  %15 = and i64 %14, -4096\l  %16 = tail call fastcc i8* @__mmap(i8* null, i64 %15, i32 3, i32 34, i32 -1,\l... i64 0) #19\l  %17 = inttoptr i64 -1 to i8*\l  %18 = icmp eq i8* %16, %17\l  br i1 %18, label %340, label %19\l|{<s0>T|<s1>F}}"];
	Node0x27d3140:s0 -> Node0x27d4450;
	Node0x27d3140:s1 -> Node0x27d3190;
	Node0x27d3190 [shape=record,label="{%19:\l19:                                               \l  %20 = getelementptr inbounds i8, i8* %16, i64 16\l  %21 = add i64 %15, -16\l  %22 = getelementptr inbounds i8, i8* %16, i64 24\l  %23 = bitcast i8* %22 to i64*\l  store i64 %21, i64* %23, align 8, !tbaa !6\l  %24 = bitcast i8* %20 to i64*\l  store i64 16, i64* %24, align 8, !tbaa !10\l  %25 = getelementptr inbounds i8, i8* %16, i64 32\l  br label %340\l}"];
	Node0x27d3190 -> Node0x27d4450;
	Node0x27d31e0 [shape=record,label="{%26:\l26:                                               \l  %27 = lshr i64 %10, 5\l  %28 = add nsw i64 %27, -1\l  %29 = icmp ult i64 %28, 33\l  br i1 %29, label %30, label %34\l|{<s0>T|<s1>F}}"];
	Node0x27d31e0:s0 -> Node0x27d3230;
	Node0x27d31e0:s1 -> Node0x27d3280;
	Node0x27d3230 [shape=record,label="{%30:\l30:                                               \l  %31 = phi i64 [ %28, %26 ], [ 0, %5 ]\l  %32 = phi i64 [ %11, %26 ], [ 32, %5 ]\l  %33 = trunc i64 %31 to i32\l  br label %51\l}"];
	Node0x27d3230 -> Node0x27d3370;
	Node0x27d3280 [shape=record,label="{%34:\l34:                                               \l  %35 = add nsw i64 %27, -2\l  %36 = icmp ult i64 %35, 512\l  br i1 %36, label %37, label %44\l|{<s0>T|<s1>F}}"];
	Node0x27d3280:s0 -> Node0x27d32d0;
	Node0x27d3280:s1 -> Node0x27d3320;
	Node0x27d32d0 [shape=record,label="{%37:\l37:                                               \l  %38 = lshr i64 %35, 3\l  %39 = add nsw i64 %38, -4\l  %40 = getelementptr inbounds [60 x i8], [60 x i8]* @bin_tab, i64 0, i64 %39\l  %41 = load i8, i8* %40, align 1, !tbaa !11\l  %42 = zext i8 %41 to i32\l  %43 = add nuw nsw i32 %42, 1\l  br label %51\l}"];
	Node0x27d32d0 -> Node0x27d3370;
	Node0x27d3320 [shape=record,label="{%44:\l44:                                               \l  %45 = lshr i64 %35, 7\l  %46 = add nsw i64 %45, -4\l  %47 = getelementptr inbounds [60 x i8], [60 x i8]* @bin_tab, i64 0, i64 %46\l  %48 = load i8, i8* %47, align 1, !tbaa !11\l  %49 = zext i8 %48 to i32\l  %50 = add nuw nsw i32 %49, 17\l  br label %51\l}"];
	Node0x27d3320 -> Node0x27d3370;
	Node0x27d3370 [shape=record,label="{%51:\l51:                                               \l  %52 = phi i64 [ %32, %30 ], [ %11, %37 ], [ %11, %44 ]\l  %53 = phi i32 [ %33, %30 ], [ %43, %37 ], [ %50, %44 ]\l  %54 = getelementptr inbounds %struct.anon, %struct.anon* @mal, i64 0, i32 0\l  %55 = load volatile i64, i64* %54, align 8, !tbaa !12\l  %56 = zext i32 %53 to i64\l  %57 = shl nsw i64 -1, %56\l  %58 = and i64 %55, %57\l  %59 = icmp eq i64 %58, 0\l  br i1 %59, label %60, label %153\l|{<s0>T|<s1>F}}"];
	Node0x27d3370:s0 -> Node0x27d33c0;
	Node0x27d3370:s1 -> Node0x27d3910;
	Node0x27d33c0 [shape=record,label="{%60:\l60:                                               \l  %61 = bitcast i64* %2 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61)\l  %62 = add i64 %52, 32\l  store i64 %62, i64* %2, align 8, !tbaa !14\l  %63 = getelementptr inbounds %struct.__libc, %struct.__libc* @__libc, i64 0,\l... i32 3\l  %64 = load volatile i32, i32* %63, align 4, !tbaa !15\l  %65 = icmp eq i32 %64, 0\l  br i1 %65, label %76, label %66\l|{<s0>T|<s1>F}}"];
	Node0x27d33c0:s0 -> Node0x27d34b0;
	Node0x27d33c0:s1 -> Node0x27d3410;
	Node0x27d3410 [shape=record,label="{%66:\l66:                                               \l  %67 = getelementptr inbounds [2 x i32], [2 x i32]* @expand_heap.heap_lock,\l... i64 0, i64 0\l  %68 = tail call i32 asm sideeffect xchg $0, $1,\l... =r,=*m,0,~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}(i32* %67, i32 1) #20,\l... !srcloc !18\l  %69 = icmp eq i32 %68, 0\l  br i1 %69, label %76, label %70\l|{<s0>T|<s1>F}}"];
	Node0x27d3410:s0 -> Node0x27d34b0;
	Node0x27d3410:s1 -> Node0x27d3460;
	Node0x27d3460 [shape=record,label="{%70:\l70:                                               \l  %71 = getelementptr inbounds [2 x i32], [2 x i32]* @expand_heap.heap_lock,\l... i64 0, i64 0\l  %72 = getelementptr inbounds [2 x i32], [2 x i32]* @expand_heap.heap_lock,\l... i64 0, i64 1\l  tail call fastcc void @__wait(i32* %71, i32* nonnull %72, i32 1, i32 1) #19\l  %73 = getelementptr inbounds [2 x i32], [2 x i32]* @expand_heap.heap_lock,\l... i64 0, i64 0\l  %74 = tail call i32 asm sideeffect xchg $0, $1,\l... =r,=*m,0,~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}(i32* %73, i32 1) #20,\l... !srcloc !18\l  %75 = icmp eq i32 %74, 0\l  br i1 %75, label %76, label %70\l|{<s0>T|<s1>F}}"];
	Node0x27d3460:s0 -> Node0x27d34b0;
	Node0x27d3460:s1 -> Node0x27d3460;
	Node0x27d34b0 [shape=record,label="{%76:\l76:                                               \l  %77 = call fastcc i8* @__expand_heap(i64* nonnull %2) #19\l  %78 = icmp eq i8* %77, null\l  br i1 %78, label %79, label %95\l|{<s0>T|<s1>F}}"];
	Node0x27d34b0:s0 -> Node0x27d3500;
	Node0x27d34b0:s1 -> Node0x27d3640;
	Node0x27d3500 [shape=record,label="{%79:\l79:                                               \l  %80 = getelementptr inbounds [2 x i32], [2 x i32]* @expand_heap.heap_lock,\l... i64 0, i64 0\l  %81 = load volatile i32, i32* %80, align 4, !tbaa !2\l  %82 = icmp eq i32 %81, 0\l  br i1 %82, label %132, label %83\l|{<s0>T|<s1>F}}"];
	Node0x27d3500:s0 -> Node0x27d3820;
	Node0x27d3500:s1 -> Node0x27d3550;
	Node0x27d3550 [shape=record,label="{%83:\l83:                                               \l  %84 = getelementptr inbounds [2 x i32], [2 x i32]* @expand_heap.heap_lock,\l... i64 0, i64 0\l  call void asm sideeffect mov $1, $0 \l  %85 = getelementptr inbounds [2 x i32], [2 x i32]* @expand_heap.heap_lock,\l... i64 0, i64 1\l  %86 = load volatile i32, i32* %85, align 4, !tbaa !2\l  %87 = icmp eq i32 %86, 0\l  br i1 %87, label %132, label %88\l|{<s0>T|<s1>F}}"];
	Node0x27d3550:s0 -> Node0x27d3820;
	Node0x27d3550:s1 -> Node0x27d35a0;
	Node0x27d35a0 [shape=record,label="{%88:\l88:                                               \l  %89 = ptrtoint [2 x i32]* @expand_heap.heap_lock to i64\l  %90 = call i64 asm sideeffect syscall,\l... =\{ax\},\{ax\},\{di\},\{si\},\{dx\},~\{rcx\},~\{r11\},~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}\l...(i64 202, i64 %89, i64 129, i64 1) #20, !srcloc !20\l  %91 = icmp eq i64 %90, -38\l  br i1 %91, label %92, label %132\l|{<s0>T|<s1>F}}"];
	Node0x27d35a0:s0 -> Node0x27d35f0;
	Node0x27d35a0:s1 -> Node0x27d3820;
	Node0x27d35f0 [shape=record,label="{%92:\l92:                                               \l  %93 = ptrtoint [2 x i32]* @expand_heap.heap_lock to i64\l  %94 = call i64 asm sideeffect syscall,\l... =\{ax\},\{ax\},\{di\},\{si\},\{dx\},~\{rcx\},~\{r11\},~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}\l...(i64 202, i64 %93, i64 1, i64 1) #20, !srcloc !20\l  br label %132\l}"];
	Node0x27d35f0 -> Node0x27d3820;
	Node0x27d3640 [shape=record,label="{%95:\l95:                                               \l  %96 = load i8*, i8** @expand_heap.end, align 8, !tbaa !21\l  %97 = icmp eq i8* %77, %96\l  %98 = load i64, i64* %2, align 8, !tbaa !14\l  br i1 %97, label %104, label %99\l|{<s0>T|<s1>F}}"];
	Node0x27d3640:s0 -> Node0x27d36e0;
	Node0x27d3640:s1 -> Node0x27d3690;
	Node0x27d3690 [shape=record,label="{%99:\l99:                                               \l  %100 = add i64 %98, -32\l  store i64 %100, i64* %2, align 8, !tbaa !14\l  %101 = getelementptr inbounds i8, i8* %77, i64 32\l  %102 = getelementptr inbounds i8, i8* %77, i64 16\l  %103 = bitcast i8* %102 to i64*\l  store i64 1, i64* %103, align 8, !tbaa !10\l  br label %104\l}"];
	Node0x27d3690 -> Node0x27d36e0;
	Node0x27d36e0 [shape=record,label="{%104:\l104:                                              \l  %105 = phi i64 [ %100, %99 ], [ %98, %95 ]\l  %106 = phi i8* [ %101, %99 ], [ %77, %95 ]\l  %107 = getelementptr inbounds i8, i8* %106, i64 %105\l  store i8* %107, i8** @expand_heap.end, align 8, !tbaa !21\l  %108 = getelementptr inbounds i8, i8* %107, i64 -16\l  %109 = or i64 %105, 1\l  %110 = bitcast i8* %108 to i64*\l  store i64 %109, i64* %110, align 8, !tbaa !10\l  %111 = getelementptr inbounds i8, i8* %108, i64 8\l  %112 = bitcast i8* %111 to i64*\l  store i64 1, i64* %112, align 8, !tbaa !6\l  %113 = getelementptr inbounds i8, i8* %106, i64 -16\l  %114 = bitcast i8* %113 to %struct.chunk*\l  %115 = getelementptr inbounds i8, i8* %106, i64 -8\l  %116 = bitcast i8* %115 to i64*\l  store i64 %109, i64* %116, align 8, !tbaa !6\l  %117 = getelementptr inbounds [2 x i32], [2 x i32]* @expand_heap.heap_lock,\l... i64 0, i64 0\l  %118 = load volatile i32, i32* %117, align 4, !tbaa !2\l  %119 = icmp eq i32 %118, 0\l  br i1 %119, label %133, label %120\l|{<s0>T|<s1>F}}"];
	Node0x27d36e0:s0 -> Node0x27d3870;
	Node0x27d36e0:s1 -> Node0x27d3730;
	Node0x27d3730 [shape=record,label="{%120:\l120:                                              \l  %121 = getelementptr inbounds [2 x i32], [2 x i32]* @expand_heap.heap_lock,\l... i64 0, i64 0\l  call void asm sideeffect mov $1, $0 \l  %122 = getelementptr inbounds [2 x i32], [2 x i32]* @expand_heap.heap_lock,\l... i64 0, i64 1\l  %123 = load volatile i32, i32* %122, align 4, !tbaa !2\l  %124 = icmp eq i32 %123, 0\l  br i1 %124, label %133, label %125\l|{<s0>T|<s1>F}}"];
	Node0x27d3730:s0 -> Node0x27d3870;
	Node0x27d3730:s1 -> Node0x27d3780;
	Node0x27d3780 [shape=record,label="{%125:\l125:                                              \l  %126 = ptrtoint [2 x i32]* @expand_heap.heap_lock to i64\l  %127 = call i64 asm sideeffect syscall,\l... =\{ax\},\{ax\},\{di\},\{si\},\{dx\},~\{rcx\},~\{r11\},~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}\l...(i64 202, i64 %126, i64 129, i64 1) #20, !srcloc !20\l  %128 = icmp eq i64 %127, -38\l  br i1 %128, label %129, label %133\l|{<s0>T|<s1>F}}"];
	Node0x27d3780:s0 -> Node0x27d37d0;
	Node0x27d3780:s1 -> Node0x27d3870;
	Node0x27d37d0 [shape=record,label="{%129:\l129:                                              \l  %130 = ptrtoint [2 x i32]* @expand_heap.heap_lock to i64\l  %131 = call i64 asm sideeffect syscall,\l... =\{ax\},\{ax\},\{di\},\{si\},\{dx\},~\{rcx\},~\{r11\},~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}\l...(i64 202, i64 %130, i64 1, i64 1) #20, !srcloc !20\l  br label %133\l}"];
	Node0x27d37d0 -> Node0x27d3870;
	Node0x27d3820 [shape=record,label="{%132:\l132:                                              \l  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61)\l  br label %340\l}"];
	Node0x27d3820 -> Node0x27d4450;
	Node0x27d3870 [shape=record,label="{%133:\l133:                                              \l  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61)\l  %134 = call fastcc i32 @alloc_rev(%struct.chunk* nonnull %114) #21\l  %135 = icmp eq i32 %134, 0\l  br i1 %135, label %318, label %136\l|{<s0>T|<s1>F}}"];
	Node0x27d3870:s0 -> Node0x27d4360;
	Node0x27d3870:s1 -> Node0x27d38c0;
	Node0x27d38c0 [shape=record,label="{%136:\l136:                                              \l  %137 = bitcast i8* %113 to i64*\l  %138 = load i64, i64* %137, align 8, !tbaa !10\l  %139 = and i64 %138, -2\l  %140 = sub i64 0, %139\l  %141 = getelementptr inbounds i8, i8* %113, i64 %140\l  %142 = bitcast i8* %141 to %struct.chunk*\l  %143 = load i64, i64* %116, align 8, !tbaa !6\l  %144 = getelementptr inbounds i8, i8* %141, i64 8\l  %145 = bitcast i8* %144 to i64*\l  %146 = load i64, i64* %145, align 8, !tbaa !6\l  %147 = and i64 %146, -2\l  %148 = add i64 %147, %143\l  store i64 %148, i64* %145, align 8, !tbaa !6\l  %149 = load i64, i64* %116, align 8, !tbaa !6\l  %150 = and i64 %149, -2\l  %151 = getelementptr inbounds i8, i8* %113, i64 %150\l  %152 = bitcast i8* %151 to i64*\l  store i64 %148, i64* %152, align 8, !tbaa !10\l  br label %318\l}"];
	Node0x27d38c0 -> Node0x27d4360;
	Node0x27d3910 [shape=record,label="{%153:\l153:                                              \l  %154 = phi i64 [ %316, %313 ], [ %58, %51 ]\l  %155 = tail call i64 asm bsf $1,$0, =r,r,~\{dirflag\},~\{fpsr\},~\{flags\}(i64\l... %154) #22, !srcloc !22\l  %156 = shl i64 %155, 32\l  %157 = ashr exact i64 %156, 32\l  %158 = getelementptr inbounds %struct.anon, %struct.anon* @mal, i64 0, i32\l... 1, i64 %157, i32 0, i64 0\l  %159 = getelementptr inbounds %struct.__libc, %struct.__libc* @__libc, i64\l... 0, i32 3\l  %160 = load volatile i32, i32* %159, align 4, !tbaa !15\l  %161 = icmp eq i32 %160, 0\l  br i1 %161, label %170, label %162\l|{<s0>T|<s1>F}}"];
	Node0x27d3910:s0 -> Node0x27d3a50;
	Node0x27d3910:s1 -> Node0x27d3960;
	Node0x27d3960 [shape=record,label="{%162:\l162:                                              \l  %163 = tail call i32 asm sideeffect xchg $0, $1,\l... =r,=*m,0,~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}(i32* nonnull %158, i32 1)\l... #20, !srcloc !18\l  %164 = icmp eq i32 %163, 0\l  br i1 %164, label %170, label %165\l|{<s0>T|<s1>F}}"];
	Node0x27d3960:s0 -> Node0x27d3a50;
	Node0x27d3960:s1 -> Node0x27d39b0;
	Node0x27d39b0 [shape=record,label="{%165:\l165:                                              \l  %166 = getelementptr inbounds %struct.anon, %struct.anon* @mal, i64 0, i32\l... 1, i64 %157, i32 0, i64 1\l  br label %167\l}"];
	Node0x27d39b0 -> Node0x27d3a00;
	Node0x27d3a00 [shape=record,label="{%167:\l167:                                              \l  tail call fastcc void @__wait(i32* nonnull %158, i32* nonnull %166, i32 1,\l... i32 1) #19\l  %168 = tail call i32 asm sideeffect xchg $0, $1,\l... =r,=*m,0,~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}(i32* nonnull %158, i32 1)\l... #20, !srcloc !18\l  %169 = icmp eq i32 %168, 0\l  br i1 %169, label %170, label %167\l|{<s0>T|<s1>F}}"];
	Node0x27d3a00:s0 -> Node0x27d3a50;
	Node0x27d3a00:s1 -> Node0x27d3a00;
	Node0x27d3a50 [shape=record,label="{%170:\l170:                                              \l  %171 = getelementptr inbounds %struct.anon, %struct.anon* @mal, i64 0, i32\l... 1, i64 %157, i32 1\l  %172 = load %struct.chunk*, %struct.chunk** %171, align 8, !tbaa !23\l  %173 = icmp eq %struct.chunk* %172, null\l  %174 = getelementptr inbounds %struct.chunk*, %struct.chunk** %171, i64 -2\l  br i1 %173, label %175, label %179\l|{<s0>T|<s1>F}}"];
	Node0x27d3a50:s0 -> Node0x27d3aa0;
	Node0x27d3a50:s1 -> Node0x27d3af0;
	Node0x27d3aa0 [shape=record,label="{%175:\l175:                                              \l  %176 = getelementptr inbounds %struct.anon, %struct.anon* @mal, i64 0, i32\l... 1, i64 %157, i32 2\l  %177 = bitcast %struct.chunk** %176 to %struct.chunk***\l  store %struct.chunk** %174, %struct.chunk*** %177, align 8, !tbaa !25\l  %178 = bitcast %struct.chunk** %171 to %struct.chunk***\l  store %struct.chunk** %174, %struct.chunk*** %178, align 8, !tbaa !23\l  br label %300\l}"];
	Node0x27d3aa0 -> Node0x27d41d0;
	Node0x27d3af0 [shape=record,label="{%179:\l179:                                              \l  %180 = bitcast %struct.chunk** %174 to %struct.chunk*\l  %181 = icmp eq %struct.chunk* %172, %180\l  br i1 %181, label %300, label %182\l|{<s0>T|<s1>F}}"];
	Node0x27d3af0:s0 -> Node0x27d41d0;
	Node0x27d3af0:s1 -> Node0x27d3b40;
	Node0x27d3b40 [shape=record,label="{%182:\l182:                                              \l  %183 = trunc i64 %155 to i32\l  %184 = icmp slt i32 %183, 40\l  br i1 %184, label %253, label %185\l|{<s0>T|<s1>F}}"];
	Node0x27d3b40:s0 -> Node0x27d3f50;
	Node0x27d3b40:s1 -> Node0x27d3b90;
	Node0x27d3b90 [shape=record,label="{%185:\l185:                                              \l  %186 = add nsw i32 %53, 3\l  %187 = icmp sgt i32 %186, %183\l  br i1 %187, label %188, label %196\l|{<s0>T|<s1>F}}"];
	Node0x27d3b90:s0 -> Node0x27d3be0;
	Node0x27d3b90:s1 -> Node0x27d3c80;
	Node0x27d3be0 [shape=record,label="{%188:\l188:                                              \l  %189 = icmp eq i32 %183, 63\l  br i1 %189, label %190, label %253\l|{<s0>T|<s1>F}}"];
	Node0x27d3be0:s0 -> Node0x27d3c30;
	Node0x27d3be0:s1 -> Node0x27d3f50;
	Node0x27d3c30 [shape=record,label="{%190:\l190:                                              \l  %191 = getelementptr inbounds %struct.chunk, %struct.chunk* %172, i64 0, i32\l... 1\l  %192 = load i64, i64* %191, align 8, !tbaa !6\l  %193 = and i64 %192, -2\l  %194 = sub i64 %193, %52\l  %195 = icmp ult i64 %194, 229377\l  br i1 %195, label %253, label %201\l|{<s0>T|<s1>F}}"];
	Node0x27d3c30:s0 -> Node0x27d3f50;
	Node0x27d3c30:s1 -> Node0x27d3cd0;
	Node0x27d3c80 [shape=record,label="{%196:\l196:                                              \l  %197 = getelementptr inbounds %struct.chunk, %struct.chunk* %172, i64 0, i32\l... 1\l  %198 = load i64, i64* %197, align 8, !tbaa !6\l  %199 = and i64 %198, -2\l  %200 = sub i64 %199, %52\l  br label %201\l}"];
	Node0x27d3c80 -> Node0x27d3cd0;
	Node0x27d3cd0 [shape=record,label="{%201:\l201:                                              \l  %202 = phi i64 [ %194, %190 ], [ %200, %196 ]\l  %203 = phi i64 [ %192, %190 ], [ %198, %196 ]\l  %204 = lshr i64 %202, 5\l  %205 = add nsw i64 %204, -1\l  %206 = icmp ult i64 %205, 33\l  br i1 %206, label %207, label %209\l|{<s0>T|<s1>F}}"];
	Node0x27d3cd0:s0 -> Node0x27d3d20;
	Node0x27d3cd0:s1 -> Node0x27d3d70;
	Node0x27d3d20 [shape=record,label="{%207:\l207:                                              \l  %208 = trunc i64 %205 to i32\l  br label %226\l}"];
	Node0x27d3d20 -> Node0x27d3eb0;
	Node0x27d3d70 [shape=record,label="{%209:\l209:                                              \l  %210 = icmp ult i64 %205, 512\l  br i1 %210, label %211, label %217\l|{<s0>T|<s1>F}}"];
	Node0x27d3d70:s0 -> Node0x27d3dc0;
	Node0x27d3d70:s1 -> Node0x27d3e10;
	Node0x27d3dc0 [shape=record,label="{%211:\l211:                                              \l  %212 = lshr i64 %205, 3\l  %213 = add nsw i64 %212, -4\l  %214 = getelementptr inbounds [60 x i8], [60 x i8]* @bin_tab, i64 0, i64 %213\l  %215 = load i8, i8* %214, align 1, !tbaa !11\l  %216 = zext i8 %215 to i32\l  br label %226\l}"];
	Node0x27d3dc0 -> Node0x27d3eb0;
	Node0x27d3e10 [shape=record,label="{%217:\l217:                                              \l  %218 = icmp ugt i64 %205, 7168\l  br i1 %218, label %226, label %219\l|{<s0>T|<s1>F}}"];
	Node0x27d3e10:s0 -> Node0x27d3eb0;
	Node0x27d3e10:s1 -> Node0x27d3e60;
	Node0x27d3e60 [shape=record,label="{%219:\l219:                                              \l  %220 = lshr i64 %205, 7\l  %221 = add nsw i64 %220, -4\l  %222 = getelementptr inbounds [60 x i8], [60 x i8]* @bin_tab, i64 0, i64 %221\l  %223 = load i8, i8* %222, align 1, !tbaa !11\l  %224 = zext i8 %223 to i32\l  %225 = add nuw nsw i32 %224, 16\l  br label %226\l}"];
	Node0x27d3e60 -> Node0x27d3eb0;
	Node0x27d3eb0 [shape=record,label="{%226:\l226:                                              \l  %227 = phi i32 [ %208, %207 ], [ %216, %211 ], [ %225, %219 ], [ 63, %217 ]\l  %228 = icmp eq i32 %227, %183\l  br i1 %228, label %229, label %253\l|{<s0>T|<s1>F}}"];
	Node0x27d3eb0:s0 -> Node0x27d3f00;
	Node0x27d3eb0:s1 -> Node0x27d3f50;
	Node0x27d3f00 [shape=record,label="{%229:\l229:                                              \l  %230 = bitcast %struct.chunk* %172 to i8*\l  %231 = getelementptr inbounds %struct.chunk, %struct.chunk* %172, i64 0, i32\l... 1\l  %232 = and i64 %203, -2\l  %233 = getelementptr inbounds i8, i8* %230, i64 %232\l  %234 = getelementptr inbounds i8, i8* %230, i64 %52\l  %235 = getelementptr inbounds %struct.chunk, %struct.chunk* %172, i64 0, i32\l... 2\l  %236 = bitcast %struct.chunk** %235 to \<2 x i64\>*\l  %237 = load \<2 x i64\>, \<2 x i64\>* %236, align 8, !tbaa !21\l  %238 = extractelement \<2 x i64\> %237, i32 1\l  %239 = getelementptr inbounds i8, i8* %234, i64 16\l  %240 = bitcast i8* %239 to %struct.chunk**\l  %241 = bitcast i8* %239 to \<2 x i64\>*\l  store \<2 x i64\> %237, \<2 x i64\>* %241, align 8, !tbaa !21\l  %242 = inttoptr i64 %238 to %struct.chunk*\l  %243 = getelementptr inbounds %struct.chunk, %struct.chunk* %242, i64 0, i32\l... 2\l  %244 = bitcast %struct.chunk** %243 to i8**\l  store i8* %234, i8** %244, align 8, !tbaa !26\l  %245 = load %struct.chunk*, %struct.chunk** %240, align 8, !tbaa !26\l  %246 = getelementptr inbounds %struct.chunk, %struct.chunk* %245, i64 0, i32\l... 3\l  %247 = bitcast %struct.chunk** %246 to i8**\l  store i8* %234, i8** %247, align 8, !tbaa !27\l  %248 = or i64 %52, 1\l  %249 = bitcast i8* %234 to i64*\l  store i64 %248, i64* %249, align 8, !tbaa !10\l  %250 = getelementptr inbounds i8, i8* %234, i64 8\l  %251 = bitcast i8* %250 to i64*\l  store i64 %202, i64* %251, align 8, !tbaa !6\l  %252 = bitcast i8* %233 to i64*\l  store i64 %202, i64* %252, align 8, !tbaa !10\l  store i64 %248, i64* %231, align 8, !tbaa !6\l  br label %287\l}"];
	Node0x27d3f00 -> Node0x27d4090;
	Node0x27d3f50 [shape=record,label="{%253:\l253:                                              \l  %254 = getelementptr inbounds %struct.chunk, %struct.chunk* %172, i64 0, i32\l... 3\l  %255 = load %struct.chunk*, %struct.chunk** %254, align 8, !tbaa !27\l  %256 = getelementptr inbounds %struct.chunk, %struct.chunk* %172, i64 0, i32\l... 2\l  %257 = load %struct.chunk*, %struct.chunk** %256, align 8, !tbaa !26\l  %258 = icmp eq %struct.chunk* %255, %257\l  br i1 %258, label %261, label %259\l|{<s0>T|<s1>F}}"];
	Node0x27d3f50:s0 -> Node0x27d3ff0;
	Node0x27d3f50:s1 -> Node0x27d3fa0;
	Node0x27d3fa0 [shape=record,label="{%259:\l259:                                              \l  %260 = ptrtoint %struct.chunk* %257 to i64\l  br label %269\l}"];
	Node0x27d3fa0 -> Node0x27d4040;
	Node0x27d3ff0 [shape=record,label="{%261:\l261:                                              \l  %262 = and i64 %155, 4294967295\l  %263 = shl nuw i64 1, %262\l  %264 = xor i64 %263, -1\l  %265 = getelementptr inbounds %struct.anon, %struct.anon* @mal, i64 0, i32 0\l  tail call void asm sideeffect lock \l  %266 = bitcast %struct.chunk** %256 to i64*\l  %267 = load i64, i64* %266, align 8, !tbaa !26\l  %268 = load %struct.chunk*, %struct.chunk** %254, align 8, !tbaa !27\l  br label %269\l}"];
	Node0x27d3ff0 -> Node0x27d4040;
	Node0x27d4040 [shape=record,label="{%269:\l269:                                              \l  %270 = phi %struct.chunk* [ %268, %261 ], [ %255, %259 ]\l  %271 = phi i64 [ %267, %261 ], [ %260, %259 ]\l  %272 = ptrtoint %struct.chunk* %270 to i64\l  %273 = getelementptr inbounds %struct.chunk, %struct.chunk* %270, i64 0, i32\l... 2\l  %274 = bitcast %struct.chunk** %273 to i64*\l  store i64 %271, i64* %274, align 8, !tbaa !26\l  %275 = load %struct.chunk*, %struct.chunk** %256, align 8, !tbaa !26\l  %276 = getelementptr inbounds %struct.chunk, %struct.chunk* %275, i64 0, i32\l... 3\l  %277 = bitcast %struct.chunk** %276 to i64*\l  store i64 %272, i64* %277, align 8, !tbaa !27\l  %278 = getelementptr inbounds %struct.chunk, %struct.chunk* %172, i64 0, i32\l... 1\l  %279 = load i64, i64* %278, align 8, !tbaa !6\l  %280 = or i64 %279, 1\l  store i64 %280, i64* %278, align 8, !tbaa !6\l  %281 = bitcast %struct.chunk* %172 to i8*\l  %282 = and i64 %279, -2\l  %283 = getelementptr inbounds i8, i8* %281, i64 %282\l  %284 = bitcast i8* %283 to i64*\l  %285 = load i64, i64* %284, align 8, !tbaa !10\l  %286 = or i64 %285, 1\l  store i64 %286, i64* %284, align 8, !tbaa !10\l  br label %287\l}"];
	Node0x27d4040 -> Node0x27d4090;
	Node0x27d4090 [shape=record,label="{%287:\l287:                                              \l  %288 = load volatile i32, i32* %158, align 8, !tbaa !2\l  %289 = icmp eq i32 %288, 0\l  br i1 %289, label %318, label %290\l|{<s0>T|<s1>F}}"];
	Node0x27d4090:s0 -> Node0x27d4360;
	Node0x27d4090:s1 -> Node0x27d40e0;
	Node0x27d40e0 [shape=record,label="{%290:\l290:                                              \l  tail call void asm sideeffect mov $1, $0 \l  %291 = getelementptr inbounds %struct.anon, %struct.anon* @mal, i64 0, i32\l... 1, i64 %157, i32 0, i64 1\l  %292 = load volatile i32, i32* %291, align 4, !tbaa !2\l  %293 = icmp eq i32 %292, 0\l  br i1 %293, label %318, label %294\l|{<s0>T|<s1>F}}"];
	Node0x27d40e0:s0 -> Node0x27d4360;
	Node0x27d40e0:s1 -> Node0x27d4130;
	Node0x27d4130 [shape=record,label="{%294:\l294:                                              \l  %295 = ptrtoint i32* %158 to i64\l  %296 = tail call i64 asm sideeffect syscall,\l... =\{ax\},\{ax\},\{di\},\{si\},\{dx\},~\{rcx\},~\{r11\},~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}\l...(i64 202, i64 %295, i64 129, i64 1) #20, !srcloc !20\l  %297 = icmp eq i64 %296, -38\l  br i1 %297, label %298, label %318\l|{<s0>T|<s1>F}}"];
	Node0x27d4130:s0 -> Node0x27d4180;
	Node0x27d4130:s1 -> Node0x27d4360;
	Node0x27d4180 [shape=record,label="{%298:\l298:                                              \l  %299 = tail call i64 asm sideeffect syscall,\l... =\{ax\},\{ax\},\{di\},\{si\},\{dx\},~\{rcx\},~\{r11\},~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}\l...(i64 202, i64 %295, i64 1, i64 1) #20, !srcloc !20\l  br label %318\l}"];
	Node0x27d4180 -> Node0x27d4360;
	Node0x27d41d0 [shape=record,label="{%300:\l300:                                              \l  %301 = load volatile i32, i32* %158, align 8, !tbaa !2\l  %302 = icmp eq i32 %301, 0\l  br i1 %302, label %313, label %303\l|{<s0>T|<s1>F}}"];
	Node0x27d41d0:s0 -> Node0x27d4310;
	Node0x27d41d0:s1 -> Node0x27d4220;
	Node0x27d4220 [shape=record,label="{%303:\l303:                                              \l  tail call void asm sideeffect mov $1, $0 \l  %304 = getelementptr inbounds %struct.anon, %struct.anon* @mal, i64 0, i32\l... 1, i64 %157, i32 0, i64 1\l  %305 = load volatile i32, i32* %304, align 4, !tbaa !2\l  %306 = icmp eq i32 %305, 0\l  br i1 %306, label %313, label %307\l|{<s0>T|<s1>F}}"];
	Node0x27d4220:s0 -> Node0x27d4310;
	Node0x27d4220:s1 -> Node0x27d4270;
	Node0x27d4270 [shape=record,label="{%307:\l307:                                              \l  %308 = ptrtoint i32* %158 to i64\l  %309 = tail call i64 asm sideeffect syscall,\l... =\{ax\},\{ax\},\{di\},\{si\},\{dx\},~\{rcx\},~\{r11\},~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}\l...(i64 202, i64 %308, i64 129, i64 1) #20, !srcloc !20\l  %310 = icmp eq i64 %309, -38\l  br i1 %310, label %311, label %313\l|{<s0>T|<s1>F}}"];
	Node0x27d4270:s0 -> Node0x27d42c0;
	Node0x27d4270:s1 -> Node0x27d4310;
	Node0x27d42c0 [shape=record,label="{%311:\l311:                                              \l  %312 = tail call i64 asm sideeffect syscall,\l... =\{ax\},\{ax\},\{di\},\{si\},\{dx\},~\{rcx\},~\{r11\},~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}\l...(i64 202, i64 %308, i64 1, i64 1) #20, !srcloc !20\l  br label %313\l}"];
	Node0x27d42c0 -> Node0x27d4310;
	Node0x27d4310 [shape=record,label="{%313:\l313:                                              \l  %314 = getelementptr inbounds %struct.anon, %struct.anon* @mal, i64 0, i32 0\l  %315 = load volatile i64, i64* %314, align 8, !tbaa !12\l  %316 = and i64 %315, %57\l  %317 = icmp eq i64 %316, 0\l  br i1 %317, label %60, label %153\l|{<s0>T|<s1>F}}"];
	Node0x27d4310:s0 -> Node0x27d33c0;
	Node0x27d4310:s1 -> Node0x27d3910;
	Node0x27d4360 [shape=record,label="{%318:\l318:                                              \l  %319 = phi %struct.chunk* [ %172, %298 ], [ %172, %294 ], [ %172, %290 ], [\l... %172, %287 ], [ %114, %133 ], [ %142, %136 ]\l  %320 = getelementptr inbounds %struct.chunk, %struct.chunk* %319, i64 0, i32\l... 1\l  %321 = load i64, i64* %320, align 8, !tbaa !6\l  %322 = and i64 %321, -2\l  %323 = add i64 %322, -16\l  %324 = icmp ugt i64 %323, %52\l  br i1 %324, label %325, label %337\l|{<s0>T|<s1>F}}"];
	Node0x27d4360:s0 -> Node0x27d43b0;
	Node0x27d4360:s1 -> Node0x27d4400;
	Node0x27d43b0 [shape=record,label="{%325:\l325:                                              \l  %326 = bitcast %struct.chunk* %319 to i8*\l  %327 = getelementptr inbounds i8, i8* %326, i64 %322\l  %328 = getelementptr inbounds i8, i8* %326, i64 %52\l  %329 = bitcast i8* %328 to %struct.chunk*\l  %330 = or i64 %52, 1\l  %331 = bitcast i8* %328 to i64*\l  store i64 %330, i64* %331, align 8, !tbaa !10\l  %332 = sub i64 %322, %52\l  %333 = or i64 %332, 1\l  %334 = getelementptr inbounds i8, i8* %328, i64 8\l  %335 = bitcast i8* %334 to i64*\l  store i64 %333, i64* %335, align 8, !tbaa !6\l  %336 = bitcast i8* %327 to i64*\l  store i64 %333, i64* %336, align 8, !tbaa !10\l  store i64 %330, i64* %320, align 8, !tbaa !6\l  call fastcc void @__bin_chunk(%struct.chunk* %329) #19\l  br label %337\l}"];
	Node0x27d43b0 -> Node0x27d4400;
	Node0x27d4400 [shape=record,label="{%337:\l337:                                              \l  %338 = getelementptr inbounds %struct.chunk, %struct.chunk* %319, i64 0, i32\l... 2\l  %339 = bitcast %struct.chunk** %338 to i8*\l  br label %340\l}"];
	Node0x27d4400 -> Node0x27d4450;
	Node0x27d4450 [shape=record,label="{%340:\l340:                                              \l  %341 = phi i8* [ %339, %337 ], [ null, %7 ], [ %25, %19 ], [ null, %13 ], [\l... null, %132 ]\l  ret i8* %341\l}"];
}
