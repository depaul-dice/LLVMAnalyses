digraph "CFG for 'compressStream' function" {
	label="CFG for 'compressStream' function";

	Node0x1c7f7f0 [shape=record,label="{%2:\l  %3 = alloca %struct._IO_FILE*, align 8\l  %4 = alloca %struct._IO_FILE*, align 8\l  %5 = alloca i8*, align 8\l  %6 = alloca [5000 x i8], align 16\l  %7 = alloca i32, align 4\l  %8 = alloca i32, align 4\l  %9 = alloca i32, align 4\l  %10 = alloca i32, align 4\l  %11 = alloca i32, align 4\l  %12 = alloca i32, align 4\l  %13 = alloca i32, align 4\l  %14 = alloca i32, align 4\l  %15 = alloca [32 x i8], align 16\l  %16 = alloca [32 x i8], align 16\l  %17 = alloca %struct.UInt64, align 1\l  %18 = alloca %struct.UInt64, align 1\l  %19 = alloca double, align 8\l  %20 = alloca double, align 8\l  store %struct._IO_FILE* %0, %struct._IO_FILE** %3, align 8\l  store %struct._IO_FILE* %1, %struct._IO_FILE** %4, align 8\l  store i8* null, i8** %5, align 8\l  %21 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8\l  %22 = bitcast i32 (%struct._IO_FILE.69*)* @ferror to i32 (%struct._IO_FILE*)*\l  %23 = call i32 %22(%struct._IO_FILE* %21) #7\l  %24 = icmp ne i32 %23, 0\l  br i1 %24, label %25, label %26\l|{<s0>T|<s1>F}}"];
	Node0x1c7f7f0:s0 -> Node0x1c80970;
	Node0x1c7f7f0:s1 -> Node0x1c809c0;
	Node0x1c80970 [shape=record,label="{%25:\l25:                                               \l  br label %171\l}"];
	Node0x1c80970 -> Node0x1c81820;
	Node0x1c809c0 [shape=record,label="{%26:\l26:                                               \l  %27 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8\l  %28 = bitcast i32 (%struct._IO_FILE.69*)* @ferror to i32 (%struct._IO_FILE*)*\l  %29 = call i32 %28(%struct._IO_FILE* %27) #7\l  %30 = icmp ne i32 %29, 0\l  br i1 %30, label %31, label %32\l|{<s0>T|<s1>F}}"];
	Node0x1c809c0:s0 -> Node0x1c80a10;
	Node0x1c809c0:s1 -> Node0x1c80a60;
	Node0x1c80a10 [shape=record,label="{%31:\l31:                                               \l  br label %171\l}"];
	Node0x1c80a10 -> Node0x1c81820;
	Node0x1c80a60 [shape=record,label="{%32:\l32:                                               \l  %33 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8\l  %34 = load i32, i32* @blockSize100k, align 4\l  %35 = load i32, i32* @verbosity, align 4\l  %36 = load i32, i32* @workFactor, align 4\l  %37 = call fastcc i8* @BZ2_bzWriteOpen(i32* %12, %struct._IO_FILE* %33, i32\l... %34, i32 %35, i32 %36)\l  store i8* %37, i8** %5, align 8\l  %38 = load i32, i32* %12, align 4\l  %39 = icmp ne i32 %38, 0\l  br i1 %39, label %40, label %41\l|{<s0>T|<s1>F}}"];
	Node0x1c80a60:s0 -> Node0x1c80ab0;
	Node0x1c80a60:s1 -> Node0x1c80b00;
	Node0x1c80ab0 [shape=record,label="{%40:\l40:                                               \l  br label %165\l}"];
	Node0x1c80ab0 -> Node0x1c81550;
	Node0x1c80b00 [shape=record,label="{%41:\l41:                                               \l  %42 = load i32, i32* @verbosity, align 4\l  %43 = icmp sge i32 %42, 2\l  br i1 %43, label %44, label %49\l|{<s0>T|<s1>F}}"];
	Node0x1c80b00:s0 -> Node0x1c80b50;
	Node0x1c80b00:s1 -> Node0x1c80ba0;
	Node0x1c80b50 [shape=record,label="{%44:\l44:                                               \l  %45 = bitcast %struct._IO_FILE.58** @stderr to %struct._IO_FILE**\l  %46 = load %struct._IO_FILE*, %struct._IO_FILE** %45, align 8\l  %47 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.73, i64 0, i64 0\l  %48 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE* %46,\l... i8* %47)\l  br label %49\l}"];
	Node0x1c80b50 -> Node0x1c80ba0;
	Node0x1c80ba0 [shape=record,label="{%49:\l49:                                               \l  br label %50\l}"];
	Node0x1c80ba0 -> Node0x1c80bf0;
	Node0x1c80bf0 [shape=record,label="{%50:\l50:                                               \l  %51 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8\l  %52 = call fastcc zeroext i8 @myfeof(%struct._IO_FILE* %51)\l  %53 = icmp ne i8 %52, 0\l  br i1 %53, label %54, label %55\l|{<s0>T|<s1>F}}"];
	Node0x1c80bf0:s0 -> Node0x1c80c40;
	Node0x1c80bf0:s1 -> Node0x1c80c90;
	Node0x1c80c40 [shape=record,label="{%54:\l54:                                               \l  br label %78\l}"];
	Node0x1c80c40 -> Node0x1c80ec0;
	Node0x1c80c90 [shape=record,label="{%55:\l55:                                               \l  %56 = getelementptr inbounds [5000 x i8], [5000 x i8]* %6, i64 0, i64 0\l  %57 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8\l  %58 = bitcast i64 (i8*, i64, i64, %struct._IO_FILE.67*)* @fread to i64 (i8*,\l... i64, i64, %struct._IO_FILE*)*\l  %59 = call i64 %58(i8* %56, i64 1, i64 5000, %struct._IO_FILE* %57)\l  %60 = trunc i64 %59 to i32\l  store i32 %60, i32* %7, align 4\l  %61 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8\l  %62 = bitcast i32 (%struct._IO_FILE.69*)* @ferror to i32 (%struct._IO_FILE*)*\l  %63 = call i32 %62(%struct._IO_FILE* %61) #7\l  %64 = icmp ne i32 %63, 0\l  br i1 %64, label %65, label %66\l|{<s0>T|<s1>F}}"];
	Node0x1c80c90:s0 -> Node0x1c80ce0;
	Node0x1c80c90:s1 -> Node0x1c80d30;
	Node0x1c80ce0 [shape=record,label="{%65:\l65:                                               \l  br label %171\l}"];
	Node0x1c80ce0 -> Node0x1c81820;
	Node0x1c80d30 [shape=record,label="{%66:\l66:                                               \l  %67 = load i32, i32* %7, align 4\l  %68 = icmp sgt i32 %67, 0\l  br i1 %68, label %69, label %73\l|{<s0>T|<s1>F}}"];
	Node0x1c80d30:s0 -> Node0x1c80d80;
	Node0x1c80d30:s1 -> Node0x1c80dd0;
	Node0x1c80d80 [shape=record,label="{%69:\l69:                                               \l  %70 = load i8*, i8** %5, align 8\l  %71 = getelementptr inbounds [5000 x i8], [5000 x i8]* %6, i64 0, i64 0\l  %72 = load i32, i32* %7, align 4\l  call fastcc void @BZ2_bzWrite(i32* %12, i8* %70, i8* %71, i32 %72)\l  br label %73\l}"];
	Node0x1c80d80 -> Node0x1c80dd0;
	Node0x1c80dd0 [shape=record,label="{%73:\l73:                                               \l  %74 = load i32, i32* %12, align 4\l  %75 = icmp ne i32 %74, 0\l  br i1 %75, label %76, label %77\l|{<s0>T|<s1>F}}"];
	Node0x1c80dd0:s0 -> Node0x1c80e20;
	Node0x1c80dd0:s1 -> Node0x1c80e70;
	Node0x1c80e20 [shape=record,label="{%76:\l76:                                               \l  br label %165\l}"];
	Node0x1c80e20 -> Node0x1c81550;
	Node0x1c80e70 [shape=record,label="{%77:\l77:                                               \l  br label %50\l}"];
	Node0x1c80e70 -> Node0x1c80bf0;
	Node0x1c80ec0 [shape=record,label="{%78:\l78:                                               \l  %79 = load i8*, i8** %5, align 8\l  call fastcc void @BZ2_bzWriteClose64(i32* %12, i8* %79, i32 0, i32* %8, i32*\l... %9, i32* %10, i32* %11)\l  %80 = load i32, i32* %12, align 4\l  %81 = icmp ne i32 %80, 0\l  br i1 %81, label %82, label %83\l|{<s0>T|<s1>F}}"];
	Node0x1c80ec0:s0 -> Node0x1c80f10;
	Node0x1c80ec0:s1 -> Node0x1c80f60;
	Node0x1c80f10 [shape=record,label="{%82:\l82:                                               \l  br label %165\l}"];
	Node0x1c80f10 -> Node0x1c81550;
	Node0x1c80f60 [shape=record,label="{%83:\l83:                                               \l  %84 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8\l  %85 = bitcast i32 (%struct._IO_FILE.69*)* @ferror to i32 (%struct._IO_FILE*)*\l  %86 = call i32 %85(%struct._IO_FILE* %84) #7\l  %87 = icmp ne i32 %86, 0\l  br i1 %87, label %88, label %89\l|{<s0>T|<s1>F}}"];
	Node0x1c80f60:s0 -> Node0x1c80fb0;
	Node0x1c80f60:s1 -> Node0x1c81000;
	Node0x1c80fb0 [shape=record,label="{%88:\l88:                                               \l  br label %171\l}"];
	Node0x1c80fb0 -> Node0x1c81820;
	Node0x1c81000 [shape=record,label="{%89:\l89:                                               \l  %90 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8\l  %91 = bitcast i32 (%struct._IO_FILE.67*)* @fflush to i32 (%struct._IO_FILE*)*\l  %92 = call i32 %91(%struct._IO_FILE* %90)\l  store i32 %92, i32* %14, align 4\l  %93 = load i32, i32* %14, align 4\l  %94 = icmp eq i32 %93, -1\l  br i1 %94, label %95, label %96\l|{<s0>T|<s1>F}}"];
	Node0x1c81000:s0 -> Node0x1c81050;
	Node0x1c81000:s1 -> Node0x1c810a0;
	Node0x1c81050 [shape=record,label="{%95:\l95:                                               \l  br label %171\l}"];
	Node0x1c81050 -> Node0x1c81820;
	Node0x1c810a0 [shape=record,label="{%96:\l96:                                               \l  %97 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8\l  %98 = bitcast %struct._IO_FILE.58** @stdout to %struct._IO_FILE**\l  %99 = load %struct._IO_FILE*, %struct._IO_FILE** %98, align 8\l  %100 = icmp ne %struct._IO_FILE* %97, %99\l  br i1 %100, label %101, label %109\l|{<s0>T|<s1>F}}"];
	Node0x1c810a0:s0 -> Node0x1c810f0;
	Node0x1c810a0:s1 -> Node0x1c811e0;
	Node0x1c810f0 [shape=record,label="{%101:\l101:                                              \l  %102 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8\l  %103 = bitcast i32 (%struct._IO_FILE.67*)* @fclose to i32\l... (%struct._IO_FILE*)*\l  %104 = call i32 %103(%struct._IO_FILE* %102)\l  store i32 %104, i32* %14, align 4\l  store %struct._IO_FILE* null, %struct._IO_FILE** @outputHandleJustInCase,\l... align 8\l  %105 = load i32, i32* %14, align 4\l  %106 = icmp eq i32 %105, -1\l  br i1 %106, label %107, label %108\l|{<s0>T|<s1>F}}"];
	Node0x1c810f0:s0 -> Node0x1c81140;
	Node0x1c810f0:s1 -> Node0x1c81190;
	Node0x1c81140 [shape=record,label="{%107:\l107:                                              \l  br label %171\l}"];
	Node0x1c81140 -> Node0x1c81820;
	Node0x1c81190 [shape=record,label="{%108:\l108:                                              \l  br label %109\l}"];
	Node0x1c81190 -> Node0x1c811e0;
	Node0x1c811e0 [shape=record,label="{%109:\l109:                                              \l  store %struct._IO_FILE* null, %struct._IO_FILE** @outputHandleJustInCase,\l... align 8\l  %110 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8\l  %111 = bitcast i32 (%struct._IO_FILE.69*)* @ferror to i32\l... (%struct._IO_FILE*)*\l  %112 = call i32 %111(%struct._IO_FILE* %110) #7\l  %113 = icmp ne i32 %112, 0\l  br i1 %113, label %114, label %115\l|{<s0>T|<s1>F}}"];
	Node0x1c811e0:s0 -> Node0x1c81230;
	Node0x1c811e0:s1 -> Node0x1c81280;
	Node0x1c81230 [shape=record,label="{%114:\l114:                                              \l  br label %171\l}"];
	Node0x1c81230 -> Node0x1c81820;
	Node0x1c81280 [shape=record,label="{%115:\l115:                                              \l  %116 = load %struct._IO_FILE*, %struct._IO_FILE** %3, align 8\l  %117 = bitcast i32 (%struct._IO_FILE.67*)* @fclose to i32\l... (%struct._IO_FILE*)*\l  %118 = call i32 %117(%struct._IO_FILE* %116)\l  store i32 %118, i32* %14, align 4\l  %119 = load i32, i32* %14, align 4\l  %120 = icmp eq i32 %119, -1\l  br i1 %120, label %121, label %122\l|{<s0>T|<s1>F}}"];
	Node0x1c81280:s0 -> Node0x1c812d0;
	Node0x1c81280:s1 -> Node0x1c81320;
	Node0x1c812d0 [shape=record,label="{%121:\l121:                                              \l  br label %171\l}"];
	Node0x1c812d0 -> Node0x1c81820;
	Node0x1c81320 [shape=record,label="{%122:\l122:                                              \l  %123 = load i32, i32* @verbosity, align 4\l  %124 = icmp sge i32 %123, 1\l  br i1 %124, label %125, label %164\l|{<s0>T|<s1>F}}"];
	Node0x1c81320:s0 -> Node0x1c81370;
	Node0x1c81320:s1 -> Node0x1c81500;
	Node0x1c81370 [shape=record,label="{%125:\l125:                                              \l  %126 = load i32, i32* %8, align 4\l  %127 = icmp eq i32 %126, 0\l  br i1 %127, label %128, label %136\l|{<s0>T|<s1>F}}"];
	Node0x1c81370:s0 -> Node0x1c813c0;
	Node0x1c81370:s1 -> Node0x1c81460;
	Node0x1c813c0 [shape=record,label="{%128:\l128:                                              \l  %129 = load i32, i32* %9, align 4\l  %130 = icmp eq i32 %129, 0\l  br i1 %130, label %131, label %136\l|{<s0>T|<s1>F}}"];
	Node0x1c813c0:s0 -> Node0x1c81410;
	Node0x1c813c0:s1 -> Node0x1c81460;
	Node0x1c81410 [shape=record,label="{%131:\l131:                                              \l  %132 = bitcast %struct._IO_FILE.58** @stderr to %struct._IO_FILE**\l  %133 = load %struct._IO_FILE*, %struct._IO_FILE** %132, align 8\l  %134 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.74, i64 0, i64 0\l  %135 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE*\l... %133, i8* %134)\l  br label %163\l}"];
	Node0x1c81410 -> Node0x1c814b0;
	Node0x1c81460 [shape=record,label="{%136:\l136:                                              \l  %137 = load i32, i32* %8, align 4\l  %138 = load i32, i32* %9, align 4\l  call fastcc void @uInt64_from_UInt32s(%struct.UInt64* %17, i32 %137, i32\l... %138)\l  %139 = load i32, i32* %10, align 4\l  %140 = load i32, i32* %11, align 4\l  call fastcc void @uInt64_from_UInt32s(%struct.UInt64* %18, i32 %139, i32\l... %140)\l  %141 = call fastcc double @uInt64_to_double(%struct.UInt64* %17)\l  store double %141, double* %19, align 8\l  %142 = call fastcc double @uInt64_to_double(%struct.UInt64* %18)\l  store double %142, double* %20, align 8\l  %143 = getelementptr inbounds [32 x i8], [32 x i8]* %15, i64 0, i64 0\l  call fastcc void @uInt64_toAscii(i8* %143, %struct.UInt64* %17)\l  %144 = getelementptr inbounds [32 x i8], [32 x i8]* %16, i64 0, i64 0\l  call fastcc void @uInt64_toAscii(i8* %144, %struct.UInt64* %18)\l  %145 = bitcast %struct._IO_FILE.58** @stderr to %struct._IO_FILE**\l  %146 = load %struct._IO_FILE*, %struct._IO_FILE** %145, align 8\l  %147 = load double, double* %19, align 8\l  %148 = load double, double* %20, align 8\l  %149 = fdiv double %147, %148\l  %150 = load double, double* %20, align 8\l  %151 = fmul double 8.000000e+00, %150\l  %152 = load double, double* %19, align 8\l  %153 = fdiv double %151, %152\l  %154 = load double, double* %20, align 8\l  %155 = load double, double* %19, align 8\l  %156 = fdiv double %154, %155\l  %157 = fsub double 1.000000e+00, %156\l  %158 = fmul double 1.000000e+02, %157\l  %159 = getelementptr inbounds [32 x i8], [32 x i8]* %15, i64 0, i64 0\l  %160 = getelementptr inbounds [32 x i8], [32 x i8]* %16, i64 0, i64 0\l  %161 = getelementptr inbounds [57 x i8], [57 x i8]* @.str.75, i64 0, i64 0\l  %162 = call i32 (%struct._IO_FILE*, i8*, ...) @fprintf(%struct._IO_FILE*\l... %146, i8* %161, double %149, double %153, double %158, i8* %159, i8* %160)\l  br label %163\l}"];
	Node0x1c81460 -> Node0x1c814b0;
	Node0x1c814b0 [shape=record,label="{%163:\l163:                                              \l  br label %164\l}"];
	Node0x1c814b0 -> Node0x1c81500;
	Node0x1c81500 [shape=record,label="{%164:\l164:                                              \l  ret void\l}"];
	Node0x1c81550 [shape=record,label="{%165:\l165:                                              \l  %166 = load i8*, i8** %5, align 8\l  call fastcc void @BZ2_bzWriteClose64(i32* %13, i8* %166, i32 1, i32* %8,\l... i32* %9, i32* %10, i32* %11)\l  %167 = load i32, i32* %12, align 4\l  br label %NodeBlock5\l}"];
	Node0x1c81550 -> Node0x1c815a0;
	Node0x1c815a0 [shape=record,label="{NodeBlock5:                                       \l  %Pivot6 = icmp slt i32 %167, -6\l  br i1 %Pivot6, label %LeafBlock, label %NodeBlock\l|{<s0>T|<s1>F}}"];
	Node0x1c815a0:s0 -> Node0x1c816e0;
	Node0x1c815a0:s1 -> Node0x1c815f0;
	Node0x1c815f0 [shape=record,label="{NodeBlock:                                        \l  %Pivot = icmp slt i32 %167, -3\l  br i1 %Pivot, label %LeafBlock1, label %LeafBlock3\l|{<s0>T|<s1>F}}"];
	Node0x1c815f0:s0 -> Node0x1c81690;
	Node0x1c815f0:s1 -> Node0x1c81640;
	Node0x1c81640 [shape=record,label="{LeafBlock3:                                       \l  %SwitchLeaf4 = icmp eq i32 %167, -3\l  br i1 %SwitchLeaf4, label %169, label %NewDefault\l|{<s0>T|<s1>F}}"];
	Node0x1c81640:s0 -> Node0x1c81780;
	Node0x1c81640:s1 -> Node0x1c81870;
	Node0x1c81690 [shape=record,label="{LeafBlock1:                                       \l  %SwitchLeaf2 = icmp eq i32 %167, -6\l  br i1 %SwitchLeaf2, label %170, label %NewDefault\l|{<s0>T|<s1>F}}"];
	Node0x1c81690:s0 -> Node0x1c817d0;
	Node0x1c81690:s1 -> Node0x1c81870;
	Node0x1c816e0 [shape=record,label="{LeafBlock:                                        \l  %SwitchLeaf = icmp eq i32 %167, -9\l  br i1 %SwitchLeaf, label %168, label %NewDefault\l|{<s0>T|<s1>F}}"];
	Node0x1c816e0:s0 -> Node0x1c81730;
	Node0x1c816e0:s1 -> Node0x1c81870;
	Node0x1c81730 [shape=record,label="{%168:\l168:                                              \l  call fastcc void @configError() #19\l  unreachable\l}"];
	Node0x1c81780 [shape=record,label="{%169:\l169:                                              \l  call fastcc void @outOfMemory() #19\l  unreachable\l}"];
	Node0x1c817d0 [shape=record,label="{%170:\l170:                                              \l  br label %171\l}"];
	Node0x1c817d0 -> Node0x1c81820;
	Node0x1c81820 [shape=record,label="{%171:\l171:                                              \l  call fastcc void @ioError() #19\l  unreachable\l}"];
	Node0x1c81870 [shape=record,label="{NewDefault:                                       \l  br label %172\l}"];
	Node0x1c81870 -> Node0x1c818c0;
	Node0x1c818c0 [shape=record,label="{%172:\l172:                                              \l  %173 = getelementptr inbounds [26 x i8], [26 x i8]* @.str.76, i64 0, i64 0\l  call fastcc void @panic(i8* %173) #19\l  unreachable\l}"];
}
