digraph "CFG for 'BZ2_bzDecompressInit' function" {
	label="CFG for 'BZ2_bzDecompressInit' function";

	Node0x1cc1780 [shape=record,label="{%3:\l  %4 = alloca i32, align 4\l  %5 = alloca %struct.bz_stream*, align 8\l  %6 = alloca i32, align 4\l  %7 = alloca i32, align 4\l  %8 = alloca %struct.DState*, align 8\l  store %struct.bz_stream* %0, %struct.bz_stream** %5, align 8\l  store i32 %1, i32* %6, align 4\l  store i32 %2, i32* %7, align 4\l  %9 = call fastcc i32 @bz_config_ok()\l  %10 = icmp ne i32 %9, 0\l  br i1 %10, label %12, label %11\l|{<s0>T|<s1>F}}"];
	Node0x1cc1780:s0 -> Node0x1cc5080;
	Node0x1cc1780:s1 -> Node0x1cc5030;
	Node0x1cc5030 [shape=record,label="{%11:\l11:                                               \l  store i32 -9, i32* %4, align 4\l  br label %98\l}"];
	Node0x1cc5030 -> Node0x1cc5620;
	Node0x1cc5080 [shape=record,label="{%12:\l12:                                               \l  %13 = load %struct.bz_stream*, %struct.bz_stream** %5, align 8\l  %14 = icmp eq %struct.bz_stream* %13, null\l  br i1 %14, label %15, label %16\l|{<s0>T|<s1>F}}"];
	Node0x1cc5080:s0 -> Node0x1cc50d0;
	Node0x1cc5080:s1 -> Node0x1cc5120;
	Node0x1cc50d0 [shape=record,label="{%15:\l15:                                               \l  store i32 -2, i32* %4, align 4\l  br label %98\l}"];
	Node0x1cc50d0 -> Node0x1cc5620;
	Node0x1cc5120 [shape=record,label="{%16:\l16:                                               \l  %17 = load i32, i32* %7, align 4\l  %18 = icmp ne i32 %17, 0\l  br i1 %18, label %19, label %23\l|{<s0>T|<s1>F}}"];
	Node0x1cc5120:s0 -> Node0x1cc5170;
	Node0x1cc5120:s1 -> Node0x1cc5210;
	Node0x1cc5170 [shape=record,label="{%19:\l19:                                               \l  %20 = load i32, i32* %7, align 4\l  %21 = icmp ne i32 %20, 1\l  br i1 %21, label %22, label %23\l|{<s0>T|<s1>F}}"];
	Node0x1cc5170:s0 -> Node0x1cc51c0;
	Node0x1cc5170:s1 -> Node0x1cc5210;
	Node0x1cc51c0 [shape=record,label="{%22:\l22:                                               \l  store i32 -2, i32* %4, align 4\l  br label %98\l}"];
	Node0x1cc51c0 -> Node0x1cc5620;
	Node0x1cc5210 [shape=record,label="{%23:\l23:                                               \l  %24 = load i32, i32* %6, align 4\l  %25 = icmp slt i32 %24, 0\l  br i1 %25, label %29, label %26\l|{<s0>T|<s1>F}}"];
	Node0x1cc5210:s0 -> Node0x1cc52b0;
	Node0x1cc5210:s1 -> Node0x1cc5260;
	Node0x1cc5260 [shape=record,label="{%26:\l26:                                               \l  %27 = load i32, i32* %6, align 4\l  %28 = icmp sgt i32 %27, 4\l  br i1 %28, label %29, label %30\l|{<s0>T|<s1>F}}"];
	Node0x1cc5260:s0 -> Node0x1cc52b0;
	Node0x1cc5260:s1 -> Node0x1cc5300;
	Node0x1cc52b0 [shape=record,label="{%29:\l29:                                               \l  store i32 -2, i32* %4, align 4\l  br label %98\l}"];
	Node0x1cc52b0 -> Node0x1cc5620;
	Node0x1cc5300 [shape=record,label="{%30:\l30:                                               \l  %31 = load %struct.bz_stream*, %struct.bz_stream** %5, align 8\l  %32 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %31, i32\l... 0, i32 9\l  %33 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %32, align 8\l  %34 = icmp eq i8* (i8*, i32, i32)* %33, null\l  br i1 %34, label %35, label %38\l|{<s0>T|<s1>F}}"];
	Node0x1cc5300:s0 -> Node0x1cc5350;
	Node0x1cc5300:s1 -> Node0x1cc53a0;
	Node0x1cc5350 [shape=record,label="{%35:\l35:                                               \l  %36 = load %struct.bz_stream*, %struct.bz_stream** %5, align 8\l  %37 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %36, i32\l... 0, i32 9\l  store i8* (i8*, i32, i32)* @default_bzalloc, i8* (i8*, i32, i32)** %37,\l... align 8\l  br label %38\l}"];
	Node0x1cc5350 -> Node0x1cc53a0;
	Node0x1cc53a0 [shape=record,label="{%38:\l38:                                               \l  %39 = load %struct.bz_stream*, %struct.bz_stream** %5, align 8\l  %40 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %39, i32\l... 0, i32 10\l  %41 = load void (i8*, i8*)*, void (i8*, i8*)** %40, align 8\l  %42 = icmp eq void (i8*, i8*)* %41, null\l  br i1 %42, label %43, label %46\l|{<s0>T|<s1>F}}"];
	Node0x1cc53a0:s0 -> Node0x1cc53f0;
	Node0x1cc53a0:s1 -> Node0x1cc5440;
	Node0x1cc53f0 [shape=record,label="{%43:\l43:                                               \l  %44 = load %struct.bz_stream*, %struct.bz_stream** %5, align 8\l  %45 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %44, i32\l... 0, i32 10\l  store void (i8*, i8*)* @default_bzfree, void (i8*, i8*)** %45, align 8\l  br label %46\l}"];
	Node0x1cc53f0 -> Node0x1cc5440;
	Node0x1cc5440 [shape=record,label="{%46:\l46:                                               \l  %47 = load %struct.bz_stream*, %struct.bz_stream** %5, align 8\l  %48 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %47, i32\l... 0, i32 9\l  %49 = load i8* (i8*, i32, i32)*, i8* (i8*, i32, i32)** %48, align 8\l  %50 = load %struct.bz_stream*, %struct.bz_stream** %5, align 8\l  %51 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %50, i32\l... 0, i32 11\l  %52 = load i8*, i8** %51, align 8\l  %53 = icmp eq i8* (i8*, i32, i32)* %49, @default_bzalloc\l  br i1 %53, label %if.true.direct_targ, label %if.false.orig_indirect\l|{<s0>T|<s1>F}}"];
	Node0x1cc5440:s0 -> Node0x1cc5490;
	Node0x1cc5490 [shape=record,label="{if.true.direct_targ:                              \l  %54 = call i8* @default_bzalloc(i8* %52, i32 64144, i32 1)\l  br label %if.end.icp\l}"];
	Node0x1cc5490 -> Node0x1cc5530;
	Node0x1cc5530 [shape=record,label="{if.end.icp:                                       \l  %55 = bitcast i8* %54 to %struct.DState*\l  store %struct.DState* %55, %struct.DState** %8, align 8\l  %56 = load %struct.DState*, %struct.DState** %8, align 8\l  %57 = icmp eq %struct.DState* %56, null\l  br i1 %57, label %58, label %59\l|{<s0>T|<s1>F}}"];
	Node0x1cc5530:s0 -> Node0x1cc5580;
	Node0x1cc5530:s1 -> Node0x1cc55d0;
	Node0x1cc5580 [shape=record,label="{%58:\l58:                                               \l  store i32 -3, i32* %4, align 4\l  br label %98\l}"];
	Node0x1cc5580 -> Node0x1cc5620;
	Node0x1cc55d0 [shape=record,label="{%59:\l59:                                               \l  %60 = load %struct.bz_stream*, %struct.bz_stream** %5, align 8\l  %61 = load %struct.DState*, %struct.DState** %8, align 8\l  %62 = getelementptr inbounds %struct.DState, %struct.DState* %61, i32 0, i32\l... 0\l  store %struct.bz_stream* %60, %struct.bz_stream** %62, align 8\l  %63 = load %struct.DState*, %struct.DState** %8, align 8\l  %64 = bitcast %struct.DState* %63 to i8*\l  %65 = load %struct.bz_stream*, %struct.bz_stream** %5, align 8\l  %66 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %65, i32\l... 0, i32 8\l  store i8* %64, i8** %66, align 8\l  %67 = load %struct.DState*, %struct.DState** %8, align 8\l  %68 = getelementptr inbounds %struct.DState, %struct.DState* %67, i32 0, i32\l... 1\l  store i32 10, i32* %68, align 8\l  %69 = load %struct.DState*, %struct.DState** %8, align 8\l  %70 = getelementptr inbounds %struct.DState, %struct.DState* %69, i32 0, i32\l... 8\l  store i32 0, i32* %70, align 4\l  %71 = load %struct.DState*, %struct.DState** %8, align 8\l  %72 = getelementptr inbounds %struct.DState, %struct.DState* %71, i32 0, i32\l... 7\l  store i32 0, i32* %72, align 8\l  %73 = load %struct.DState*, %struct.DState** %8, align 8\l  %74 = getelementptr inbounds %struct.DState, %struct.DState* %73, i32 0, i32\l... 26\l  store i32 0, i32* %74, align 4\l  %75 = load %struct.bz_stream*, %struct.bz_stream** %5, align 8\l  %76 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %75, i32\l... 0, i32 2\l  store i32 0, i32* %76, align 4\l  %77 = load %struct.bz_stream*, %struct.bz_stream** %5, align 8\l  %78 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %77, i32\l... 0, i32 3\l  store i32 0, i32* %78, align 8\l  %79 = load %struct.bz_stream*, %struct.bz_stream** %5, align 8\l  %80 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %79, i32\l... 0, i32 6\l  store i32 0, i32* %80, align 4\l  %81 = load %struct.bz_stream*, %struct.bz_stream** %5, align 8\l  %82 = getelementptr inbounds %struct.bz_stream, %struct.bz_stream* %81, i32\l... 0, i32 7\l  store i32 0, i32* %82, align 8\l  %83 = load i32, i32* %7, align 4\l  %84 = trunc i32 %83 to i8\l  %85 = load %struct.DState*, %struct.DState** %8, align 8\l  %86 = getelementptr inbounds %struct.DState, %struct.DState* %85, i32 0, i32\l... 10\l  store i8 %84, i8* %86, align 4\l  %87 = load %struct.DState*, %struct.DState** %8, align 8\l  %88 = getelementptr inbounds %struct.DState, %struct.DState* %87, i32 0, i32\l... 22\l  store i8* null, i8** %88, align 8\l  %89 = load %struct.DState*, %struct.DState** %8, align 8\l  %90 = getelementptr inbounds %struct.DState, %struct.DState* %89, i32 0, i32\l... 21\l  store i16* null, i16** %90, align 8\l  %91 = load %struct.DState*, %struct.DState** %8, align 8\l  %92 = getelementptr inbounds %struct.DState, %struct.DState* %91, i32 0, i32\l... 20\l  store i32* null, i32** %92, align 8\l  %93 = load %struct.DState*, %struct.DState** %8, align 8\l  %94 = getelementptr inbounds %struct.DState, %struct.DState* %93, i32 0, i32\l... 11\l  store i32 0, i32* %94, align 8\l  %95 = load i32, i32* %6, align 4\l  %96 = load %struct.DState*, %struct.DState** %8, align 8\l  %97 = getelementptr inbounds %struct.DState, %struct.DState* %96, i32 0, i32\l... 12\l  store i32 %95, i32* %97, align 4\l  store i32 0, i32* %4, align 4\l  br label %98\l}"];
	Node0x1cc55d0 -> Node0x1cc5620;
	Node0x1cc5620 [shape=record,label="{%98:\l98:                                               \l  %99 = load i32, i32* %4, align 4\l  ret i32 %99\l}"];
}
