digraph "CFG for '__fseeko_unlocked' function" {
	label="CFG for '__fseeko_unlocked' function";

	Node0x1fdf510 [shape=record,label="{%3:\l  %4 = icmp eq i32 %2, 1\l  br i1 %4, label %5, label %16\l|{<s0>T|<s1>F}}"];
	Node0x1fdf510:s0 -> Node0x1fdf650;
	Node0x1fdf510:s1 -> Node0x1fdf6f0;
	Node0x1fdf650 [shape=record,label="{%5:\l5:                                                \l  %6 = getelementptr inbounds %struct._IO_FILE.67, %struct._IO_FILE.67* %0,\l... i64 0, i32 2\l  %7 = load i8*, i8** %6, align 8, !tbaa !2\l  %8 = icmp eq i8* %7, null\l  br i1 %8, label %16, label %9\l|{<s0>T|<s1>F}}"];
	Node0x1fdf650:s0 -> Node0x1fdf6f0;
	Node0x1fdf650:s1 -> Node0x1fdf6a0;
	Node0x1fdf6a0 [shape=record,label="{%9:\l9:                                                \l  %10 = getelementptr inbounds %struct._IO_FILE.67, %struct._IO_FILE.67* %0,\l... i64 0, i32 1\l  %11 = bitcast i8** %10 to i64*\l  %12 = load i64, i64* %11, align 8, !tbaa !9\l  %13 = ptrtoint i8* %7 to i64\l  %14 = sub i64 %1, %13\l  %15 = add i64 %14, %12\l  br label %16\l}"];
	Node0x1fdf6a0 -> Node0x1fdf6f0;
	Node0x1fdf6f0 [shape=record,label="{%16:\l16:                                               \l  %17 = phi i64 [ %15, %9 ], [ %1, %5 ], [ %1, %3 ]\l  %18 = getelementptr inbounds %struct._IO_FILE.67, %struct._IO_FILE.67* %0,\l... i64 0, i32 5\l  %19 = load i8*, i8** %18, align 8, !tbaa !10\l  %20 = getelementptr inbounds %struct._IO_FILE.67, %struct._IO_FILE.67* %0,\l... i64 0, i32 7\l  %21 = load i8*, i8** %20, align 8, !tbaa !11\l  %22 = icmp eq i8* %19, %21\l  br i1 %22, label %if.true.direct_targ, label %23\l|{<s0>T|<s1>F}}"];
	Node0x1fdf6f0:s0 -> Node0x1fdf920;
	Node0x1fdf6f0:s1 -> Node0x1fdf740;
	Node0x1fdf740 [shape=record,label="{%23:\l23:                                               \l  %24 = getelementptr inbounds %struct._IO_FILE.67, %struct._IO_FILE.67* %0,\l... i64 0, i32 9\l  %25 = load i64 (%struct._IO_FILE.67*, i8*, i64)*, i64 (%struct._IO_FILE.67*,\l... i8*, i64)** %24, align 8, !tbaa !12\l  %26 = bitcast i64 (%struct._IO_FILE.64*, i8*, i64)* @__stdout_write to i64\l... (%struct._IO_FILE.67*, i8*, i64)*\l  %27 = icmp eq i64 (%struct._IO_FILE.67*, i8*, i64)* %25, %26\l  br i1 %27, label %if.true.direct_targ1, label %if.false.orig_indirect2\l|{<s0>T|<s1>F}}"];
	Node0x1fdf740:s0 -> Node0x1fdf790;
	Node0x1fdf740:s1 -> Node0x1fdf7e0;
	Node0x1fdf790 [shape=record,label="{if.true.direct_targ1:                             \l  %28 = bitcast %struct._IO_FILE.67* %0 to %struct._IO_FILE.64*\l  %29 = tail call i64 @__stdout_write(%struct._IO_FILE.64* nonnull %28, i8*\l... null, i64 0) #19\l  br label %if.end.icp3\l}"];
	Node0x1fdf790 -> Node0x1fdf8d0;
	Node0x1fdf7e0 [shape=record,label="{if.false.orig_indirect2:                          \l  %30 = bitcast i64 (%struct._IO_FILE.60*, i8*, i64)* @__stdio_read to i64\l... (%struct._IO_FILE.67*, i8*, i64)*\l  %31 = icmp eq i64 (%struct._IO_FILE.67*, i8*, i64)* %25, %30\l  br i1 %31, label %if.true.direct_targ4, label %if.false.orig_indirect5\l|{<s0>T|<s1>F}}"];
	Node0x1fdf7e0:s0 -> Node0x1fdf830;
	Node0x1fdf7e0:s1 -> Node0x1fdf880;
	Node0x1fdf830 [shape=record,label="{if.true.direct_targ4:                             \l  %32 = bitcast %struct._IO_FILE.67* %0 to %struct._IO_FILE.60*\l  %33 = tail call i64 @__stdio_read(%struct._IO_FILE.60* nonnull %32, i8*\l... null, i64 0) #19\l  br label %if.end.icp3\l}"];
	Node0x1fdf830 -> Node0x1fdf8d0;
	Node0x1fdf880 [shape=record,label="{if.false.orig_indirect5:                          \l  %34 = bitcast i64 (%struct._IO_FILE.64*, i8*, i64)* @__stdio_write to i64\l... (%struct._IO_FILE.67*, i8*, i64)*\l  %35 = icmp eq i64 (%struct._IO_FILE.67*, i8*, i64)* %25, %34\l  call void @llvm.assume(i1 %35)\l  %36 = bitcast %struct._IO_FILE.67* %0 to %struct._IO_FILE.64*\l  %37 = tail call i64 @__stdio_write(%struct._IO_FILE.64* nonnull %36, i8*\l... null, i64 0) #19\l  br label %if.end.icp3\l}"];
	Node0x1fdf880 -> Node0x1fdf8d0;
	Node0x1fdf8d0 [shape=record,label="{if.end.icp3:                                      \l  %38 = load i8*, i8** %18, align 8, !tbaa !10\l  %39 = icmp eq i8* %38, null\l  br i1 %39, label %55, label %if.true.direct_targ\l|{<s0>T|<s1>F}}"];
	Node0x1fdf8d0:s0 -> Node0x1fdf9c0;
	Node0x1fdf8d0:s1 -> Node0x1fdf920;
	Node0x1fdf920 [shape=record,label="{if.true.direct_targ:                              \l  %40 = getelementptr inbounds %struct._IO_FILE.67, %struct._IO_FILE.67* %0,\l... i64 0, i32 4\l  store i8* null, i8** %20, align 8, !tbaa !11\l  %41 = bitcast i8** %40 to \<2 x i8*\>*\l  store \<2 x i8*\> zeroinitializer, \<2 x i8*\>* %41, align 8, !tbaa !13\l  %42 = getelementptr inbounds %struct._IO_FILE.67, %struct._IO_FILE.67* %0,\l... i64 0, i32 10\l  %43 = load i64 (%struct._IO_FILE.67*, i64, i32)*, i64 (%struct._IO_FILE.67*,\l... i64, i32)** %42, align 8, !tbaa !14\l  %44 = bitcast i64 (%struct._IO_FILE.62*, i64, i32)* @__stdio_seek to i64\l... (%struct._IO_FILE.67*, i64, i32)*\l  %45 = icmp eq i64 (%struct._IO_FILE.67*, i64, i32)* %43, %44\l  call void @llvm.assume(i1 %45)\l  %46 = bitcast %struct._IO_FILE.67* %0 to %struct._IO_FILE.62*\l  %47 = tail call i64 @__stdio_seek(%struct._IO_FILE.62* nonnull %46, i64 %17,\l... i32 %2) #19\l  %48 = icmp slt i64 %47, 0\l  br i1 %48, label %55, label %49\l|{<s0>T|<s1>F}}"];
	Node0x1fdf920:s0 -> Node0x1fdf9c0;
	Node0x1fdf920:s1 -> Node0x1fdf970;
	Node0x1fdf970 [shape=record,label="{%49:\l49:                                               \l  %50 = getelementptr inbounds %struct._IO_FILE.67, %struct._IO_FILE.67* %0,\l... i64 0, i32 1\l  %51 = bitcast i8** %50 to \<2 x i8*\>*\l  store \<2 x i8*\> zeroinitializer, \<2 x i8*\>* %51, align 8, !tbaa !13\l  %52 = getelementptr inbounds %struct._IO_FILE.67, %struct._IO_FILE.67* %0,\l... i64 0, i32 0\l  %53 = load i32, i32* %52, align 8, !tbaa !15\l  %54 = and i32 %53, -17\l  store i32 %54, i32* %52, align 8, !tbaa !15\l  br label %55\l}"];
	Node0x1fdf970 -> Node0x1fdf9c0;
	Node0x1fdf9c0 [shape=record,label="{%55:\l55:                                               \l  %56 = phi i32 [ 0, %49 ], [ -1, %if.end.icp3 ], [ -1, %if.true.direct_targ ]\l  ret i32 %56\l}"];
}
