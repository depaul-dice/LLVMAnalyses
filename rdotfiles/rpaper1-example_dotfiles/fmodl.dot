digraph "CFG for 'fmodl' function" {
	label="CFG for 'fmodl' function";

	Node0x13134b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%2:\l  %3 = bitcast x86_fp80 %0 to i80\l  %4 = lshr i80 %3, 64\l  %5 = trunc i80 %4 to i32\l  %6 = and i32 %5, 32767\l  %7 = bitcast x86_fp80 %1 to i80\l  %8 = lshr i80 %7, 64\l  %9 = trunc i80 %8 to i32\l  %10 = and i32 %9, 32767\l  %11 = and i32 %5, 32768\l  %12 = tail call x86_fp80 @llvm.experimental.constrained.sitofp.f80.i32(i32\l... 0, metadata !round.dynamic, metadata !fpexcept.ignore) #17\l  %13 = tail call i1 @llvm.experimental.constrained.fcmp.f80(x86_fp80 %1,\l... x86_fp80 %12, metadata !oeq, metadata !fpexcept.ignore) #17\l  br i1 %13, label %19, label %14\l|{<s0>T|<s1>F}}"];
	Node0x13134b0:s0 -> Node0x13138a0;
	Node0x13134b0:s1 -> Node0x1313850;
	Node0x1313850 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%14:\l14:                                               \l  %15 = tail call fastcc i32 @__fpclassifyl(x86_fp80 %1) #18\l  %16 = icmp eq i32 %15, 0\l  %17 = icmp eq i32 %6, 32767\l  %18 = or i1 %17, %16\l  br i1 %18, label %19, label %23\l|{<s0>T|<s1>F}}"];
	Node0x1313850:s0 -> Node0x13138a0;
	Node0x1313850:s1 -> Node0x13138f0;
	Node0x13138a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%19:\l19:                                               \l  %20 = tail call x86_fp80 @llvm.experimental.constrained.fmul.f80(x86_fp80\l... %0, x86_fp80 %1, metadata !round.dynamic, metadata !fpexcept.ignore) #17\l  %21 = tail call x86_fp80 @llvm.experimental.constrained.fmul.f80(x86_fp80\l... %0, x86_fp80 %1, metadata !round.dynamic, metadata !fpexcept.ignore) #17\l  %22 = tail call x86_fp80 @llvm.experimental.constrained.fdiv.f80(x86_fp80\l... %20, x86_fp80 %21, metadata !round.dynamic, metadata !fpexcept.ignore) #17\l  br label %132\l}"];
	Node0x13138a0 -> Node0x1313fd0;
	Node0x13138f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%23:\l23:                                               \l  %24 = zext i32 %6 to i80\l  %25 = shl nuw nsw i80 %24, 64\l  %26 = and i80 %3, 18446744073709551615\l  %27 = or i80 %25, %26\l  %28 = bitcast i80 %27 to x86_fp80\l  %29 = zext i32 %10 to i80\l  %30 = shl nuw nsw i80 %29, 64\l  %31 = and i80 %7, 18446744073709551615\l  %32 = or i80 %30, %31\l  %33 = bitcast i80 %32 to x86_fp80\l  %34 = tail call i1 @llvm.experimental.constrained.fcmps.f80(x86_fp80 %28,\l... x86_fp80 %33, metadata !ole, metadata !fpexcept.ignore) #17\l  br i1 %34, label %35, label %40\l|{<s0>T|<s1>F}}"];
	Node0x13138f0:s0 -> Node0x1313940;
	Node0x13138f0:s1 -> Node0x13139e0;
	Node0x1313940 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%35:\l35:                                               \l  %36 = tail call i1 @llvm.experimental.constrained.fcmp.f80(x86_fp80 %28,\l... x86_fp80 %33, metadata !oeq, metadata !fpexcept.ignore) #17\l  br i1 %36, label %37, label %132\l|{<s0>T|<s1>F}}"];
	Node0x1313940:s0 -> Node0x1313990;
	Node0x1313940:s1 -> Node0x1313fd0;
	Node0x1313990 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%37:\l37:                                               \l  %38 = tail call x86_fp80 @llvm.experimental.constrained.sitofp.f80.i32(i32\l... 0, metadata !round.dynamic, metadata !fpexcept.ignore) #17\l  %39 = tail call x86_fp80 @llvm.experimental.constrained.fmul.f80(x86_fp80\l... %38, x86_fp80 %0, metadata !round.dynamic, metadata !fpexcept.ignore) #17\l  br label %132\l}"];
	Node0x1313990 -> Node0x1313fd0;
	Node0x13139e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%40:\l40:                                               \l  %41 = icmp eq i32 %6, 0\l  br i1 %41, label %42, label %49\l|{<s0>T|<s1>F}}"];
	Node0x13139e0:s0 -> Node0x1313a30;
	Node0x13139e0:s1 -> Node0x1313a80;
	Node0x1313a30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%42:\l42:                                               \l  %43 = tail call x86_fp80 @llvm.experimental.constrained.fpext.f80.f32(float\l... 0x4770000000000000, metadata !fpexcept.ignore) #17\l  %44 = tail call x86_fp80 @llvm.experimental.constrained.fmul.f80(x86_fp80\l... %28, x86_fp80 %43, metadata !round.dynamic, metadata !fpexcept.ignore) #17\l  %45 = bitcast x86_fp80 %44 to i80\l  %46 = lshr i80 %45, 64\l  %47 = trunc i80 %46 to i32\l  %48 = add nsw i32 %47, -120\l  br label %49\l}"];
	Node0x1313a30 -> Node0x1313a80;
	Node0x1313a80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%49:\l49:                                               \l  %50 = phi i32 [ %6, %40 ], [ %48, %42 ]\l  %51 = phi x86_fp80 [ %28, %40 ], [ %44, %42 ]\l  %52 = icmp eq i32 %10, 0\l  %53 = trunc i80 %7 to i64\l  br i1 %52, label %54, label %62\l|{<s0>T|<s1>F}}"];
	Node0x1313a80:s0 -> Node0x1313ad0;
	Node0x1313a80:s1 -> Node0x1313b20;
	Node0x1313ad0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%54:\l54:                                               \l  %55 = tail call x86_fp80 @llvm.experimental.constrained.fpext.f80.f32(float\l... 0x4770000000000000, metadata !fpexcept.ignore) #17\l  %56 = tail call x86_fp80 @llvm.experimental.constrained.fmul.f80(x86_fp80\l... %33, x86_fp80 %55, metadata !round.dynamic, metadata !fpexcept.ignore) #17\l  %57 = bitcast x86_fp80 %56 to i80\l  %58 = lshr i80 %57, 64\l  %59 = trunc i80 %58 to i32\l  %60 = add nsw i32 %59, -120\l  %61 = trunc i80 %57 to i64\l  br label %62\l}"];
	Node0x1313ad0 -> Node0x1313b20;
	Node0x1313b20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2cab570",label="{%62:\l62:                                               \l  %63 = phi i64 [ %61, %54 ], [ %53, %49 ]\l  %64 = phi i32 [ %60, %54 ], [ %10, %49 ]\l  %65 = bitcast x86_fp80 %51 to i80\l  %66 = trunc i80 %65 to i64\l  %67 = icmp sgt i32 %50, %64\l  %68 = sub i64 %66, %63\l  %69 = icmp ule i64 %63, %66\l  br i1 %67, label %70, label %93\l|{<s0>T|<s1>F}}"];
	Node0x1313b20:s0 -> Node0x1313b70;
	Node0x1313b20:s1 -> Node0x1313d50;
	Node0x1313b70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%70:\l70:                                               \l  %71 = phi i1 [ %92, %87 ], [ %69, %62 ]\l  %72 = phi i64 [ %91, %87 ], [ %68, %62 ]\l  %73 = phi i64 [ %88, %87 ], [ %66, %62 ]\l  %74 = phi i32 [ %89, %87 ], [ %50, %62 ]\l  br i1 %71, label %75, label %82\l|{<s0>T|<s1>F}}"];
	Node0x1313b70:s0 -> Node0x1313bc0;
	Node0x1313b70:s1 -> Node0x1313cb0;
	Node0x1313bc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%75:\l75:                                               \l  %76 = icmp eq i64 %72, 0\l  br i1 %76, label %77, label %80\l|{<s0>T|<s1>F}}"];
	Node0x1313bc0:s0 -> Node0x1313c10;
	Node0x1313bc0:s1 -> Node0x1313c60;
	Node0x1313c10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%77:\l77:                                               \l  %78 = tail call x86_fp80 @llvm.experimental.constrained.sitofp.f80.i32(i32\l... 0, metadata !round.dynamic, metadata !fpexcept.ignore) #17\l  %79 = tail call x86_fp80 @llvm.experimental.constrained.fmul.f80(x86_fp80\l... %78, x86_fp80 %0, metadata !round.dynamic, metadata !fpexcept.ignore) #17\l  br label %132\l}"];
	Node0x1313c10 -> Node0x1313fd0;
	Node0x1313c60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%80:\l80:                                               \l  %81 = shl i64 %72, 1\l  br label %87\l}"];
	Node0x1313c60 -> Node0x1313d00;
	Node0x1313cb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%82:\l82:                                               \l  %83 = shl i64 %73, 1\l  %84 = icmp ult i64 %83, %73\l  %85 = select i1 %84, i64 %63, i64 0\l  %86 = sub i64 %83, %85\l  br label %87\l}"];
	Node0x1313cb0 -> Node0x1313d00;
	Node0x1313d00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%87:\l87:                                               \l  %88 = phi i64 [ %81, %80 ], [ %86, %82 ]\l  %89 = add nsw i32 %74, -1\l  %90 = icmp sgt i32 %89, %64\l  %91 = sub i64 %88, %63\l  %92 = icmp uge i64 %88, %63\l  br i1 %90, label %70, label %93\l|{<s0>T|<s1>F}}"];
	Node0x1313d00:s0 -> Node0x1313b70;
	Node0x1313d00:s1 -> Node0x1313d50;
	Node0x1313d50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%93:\l93:                                               \l  %94 = phi i32 [ %50, %62 ], [ %64, %87 ]\l  %95 = phi i64 [ %66, %62 ], [ %88, %87 ]\l  %96 = phi i64 [ %68, %62 ], [ %91, %87 ]\l  %97 = phi i1 [ %69, %62 ], [ %92, %87 ]\l  br i1 %97, label %98, label %103\l|{<s0>T|<s1>F}}"];
	Node0x1313d50:s0 -> Node0x1313da0;
	Node0x1313d50:s1 -> Node0x1313e40;
	Node0x1313da0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%98:\l98:                                               \l  %99 = icmp eq i64 %96, 0\l  br i1 %99, label %100, label %103\l|{<s0>T|<s1>F}}"];
	Node0x1313da0:s0 -> Node0x1313df0;
	Node0x1313da0:s1 -> Node0x1313e40;
	Node0x1313df0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a5c3fe70",label="{%100:\l100:                                              \l  %101 = tail call x86_fp80 @llvm.experimental.constrained.sitofp.f80.i32(i32\l... 0, metadata !round.dynamic, metadata !fpexcept.ignore) #17\l  %102 = tail call x86_fp80 @llvm.experimental.constrained.fmul.f80(x86_fp80\l... %101, x86_fp80 %0, metadata !round.dynamic, metadata !fpexcept.ignore) #17\l  br label %132\l}"];
	Node0x1313df0 -> Node0x1313fd0;
	Node0x1313e40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%103:\l103:                                              \l  %104 = phi i64 [ %95, %93 ], [ %96, %98 ]\l  %105 = icmp sgt i64 %104, -1\l  br i1 %105, label %106, label %112\l|{<s0>T|<s1>F}}"];
	Node0x1313e40:s0 -> Node0x1313e90;
	Node0x1313e40:s1 -> Node0x1313ee0;
	Node0x1313e90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%106:\l106:                                              \l  %107 = phi i64 [ %109, %106 ], [ %104, %103 ]\l  %108 = phi i32 [ %110, %106 ], [ %94, %103 ]\l  %109 = shl nuw i64 %107, 1\l  %110 = add nsw i32 %108, -1\l  %111 = icmp sgt i64 %109, -1\l  br i1 %111, label %106, label %112\l|{<s0>T|<s1>F}}"];
	Node0x1313e90:s0 -> Node0x1313e90;
	Node0x1313e90:s1 -> Node0x1313ee0;
	Node0x1313ee0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%112:\l112:                                              \l  %113 = phi i32 [ %94, %103 ], [ %110, %106 ]\l  %114 = phi i64 [ %104, %103 ], [ %109, %106 ]\l  %115 = zext i64 %114 to i80\l  %116 = icmp slt i32 %113, 1\l  br i1 %116, label %117, label %126\l|{<s0>T|<s1>F}}"];
	Node0x1313ee0:s0 -> Node0x1313f30;
	Node0x1313ee0:s1 -> Node0x1313f80;
	Node0x1313f30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%117:\l117:                                              \l  %118 = add nsw i32 %113, 120\l  %119 = or i32 %118, %11\l  %120 = zext i32 %119 to i80\l  %121 = shl i80 %120, 64\l  %122 = or i80 %121, %115\l  %123 = bitcast i80 %122 to x86_fp80\l  %124 = tail call x86_fp80 @llvm.experimental.constrained.fpext.f80.f32(float\l... 0x3870000000000000, metadata !fpexcept.ignore) #17\l  %125 = tail call x86_fp80 @llvm.experimental.constrained.fmul.f80(x86_fp80\l... %123, x86_fp80 %124, metadata !round.dynamic, metadata !fpexcept.ignore)\l... #17\l  br label %132\l}"];
	Node0x1313f30 -> Node0x1313fd0;
	Node0x1313f80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%126:\l126:                                              \l  %127 = or i32 %113, %11\l  %128 = zext i32 %127 to i80\l  %129 = shl i80 %128, 64\l  %130 = or i80 %129, %115\l  %131 = bitcast i80 %130 to x86_fp80\l  br label %132\l}"];
	Node0x1313f80 -> Node0x1313fd0;
	Node0x1313fd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%132:\l132:                                              \l  %133 = phi x86_fp80 [ %22, %19 ], [ %39, %37 ], [ %0, %35 ], [ %79, %77 ], [\l... %102, %100 ], [ %125, %117 ], [ %131, %126 ]\l  ret x86_fp80 %133\l}"];
}
