digraph "CFG for 'cos' function" {
	label="CFG for 'cos' function";

	Node0x16f3b00 [shape=record,label="{%1:\l  %2 = alloca double, align 8\l  %3 = alloca [2 x double], align 16\l  %4 = bitcast [2 x double]* %3 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #40\l  %5 = bitcast double %0 to i64\l  %6 = lshr i64 %5, 32\l  %7 = trunc i64 %6 to i32\l  %8 = and i32 %7, 2147483647\l  %9 = icmp ult i32 %8, 1072243196\l  br i1 %9, label %10, label %19\l|{<s0>T|<s1>F}}"];
	Node0x16f3b00:s0 -> Node0x16f3b50;
	Node0x16f3b00:s1 -> Node0x16f3c40;
	Node0x16f3b50 [shape=record,label="{%10:\l10:                                               \l  %11 = icmp ult i32 %8, 1044816030\l  br i1 %11, label %12, label %16\l|{<s0>T|<s1>F}}"];
	Node0x16f3b50:s0 -> Node0x16f3ba0;
	Node0x16f3b50:s1 -> Node0x16f3bf0;
	Node0x16f3ba0 [shape=record,label="{%12:\l12:                                               \l  %13 = tail call double @llvm.experimental.constrained.fpext.f64.f32(float\l... 0x4770000000000000, metadata !fpexcept.ignore) #41\l  %14 = tail call double @llvm.experimental.constrained.fadd.f64(double %0,\l... double %13, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %15 = bitcast double* %2 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15)\l  store volatile double %14, double* %2, align 8, !tbaa !1632\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)\l  br label %49\l}"];
	Node0x16f3ba0 -> Node0x16f3e70;
	Node0x16f3bf0 [shape=record,label="{%16:\l16:                                               \l  %17 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 0,\l... metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %18 = tail call double @__cos(double %0, double %17) #42\l  br label %49\l}"];
	Node0x16f3bf0 -> Node0x16f3e70;
	Node0x16f3c40 [shape=record,label="{%19:\l19:                                               \l  %20 = icmp ugt i32 %8, 2146435071\l  br i1 %20, label %21, label %23\l|{<s0>T|<s1>F}}"];
	Node0x16f3c40:s0 -> Node0x16f3c90;
	Node0x16f3c40:s1 -> Node0x16f3ce0;
	Node0x16f3c90 [shape=record,label="{%21:\l21:                                               \l  %22 = tail call double @llvm.experimental.constrained.fsub.f64(double %0,\l... double %0, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  br label %49\l}"];
	Node0x16f3c90 -> Node0x16f3e70;
	Node0x16f3ce0 [shape=record,label="{%23:\l23:                                               \l  %24 = getelementptr inbounds [2 x double], [2 x double]* %3, i64 0, i64 0\l  %25 = call i32 @__rem_pio2(double %0, double* nonnull %24) #42\l  %26 = and i32 %25, 3\l  switch i32 %26, label %44 [\l    i32 0, label %27\l    i32 1, label %32\l    i32 2, label %38\l  ]\l|{<s0>def|<s1>0|<s2>1|<s3>2}}"];
	Node0x16f3ce0:s0 -> Node0x16f3e20;
	Node0x16f3ce0:s1 -> Node0x16f3d30;
	Node0x16f3ce0:s2 -> Node0x16f3d80;
	Node0x16f3ce0:s3 -> Node0x16f3dd0;
	Node0x16f3d30 [shape=record,label="{%27:\l27:                                               \l  %28 = load double, double* %24, align 16, !tbaa !1632\l  %29 = getelementptr inbounds [2 x double], [2 x double]* %3, i64 0, i64 1\l  %30 = load double, double* %29, align 8, !tbaa !1632\l  %31 = call double @__cos(double %28, double %30) #42\l  br label %49\l}"];
	Node0x16f3d30 -> Node0x16f3e70;
	Node0x16f3d80 [shape=record,label="{%32:\l32:                                               \l  %33 = load double, double* %24, align 16, !tbaa !1632\l  %34 = getelementptr inbounds [2 x double], [2 x double]* %3, i64 0, i64 1\l  %35 = load double, double* %34, align 8, !tbaa !1632\l  %36 = call double @__sin(double %33, double %35, i32 1) #42\l  %37 = fneg double %36\l  br label %49\l}"];
	Node0x16f3d80 -> Node0x16f3e70;
	Node0x16f3dd0 [shape=record,label="{%38:\l38:                                               \l  %39 = load double, double* %24, align 16, !tbaa !1632\l  %40 = getelementptr inbounds [2 x double], [2 x double]* %3, i64 0, i64 1\l  %41 = load double, double* %40, align 8, !tbaa !1632\l  %42 = call double @__cos(double %39, double %41) #42\l  %43 = fneg double %42\l  br label %49\l}"];
	Node0x16f3dd0 -> Node0x16f3e70;
	Node0x16f3e20 [shape=record,label="{%44:\l44:                                               \l  %45 = load double, double* %24, align 16, !tbaa !1632\l  %46 = getelementptr inbounds [2 x double], [2 x double]* %3, i64 0, i64 1\l  %47 = load double, double* %46, align 8, !tbaa !1632\l  %48 = call double @__sin(double %45, double %47, i32 1) #42\l  br label %49\l}"];
	Node0x16f3e20 -> Node0x16f3e70;
	Node0x16f3e70 [shape=record,label="{%49:\l49:                                               \l  %50 = phi double [ 1.000000e+00, %12 ], [ %18, %16 ], [ %22, %21 ], [ %48,\l... %44 ], [ %43, %38 ], [ %37, %32 ], [ %31, %27 ]\l  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #40\l  ret double %50\l}"];
}
