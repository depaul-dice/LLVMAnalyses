digraph "CFG for 'cbrt' function" {
	label="CFG for 'cbrt' function";

	Node0x1eef8c0 [shape=record,label="{%1:\l  %2 = bitcast double %0 to i64\l  %3 = lshr i64 %2, 32\l  %4 = trunc i64 %3 to i32\l  %5 = and i32 %4, 2147483647\l  %6 = icmp ugt i32 %5, 2146435071\l  br i1 %6, label %7, label %9\l|{<s0>T|<s1>F}}"];
	Node0x1eef8c0:s0 -> Node0x1ef19f0;
	Node0x1eef8c0:s1 -> Node0x1ef1a40;
	Node0x1ef19f0 [shape=record,label="{%7:\l7:                                                \l  %8 = tail call double @llvm.experimental.constrained.fadd.f64(double %0,\l... double %0, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  br label %55\l}"];
	Node0x1ef19f0 -> Node0x1ef1b30;
	Node0x1ef1a40 [shape=record,label="{%9:\l9:                                                \l  %10 = icmp ult i32 %5, 1048576\l  br i1 %10, label %11, label %18\l|{<s0>T|<s1>F}}"];
	Node0x1ef1a40:s0 -> Node0x1ef1a90;
	Node0x1ef1a40:s1 -> Node0x1ef1ae0;
	Node0x1ef1a90 [shape=record,label="{%11:\l11:                                               \l  %12 = tail call double @llvm.experimental.constrained.fmul.f64(double %0,\l... double 0x4350000000000000, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  %13 = bitcast double %12 to i64\l  %14 = lshr i64 %13, 32\l  %15 = trunc i64 %14 to i32\l  %16 = and i32 %15, 2147483647\l  %17 = icmp eq i32 %16, 0\l  br i1 %17, label %55, label %18\l|{<s0>T|<s1>F}}"];
	Node0x1ef1a90:s0 -> Node0x1ef1b30;
	Node0x1ef1a90:s1 -> Node0x1ef1ae0;
	Node0x1ef1ae0 [shape=record,label="{%18:\l18:                                               \l  %19 = phi i32 [ %16, %11 ], [ %5, %9 ]\l  %20 = phi i32 [ 696219795, %11 ], [ 715094163, %9 ]\l  %21 = phi i64 [ %13, %11 ], [ %2, %9 ]\l  %22 = udiv i32 %19, 3\l  %23 = add nuw nsw i32 %22, %20\l  %24 = and i64 %21, -9223372036854775808\l  %25 = zext i32 %23 to i64\l  %26 = shl nuw nsw i64 %25, 32\l  %27 = or i64 %26, %24\l  %28 = bitcast i64 %27 to double\l  %29 = tail call double @llvm.experimental.constrained.fmul.f64(double %28,\l... double %28, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %30 = tail call double @llvm.experimental.constrained.fdiv.f64(double %28,\l... double %0, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %31 = tail call double @llvm.experimental.constrained.fmul.f64(double %29,\l... double %30, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %32 = tail call double @llvm.experimental.constrained.fmul.f64(double %31,\l... double 0x3FF9F1604A49D6C2, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  %33 = tail call double @llvm.experimental.constrained.fadd.f64(double\l... 0xBFFE28E092F02420, double %32, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  %34 = tail call double @llvm.experimental.constrained.fmul.f64(double %31,\l... double %33, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %35 = tail call double @llvm.experimental.constrained.fadd.f64(double\l... 0x3FFE03E60F61E692, double %34, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  %36 = tail call double @llvm.experimental.constrained.fmul.f64(double %31,\l... double %31, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %37 = tail call double @llvm.experimental.constrained.fmul.f64(double %36,\l... double %31, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %38 = tail call double @llvm.experimental.constrained.fmul.f64(double %31,\l... double 0x3FC2B000D4E4EDD7, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  %39 = tail call double @llvm.experimental.constrained.fadd.f64(double\l... 0xBFE844CBBEE751D9, double %38, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  %40 = tail call double @llvm.experimental.constrained.fmul.f64(double %37,\l... double %39, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %41 = tail call double @llvm.experimental.constrained.fadd.f64(double %35,\l... double %40, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %42 = tail call double @llvm.experimental.constrained.fmul.f64(double %28,\l... double %41, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %43 = bitcast double %42 to i64\l  %44 = add i64 %43, 2147483648\l  %45 = and i64 %44, -1073741824\l  %46 = bitcast i64 %45 to double\l  %47 = tail call double @llvm.experimental.constrained.fmul.f64(double %46,\l... double %46, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %48 = tail call double @llvm.experimental.constrained.fdiv.f64(double %0,\l... double %47, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %49 = tail call double @llvm.experimental.constrained.fadd.f64(double %46,\l... double %46, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %50 = tail call double @llvm.experimental.constrained.fsub.f64(double %48,\l... double %46, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %51 = tail call double @llvm.experimental.constrained.fadd.f64(double %49,\l... double %48, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %52 = tail call double @llvm.experimental.constrained.fdiv.f64(double %50,\l... double %51, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %53 = tail call double @llvm.experimental.constrained.fmul.f64(double %46,\l... double %52, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %54 = tail call double @llvm.experimental.constrained.fadd.f64(double %46,\l... double %53, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  br label %55\l}"];
	Node0x1ef1ae0 -> Node0x1ef1b30;
	Node0x1ef1b30 [shape=record,label="{%55:\l55:                                               \l  %56 = phi double [ %8, %7 ], [ %54, %18 ], [ %0, %11 ]\l  ret double %56\l}"];
}
