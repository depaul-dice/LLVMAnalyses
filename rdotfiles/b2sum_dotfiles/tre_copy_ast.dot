digraph "CFG for 'tre_copy_ast' function" {
	label="CFG for 'tre_copy_ast' function";

	Node0x19059d0 [shape=record,label="{%8:\l  %9 = getelementptr inbounds %struct.tre_stack_rec, %struct.tre_stack_rec*\l... %1, i64 0, i32 3\l  %10 = load i32, i32* %9, align 4, !tbaa !1632\l  %11 = bitcast %struct.tre_ast_node_t* %2 to i8*\l  %12 = tail call fastcc i32 @tre_stack_push(%struct.tre_stack_rec* %1, i8*\l... %11) #40\l  %13 = tail call fastcc i32 @tre_stack_push(%struct.tre_stack_rec* %1, i8*\l... null) #40\l  %14 = icmp eq i32 %13, 0\l  br i1 %14, label %15, label %210\l|{<s0>T|<s1>F}}"];
	Node0x19059d0:s0 -> Node0x18e5880;
	Node0x19059d0:s1 -> Node0x19062e0;
	Node0x18e5880 [shape=record,label="{%15:\l15:                                               \l  %16 = getelementptr inbounds %struct.tre_stack_rec, %struct.tre_stack_rec*\l... %1, i64 0, i32 4\l  %17 = and i32 %3, 1\l  %18 = icmp eq i32 %17, 0\l  %19 = and i32 %3, 2\l  %20 = icmp ne i32 %19, 0\l  br label %21\l}"];
	Node0x18e5880 -> Node0x18e58d0;
	Node0x18e58d0 [shape=record,label="{%21:\l21:                                               \l  %22 = phi i32 [ 0, %15 ], [ %207, %204 ]\l  %23 = phi i32 [ 1, %15 ], [ %206, %204 ]\l  %24 = phi %struct.tre_ast_node_t** [ %6, %15 ], [ %205, %204 ]\l  %25 = load i32, i32* %9, align 4, !tbaa !1632\l  %26 = icmp sgt i32 %25, %10\l  br i1 %26, label %27, label %210\l|{<s0>T|<s1>F}}"];
	Node0x18e58d0:s0 -> Node0x18e5920;
	Node0x18e58d0:s1 -> Node0x19062e0;
	Node0x18e5920 [shape=record,label="{%27:\l27:                                               \l  %28 = load %union.tre_stack_item*, %union.tre_stack_item** %16, align 8,\l... !tbaa !1638\l  %29 = add nsw i32 %25, -1\l  store i32 %29, i32* %9, align 4, !tbaa !1632\l  %30 = sext i32 %29 to i64\l  %31 = getelementptr inbounds %union.tre_stack_item, %union.tre_stack_item*\l... %28, i64 %30\l  %32 = bitcast %union.tre_stack_item* %31 to i32*\l  %33 = load i32, i32* %32, align 8, !tbaa !1639\l  switch i32 %33, label %204 [\l    i32 1, label %34\l    i32 0, label %40\l  ]\l|{<s0>def|<s1>1|<s2>0}}"];
	Node0x18e5920:s0 -> Node0x1906290;
	Node0x18e5920:s1 -> Node0x18e5970;
	Node0x18e5920:s2 -> Node0x18e59c0;
	Node0x18e5970 [shape=record,label="{%34:\l34:                                               \l  %35 = add nsw i32 %25, -2\l  store i32 %35, i32* %9, align 4, !tbaa !1632\l  %36 = sext i32 %35 to i64\l  %37 = getelementptr inbounds %union.tre_stack_item, %union.tre_stack_item*\l... %28, i64 %36, i32 0\l  %38 = bitcast i8** %37 to %struct.tre_ast_node_t***\l  %39 = load %struct.tre_ast_node_t**, %struct.tre_ast_node_t*** %38, align 8,\l... !tbaa !1639\l  br label %204\l}"];
	Node0x18e5970 -> Node0x1906290;
	Node0x18e59c0 [shape=record,label="{%40:\l40:                                               \l  %41 = add nsw i32 %25, -2\l  store i32 %41, i32* %9, align 4, !tbaa !1632\l  %42 = sext i32 %41 to i64\l  %43 = getelementptr inbounds %union.tre_stack_item, %union.tre_stack_item*\l... %28, i64 %42, i32 0\l  %44 = load i8*, i8** %43, align 8, !tbaa !1639\l  %45 = bitcast i8* %44 to i32*\l  %46 = load i32, i32* %45, align 8, !tbaa !1640\l  switch i32 %46, label %204 [\l    i32 0, label %47\l    i32 3, label %100\l    i32 1, label %137\l    i32 2, label %175\l  ]\l|{<s0>def|<s1>0|<s2>3|<s3>1|<s4>2}}"];
	Node0x18e59c0:s0 -> Node0x1906290;
	Node0x18e59c0:s1 -> Node0x18e5a10;
	Node0x18e59c0:s2 -> Node0x1905cf0;
	Node0x18e59c0:s3 -> Node0x1905f20;
	Node0x18e59c0:s4 -> Node0x1906150;
	Node0x18e5a10 [shape=record,label="{%47:\l47:                                               \l  %48 = getelementptr inbounds i8, i8* %44, i64 8\l  %49 = bitcast i8* %48 to %struct.tre_literal_t**\l  %50 = load %struct.tre_literal_t*, %struct.tre_literal_t** %49, align 8,\l... !tbaa !1642\l  %51 = getelementptr inbounds %struct.tre_literal_t, %struct.tre_literal_t*\l... %50, i64 0, i32 2\l  %52 = load i32, i32* %51, align 8, !tbaa !1643\l  %53 = getelementptr inbounds %struct.tre_literal_t, %struct.tre_literal_t*\l... %50, i64 0, i32 0\l  %54 = load i64, i64* %53, align 8, !tbaa !1646\l  %55 = trunc i64 %54 to i32\l  %56 = getelementptr inbounds %struct.tre_literal_t, %struct.tre_literal_t*\l... %50, i64 0, i32 1\l  %57 = load i64, i64* %56, align 8, !tbaa !1647\l  %58 = trunc i64 %57 to i32\l  %59 = icmp sgt i64 %54, -1\l  %60 = icmp eq i64 %54, -4\l  %61 = or i1 %59, %60\l  br i1 %61, label %62, label %66\l|{<s0>T|<s1>F}}"];
	Node0x18e5a10:s0 -> Node0x1905a20;
	Node0x18e5a10:s1 -> Node0x1905a70;
	Node0x1905a20 [shape=record,label="{%62:\l62:                                               \l  %63 = load i32, i32* %4, align 4, !tbaa !1648\l  %64 = add nsw i32 %63, %52\l  %65 = add nsw i32 %22, 1\l  br label %78\l}"];
	Node0x1905a20 -> Node0x1905bb0;
	Node0x1905a70 [shape=record,label="{%66:\l66:                                               \l  %67 = icmp ne i64 %54, -3\l  %68 = or i1 %18, %67\l  br i1 %68, label %69, label %78\l|{<s0>T|<s1>F}}"];
	Node0x1905a70:s0 -> Node0x1905ac0;
	Node0x1905a70:s1 -> Node0x1905bb0;
	Node0x1905ac0 [shape=record,label="{%69:\l69:                                               \l  %70 = icmp eq i64 %54, -3\l  br i1 %70, label %71, label %78\l|{<s0>T|<s1>F}}"];
	Node0x1905ac0:s0 -> Node0x1905b10;
	Node0x1905ac0:s1 -> Node0x1905bb0;
	Node0x1905b10 [shape=record,label="{%71:\l71:                                               \l  %72 = icmp ne i32 %23, 0\l  %73 = and i1 %20, %72\l  br i1 %73, label %74, label %78\l|{<s0>T|<s1>F}}"];
	Node0x1905b10:s0 -> Node0x1905b60;
	Node0x1905b10:s1 -> Node0x1905bb0;
	Node0x1905b60 [shape=record,label="{%74:\l74:                                               \l  %75 = shl i64 %57, 32\l  %76 = ashr exact i64 %75, 32\l  %77 = getelementptr inbounds i32, i32* %5, i64 %76\l  store i32 1, i32* %77, align 4, !tbaa !1639\l  br label %78\l}"];
	Node0x1905b60 -> Node0x1905bb0;
	Node0x1905bb0 [shape=record,label="{%78:\l78:                                               \l  %79 = phi i32 [ %64, %62 ], [ %52, %74 ], [ %52, %71 ], [ %52, %69 ], [ -1,\l... %66 ]\l  %80 = phi i32 [ %55, %62 ], [ -3, %74 ], [ -3, %71 ], [ %55, %69 ], [ -1,\l... %66 ]\l  %81 = phi i32 [ %58, %62 ], [ %58, %74 ], [ %58, %71 ], [ %58, %69 ], [ -1,\l... %66 ]\l  %82 = phi i32 [ %23, %62 ], [ 0, %74 ], [ %23, %71 ], [ %23, %69 ], [ %23,\l... %66 ]\l  %83 = phi i32 [ %65, %62 ], [ %22, %74 ], [ %22, %71 ], [ %22, %69 ], [ %22,\l... %66 ]\l  %84 = tail call fastcc %struct.tre_ast_node_t*\l... @tre_ast_new_literal(%struct.tre_mem_struct* %0, i32 %80, i32 %81, i32 %79)\l... #41\l  store %struct.tre_ast_node_t* %84, %struct.tre_ast_node_t** %24, align 8,\l... !tbaa !1649\l  %85 = icmp eq %struct.tre_ast_node_t* %84, null\l  br i1 %85, label %95, label %86\l|{<s0>T|<s1>F}}"];
	Node0x1905bb0:s0 -> Node0x1905c50;
	Node0x1905bb0:s1 -> Node0x1905c00;
	Node0x1905c00 [shape=record,label="{%86:\l86:                                               \l  %87 = getelementptr inbounds %struct.tre_ast_node_t, %struct.tre_ast_node_t*\l... %84, i64 0, i32 1\l  %88 = bitcast i8** %87 to %struct.tre_literal_t**\l  %89 = load %struct.tre_literal_t*, %struct.tre_literal_t** %88, align 8,\l... !tbaa !1642\l  %90 = getelementptr inbounds %struct.tre_literal_t, %struct.tre_literal_t*\l... %50, i64 0, i32 3\l  %91 = getelementptr inbounds %struct.tre_literal_t, %struct.tre_literal_t*\l... %89, i64 0, i32 3\l  %92 = bitcast i64* %90 to \<2 x i64\>*\l  %93 = load \<2 x i64\>, \<2 x i64\>* %92, align 8, !tbaa !1639\l  %94 = bitcast i64* %91 to \<2 x i64\>*\l  store \<2 x i64\> %93, \<2 x i64\>* %94, align 8, !tbaa !1639\l  br label %95\l}"];
	Node0x1905c00 -> Node0x1905c50;
	Node0x1905c50 [shape=record,label="{%95:\l95:                                               \l  %96 = phi i32 [ 0, %86 ], [ 12, %78 ]\l  %97 = load i32, i32* %7, align 4, !tbaa !1648\l  %98 = icmp sgt i32 %79, %97\l  br i1 %98, label %99, label %204\l|{<s0>T|<s1>F}}"];
	Node0x1905c50:s0 -> Node0x1905ca0;
	Node0x1905c50:s1 -> Node0x1906290;
	Node0x1905ca0 [shape=record,label="{%99:\l99:                                               \l  store i32 %79, i32* %7, align 4, !tbaa !1648\l  br label %204\l}"];
	Node0x1905ca0 -> Node0x1906290;
	Node0x1905cf0 [shape=record,label="{%100:\l100:                                              \l  %101 = getelementptr inbounds i8, i8* %44, i64 8\l  %102 = bitcast i8* %101 to %struct.tre_union_t**\l  %103 = load %struct.tre_union_t*, %struct.tre_union_t** %102, align 8, !tbaa\l... !1642\l  %104 = getelementptr inbounds %struct.tre_union_t, %struct.tre_union_t*\l... %103, i64 0, i32 0\l  %105 = load %struct.tre_ast_node_t*, %struct.tre_ast_node_t** %104, align 8,\l... !tbaa !1650\l  %106 = getelementptr inbounds %struct.tre_union_t, %struct.tre_union_t*\l... %103, i64 0, i32 1\l  %107 = load %struct.tre_ast_node_t*, %struct.tre_ast_node_t** %106, align 8,\l... !tbaa !1652\l  %108 = tail call fastcc %struct.tre_ast_node_t*\l... @tre_ast_new_union(%struct.tre_mem_struct* %0, %struct.tre_ast_node_t* %105,\l... %struct.tre_ast_node_t* %107) #41\l  store %struct.tre_ast_node_t* %108, %struct.tre_ast_node_t** %24, align 8,\l... !tbaa !1649\l  %109 = icmp eq %struct.tre_ast_node_t* %108, null\l  br i1 %109, label %210, label %110\l|{<s0>T|<s1>F}}"];
	Node0x1905cf0:s0 -> Node0x19062e0;
	Node0x1905cf0:s1 -> Node0x1905d40;
	Node0x1905d40 [shape=record,label="{%110:\l110:                                              \l  %111 = getelementptr inbounds %struct.tre_ast_node_t,\l... %struct.tre_ast_node_t* %108, i64 0, i32 1\l  %112 = bitcast i8** %111 to %struct.tre_union_t**\l  %113 = load %struct.tre_union_t*, %struct.tre_union_t** %112, align 8, !tbaa\l... !1642\l  %114 = getelementptr inbounds %struct.tre_union_t, %struct.tre_union_t*\l... %113, i64 0, i32 0\l  %115 = bitcast %struct.tre_ast_node_t** %106 to i8**\l  %116 = load i8*, i8** %115, align 8, !tbaa !1652\l  %117 = tail call fastcc i32 @tre_stack_push(%struct.tre_stack_rec* nonnull\l... %1, i8* %116) #40\l  %118 = icmp eq i32 %117, 0\l  br i1 %118, label %119, label %210\l|{<s0>T|<s1>F}}"];
	Node0x1905d40:s0 -> Node0x1905d90;
	Node0x1905d40:s1 -> Node0x19062e0;
	Node0x1905d90 [shape=record,label="{%119:\l119:                                              \l  %120 = tail call fastcc i32 @tre_stack_push(%struct.tre_stack_rec* nonnull\l... %1, i8* null) #40\l  %121 = icmp eq i32 %120, 0\l  br i1 %121, label %122, label %210\l|{<s0>T|<s1>F}}"];
	Node0x1905d90:s0 -> Node0x1905de0;
	Node0x1905d90:s1 -> Node0x19062e0;
	Node0x1905de0 [shape=record,label="{%122:\l122:                                              \l  %123 = getelementptr inbounds %struct.tre_union_t, %struct.tre_union_t*\l... %113, i64 0, i32 1\l  %124 = bitcast %struct.tre_ast_node_t** %123 to i8*\l  %125 = tail call fastcc i32 @tre_stack_push(%struct.tre_stack_rec* nonnull\l... %1, i8* nonnull %124) #40\l  %126 = icmp eq i32 %125, 0\l  br i1 %126, label %127, label %210\l|{<s0>T|<s1>F}}"];
	Node0x1905de0:s0 -> Node0x1905e30;
	Node0x1905de0:s1 -> Node0x19062e0;
	Node0x1905e30 [shape=record,label="{%127:\l127:                                              \l  %128 = tail call fastcc i32 @tre_stack_push(%struct.tre_stack_rec* nonnull\l... %1, i8* nonnull inttoptr (i64 1 to i8*)) #40\l  %129 = icmp eq i32 %128, 0\l  br i1 %129, label %130, label %210\l|{<s0>T|<s1>F}}"];
	Node0x1905e30:s0 -> Node0x1905e80;
	Node0x1905e30:s1 -> Node0x19062e0;
	Node0x1905e80 [shape=record,label="{%130:\l130:                                              \l  %131 = bitcast %struct.tre_union_t* %103 to i8**\l  %132 = load i8*, i8** %131, align 8, !tbaa !1650\l  %133 = tail call fastcc i32 @tre_stack_push(%struct.tre_stack_rec* nonnull\l... %1, i8* %132) #40\l  %134 = icmp eq i32 %133, 0\l  br i1 %134, label %135, label %210\l|{<s0>T|<s1>F}}"];
	Node0x1905e80:s0 -> Node0x1905ed0;
	Node0x1905e80:s1 -> Node0x19062e0;
	Node0x1905ed0 [shape=record,label="{%135:\l135:                                              \l  %136 = tail call fastcc i32 @tre_stack_push(%struct.tre_stack_rec* nonnull\l... %1, i8* null) #40\l  br label %204\l}"];
	Node0x1905ed0 -> Node0x1906290;
	Node0x1905f20 [shape=record,label="{%137:\l137:                                              \l  %138 = getelementptr inbounds i8, i8* %44, i64 8\l  %139 = bitcast i8* %138 to %struct.tre_union_t**\l  %140 = load %struct.tre_union_t*, %struct.tre_union_t** %139, align 8, !tbaa\l... !1642\l  %141 = getelementptr inbounds %struct.tre_union_t, %struct.tre_union_t*\l... %140, i64 0, i32 0\l  %142 = load %struct.tre_ast_node_t*, %struct.tre_ast_node_t** %141, align 8,\l... !tbaa !1650\l  %143 = getelementptr inbounds %struct.tre_union_t, %struct.tre_union_t*\l... %140, i64 0, i32 1\l  %144 = load %struct.tre_ast_node_t*, %struct.tre_ast_node_t** %143, align 8,\l... !tbaa !1652\l  %145 = tail call fastcc %struct.tre_ast_node_t*\l... @tre_ast_new_catenation(%struct.tre_mem_struct* %0, %struct.tre_ast_node_t*\l... %142, %struct.tre_ast_node_t* %144) #41\l  store %struct.tre_ast_node_t* %145, %struct.tre_ast_node_t** %24, align 8,\l... !tbaa !1649\l  %146 = icmp eq %struct.tre_ast_node_t* %145, null\l  br i1 %146, label %210, label %147\l|{<s0>T|<s1>F}}"];
	Node0x1905f20:s0 -> Node0x19062e0;
	Node0x1905f20:s1 -> Node0x1905f70;
	Node0x1905f70 [shape=record,label="{%147:\l147:                                              \l  %148 = getelementptr inbounds %struct.tre_ast_node_t,\l... %struct.tre_ast_node_t* %145, i64 0, i32 1\l  %149 = bitcast i8** %148 to %struct.tre_union_t**\l  %150 = load %struct.tre_union_t*, %struct.tre_union_t** %149, align 8, !tbaa\l... !1642\l  %151 = getelementptr inbounds %struct.tre_union_t, %struct.tre_union_t*\l... %150, i64 0, i32 0\l  %152 = getelementptr inbounds %struct.tre_union_t, %struct.tre_union_t*\l... %150, i64 0, i32 1\l  %153 = bitcast %struct.tre_union_t* %150 to \<2 x %struct.tre_ast_node_t*\>*\l  store \<2 x %struct.tre_ast_node_t*\> zeroinitializer, \<2 x\l... %struct.tre_ast_node_t*\>* %153, align 8, !tbaa !1649\l  %154 = bitcast %struct.tre_ast_node_t** %143 to i8**\l  %155 = load i8*, i8** %154, align 8, !tbaa !1652\l  %156 = tail call fastcc i32 @tre_stack_push(%struct.tre_stack_rec* nonnull\l... %1, i8* %155) #40\l  %157 = icmp eq i32 %156, 0\l  br i1 %157, label %158, label %210\l|{<s0>T|<s1>F}}"];
	Node0x1905f70:s0 -> Node0x1905fc0;
	Node0x1905f70:s1 -> Node0x19062e0;
	Node0x1905fc0 [shape=record,label="{%158:\l158:                                              \l  %159 = tail call fastcc i32 @tre_stack_push(%struct.tre_stack_rec* nonnull\l... %1, i8* null) #40\l  %160 = icmp eq i32 %159, 0\l  br i1 %160, label %161, label %210\l|{<s0>T|<s1>F}}"];
	Node0x1905fc0:s0 -> Node0x1906010;
	Node0x1905fc0:s1 -> Node0x19062e0;
	Node0x1906010 [shape=record,label="{%161:\l161:                                              \l  %162 = bitcast %struct.tre_ast_node_t** %152 to i8*\l  %163 = tail call fastcc i32 @tre_stack_push(%struct.tre_stack_rec* nonnull\l... %1, i8* nonnull %162) #40\l  %164 = icmp eq i32 %163, 0\l  br i1 %164, label %165, label %210\l|{<s0>T|<s1>F}}"];
	Node0x1906010:s0 -> Node0x1906060;
	Node0x1906010:s1 -> Node0x19062e0;
	Node0x1906060 [shape=record,label="{%165:\l165:                                              \l  %166 = tail call fastcc i32 @tre_stack_push(%struct.tre_stack_rec* nonnull\l... %1, i8* nonnull inttoptr (i64 1 to i8*)) #40\l  %167 = icmp eq i32 %166, 0\l  br i1 %167, label %168, label %210\l|{<s0>T|<s1>F}}"];
	Node0x1906060:s0 -> Node0x19060b0;
	Node0x1906060:s1 -> Node0x19062e0;
	Node0x19060b0 [shape=record,label="{%168:\l168:                                              \l  %169 = bitcast %struct.tre_union_t* %140 to i8**\l  %170 = load i8*, i8** %169, align 8, !tbaa !1650\l  %171 = tail call fastcc i32 @tre_stack_push(%struct.tre_stack_rec* nonnull\l... %1, i8* %170) #40\l  %172 = icmp eq i32 %171, 0\l  br i1 %172, label %173, label %210\l|{<s0>T|<s1>F}}"];
	Node0x19060b0:s0 -> Node0x1906100;
	Node0x19060b0:s1 -> Node0x19062e0;
	Node0x1906100 [shape=record,label="{%173:\l173:                                              \l  %174 = tail call fastcc i32 @tre_stack_push(%struct.tre_stack_rec* nonnull\l... %1, i8* null) #40\l  br label %204\l}"];
	Node0x1906100 -> Node0x1906290;
	Node0x1906150 [shape=record,label="{%175:\l175:                                              \l  %176 = getelementptr inbounds i8, i8* %44, i64 8\l  %177 = bitcast i8* %176 to %struct.tre_iteration_t**\l  %178 = load %struct.tre_iteration_t*, %struct.tre_iteration_t** %177, align\l... 8, !tbaa !1642\l  %179 = getelementptr inbounds %struct.tre_iteration_t,\l... %struct.tre_iteration_t* %178, i64 0, i32 0\l  %180 = bitcast %struct.tre_iteration_t* %178 to i8**\l  %181 = load i8*, i8** %180, align 8, !tbaa !1653\l  %182 = tail call fastcc i32 @tre_stack_push(%struct.tre_stack_rec* nonnull\l... %1, i8* %181) #40\l  %183 = icmp eq i32 %182, 0\l  br i1 %183, label %184, label %210\l|{<s0>T|<s1>F}}"];
	Node0x1906150:s0 -> Node0x19061a0;
	Node0x1906150:s1 -> Node0x19062e0;
	Node0x19061a0 [shape=record,label="{%184:\l184:                                              \l  %185 = tail call fastcc i32 @tre_stack_push(%struct.tre_stack_rec* nonnull\l... %1, i8* null) #40\l  %186 = icmp eq i32 %185, 0\l  br i1 %186, label %187, label %210\l|{<s0>T|<s1>F}}"];
	Node0x19061a0:s0 -> Node0x19061f0;
	Node0x19061a0:s1 -> Node0x19062e0;
	Node0x19061f0 [shape=record,label="{%187:\l187:                                              \l  %188 = load %struct.tre_ast_node_t*, %struct.tre_ast_node_t** %179, align 8,\l... !tbaa !1653\l  %189 = getelementptr inbounds %struct.tre_iteration_t,\l... %struct.tre_iteration_t* %178, i64 0, i32 1\l  %190 = load i32, i32* %189, align 8, !tbaa !1655\l  %191 = getelementptr inbounds %struct.tre_iteration_t,\l... %struct.tre_iteration_t* %178, i64 0, i32 2\l  %192 = load i32, i32* %191, align 4, !tbaa !1656\l  %193 = getelementptr inbounds %struct.tre_iteration_t,\l... %struct.tre_iteration_t* %178, i64 0, i32 3\l  %194 = load i8, i8* %193, align 8\l  %195 = and i8 %194, 1\l  %196 = zext i8 %195 to i32\l  %197 = tail call fastcc %struct.tre_ast_node_t*\l... @tre_ast_new_iter(%struct.tre_mem_struct* %0, %struct.tre_ast_node_t* %188,\l... i32 %190, i32 %192, i32 %196) #41\l  store %struct.tre_ast_node_t* %197, %struct.tre_ast_node_t** %24, align 8,\l... !tbaa !1649\l  %198 = icmp eq %struct.tre_ast_node_t* %197, null\l  br i1 %198, label %210, label %199\l|{<s0>T|<s1>F}}"];
	Node0x19061f0:s0 -> Node0x19062e0;
	Node0x19061f0:s1 -> Node0x1906240;
	Node0x1906240 [shape=record,label="{%199:\l199:                                              \l  %200 = getelementptr inbounds %struct.tre_ast_node_t,\l... %struct.tre_ast_node_t* %197, i64 0, i32 1\l  %201 = bitcast i8** %200 to %struct.tre_iteration_t**\l  %202 = load %struct.tre_iteration_t*, %struct.tre_iteration_t** %201, align\l... 8, !tbaa !1642\l  %203 = getelementptr inbounds %struct.tre_iteration_t,\l... %struct.tre_iteration_t* %202, i64 0, i32 0\l  br label %204\l}"];
	Node0x1906240 -> Node0x1906290;
	Node0x1906290 [shape=record,label="{%204:\l204:                                              \l  %205 = phi %struct.tre_ast_node_t** [ %24, %27 ], [ %24, %40 ], [ %39, %34\l... ], [ %24, %99 ], [ %24, %95 ], [ %114, %135 ], [ %151, %173 ], [ %203, %199 ]\l  %206 = phi i32 [ %23, %27 ], [ %23, %40 ], [ %23, %34 ], [ %82, %99 ], [\l... %82, %95 ], [ %23, %135 ], [ %23, %173 ], [ %23, %199 ]\l  %207 = phi i32 [ %22, %27 ], [ %22, %40 ], [ %22, %34 ], [ %83, %99 ], [\l... %83, %95 ], [ %22, %135 ], [ %22, %173 ], [ %22, %199 ]\l  %208 = phi i32 [ 0, %27 ], [ 0, %40 ], [ 0, %34 ], [ %96, %99 ], [ %96, %95\l... ], [ %136, %135 ], [ %174, %173 ], [ 0, %199 ]\l  %209 = icmp eq i32 %208, 0\l  br i1 %209, label %21, label %210\l|{<s0>T|<s1>F}}"];
	Node0x1906290:s0 -> Node0x18e58d0;
	Node0x1906290:s1 -> Node0x19062e0;
	Node0x19062e0 [shape=record,label="{%210:\l210:                                              \l  %211 = phi i32 [ 0, %8 ], [ %22, %187 ], [ %22, %184 ], [ %22, %175 ], [\l... %22, %168 ], [ %22, %165 ], [ %22, %161 ], [ %22, %158 ], [ %22, %147 ], [\l... %22, %137 ], [ %22, %130 ], [ %22, %127 ], [ %22, %122 ], [ %22, %119 ], [\l... %22, %110 ], [ %22, %100 ], [ %207, %204 ], [ %22, %21 ]\l  %212 = phi i32 [ %13, %8 ], [ 12, %187 ], [ %185, %184 ], [ %182, %175 ], [\l... %171, %168 ], [ %166, %165 ], [ %163, %161 ], [ %159, %158 ], [ %156, %147 ],\l... [ 12, %137 ], [ %133, %130 ], [ %128, %127 ], [ %125, %122 ], [ %120, %119 ],\l... [ %117, %110 ], [ 12, %100 ], [ %208, %204 ], [ 0, %21 ]\l  %213 = load i32, i32* %4, align 4, !tbaa !1648\l  %214 = add nsw i32 %213, %211\l  store i32 %214, i32* %4, align 4, !tbaa !1648\l  ret i32 %212\l}"];
}
