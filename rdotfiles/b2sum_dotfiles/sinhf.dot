digraph "CFG for 'sinhf' function" {
	label="CFG for 'sinhf' function";

	Node0x1a10dc0 [shape=record,label="{%1:\l  %2 = bitcast float %0 to i32\l  %3 = tail call float @llvm.experimental.constrained.fptrunc.f32.f64(double\l... 5.000000e-01, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %4 = icmp slt i32 %2, 0\l  %5 = fneg float %3\l  %6 = select i1 %4, float %5, float %3\l  %7 = and i32 %2, 2147483647\l  %8 = bitcast i32 %7 to float\l  %9 = icmp ult i32 %7, 1118925335\l  br i1 %9, label %10, label %30\l|{<s0>T|<s1>F}}"];
	Node0x1a10dc0:s0 -> Node0x1a10e10;
	Node0x1a10dc0:s1 -> Node0x1a10f50;
	Node0x1a10e10 [shape=record,label="{%10:\l10:                                               \l  %11 = tail call float @expm1f(float %8) #41\l  %12 = icmp ult i32 %7, 1065353216\l  br i1 %12, label %13, label %24\l|{<s0>T|<s1>F}}"];
	Node0x1a10e10:s0 -> Node0x1a10e60;
	Node0x1a10e10:s1 -> Node0x1a10f00;
	Node0x1a10e60 [shape=record,label="{%13:\l13:                                               \l  %14 = icmp ult i32 %7, 964689920\l  br i1 %14, label %35, label %15\l|{<s0>T|<s1>F}}"];
	Node0x1a10e60:s0 -> Node0x1a10fa0;
	Node0x1a10e60:s1 -> Node0x1a10eb0;
	Node0x1a10eb0 [shape=record,label="{%15:\l15:                                               \l  %16 = tail call float @llvm.experimental.constrained.sitofp.f32.i32(i32 2,\l... metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %17 = tail call float @llvm.experimental.constrained.fmul.f32(float %16,\l... float %11, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %18 = tail call float @llvm.experimental.constrained.fmul.f32(float %11,\l... float %11, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %19 = tail call float @llvm.experimental.constrained.sitofp.f32.i32(i32 1,\l... metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %20 = tail call float @llvm.experimental.constrained.fadd.f32(float %11,\l... float %19, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %21 = tail call float @llvm.experimental.constrained.fdiv.f32(float %18,\l... float %20, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %22 = tail call float @llvm.experimental.constrained.fsub.f32(float %17,\l... float %21, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %23 = tail call float @llvm.experimental.constrained.fmul.f32(float %6,\l... float %22, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  br label %35\l}"];
	Node0x1a10eb0 -> Node0x1a10fa0;
	Node0x1a10f00 [shape=record,label="{%24:\l24:                                               \l  %25 = tail call float @llvm.experimental.constrained.sitofp.f32.i32(i32 1,\l... metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %26 = tail call float @llvm.experimental.constrained.fadd.f32(float %11,\l... float %25, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %27 = tail call float @llvm.experimental.constrained.fdiv.f32(float %11,\l... float %26, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %28 = tail call float @llvm.experimental.constrained.fadd.f32(float %11,\l... float %27, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %29 = tail call float @llvm.experimental.constrained.fmul.f32(float %6,\l... float %28, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  br label %35\l}"];
	Node0x1a10f00 -> Node0x1a10fa0;
	Node0x1a10f50 [shape=record,label="{%30:\l30:                                               \l  %31 = tail call float @llvm.experimental.constrained.sitofp.f32.i32(i32 2,\l... metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %32 = tail call float @llvm.experimental.constrained.fmul.f32(float %31,\l... float %6, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %33 = tail call float @__expo2f(float %8) #41\l  %34 = tail call float @llvm.experimental.constrained.fmul.f32(float %32,\l... float %33, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  br label %35\l}"];
	Node0x1a10f50 -> Node0x1a10fa0;
	Node0x1a10fa0 [shape=record,label="{%35:\l35:                                               \l  %36 = phi float [ %23, %15 ], [ %29, %24 ], [ %34, %30 ], [ %0, %13 ]\l  ret float %36\l}"];
}
