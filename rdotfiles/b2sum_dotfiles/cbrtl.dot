digraph "CFG for 'cbrtl' function" {
	label="CFG for 'cbrtl' function";

	Node0x1e5f290 [shape=record,label="{%1:\l  %2 = bitcast x86_fp80 %0 to i80\l  %3 = lshr i80 %2, 64\l  %4 = trunc i80 %3 to i32\l  %5 = and i32 %4, 32767\l  %6 = and i32 %4, 32768\l  switch i32 %5, label %19 [\l    i32 32767, label %7\l    i32 0, label %9\l  ]\l|{<s0>def|<s1>32767|<s2>0}}"];
	Node0x1e5f290:s0 -> Node0x1e5f850;
	Node0x1e5f290:s1 -> Node0x1e5f310;
	Node0x1e5f290:s2 -> Node0x1e5f7b0;
	Node0x1e5f310 [shape=record,label="{%7:\l7:                                                \l  %8 = tail call x86_fp80 @llvm.experimental.constrained.fadd.f80(x86_fp80 %0,\l... x86_fp80 %0, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  br label %87\l}"];
	Node0x1e5f310 -> Node0x1e5f9e0;
	Node0x1e5f7b0 [shape=record,label="{%9:\l9:                                                \l  %10 = tail call x86_fp80 @llvm.experimental.constrained.fpext.f80.f64(double\l... 0x4770000000000000, metadata !fpexcept.ignore) #40\l  %11 = tail call x86_fp80 @llvm.experimental.constrained.fmul.f80(x86_fp80\l... %0, x86_fp80 %10, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %12 = bitcast x86_fp80 %11 to i80\l  %13 = lshr i80 %12, 64\l  %14 = trunc i80 %13 to i32\l  %15 = and i32 %14, 32767\l  %16 = icmp eq i32 %15, 0\l  br i1 %16, label %87, label %17\l|{<s0>T|<s1>F}}"];
	Node0x1e5f7b0:s0 -> Node0x1e5f9e0;
	Node0x1e5f7b0:s1 -> Node0x1e5f800;
	Node0x1e5f800 [shape=record,label="{%17:\l17:                                               \l  %18 = add nsw i32 %15, -120\l  br label %19\l}"];
	Node0x1e5f800 -> Node0x1e5f850;
	Node0x1e5f850 [shape=record,label="{%19:\l19:                                               \l  %20 = phi i80 [ %2, %1 ], [ %12, %17 ]\l  %21 = phi i32 [ %5, %1 ], [ %18, %17 ]\l  %22 = add nsw i32 %21, -16383\l  %23 = and i80 %20, 18446744073709551615\l  %24 = or i80 %23, 302213008159583584124928\l  %25 = bitcast i80 %24 to x86_fp80\l  %26 = srem i32 %22, 3\l  switch i32 %26, label %36 [\l    i32 1, label %27\l    i32 -2, label %27\l    i32 2, label %29\l    i32 -1, label %29\l  ]\l|{<s0>def|<s1>1|<s2>-2|<s3>2|<s4>-1}}"];
	Node0x1e5f850:s0 -> Node0x1e5f990;
	Node0x1e5f850:s1 -> Node0x1e5f8a0;
	Node0x1e5f850:s2 -> Node0x1e5f8a0;
	Node0x1e5f850:s3 -> Node0x1e5f8f0;
	Node0x1e5f850:s4 -> Node0x1e5f8f0;
	Node0x1e5f8a0 [shape=record,label="{%27:\l27:                                               \l  %28 = tail call x86_fp80 @llvm.experimental.constrained.sitofp.f80.i32(i32\l... 2, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  br label %31\l}"];
	Node0x1e5f8a0 -> Node0x1e5f940;
	Node0x1e5f8f0 [shape=record,label="{%29:\l29:                                               \l  %30 = tail call x86_fp80 @llvm.experimental.constrained.sitofp.f80.i32(i32\l... 4, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  br label %31\l}"];
	Node0x1e5f8f0 -> Node0x1e5f940;
	Node0x1e5f940 [shape=record,label="{%31:\l31:                                               \l  %32 = phi x86_fp80 [ %30, %29 ], [ %28, %27 ]\l  %33 = phi i32 [ -16385, %29 ], [ -16384, %27 ]\l  %34 = tail call x86_fp80 @llvm.experimental.constrained.fmul.f80(x86_fp80\l... %25, x86_fp80 %32, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %35 = add nsw i32 %21, %33\l  br label %36\l}"];
	Node0x1e5f940 -> Node0x1e5f990;
	Node0x1e5f990 [shape=record,label="{%36:\l36:                                               \l  %37 = phi x86_fp80 [ %25, %19 ], [ %34, %31 ]\l  %38 = phi i32 [ %22, %19 ], [ %35, %31 ]\l  %39 = tail call x86_fp80 @llvm.experimental.constrained.fpext.f80.f64(double\l... 1.000000e+00, metadata !fpexcept.ignore) #40\l  %40 = sdiv i32 %38, 3\l  %41 = add nsw i32 %40, 16383\l  %42 = bitcast x86_fp80 %39 to i80\l  %43 = or i32 %41, %6\l  %44 = zext i32 %43 to i80\l  %45 = shl i80 %44, 64\l  %46 = and i80 %42, 18446744073709551615\l  %47 = or i80 %45, %46\l  %48 = bitcast i80 %47 to x86_fp80\l  %49 = tail call float\l... @llvm.experimental.constrained.fptrunc.f32.f80(x86_fp80 %37, metadata\l... !round.dynamic, metadata !fpexcept.ignore) #40\l  %50 = bitcast float %49 to i32\l  %51 = and i32 %50, 2147483647\l  %52 = udiv i32 %51, 3\l  %53 = add nuw nsw i32 %52, 709958130\l  %54 = bitcast i32 %53 to float\l  %55 = tail call double\l... @llvm.experimental.constrained.fptrunc.f64.f80(x86_fp80 %37, metadata\l... !round.dynamic, metadata !fpexcept.ignore) #40\l  %56 = tail call double @llvm.experimental.constrained.fpext.f64.f32(float\l... %54, metadata !fpexcept.ignore) #40\l  %57 = tail call double @llvm.experimental.constrained.fmul.f64(double %56,\l... double %56, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %58 = tail call double @llvm.experimental.constrained.fmul.f64(double %57,\l... double %56, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %59 = tail call double @llvm.experimental.constrained.fadd.f64(double %55,\l... double %55, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %60 = tail call double @llvm.experimental.constrained.fadd.f64(double %59,\l... double %58, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %61 = tail call double @llvm.experimental.constrained.fmul.f64(double %56,\l... double %60, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %62 = tail call double @llvm.experimental.constrained.fadd.f64(double %55,\l... double %58, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %63 = tail call double @llvm.experimental.constrained.fadd.f64(double %62,\l... double %58, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %64 = tail call double @llvm.experimental.constrained.fdiv.f64(double %61,\l... double %63, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %65 = tail call double @llvm.experimental.constrained.fmul.f64(double %64,\l... double %64, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %66 = tail call double @llvm.experimental.constrained.fmul.f64(double %65,\l... double %64, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %67 = tail call double @llvm.experimental.constrained.fadd.f64(double %55,\l... double %55, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %68 = tail call double @llvm.experimental.constrained.fadd.f64(double %67,\l... double %66, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %69 = tail call double @llvm.experimental.constrained.fmul.f64(double %64,\l... double %68, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %70 = tail call double @llvm.experimental.constrained.fadd.f64(double %55,\l... double %66, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %71 = tail call double @llvm.experimental.constrained.fadd.f64(double %70,\l... double %66, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %72 = tail call double @llvm.experimental.constrained.fdiv.f64(double %69,\l... double %71, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %73 = tail call x86_fp80 @llvm.experimental.constrained.fpext.f80.f64(double\l... %72, metadata !fpexcept.ignore) #40\l  %74 = tail call x86_fp80 @llvm.experimental.constrained.fadd.f80(x86_fp80\l... 0xK401F8000000000000000, x86_fp80 0xK3FE08000000000000000, metadata\l... !round.dynamic, metadata !fpexcept.ignore) #40\l  %75 = tail call x86_fp80 @llvm.experimental.constrained.fadd.f80(x86_fp80\l... %73, x86_fp80 %74, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %76 = tail call x86_fp80 @llvm.experimental.constrained.fpext.f80.f64(double\l... 0x41F0000000000000, metadata !fpexcept.ignore) #40\l  %77 = tail call x86_fp80 @llvm.experimental.constrained.fsub.f80(x86_fp80\l... %75, x86_fp80 %76, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %78 = tail call x86_fp80 @llvm.experimental.constrained.fmul.f80(x86_fp80\l... %77, x86_fp80 %77, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %79 = tail call x86_fp80 @llvm.experimental.constrained.fdiv.f80(x86_fp80\l... %37, x86_fp80 %78, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %80 = tail call x86_fp80 @llvm.experimental.constrained.fadd.f80(x86_fp80\l... %77, x86_fp80 %77, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %81 = tail call x86_fp80 @llvm.experimental.constrained.fsub.f80(x86_fp80\l... %79, x86_fp80 %77, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %82 = tail call x86_fp80 @llvm.experimental.constrained.fadd.f80(x86_fp80\l... %80, x86_fp80 %79, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %83 = tail call x86_fp80 @llvm.experimental.constrained.fdiv.f80(x86_fp80\l... %81, x86_fp80 %82, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %84 = tail call x86_fp80 @llvm.experimental.constrained.fmul.f80(x86_fp80\l... %77, x86_fp80 %83, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %85 = tail call x86_fp80 @llvm.experimental.constrained.fadd.f80(x86_fp80\l... %77, x86_fp80 %84, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %86 = tail call x86_fp80 @llvm.experimental.constrained.fmul.f80(x86_fp80\l... %85, x86_fp80 %48, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  br label %87\l}"];
	Node0x1e5f990 -> Node0x1e5f9e0;
	Node0x1e5f9e0 [shape=record,label="{%87:\l87:                                               \l  %88 = phi x86_fp80 [ %8, %7 ], [ %86, %36 ], [ %0, %9 ]\l  ret x86_fp80 %88\l}"];
}
