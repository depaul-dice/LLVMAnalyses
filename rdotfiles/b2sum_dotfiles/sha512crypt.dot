digraph "CFG for 'sha512crypt' function" {
	label="CFG for 'sha512crypt' function";

	Node0x1abd930 [shape=record,label="{%3:\l  %4 = alloca %struct.sha512, align 16\l  %5 = alloca [64 x i8], align 16\l  %6 = alloca [64 x i8], align 16\l  %7 = alloca [64 x i8], align 16\l  %8 = alloca [20 x i8], align 16\l  %9 = alloca i8*, align 8\l  %10 = bitcast %struct.sha512* %4 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 200, i8* nonnull %10) #40\l  %11 = getelementptr inbounds [64 x i8], [64 x i8]* %5, i64 0, i64 0\l  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %11) #40\l  %12 = getelementptr inbounds [64 x i8], [64 x i8]* %6, i64 0, i64 0\l  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %12) #40\l  %13 = getelementptr inbounds [64 x i8], [64 x i8]* %7, i64 0, i64 0\l  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %13) #40\l  %14 = getelementptr inbounds [20 x i8], [20 x i8]* %8, i64 0, i64 0\l  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %14) #40\l  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(20)\l... %14, i8 0, i64 20, i1 false)\l  br label %15\l}"];
	Node0x1abd930 -> Node0x1abd980;
	Node0x1abd980 [shape=record,label="{%15:\l15:                                               \l  %16 = phi i64 [ 0, %3 ], [ %21, %20 ]\l  %17 = getelementptr inbounds i8, i8* %0, i64 %16\l  %18 = load i8, i8* %17, align 1, !tbaa !1632\l  %19 = icmp eq i8 %18, 0\l  br i1 %19, label %23, label %20\l|{<s0>T|<s1>F}}"];
	Node0x1abd980:s0 -> Node0x1abda20;
	Node0x1abd980:s1 -> Node0x1abd9d0;
	Node0x1abd9d0 [shape=record,label="{%20:\l20:                                               \l  %21 = add nuw nsw i64 %16, 1\l  %22 = icmp eq i64 %21, 257\l  br i1 %22, label %199, label %15\l|{<s0>T|<s1>F}}"];
	Node0x1abd9d0:s0 -> Node0x1abe6a0;
	Node0x1abd9d0:s1 -> Node0x1abd980;
	Node0x1abda20 [shape=record,label="{%23:\l23:                                               \l  %24 = trunc i64 %16 to i32\l  %25 = tail call i32 @strncmp(i8* %1, i8* getelementptr inbounds ([4 x i8],\l... [4 x i8]* @.str.1.109, i64 0, i64 0), i64 3) #41\l  %26 = icmp eq i32 %25, 0\l  br i1 %26, label %27, label %199\l|{<s0>T|<s1>F}}"];
	Node0x1abda20:s0 -> Node0x1abda70;
	Node0x1abda20:s1 -> Node0x1abe6a0;
	Node0x1abda70 [shape=record,label="{%27:\l27:                                               \l  %28 = getelementptr inbounds i8, i8* %1, i64 3\l  %29 = tail call i32 @strncmp(i8* nonnull %28, i8* getelementptr inbounds ([8\l... x i8], [8 x i8]* @.str.2.110, i64 0, i64 0), i64 7) #41\l  %30 = icmp eq i32 %29, 0\l  br i1 %30, label %31, label %54\l|{<s0>T|<s1>F}}"];
	Node0x1abda70:s0 -> Node0x1abdac0;
	Node0x1abda70:s1 -> Node0x1abdcf0;
	Node0x1abdac0 [shape=record,label="{%31:\l31:                                               \l  %32 = bitcast i8** %9 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #40\l  %33 = getelementptr inbounds i8, i8* %1, i64 10\l  %34 = load i8, i8* %33, align 1, !tbaa !1632\l  %35 = sext i8 %34 to i32\l  %36 = add nsw i32 %35, -48\l  %37 = icmp ult i32 %36, 10\l  br i1 %37, label %38, label %50\l|{<s0>T|<s1>F}}"];
	Node0x1abdac0:s0 -> Node0x1abdb10;
	Node0x1abdac0:s1 -> Node0x1abdc50;
	Node0x1abdb10 [shape=record,label="{%38:\l38:                                               \l  %39 = call i64 @strtoul(i8* nonnull %33, i8** nonnull %9, i32 10) #41\l  %40 = load i8*, i8** %9, align 8, !tbaa !1635\l  %41 = load i8, i8* %40, align 1, !tbaa !1632\l  %42 = icmp eq i8 %41, 36\l  br i1 %42, label %43, label %50\l|{<s0>T|<s1>F}}"];
	Node0x1abdb10:s0 -> Node0x1abdb60;
	Node0x1abdb10:s1 -> Node0x1abdc50;
	Node0x1abdb60 [shape=record,label="{%43:\l43:                                               \l  %44 = getelementptr inbounds i8, i8* %40, i64 1\l  %45 = icmp ult i64 %39, 1000\l  br i1 %45, label %51, label %46\l|{<s0>T|<s1>F}}"];
	Node0x1abdb60:s0 -> Node0x1abdca0;
	Node0x1abdb60:s1 -> Node0x1abdbb0;
	Node0x1abdbb0 [shape=record,label="{%46:\l46:                                               \l  %47 = icmp ugt i64 %39, 9999999\l  br i1 %47, label %50, label %48\l|{<s0>T|<s1>F}}"];
	Node0x1abdbb0:s0 -> Node0x1abdc50;
	Node0x1abdbb0:s1 -> Node0x1abdc00;
	Node0x1abdc00 [shape=record,label="{%48:\l48:                                               \l  %49 = trunc i64 %39 to i32\l  br label %51\l}"];
	Node0x1abdc00 -> Node0x1abdca0;
	Node0x1abdc50 [shape=record,label="{%50:\l50:                                               \l  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #40\l  br label %199\l}"];
	Node0x1abdc50 -> Node0x1abe6a0;
	Node0x1abdca0 [shape=record,label="{%51:\l51:                                               \l  %52 = phi i32 [ %49, %48 ], [ 1000, %43 ]\l  %53 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %14, i8* getelementptr\l... inbounds ([11 x i8], [11 x i8]* @.str.3.111, i64 0, i64 0), i32 %52) #41\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #40\l  br label %54\l}"];
	Node0x1abdca0 -> Node0x1abdcf0;
	Node0x1abdcf0 [shape=record,label="{%54:\l54:                                               \l  %55 = phi i32 [ %52, %51 ], [ 5000, %27 ]\l  %56 = phi i8* [ %44, %51 ], [ %28, %27 ]\l  br label %57\l}"];
	Node0x1abdcf0 -> Node0x1abdd40;
	Node0x1abdd40 [shape=record,label="{%57:\l57:                                               \l  %58 = phi i64 [ 0, %54 ], [ %62, %61 ]\l  %59 = getelementptr inbounds i8, i8* %56, i64 %58\l  %60 = load i8, i8* %59, align 1, !tbaa !1632\l  switch i8 %60, label %61 [\l    i8 0, label %64\l    i8 36, label %64\l    i8 10, label %199\l    i8 58, label %199\l  ]\l|{<s0>def|<s1>0|<s2>36|<s3>10|<s4>58}}"];
	Node0x1abdd40:s0 -> Node0x1abdd90;
	Node0x1abdd40:s1 -> Node0x1abdde0;
	Node0x1abdd40:s2 -> Node0x1abdde0;
	Node0x1abdd40:s3 -> Node0x1abe6a0;
	Node0x1abdd40:s4 -> Node0x1abe6a0;
	Node0x1abdd90 [shape=record,label="{%61:\l61:                                               \l  %62 = add nuw nsw i64 %58, 1\l  %63 = icmp eq i64 %62, 16\l  br i1 %63, label %66, label %57\l|{<s0>T|<s1>F}}"];
	Node0x1abdd90:s0 -> Node0x1abde30;
	Node0x1abdd90:s1 -> Node0x1abdd40;
	Node0x1abdde0 [shape=record,label="{%64:\l64:                                               \l  %65 = trunc i64 %58 to i32\l  br label %66\l}"];
	Node0x1abdde0 -> Node0x1abde30;
	Node0x1abde30 [shape=record,label="{%66:\l66:                                               \l  %67 = phi i32 [ %65, %64 ], [ 16, %61 ]\l  %68 = bitcast %struct.sha512* %4 to \<2 x i64\>*\l  store \<2 x i64\> \<i64 0, i64 7640891576956012808\>, \<2 x i64\>* %68, align 16,\l... !tbaa !1637\l  %69 = getelementptr inbounds %struct.sha512, %struct.sha512* %4, i64 0, i32\l... 1, i64 1\l  %70 = bitcast i64* %69 to \<2 x i64\>*\l  store \<2 x i64\> \<i64 -4942790177534073029, i64 4354685564936845355\>, \<2 x\l... i64\>* %70, align 8, !tbaa !1637\l  %71 = getelementptr inbounds %struct.sha512, %struct.sha512* %4, i64 0, i32\l... 1, i64 3\l  %72 = bitcast i64* %71 to \<2 x i64\>*\l  store \<2 x i64\> \<i64 -6534734903238641935, i64 5840696475078001361\>, \<2 x\l... i64\>* %72, align 8, !tbaa !1637\l  %73 = getelementptr inbounds %struct.sha512, %struct.sha512* %4, i64 0, i32\l... 1, i64 5\l  %74 = bitcast i64* %73 to \<2 x i64\>*\l  store \<2 x i64\> \<i64 -7276294671716946913, i64 2270897969802886507\>, \<2 x\l... i64\>* %74, align 8, !tbaa !1637\l  %75 = getelementptr inbounds %struct.sha512, %struct.sha512* %4, i64 0, i32\l... 1, i64 7\l  store i64 6620516959819538809, i64* %75, align 8, !tbaa !1637\l  %76 = and i64 %16, 4294967295\l  call fastcc void @sha512_update(%struct.sha512* nonnull %4, i8* %0, i64 %76)\l... #42\l  %77 = zext i32 %67 to i64\l  call fastcc void @sha512_update(%struct.sha512* nonnull %4, i8* nonnull %56,\l... i64 %77) #42\l  call fastcc void @sha512_update(%struct.sha512* nonnull %4, i8* %0, i64 %76)\l... #42\l  call fastcc void @sha512_sum(%struct.sha512* nonnull %4, i8* nonnull %11) #42\l  %78 = bitcast %struct.sha512* %4 to \<2 x i64\>*\l  store \<2 x i64\> \<i64 0, i64 7640891576956012808\>, \<2 x i64\>* %78, align 16,\l... !tbaa !1637\l  %79 = bitcast i64* %69 to \<2 x i64\>*\l  store \<2 x i64\> \<i64 -4942790177534073029, i64 4354685564936845355\>, \<2 x\l... i64\>* %79, align 8, !tbaa !1637\l  %80 = bitcast i64* %71 to \<2 x i64\>*\l  store \<2 x i64\> \<i64 -6534734903238641935, i64 5840696475078001361\>, \<2 x\l... i64\>* %80, align 8, !tbaa !1637\l  %81 = bitcast i64* %73 to \<2 x i64\>*\l  store \<2 x i64\> \<i64 -7276294671716946913, i64 2270897969802886507\>, \<2 x\l... i64\>* %81, align 8, !tbaa !1637\l  store i64 6620516959819538809, i64* %75, align 8, !tbaa !1637\l  call fastcc void @sha512_update(%struct.sha512* nonnull %4, i8* %0, i64 %76)\l... #42\l  call fastcc void @sha512_update(%struct.sha512* nonnull %4, i8* nonnull %56,\l... i64 %77) #42\l  call fastcc void @hashmd(%struct.sha512* nonnull %4, i32 %24, i8* nonnull\l... %11) #42\l  %82 = icmp eq i32 %24, 0\l  br i1 %82, label %92, label %83\l|{<s0>T|<s1>F}}"];
	Node0x1abde30:s0 -> Node0x1abdfc0;
	Node0x1abde30:s1 -> Node0x1abde80;
	Node0x1abde80 [shape=record,label="{%83:\l83:                                               \l  %84 = phi i32 [ %90, %89 ], [ %24, %66 ]\l  %85 = and i32 %84, 1\l  %86 = icmp eq i32 %85, 0\l  br i1 %86, label %88, label %87\l|{<s0>T|<s1>F}}"];
	Node0x1abde80:s0 -> Node0x1abdf20;
	Node0x1abde80:s1 -> Node0x1abded0;
	Node0x1abded0 [shape=record,label="{%87:\l87:                                               \l  call fastcc void @sha512_update(%struct.sha512* nonnull %4, i8* nonnull %11,\l... i64 64) #42\l  br label %89\l}"];
	Node0x1abded0 -> Node0x1abdf70;
	Node0x1abdf20 [shape=record,label="{%88:\l88:                                               \l  call fastcc void @sha512_update(%struct.sha512* nonnull %4, i8* %0, i64 %76)\l... #42\l  br label %89\l}"];
	Node0x1abdf20 -> Node0x1abdf70;
	Node0x1abdf70 [shape=record,label="{%89:\l89:                                               \l  %90 = lshr i32 %84, 1\l  %91 = icmp eq i32 %90, 0\l  br i1 %91, label %92, label %83\l|{<s0>T|<s1>F}}"];
	Node0x1abdf70:s0 -> Node0x1abdfc0;
	Node0x1abdf70:s1 -> Node0x1abde80;
	Node0x1abdfc0 [shape=record,label="{%92:\l92:                                               \l  call fastcc void @sha512_sum(%struct.sha512* nonnull %4, i8* nonnull %11) #42\l  %93 = bitcast %struct.sha512* %4 to \<2 x i64\>*\l  store \<2 x i64\> \<i64 0, i64 7640891576956012808\>, \<2 x i64\>* %93, align 16,\l... !tbaa !1637\l  %94 = bitcast i64* %69 to \<2 x i64\>*\l  store \<2 x i64\> \<i64 -4942790177534073029, i64 4354685564936845355\>, \<2 x\l... i64\>* %94, align 8, !tbaa !1637\l  %95 = bitcast i64* %71 to \<2 x i64\>*\l  store \<2 x i64\> \<i64 -6534734903238641935, i64 5840696475078001361\>, \<2 x\l... i64\>* %95, align 8, !tbaa !1637\l  %96 = bitcast i64* %73 to \<2 x i64\>*\l  store \<2 x i64\> \<i64 -7276294671716946913, i64 2270897969802886507\>, \<2 x\l... i64\>* %96, align 8, !tbaa !1637\l  store i64 6620516959819538809, i64* %75, align 8, !tbaa !1637\l  %97 = icmp eq i32 %24, 0\l  br i1 %97, label %102, label %98\l|{<s0>T|<s1>F}}"];
	Node0x1abdfc0:s0 -> Node0x1abe060;
	Node0x1abdfc0:s1 -> Node0x1abe010;
	Node0x1abe010 [shape=record,label="{%98:\l98:                                               \l  %99 = phi i32 [ %100, %98 ], [ 0, %92 ]\l  call fastcc void @sha512_update(%struct.sha512* nonnull %4, i8* %0, i64 %76)\l... #42\l  %100 = add nuw nsw i32 %99, 1\l  %101 = icmp eq i32 %100, %24\l  br i1 %101, label %102, label %98\l|{<s0>T|<s1>F}}"];
	Node0x1abe010:s0 -> Node0x1abe060;
	Node0x1abe010:s1 -> Node0x1abe010;
	Node0x1abe060 [shape=record,label="{%102:\l102:                                              \l  call fastcc void @sha512_sum(%struct.sha512* nonnull %4, i8* nonnull %12) #42\l  %103 = bitcast %struct.sha512* %4 to \<2 x i64\>*\l  store \<2 x i64\> \<i64 0, i64 7640891576956012808\>, \<2 x i64\>* %103, align 16,\l... !tbaa !1637\l  %104 = bitcast i64* %69 to \<2 x i64\>*\l  store \<2 x i64\> \<i64 -4942790177534073029, i64 4354685564936845355\>, \<2 x\l... i64\>* %104, align 8, !tbaa !1637\l  %105 = bitcast i64* %71 to \<2 x i64\>*\l  store \<2 x i64\> \<i64 -6534734903238641935, i64 5840696475078001361\>, \<2 x\l... i64\>* %105, align 8, !tbaa !1637\l  %106 = bitcast i64* %73 to \<2 x i64\>*\l  store \<2 x i64\> \<i64 -7276294671716946913, i64 2270897969802886507\>, \<2 x\l... i64\>* %106, align 8, !tbaa !1637\l  store i64 6620516959819538809, i64* %75, align 8, !tbaa !1637\l  br label %107\l}"];
	Node0x1abe060 -> Node0x1abe0b0;
	Node0x1abe0b0 [shape=record,label="{%107:\l107:                                              \l  %108 = phi i32 [ 0, %102 ], [ %109, %107 ]\l  call fastcc void @sha512_update(%struct.sha512* nonnull %4, i8* %56, i64\l... %77) #42\l  %109 = add nuw nsw i32 %108, 1\l  %110 = load i8, i8* %11, align 16, !tbaa !1632\l  %111 = zext i8 %110 to i32\l  %112 = add nuw nsw i32 %111, 16\l  %113 = icmp ult i32 %109, %112\l  br i1 %113, label %107, label %114\l|{<s0>T|<s1>F}}"];
	Node0x1abe0b0:s0 -> Node0x1abe0b0;
	Node0x1abe0b0:s1 -> Node0x1abe100;
	Node0x1abe100 [shape=record,label="{%114:\l114:                                              \l  call fastcc void @sha512_sum(%struct.sha512* nonnull %4, i8* nonnull %13) #42\l  %115 = icmp eq i32 %55, 0\l  br i1 %115, label %141, label %116\l|{<s0>T|<s1>F}}"];
	Node0x1abe100:s0 -> Node0x1abe510;
	Node0x1abe100:s1 -> Node0x1abe150;
	Node0x1abe150 [shape=record,label="{%116:\l116:                                              \l  %117 = bitcast %struct.sha512* %4 to \<2 x i64\>*\l  %118 = bitcast i64* %69 to \<2 x i64\>*\l  %119 = bitcast i64* %71 to \<2 x i64\>*\l  %120 = bitcast i64* %73 to \<2 x i64\>*\l  br label %121\l}"];
	Node0x1abe150 -> Node0x1abe1a0;
	Node0x1abe1a0 [shape=record,label="{%121:\l121:                                              \l  %122 = phi i32 [ %139, %138 ], [ 0, %116 ]\l  store \<2 x i64\> \<i64 0, i64 7640891576956012808\>, \<2 x i64\>* %117, align 16,\l... !tbaa !1637\l  store \<2 x i64\> \<i64 -4942790177534073029, i64 4354685564936845355\>, \<2 x\l... i64\>* %118, align 8, !tbaa !1637\l  store \<2 x i64\> \<i64 -6534734903238641935, i64 5840696475078001361\>, \<2 x\l... i64\>* %119, align 8, !tbaa !1637\l  store \<2 x i64\> \<i64 -7276294671716946913, i64 2270897969802886507\>, \<2 x\l... i64\>* %120, align 8, !tbaa !1637\l  store i64 6620516959819538809, i64* %75, align 8, !tbaa !1637\l  %123 = and i32 %122, 1\l  %124 = icmp ne i32 %123, 0\l  br i1 %124, label %125, label %126\l|{<s0>T|<s1>F}}"];
	Node0x1abe1a0:s0 -> Node0x1abe1f0;
	Node0x1abe1a0:s1 -> Node0x1abe240;
	Node0x1abe1f0 [shape=record,label="{%125:\l125:                                              \l  call fastcc void @hashmd(%struct.sha512* nonnull %4, i32 %24, i8* nonnull\l... %12) #42\l  br label %127\l}"];
	Node0x1abe1f0 -> Node0x1abe290;
	Node0x1abe240 [shape=record,label="{%126:\l126:                                              \l  call fastcc void @sha512_update(%struct.sha512* nonnull %4, i8* nonnull %11,\l... i64 64) #42\l  br label %127\l}"];
	Node0x1abe240 -> Node0x1abe290;
	Node0x1abe290 [shape=record,label="{%127:\l127:                                              \l  %128 = urem i32 %122, 3\l  %129 = icmp eq i32 %128, 0\l  br i1 %129, label %131, label %130\l|{<s0>T|<s1>F}}"];
	Node0x1abe290:s0 -> Node0x1abe330;
	Node0x1abe290:s1 -> Node0x1abe2e0;
	Node0x1abe2e0 [shape=record,label="{%130:\l130:                                              \l  call fastcc void @sha512_update(%struct.sha512* nonnull %4, i8* nonnull %13,\l... i64 %77) #42\l  br label %131\l}"];
	Node0x1abe2e0 -> Node0x1abe330;
	Node0x1abe330 [shape=record,label="{%131:\l131:                                              \l  %132 = urem i32 %122, 7\l  %133 = icmp eq i32 %132, 0\l  br i1 %133, label %135, label %134\l|{<s0>T|<s1>F}}"];
	Node0x1abe330:s0 -> Node0x1abe3d0;
	Node0x1abe330:s1 -> Node0x1abe380;
	Node0x1abe380 [shape=record,label="{%134:\l134:                                              \l  call fastcc void @hashmd(%struct.sha512* nonnull %4, i32 %24, i8* nonnull\l... %12) #42\l  br label %135\l}"];
	Node0x1abe380 -> Node0x1abe3d0;
	Node0x1abe3d0 [shape=record,label="{%135:\l135:                                              \l  br i1 %124, label %136, label %137\l|{<s0>T|<s1>F}}"];
	Node0x1abe3d0:s0 -> Node0x1abe420;
	Node0x1abe3d0:s1 -> Node0x1abe470;
	Node0x1abe420 [shape=record,label="{%136:\l136:                                              \l  call fastcc void @sha512_update(%struct.sha512* nonnull %4, i8* nonnull %11,\l... i64 64) #42\l  br label %138\l}"];
	Node0x1abe420 -> Node0x1abe4c0;
	Node0x1abe470 [shape=record,label="{%137:\l137:                                              \l  call fastcc void @hashmd(%struct.sha512* nonnull %4, i32 %24, i8* nonnull\l... %12) #42\l  br label %138\l}"];
	Node0x1abe470 -> Node0x1abe4c0;
	Node0x1abe4c0 [shape=record,label="{%138:\l138:                                              \l  call fastcc void @sha512_sum(%struct.sha512* nonnull %4, i8* nonnull %11) #42\l  %139 = add nuw i32 %122, 1\l  %140 = icmp eq i32 %139, %55\l  br i1 %140, label %141, label %121\l|{<s0>T|<s1>F}}"];
	Node0x1abe4c0:s0 -> Node0x1abe510;
	Node0x1abe4c0:s1 -> Node0x1abe1a0;
	Node0x1abe510 [shape=record,label="{%141:\l141:                                              \l  %142 = call i32 (i8*, i8*, ...) @sprintf(i8* %2, i8* getelementptr inbounds\l... ([11 x i8], [11 x i8]* @.str.4.112, i64 0, i64 0), i8* nonnull %14, i32 %67,\l... i8* %56) #41\l  %143 = sext i32 %142 to i64\l  %144 = getelementptr inbounds i8, i8* %2, i64 %143\l  br label %145\l}"];
	Node0x1abe510 -> Node0x1abe560;
	Node0x1abe560 [shape=record,label="{%145:\l145:                                              \l  %146 = phi i64 [ 0, %141 ], [ %183, %182 ]\l  %147 = phi i8* [ %144, %141 ], [ %179, %182 ]\l  %148 = getelementptr inbounds [21 x [3 x i8]], [21 x [3 x i8]]*\l... @sha512crypt.perm, i64 0, i64 %146, i64 0\l  %149 = load i8, i8* %148, align 1, !tbaa !1632\l  %150 = zext i8 %149 to i64\l  %151 = getelementptr inbounds [64 x i8], [64 x i8]* %5, i64 0, i64 %150\l  %152 = load i8, i8* %151, align 1, !tbaa !1632\l  %153 = zext i8 %152 to i32\l  %154 = shl nuw nsw i32 %153, 16\l  %155 = getelementptr inbounds [21 x [3 x i8]], [21 x [3 x i8]]*\l... @sha512crypt.perm, i64 0, i64 %146, i64 1\l  %156 = load i8, i8* %155, align 1, !tbaa !1632\l  %157 = zext i8 %156 to i64\l  %158 = getelementptr inbounds [64 x i8], [64 x i8]* %5, i64 0, i64 %157\l  %159 = load i8, i8* %158, align 1, !tbaa !1632\l  %160 = zext i8 %159 to i32\l  %161 = shl nuw nsw i32 %160, 8\l  %162 = or i32 %161, %154\l  %163 = getelementptr inbounds [21 x [3 x i8]], [21 x [3 x i8]]*\l... @sha512crypt.perm, i64 0, i64 %146, i64 2\l  %164 = load i8, i8* %163, align 1, !tbaa !1632\l  %165 = zext i8 %164 to i64\l  %166 = getelementptr inbounds [64 x i8], [64 x i8]* %5, i64 0, i64 %165\l  %167 = load i8, i8* %166, align 1, !tbaa !1632\l  %168 = zext i8 %167 to i32\l  %169 = or i32 %162, %168\l  br label %170\l}"];
	Node0x1abe560 -> Node0x1abe5b0;
	Node0x1abe5b0 [shape=record,label="{%170:\l170:                                              \l  %171 = phi i32 [ %174, %170 ], [ 4, %145 ]\l  %172 = phi i32 [ %180, %170 ], [ %169, %145 ]\l  %173 = phi i8* [ %179, %170 ], [ %147, %145 ]\l  %174 = add nsw i32 %171, -1\l  %175 = and i32 %172, 63\l  %176 = zext i32 %175 to i64\l  %177 = getelementptr inbounds [65 x i8], [65 x i8]* @b64, i64 0, i64 %176\l  %178 = load i8, i8* %177, align 1, !tbaa !1632\l  %179 = getelementptr inbounds i8, i8* %173, i64 1\l  store i8 %178, i8* %173, align 1, !tbaa !1632\l  %180 = lshr i32 %172, 6\l  %181 = icmp ugt i32 %171, 1\l  br i1 %181, label %170, label %182\l|{<s0>T|<s1>F}}"];
	Node0x1abe5b0:s0 -> Node0x1abe5b0;
	Node0x1abe5b0:s1 -> Node0x1abe600;
	Node0x1abe600 [shape=record,label="{%182:\l182:                                              \l  %183 = add nuw nsw i64 %146, 1\l  %184 = icmp eq i64 %183, 21\l  br i1 %184, label %185, label %145\l|{<s0>T|<s1>F}}"];
	Node0x1abe600:s0 -> Node0x1abe650;
	Node0x1abe600:s1 -> Node0x1abe560;
	Node0x1abe650 [shape=record,label="{%185:\l185:                                              \l  %186 = getelementptr inbounds [64 x i8], [64 x i8]* %5, i64 0, i64 63\l  %187 = load i8, i8* %186, align 1, !tbaa !1632\l  %188 = zext i8 %187 to i32\l  %189 = and i32 %188, 63\l  %190 = zext i32 %189 to i64\l  %191 = getelementptr inbounds [65 x i8], [65 x i8]* @b64, i64 0, i64 %190\l  %192 = load i8, i8* %191, align 1, !tbaa !1632\l  %193 = getelementptr inbounds i8, i8* %173, i64 2\l  store i8 %192, i8* %179, align 1, !tbaa !1632\l  %194 = lshr i32 %188, 6\l  %195 = zext i32 %194 to i64\l  %196 = getelementptr inbounds [65 x i8], [65 x i8]* @b64, i64 0, i64 %195\l  %197 = load i8, i8* %196, align 1, !tbaa !1632\l  %198 = getelementptr inbounds i8, i8* %173, i64 3\l  store i8 %197, i8* %193, align 1, !tbaa !1632\l  store i8 0, i8* %198, align 1, !tbaa !1632\l  br label %199\l}"];
	Node0x1abe650 -> Node0x1abe6a0;
	Node0x1abe6a0 [shape=record,label="{%199:\l199:                                              \l  %200 = phi i8* [ %2, %185 ], [ null, %23 ], [ null, %50 ], [ null, %57 ], [\l... null, %57 ], [ null, %20 ]\l  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %14) #40\l  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %13) #40\l  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %12) #40\l  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %11) #40\l  call void @llvm.lifetime.end.p0i8(i64 200, i8* nonnull %10) #40\l  ret i8* %200\l}"];
}
