digraph "CFG for '__sin' function" {
	label="CFG for '__sin' function";

	Node0x16fe970 [shape=record,label="{%3:\l  %4 = tail call double @llvm.experimental.constrained.fmul.f64(double %0,\l... double %0, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %5 = tail call double @llvm.experimental.constrained.fmul.f64(double %4,\l... double %4, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %6 = tail call double @llvm.experimental.constrained.fmul.f64(double %4,\l... double 0x3EC71DE357B1FE7D, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  %7 = tail call double @llvm.experimental.constrained.fadd.f64(double\l... 0xBF2A01A019C161D5, double %6, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  %8 = tail call double @llvm.experimental.constrained.fmul.f64(double %4,\l... double %7, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %9 = tail call double @llvm.experimental.constrained.fadd.f64(double\l... 0x3F8111111110F8A6, double %8, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  %10 = tail call double @llvm.experimental.constrained.fmul.f64(double %4,\l... double %5, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %11 = tail call double @llvm.experimental.constrained.fmul.f64(double %4,\l... double 0x3DE5D93A5ACFD57C, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  %12 = tail call double @llvm.experimental.constrained.fadd.f64(double\l... 0xBE5AE5E68A2B9CEB, double %11, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  %13 = tail call double @llvm.experimental.constrained.fmul.f64(double %10,\l... double %12, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %14 = tail call double @llvm.experimental.constrained.fadd.f64(double %9,\l... double %13, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %15 = tail call double @llvm.experimental.constrained.fmul.f64(double %4,\l... double %0, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %16 = icmp eq i32 %2, 0\l  br i1 %16, label %17, label %22\l|{<s0>T|<s1>F}}"];
	Node0x16fe970:s0 -> Node0x16ffc40;
	Node0x16fe970:s1 -> Node0x16ffc90;
	Node0x16ffc40 [shape=record,label="{%17:\l17:                                               \l  %18 = tail call double @llvm.experimental.constrained.fmul.f64(double %4,\l... double %14, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %19 = tail call double @llvm.experimental.constrained.fadd.f64(double\l... 0xBFC5555555555549, double %18, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  %20 = tail call double @llvm.experimental.constrained.fmul.f64(double %15,\l... double %19, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %21 = tail call double @llvm.experimental.constrained.fadd.f64(double %0,\l... double %20, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  br label %31\l}"];
	Node0x16ffc40 -> Node0x16ffce0;
	Node0x16ffc90 [shape=record,label="{%22:\l22:                                               \l  %23 = tail call double @llvm.experimental.constrained.fmul.f64(double\l... 5.000000e-01, double %1, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  %24 = tail call double @llvm.experimental.constrained.fmul.f64(double %15,\l... double %14, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %25 = tail call double @llvm.experimental.constrained.fsub.f64(double %23,\l... double %24, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %26 = tail call double @llvm.experimental.constrained.fmul.f64(double %4,\l... double %25, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %27 = tail call double @llvm.experimental.constrained.fsub.f64(double %26,\l... double %1, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %28 = tail call double @llvm.experimental.constrained.fmul.f64(double %15,\l... double 0xBFC5555555555549, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  %29 = tail call double @llvm.experimental.constrained.fsub.f64(double %27,\l... double %28, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %30 = tail call double @llvm.experimental.constrained.fsub.f64(double %0,\l... double %29, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  br label %31\l}"];
	Node0x16ffc90 -> Node0x16ffce0;
	Node0x16ffce0 [shape=record,label="{%31:\l31:                                               \l  %32 = phi double [ %21, %17 ], [ %30, %22 ]\l  ret double %32\l}"];
}
