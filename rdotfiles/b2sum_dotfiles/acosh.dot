digraph "CFG for 'acosh' function" {
	label="CFG for 'acosh' function";

	Node0x1ff6c50 [shape=record,label="{%1:\l  %2 = bitcast double %0 to i64\l  %3 = lshr i64 %2, 52\l  %4 = trunc i64 %3 to i32\l  %5 = and i32 %4, 2047\l  %6 = icmp ult i32 %5, 1024\l  br i1 %6, label %7, label %23\l|{<s0>T|<s1>F}}"];
	Node0x1ff6c50:s0 -> Node0x1ff6cd0;
	Node0x1ff6c50:s1 -> Node0x1ff7090;
	Node0x1ff6cd0 [shape=record,label="{%7:\l7:                                                \l  %8 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 1,\l... metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %9 = tail call double @llvm.experimental.constrained.fsub.f64(double %0,\l... double %8, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %10 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 1,\l... metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %11 = tail call double @llvm.experimental.constrained.fsub.f64(double %0,\l... double %10, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %12 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 1,\l... metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %13 = tail call double @llvm.experimental.constrained.fsub.f64(double %0,\l... double %12, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %14 = tail call double @llvm.experimental.constrained.fmul.f64(double %11,\l... double %13, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %15 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 2,\l... metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %16 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 1,\l... metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %17 = tail call double @llvm.experimental.constrained.fsub.f64(double %0,\l... double %16, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %18 = tail call double @llvm.experimental.constrained.fmul.f64(double %15,\l... double %17, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %19 = tail call double @llvm.experimental.constrained.fadd.f64(double %14,\l... double %18, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %20 = tail call double @sqrt(double %19) #41\l  %21 = tail call double @llvm.experimental.constrained.fadd.f64(double %9,\l... double %20, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %22 = tail call double @log1p(double %21) #41\l  br label %40\l}"];
	Node0x1ff6cd0 -> Node0x1ff7180;
	Node0x1ff7090 [shape=record,label="{%23:\l23:                                               \l  %24 = icmp ult i32 %5, 1049\l  br i1 %24, label %25, label %37\l|{<s0>T|<s1>F}}"];
	Node0x1ff7090:s0 -> Node0x1ff70e0;
	Node0x1ff7090:s1 -> Node0x1ff7130;
	Node0x1ff70e0 [shape=record,label="{%25:\l25:                                               \l  %26 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 2,\l... metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %27 = tail call double @llvm.experimental.constrained.fmul.f64(double %26,\l... double %0, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %28 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 1,\l... metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %29 = tail call double @llvm.experimental.constrained.fmul.f64(double %0,\l... double %0, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %30 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 1,\l... metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %31 = tail call double @llvm.experimental.constrained.fsub.f64(double %29,\l... double %30, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %32 = tail call double @sqrt(double %31) #41\l  %33 = tail call double @llvm.experimental.constrained.fadd.f64(double %0,\l... double %32, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %34 = tail call double @llvm.experimental.constrained.fdiv.f64(double %28,\l... double %33, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %35 = tail call double @llvm.experimental.constrained.fsub.f64(double %27,\l... double %34, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %36 = tail call double @log(double %35) #41\l  br label %40\l}"];
	Node0x1ff70e0 -> Node0x1ff7180;
	Node0x1ff7130 [shape=record,label="{%37:\l37:                                               \l  %38 = tail call double @log(double %0) #41\l  %39 = tail call double @llvm.experimental.constrained.fadd.f64(double %38,\l... double 0x3FE62E42FEFA39EF, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  br label %40\l}"];
	Node0x1ff7130 -> Node0x1ff7180;
	Node0x1ff7180 [shape=record,label="{%40:\l40:                                               \l  %41 = phi double [ %22, %7 ], [ %36, %25 ], [ %39, %37 ]\l  ret double %41\l}"];
}
