digraph "CFG for 'sin' function" {
	label="CFG for 'sin' function";

	Node0x16f5ad0 [shape=record,label="{%1:\l  %2 = alloca double, align 8\l  %3 = alloca [2 x double], align 16\l  %4 = bitcast [2 x double]* %3 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #40\l  %5 = bitcast double %0 to i64\l  %6 = lshr i64 %5, 32\l  %7 = trunc i64 %6 to i32\l  %8 = and i32 %7, 2147483647\l  %9 = icmp ult i32 %8, 1072243196\l  br i1 %9, label %10, label %24\l|{<s0>T|<s1>F}}"];
	Node0x16f5ad0:s0 -> Node0x16f74b0;
	Node0x16f5ad0:s1 -> Node0x16f7740;
	Node0x16f74b0 [shape=record,label="{%10:\l10:                                               \l  %11 = icmp ult i32 %8, 1045430272\l  br i1 %11, label %12, label %22\l|{<s0>T|<s1>F}}"];
	Node0x16f74b0:s0 -> Node0x16f75b0;
	Node0x16f74b0:s1 -> Node0x16f76f0;
	Node0x16f75b0 [shape=record,label="{%12:\l12:                                               \l  %13 = icmp ult i32 %8, 1048576\l  %14 = tail call double @llvm.experimental.constrained.fpext.f64.f32(float\l... 0x4770000000000000, metadata !fpexcept.ignore) #41\l  br i1 %13, label %15, label %17\l|{<s0>T|<s1>F}}"];
	Node0x16f75b0:s0 -> Node0x16f7600;
	Node0x16f75b0:s1 -> Node0x16f7650;
	Node0x16f7600 [shape=record,label="{%15:\l15:                                               \l  %16 = tail call double @llvm.experimental.constrained.fdiv.f64(double %0,\l... double %14, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  br label %19\l}"];
	Node0x16f7600 -> Node0x16f76a0;
	Node0x16f7650 [shape=record,label="{%17:\l17:                                               \l  %18 = tail call double @llvm.experimental.constrained.fadd.f64(double %0,\l... double %14, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  br label %19\l}"];
	Node0x16f7650 -> Node0x16f76a0;
	Node0x16f76a0 [shape=record,label="{%19:\l19:                                               \l  %20 = phi double [ %16, %15 ], [ %18, %17 ]\l  %21 = bitcast double* %2 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)\l  store volatile double %20, double* %2, align 8, !tbaa !1632\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)\l  br label %54\l}"];
	Node0x16f76a0 -> Node0x16f7970;
	Node0x16f76f0 [shape=record,label="{%22:\l22:                                               \l  %23 = tail call double @__sin(double %0, double 0.000000e+00, i32 0) #42\l  br label %54\l}"];
	Node0x16f76f0 -> Node0x16f7970;
	Node0x16f7740 [shape=record,label="{%24:\l24:                                               \l  %25 = icmp ugt i32 %8, 2146435071\l  br i1 %25, label %26, label %28\l|{<s0>T|<s1>F}}"];
	Node0x16f7740:s0 -> Node0x16f7790;
	Node0x16f7740:s1 -> Node0x16f77e0;
	Node0x16f7790 [shape=record,label="{%26:\l26:                                               \l  %27 = tail call double @llvm.experimental.constrained.fsub.f64(double %0,\l... double %0, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  br label %54\l}"];
	Node0x16f7790 -> Node0x16f7970;
	Node0x16f77e0 [shape=record,label="{%28:\l28:                                               \l  %29 = getelementptr inbounds [2 x double], [2 x double]* %3, i64 0, i64 0\l  %30 = call i32 @__rem_pio2(double %0, double* nonnull %29) #42\l  %31 = and i32 %30, 3\l  switch i32 %31, label %48 [\l    i32 0, label %32\l    i32 1, label %37\l    i32 2, label %42\l  ]\l|{<s0>def|<s1>0|<s2>1|<s3>2}}"];
	Node0x16f77e0:s0 -> Node0x16f7920;
	Node0x16f77e0:s1 -> Node0x16f7830;
	Node0x16f77e0:s2 -> Node0x16f7880;
	Node0x16f77e0:s3 -> Node0x16f78d0;
	Node0x16f7830 [shape=record,label="{%32:\l32:                                               \l  %33 = load double, double* %29, align 16, !tbaa !1632\l  %34 = getelementptr inbounds [2 x double], [2 x double]* %3, i64 0, i64 1\l  %35 = load double, double* %34, align 8, !tbaa !1632\l  %36 = call double @__sin(double %33, double %35, i32 1) #42\l  br label %54\l}"];
	Node0x16f7830 -> Node0x16f7970;
	Node0x16f7880 [shape=record,label="{%37:\l37:                                               \l  %38 = load double, double* %29, align 16, !tbaa !1632\l  %39 = getelementptr inbounds [2 x double], [2 x double]* %3, i64 0, i64 1\l  %40 = load double, double* %39, align 8, !tbaa !1632\l  %41 = call double @__cos(double %38, double %40) #42\l  br label %54\l}"];
	Node0x16f7880 -> Node0x16f7970;
	Node0x16f78d0 [shape=record,label="{%42:\l42:                                               \l  %43 = load double, double* %29, align 16, !tbaa !1632\l  %44 = getelementptr inbounds [2 x double], [2 x double]* %3, i64 0, i64 1\l  %45 = load double, double* %44, align 8, !tbaa !1632\l  %46 = call double @__sin(double %43, double %45, i32 1) #42\l  %47 = fneg double %46\l  br label %54\l}"];
	Node0x16f78d0 -> Node0x16f7970;
	Node0x16f7920 [shape=record,label="{%48:\l48:                                               \l  %49 = load double, double* %29, align 16, !tbaa !1632\l  %50 = getelementptr inbounds [2 x double], [2 x double]* %3, i64 0, i64 1\l  %51 = load double, double* %50, align 8, !tbaa !1632\l  %52 = call double @__cos(double %49, double %51) #42\l  %53 = fneg double %52\l  br label %54\l}"];
	Node0x16f7920 -> Node0x16f7970;
	Node0x16f7970 [shape=record,label="{%54:\l54:                                               \l  %55 = phi double [ %0, %19 ], [ %23, %22 ], [ %27, %26 ], [ %53, %48 ], [\l... %47, %42 ], [ %41, %37 ], [ %36, %32 ]\l  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #40\l  ret double %55\l}"];
}
