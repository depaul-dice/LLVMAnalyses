digraph "CFG for 'ctanhf' function" {
	label="CFG for 'ctanhf' function";

	Node0x1b5aa30 [shape=record,label="{%1:\l  %2 = extractelement \<2 x float\> %0, i32 0\l  %3 = extractelement \<2 x float\> %0, i32 1\l  %4 = bitcast float %2 to i32\l  %5 = and i32 %4, 2147483647\l  %6 = icmp ugt i32 %5, 2139095039\l  br i1 %6, label %7, label %29\l|{<s0>T|<s1>F}}"];
	Node0x1b5aa30:s0 -> Node0x1b5b030;
	Node0x1b5aa30:s1 -> Node0x1b5b210;
	Node0x1b5b030 [shape=record,label="{%7:\l7:                                                \l  %8 = and i32 %4, 8388607\l  %9 = icmp eq i32 %8, 0\l  br i1 %9, label %15, label %10\l|{<s0>T|<s1>F}}"];
	Node0x1b5b030:s0 -> Node0x1b5b120;
	Node0x1b5b030:s1 -> Node0x1b5b080;
	Node0x1b5b080 [shape=record,label="{%10:\l10:                                               \l  %11 = tail call float @llvm.experimental.constrained.sitofp.f32.i32(i32 0,\l... metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %12 = tail call i1 @llvm.experimental.constrained.fcmp.f32(float %3, float\l... %11, metadata !oeq, metadata !fpexcept.ignore) #40\l  br i1 %12, label %74, label %13\l|{<s0>T|<s1>F}}"];
	Node0x1b5b080:s0 -> Node0x1b5b440;
	Node0x1b5b080:s1 -> Node0x1b5b0d0;
	Node0x1b5b0d0 [shape=record,label="{%13:\l13:                                               \l  %14 = tail call float @llvm.experimental.constrained.fmul.f32(float %2,\l... float %3, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  br label %74\l}"];
	Node0x1b5b0d0 -> Node0x1b5b440;
	Node0x1b5b120 [shape=record,label="{%15:\l15:                                               \l  %16 = add i32 %4, -1073741824\l  %17 = bitcast i32 %16 to float\l  %18 = tail call float @llvm.experimental.constrained.sitofp.f32.i32(i32 0,\l... metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %19 = bitcast float %3 to i32\l  %20 = and i32 %19, 2147483647\l  %21 = icmp eq i32 %20, 2139095040\l  br i1 %21, label %26, label %22\l|{<s0>T|<s1>F}}"];
	Node0x1b5b120:s0 -> Node0x1b5b1c0;
	Node0x1b5b120:s1 -> Node0x1b5b170;
	Node0x1b5b170 [shape=record,label="{%22:\l22:                                               \l  %23 = tail call float @sinf(float %3) #41\l  %24 = tail call float @cosf(float %3) #41\l  %25 = tail call float @llvm.experimental.constrained.fmul.f32(float %23,\l... float %24, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  br label %26\l}"];
	Node0x1b5b170 -> Node0x1b5b1c0;
	Node0x1b5b1c0 [shape=record,label="{%26:\l26:                                               \l  %27 = phi float [ %25, %22 ], [ %3, %15 ]\l  %28 = tail call float @copysignf(float %18, float %27) #41\l  br label %74\l}"];
	Node0x1b5b1c0 -> Node0x1b5b440;
	Node0x1b5b210 [shape=record,label="{%29:\l29:                                               \l  %30 = bitcast float %3 to i32\l  %31 = and i32 %30, 2139095040\l  %32 = icmp eq i32 %31, 2139095040\l  br i1 %32, label %33, label %40\l|{<s0>T|<s1>F}}"];
	Node0x1b5b210:s0 -> Node0x1b5b260;
	Node0x1b5b210:s1 -> Node0x1b5b350;
	Node0x1b5b260 [shape=record,label="{%33:\l33:                                               \l  %34 = icmp eq i32 %5, 0\l  br i1 %34, label %37, label %35\l|{<s0>T|<s1>F}}"];
	Node0x1b5b260:s0 -> Node0x1b5b300;
	Node0x1b5b260:s1 -> Node0x1b5b2b0;
	Node0x1b5b2b0 [shape=record,label="{%35:\l35:                                               \l  %36 = tail call float @llvm.experimental.constrained.fsub.f32(float %3,\l... float %3, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  br label %37\l}"];
	Node0x1b5b2b0 -> Node0x1b5b300;
	Node0x1b5b300 [shape=record,label="{%37:\l37:                                               \l  %38 = phi float [ %36, %35 ], [ %2, %33 ]\l  %39 = tail call float @llvm.experimental.constrained.fsub.f32(float %3,\l... float %3, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  br label %74\l}"];
	Node0x1b5b300 -> Node0x1b5b440;
	Node0x1b5b350 [shape=record,label="{%40:\l40:                                               \l  %41 = icmp ugt i32 %5, 1093664767\l  br i1 %41, label %42, label %55\l|{<s0>T|<s1>F}}"];
	Node0x1b5b350:s0 -> Node0x1b5b3a0;
	Node0x1b5b350:s1 -> Node0x1b5b3f0;
	Node0x1b5b3a0 [shape=record,label="{%42:\l42:                                               \l  %43 = tail call float @fabsf(float %2) #41\l  %44 = fneg float %43\l  %45 = tail call float @expf(float %44) #41\l  %46 = tail call float @llvm.experimental.constrained.sitofp.f32.i32(i32 1,\l... metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %47 = tail call float @copysignf(float %46, float %2) #41\l  %48 = tail call float @llvm.experimental.constrained.sitofp.f32.i32(i32 4,\l... metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %49 = tail call float @sinf(float %3) #41\l  %50 = tail call float @llvm.experimental.constrained.fmul.f32(float %48,\l... float %49, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %51 = tail call float @cosf(float %3) #41\l  %52 = tail call float @llvm.experimental.constrained.fmul.f32(float %50,\l... float %51, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %53 = tail call float @llvm.experimental.constrained.fmul.f32(float %52,\l... float %45, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %54 = tail call float @llvm.experimental.constrained.fmul.f32(float %53,\l... float %45, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  br label %74\l}"];
	Node0x1b5b3a0 -> Node0x1b5b440;
	Node0x1b5b3f0 [shape=record,label="{%55:\l55:                                               \l  %56 = tail call float @tanf(float %3) #41\l  %57 = tail call float @llvm.experimental.constrained.fmul.f32(float %56,\l... float %56, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %58 = tail call double @llvm.experimental.constrained.fpext.f64.f32(float\l... %57, metadata !fpexcept.ignore) #40\l  %59 = tail call double @llvm.experimental.constrained.fadd.f64(double\l... 1.000000e+00, double %58, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  %60 = tail call float @llvm.experimental.constrained.fptrunc.f32.f64(double\l... %59, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %61 = tail call float @sinhf(float %2) #41\l  %62 = tail call float @llvm.experimental.constrained.sitofp.f32.i32(i32 1,\l... metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %63 = tail call float @llvm.experimental.constrained.fmul.f32(float %61,\l... float %61, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %64 = tail call float @llvm.experimental.constrained.fadd.f32(float %62,\l... float %63, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %65 = tail call float @sqrtf(float %64) #41\l  %66 = tail call float @llvm.experimental.constrained.sitofp.f32.i32(i32 1,\l... metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %67 = tail call float @llvm.experimental.constrained.fmul.f32(float %60,\l... float %61, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %68 = tail call float @llvm.experimental.constrained.fmul.f32(float %67,\l... float %61, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %69 = tail call float @llvm.experimental.constrained.fadd.f32(float %66,\l... float %68, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %70 = tail call float @llvm.experimental.constrained.fmul.f32(float %60,\l... float %65, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %71 = tail call float @llvm.experimental.constrained.fmul.f32(float %70,\l... float %61, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %72 = tail call float @llvm.experimental.constrained.fdiv.f32(float %71,\l... float %69, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %73 = tail call float @llvm.experimental.constrained.fdiv.f32(float %56,\l... float %69, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  br label %74\l}"];
	Node0x1b5b3f0 -> Node0x1b5b440;
	Node0x1b5b440 [shape=record,label="{%74:\l74:                                               \l  %75 = phi float [ %72, %55 ], [ %47, %42 ], [ %38, %37 ], [ %17, %26 ], [\l... %2, %10 ], [ %2, %13 ]\l  %76 = phi float [ %73, %55 ], [ %54, %42 ], [ %39, %37 ], [ %28, %26 ], [\l... %3, %10 ], [ %14, %13 ]\l  %77 = insertelement \<2 x float\> undef, float %75, i32 0\l  %78 = insertelement \<2 x float\> %77, float %76, i32 1\l  ret \<2 x float\> %78\l}"];
}
