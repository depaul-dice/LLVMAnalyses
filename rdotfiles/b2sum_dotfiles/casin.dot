digraph "CFG for 'casin' function" {
	label="CFG for 'casin' function";

	Node0x1cd9af0 [shape=record,label="{%2:\l  %3 = tail call double @llvm.experimental.constrained.fsub.f64(double %0,\l... double %1, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %4 = tail call double @llvm.experimental.constrained.fadd.f64(double %0,\l... double %1, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %5 = tail call double @llvm.experimental.constrained.fmul.f64(double %3,\l... double %4, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %6 = tail call double @llvm.experimental.constrained.fsub.f64(double\l... 1.000000e+00, double %5, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  %7 = tail call double @llvm.experimental.constrained.fmul.f64(double\l... -2.000000e+00, double %0, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  %8 = tail call double @llvm.experimental.constrained.fmul.f64(double %7,\l... double %1, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %9 = fneg double %1\l  %10 = tail call \{ double, double \} @csqrt(double %6, double %8) #41\l  %11 = extractvalue \{ double, double \} %10, 0\l  %12 = extractvalue \{ double, double \} %10, 1\l  %13 = tail call double @llvm.experimental.constrained.fadd.f64(double %9,\l... double %11, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %14 = tail call double @llvm.experimental.constrained.fadd.f64(double %0,\l... double %12, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %15 = tail call \{ double, double \} @clog(double %13, double %14) #41\l  %16 = extractvalue \{ double, double \} %15, 0\l  %17 = extractvalue \{ double, double \} %15, 1\l  %18 = fneg double %16\l  %19 = insertvalue \{ double, double \} undef, double %17, 0\l  %20 = insertvalue \{ double, double \} %19, double %18, 1\l  ret \{ double, double \} %20\l}"];
}
