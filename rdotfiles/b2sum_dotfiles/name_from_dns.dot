digraph "CFG for 'name_from_dns' function" {
	label="CFG for 'name_from_dns' function";

	Node0x1a80610 [shape=record,label="{%5:\l  %6 = alloca [2 x [280 x i8]], align 16\l  %7 = alloca [2 x [512 x i8]], align 16\l  %8 = alloca [2 x i8*], align 16\l  %9 = alloca [2 x i8*], align 16\l  %10 = alloca [2 x i32], align 4\l  %11 = alloca [2 x i32], align 4\l  %12 = alloca %struct.dpc_ctx, align 8\l  %13 = getelementptr inbounds [2 x [280 x i8]], [2 x [280 x i8]]* %6, i64 0,\l... i64 0, i64 0\l  call void @llvm.lifetime.start.p0i8(i64 560, i8* nonnull %13) #40\l  %14 = getelementptr inbounds [2 x [512 x i8]], [2 x [512 x i8]]* %7, i64 0,\l... i64 0, i64 0\l  call void @llvm.lifetime.start.p0i8(i64 1024, i8* nonnull %14) #40\l  %15 = bitcast [2 x i8*]* %8 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #40\l  %16 = getelementptr inbounds [2 x i8*], [2 x i8*]* %8, i64 0, i64 0\l  store i8* %13, i8** %16, align 16, !tbaa !1632\l  %17 = getelementptr inbounds [2 x i8*], [2 x i8*]* %8, i64 0, i64 1\l  %18 = getelementptr inbounds [2 x [280 x i8]], [2 x [280 x i8]]* %6, i64 0,\l... i64 1, i64 0\l  store i8* %18, i8** %17, align 8, !tbaa !1632\l  %19 = bitcast [2 x i8*]* %9 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #40\l  %20 = getelementptr inbounds [2 x i8*], [2 x i8*]* %9, i64 0, i64 0\l  store i8* %14, i8** %20, align 16, !tbaa !1632\l  %21 = getelementptr inbounds [2 x i8*], [2 x i8*]* %9, i64 0, i64 1\l  %22 = getelementptr inbounds [2 x [512 x i8]], [2 x [512 x i8]]* %7, i64 0,\l... i64 1, i64 0\l  store i8* %22, i8** %21, align 8, !tbaa !1632\l  %23 = bitcast [2 x i32]* %10 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #40\l  %24 = bitcast [2 x i32]* %11 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #40\l  %25 = bitcast %struct.dpc_ctx* %12 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #40\l  %26 = getelementptr inbounds %struct.dpc_ctx, %struct.dpc_ctx* %12, i64 0,\l... i32 0\l  store %struct.address* %0, %struct.address** %26, align 8, !tbaa !1636\l  %27 = getelementptr inbounds %struct.dpc_ctx, %struct.dpc_ctx* %12, i64 0,\l... i32 1\l  store i8* %1, i8** %27, align 8, !tbaa !1639\l  %28 = getelementptr inbounds %struct.dpc_ctx, %struct.dpc_ctx* %12, i64 0,\l... i32 2\l  store i32 0, i32* %28, align 8, !tbaa !1640\l  br label %29\l}"];
	Node0x1a80610 -> Node0x1a807b0;
	Node0x1a807b0 [shape=record,label="{%29:\l29:                                               \l  %30 = phi i64 [ 0, %5 ], [ 1, %45 ]\l  %31 = phi i32 [ 0, %5 ], [ %46, %45 ]\l  %32 = getelementptr inbounds [2 x %struct.FTW], [2 x %struct.FTW]*\l... @name_from_dns.afrr, i64 0, i64 %30, i32 0\l  %33 = load i32, i32* %32, align 8, !tbaa !1641\l  %34 = icmp eq i32 %33, %3\l  br i1 %34, label %45, label %35\l|{<s0>T|<s1>F}}"];
	Node0x1a807b0:s0 -> Node0x1a808a0;
	Node0x1a807b0:s1 -> Node0x1a80800;
	Node0x1a80800 [shape=record,label="{%35:\l35:                                               \l  %36 = getelementptr inbounds [2 x %struct.FTW], [2 x %struct.FTW]*\l... @name_from_dns.afrr, i64 0, i64 %30, i32 1\l  %37 = load i32, i32* %36, align 4, !tbaa !1643\l  %38 = sext i32 %31 to i64\l  %39 = getelementptr inbounds [2 x [280 x i8]], [2 x [280 x i8]]* %6, i64 0,\l... i64 %38, i64 0\l  %40 = call i32 @__res_mkquery(i32 0, i8* %2, i32 1, i32 %37, i8* null, i32\l... 0, i8* null, i8* nonnull %39, i32 280) #41\l  %41 = getelementptr inbounds [2 x i32], [2 x i32]* %10, i64 0, i64 %38\l  store i32 %40, i32* %41, align 4, !tbaa !1644\l  %42 = icmp eq i32 %40, -1\l  br i1 %42, label %80, label %43\l|{<s0>T|<s1>F}}"];
	Node0x1a80800:s0 -> Node0x1a80b70;
	Node0x1a80800:s1 -> Node0x1a80850;
	Node0x1a80850 [shape=record,label="{%43:\l43:                                               \l  %44 = add nsw i32 %31, 1\l  br label %45\l}"];
	Node0x1a80850 -> Node0x1a808a0;
	Node0x1a808a0 [shape=record,label="{%45:\l45:                                               \l  %46 = phi i32 [ %44, %43 ], [ %31, %29 ]\l  %47 = icmp eq i64 %30, 0\l  br i1 %47, label %29, label %48\l|{<s0>T|<s1>F}}"];
	Node0x1a808a0:s0 -> Node0x1a807b0;
	Node0x1a808a0:s1 -> Node0x1a808f0;
	Node0x1a808f0 [shape=record,label="{%48:\l48:                                               \l  %49 = getelementptr inbounds [2 x i32], [2 x i32]* %10, i64 0, i64 0\l  %50 = getelementptr inbounds [2 x i32], [2 x i32]* %11, i64 0, i64 0\l  %51 = call i32 @__res_msend_rc(i32 %46, i8** nonnull %16, i32* nonnull %49,\l... i8** nonnull %20, i32* nonnull %50, i32 512, %struct.resolvconf* %4) #41\l  %52 = icmp slt i32 %51, 0\l  br i1 %52, label %80, label %53\l|{<s0>T|<s1>F}}"];
	Node0x1a808f0:s0 -> Node0x1a80b70;
	Node0x1a808f0:s1 -> Node0x1a80940;
	Node0x1a80940 [shape=record,label="{%53:\l53:                                               \l  %54 = icmp sgt i32 %46, 0\l  br i1 %54, label %55, label %65\l|{<s0>T|<s1>F}}"];
	Node0x1a80940:s0 -> Node0x1a80990;
	Node0x1a80940:s1 -> Node0x1a80a30;
	Node0x1a80990 [shape=record,label="{%55:\l55:                                               \l  %56 = zext i32 %46 to i64\l  br label %57\l}"];
	Node0x1a80990 -> Node0x1a809e0;
	Node0x1a809e0 [shape=record,label="{%57:\l57:                                               \l  %58 = phi i64 [ 0, %55 ], [ %63, %57 ]\l  %59 = getelementptr inbounds [2 x [512 x i8]], [2 x [512 x i8]]* %7, i64 0,\l... i64 %58, i64 0\l  %60 = getelementptr inbounds [2 x i32], [2 x i32]* %11, i64 0, i64 %58\l  %61 = load i32, i32* %60, align 4, !tbaa !1644\l  %62 = call i32 @__dns_parse(i8* nonnull %59, i32 %61, i32 (i8*, i32, i8*,\l... i32, i8*)* nonnull @dns_parse_callback.416, i8* nonnull %25) #41\l  %63 = add nuw nsw i64 %58, 1\l  %64 = icmp eq i64 %63, %56\l  br i1 %64, label %65, label %57\l|{<s0>T|<s1>F}}"];
	Node0x1a809e0:s0 -> Node0x1a80a30;
	Node0x1a809e0:s1 -> Node0x1a809e0;
	Node0x1a80a30 [shape=record,label="{%65:\l65:                                               \l  %66 = load i32, i32* %28, align 8, !tbaa !1640\l  %67 = icmp eq i32 %66, 0\l  br i1 %67, label %68, label %80\l|{<s0>T|<s1>F}}"];
	Node0x1a80a30:s0 -> Node0x1a80a80;
	Node0x1a80a30:s1 -> Node0x1a80b70;
	Node0x1a80a80 [shape=record,label="{%68:\l68:                                               \l  %69 = load i32, i32* %50, align 4, !tbaa !1644\l  %70 = icmp slt i32 %69, 4\l  br i1 %70, label %80, label %71\l|{<s0>T|<s1>F}}"];
	Node0x1a80a80:s0 -> Node0x1a80b70;
	Node0x1a80a80:s1 -> Node0x1a80ad0;
	Node0x1a80ad0 [shape=record,label="{%71:\l71:                                               \l  %72 = getelementptr inbounds [2 x [512 x i8]], [2 x [512 x i8]]* %7, i64 0,\l... i64 0, i64 3\l  %73 = load i8, i8* %72, align 1, !tbaa !1645\l  %74 = and i8 %73, 15\l  %75 = icmp ult i8 %74, 4\l  br i1 %75, label %76, label %80\l|{<s0>T|<s1>F}}"];
	Node0x1a80ad0:s0 -> Node0x1a80b20;
	Node0x1a80ad0:s1 -> Node0x1a80b70;
	Node0x1a80b20 [shape=record,label="{%76:\l76:                                               \l  %77 = zext i8 %74 to i64\l  %78 = getelementptr inbounds [4 x i32], [4 x i32]*\l... @switch.table.name_from_dns, i64 0, i64 %77\l  %79 = load i32, i32* %78, align 4\l  br label %80\l}"];
	Node0x1a80b20 -> Node0x1a80b70;
	Node0x1a80b70 [shape=record,label="{%80:\l80:                                               \l  %81 = phi i32 [ -11, %48 ], [ %66, %65 ], [ -3, %68 ], [ %79, %76 ], [ -4,\l... %71 ], [ -2, %35 ]\l  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #40\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #40\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #40\l  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #40\l  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #40\l  call void @llvm.lifetime.end.p0i8(i64 1024, i8* nonnull %14) #40\l  call void @llvm.lifetime.end.p0i8(i64 560, i8* nonnull %13) #40\l  ret i32 %81\l}"];
}
