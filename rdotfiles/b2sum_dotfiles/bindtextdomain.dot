digraph "CFG for 'bindtextdomain' function" {
	label="CFG for 'bindtextdomain' function";

	Node0x16b2ea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%2:\l  %3 = icmp eq i8* %0, null\l  br i1 %3, label %110, label %4\l|{<s0>T|<s1>F}}"];
	Node0x16b2ea0:s0 -> Node0x16b3620;
	Node0x16b2ea0:s1 -> Node0x16b2ef0;
	Node0x16b2ef0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%4:\l4:                                                \l  %5 = icmp eq i8* %1, null\l  br i1 %5, label %6, label %28\l|{<s0>T|<s1>F}}"];
	Node0x16b2ef0:s0 -> Node0x16b2f40;
	Node0x16b2ef0:s1 -> Node0x16b3120;
	Node0x16b2f40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%6:\l6:                                                \l  %7 = load volatile i8*, i8** @bindings, align 8, !tbaa !1632\l  %8 = icmp eq i8* %7, null\l  br i1 %8, label %110, label %9\l|{<s0>T|<s1>F}}"];
	Node0x16b2f40:s0 -> Node0x16b3620;
	Node0x16b2f40:s1 -> Node0x16b2f90;
	Node0x16b2f90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%9:\l9:                                                \l  %10 = bitcast i8* %7 to %struct.binding*\l  br label %11\l}"];
	Node0x16b2f90 -> Node0x16b2fe0;
	Node0x16b2fe0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%11:\l11:                                               \l  %12 = phi %struct.binding* [ %26, %24 ], [ %10, %9 ]\l  %13 = getelementptr inbounds %struct.binding, %struct.binding* %12, i64 0,\l... i32 3\l  %14 = load i8*, i8** %13, align 8, !tbaa !1632\l  %15 = tail call fastcc i32 @strcmp(i8* %14, i8* nonnull %0) #29\l  %16 = icmp eq i32 %15, 0\l  br i1 %16, label %17, label %24\l|{<s0>T|<s1>F}}"];
	Node0x16b2fe0:s0 -> Node0x16b3030;
	Node0x16b2fe0:s1 -> Node0x16b30d0;
	Node0x16b3030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%17:\l17:                                               \l  %18 = getelementptr inbounds %struct.binding, %struct.binding* %12, i64 0,\l... i32 2\l  %19 = load volatile i32, i32* %18, align 4, !tbaa !1636\l  %20 = icmp eq i32 %19, 0\l  br i1 %20, label %24, label %21\l|{<s0>T|<s1>F}}"];
	Node0x16b3030:s0 -> Node0x16b30d0;
	Node0x16b3030:s1 -> Node0x16b3080;
	Node0x16b3080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a7c5fe70",label="{%21:\l21:                                               \l  %22 = getelementptr inbounds %struct.binding, %struct.binding* %12, i64 0,\l... i32 4\l  %23 = load i8*, i8** %22, align 8, !tbaa !1632\l  br label %110\l}"];
	Node0x16b3080 -> Node0x16b3620;
	Node0x16b30d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%24:\l24:                                               \l  %25 = getelementptr inbounds %struct.binding, %struct.binding* %12, i64 0,\l... i32 0\l  %26 = load %struct.binding*, %struct.binding** %25, align 8, !tbaa !1632\l  %27 = icmp eq %struct.binding* %26, null\l  br i1 %27, label %110, label %11\l|{<s0>T|<s1>F}}"];
	Node0x16b30d0:s0 -> Node0x16b3620;
	Node0x16b30d0:s1 -> Node0x16b2fe0;
	Node0x16b3120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%28:\l28:                                               \l  %29 = tail call fastcc i64 @strnlen(i8* nonnull %0, i64 256) #29\l  %30 = tail call fastcc i64 @strnlen(i8* nonnull %1, i64 4096) #29\l  %31 = icmp ugt i64 %29, 255\l  %32 = icmp ugt i64 %30, 4095\l  %33 = or i1 %31, %32\l  br i1 %33, label %34, label %36\l|{<s0>T|<s1>F}}"];
	Node0x16b3120:s0 -> Node0x16b3170;
	Node0x16b3120:s1 -> Node0x16b31c0;
	Node0x16b3170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%34:\l34:                                               \l  %35 = tail call fastcc i32* @__errno_location() #29\l  store i32 22, i32* %35, align 4, !tbaa !1636\l  br label %110\l}"];
	Node0x16b3170 -> Node0x16b3620;
	Node0x16b31c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ead5c970",label="{%36:\l36:                                               \l  %37 = getelementptr inbounds [1 x i32], [1 x i32]* @bindtextdomain.lock, i64\l... 0, i64 0\l  tail call fastcc void @__lock(i32* %37) #29\l  %38 = load volatile i8*, i8** @bindings, align 8, !tbaa !1632\l  %39 = icmp eq i8* %38, null\l  br i1 %39, label %57, label %40\l|{<s0>T|<s1>F}}"];
	Node0x16b31c0:s0 -> Node0x16b3350;
	Node0x16b31c0:s1 -> Node0x16b3210;
	Node0x16b3210 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d9dce170",label="{%40:\l40:                                               \l  %41 = bitcast i8* %38 to %struct.binding*\l  br label %42\l}"];
	Node0x16b3210 -> Node0x16b3260;
	Node0x16b3260 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%42:\l42:                                               \l  %43 = phi %struct.binding* [ %55, %53 ], [ %41, %40 ]\l  %44 = getelementptr inbounds %struct.binding, %struct.binding* %43, i64 0,\l... i32 3\l  %45 = load i8*, i8** %44, align 8, !tbaa !1632\l  %46 = tail call fastcc i32 @strcmp(i8* %45, i8* nonnull %0) #29\l  %47 = icmp eq i32 %46, 0\l  br i1 %47, label %48, label %53\l|{<s0>T|<s1>F}}"];
	Node0x16b3260:s0 -> Node0x16b32b0;
	Node0x16b3260:s1 -> Node0x16b3300;
	Node0x16b32b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%48:\l48:                                               \l  %49 = getelementptr inbounds %struct.binding, %struct.binding* %43, i64 0,\l... i32 4\l  %50 = load i8*, i8** %49, align 8, !tbaa !1632\l  %51 = tail call fastcc i32 @strcmp(i8* %50, i8* nonnull %1) #29\l  %52 = icmp eq i32 %51, 0\l  br i1 %52, label %85, label %53\l|{<s0>T|<s1>F}}"];
	Node0x16b32b0:s0 -> Node0x16b3440;
	Node0x16b32b0:s1 -> Node0x16b3300;
	Node0x16b3300 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%53:\l53:                                               \l  %54 = getelementptr inbounds %struct.binding, %struct.binding* %43, i64 0,\l... i32 0\l  %55 = load %struct.binding*, %struct.binding** %54, align 8, !tbaa !1632\l  %56 = icmp eq %struct.binding* %55, null\l  br i1 %56, label %57, label %42\l|{<s0>T|<s1>F}}"];
	Node0x16b3300:s0 -> Node0x16b3350;
	Node0x16b3300:s1 -> Node0x16b3260;
	Node0x16b3350 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%57:\l57:                                               \l  %58 = add i64 %29, 34\l  %59 = add i64 %58, %30\l  %60 = tail call fastcc i8* @calloc(i64 %59, i64 1) #29\l  %61 = icmp eq i8* %60, null\l  br i1 %61, label %62, label %64\l|{<s0>T|<s1>F}}"];
	Node0x16b3350:s0 -> Node0x16b33a0;
	Node0x16b3350:s1 -> Node0x16b33f0;
	Node0x16b33a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%62:\l62:                                               \l  %63 = getelementptr inbounds [1 x i32], [1 x i32]* @bindtextdomain.lock, i64\l... 0, i64 0\l  tail call fastcc void @__unlock(i32* %63) #29\l  br label %110\l}"];
	Node0x16b33a0 -> Node0x16b3620;
	Node0x16b33f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%64:\l64:                                               \l  %65 = bitcast i8* %60 to %struct.binding*\l  %66 = load volatile i8*, i8** @bindings, align 8, !tbaa !1632\l  %67 = bitcast i8* %60 to i8**\l  store i8* %66, i8** %67, align 8, !tbaa !1632\l  %68 = trunc i64 %30 to i32\l  %69 = getelementptr inbounds i8, i8* %60, i64 8\l  %70 = bitcast i8* %69 to i32*\l  store i32 %68, i32* %70, align 8, !tbaa !1636\l  %71 = getelementptr inbounds i8, i8* %60, i64 32\l  %72 = getelementptr inbounds i8, i8* %60, i64 16\l  %73 = bitcast i8* %72 to i8**\l  store i8* %71, i8** %73, align 8, !tbaa !1632\l  %74 = getelementptr inbounds i8, i8* %71, i64 %29\l  %75 = getelementptr inbounds i8, i8* %74, i64 1\l  %76 = getelementptr inbounds i8, i8* %60, i64 24\l  %77 = bitcast i8* %76 to i8**\l  store i8* %75, i8** %77, align 8, !tbaa !1632\l  %78 = add i64 %29, 1\l  %79 = tail call fastcc i8* @memcpy(i8* nonnull %71, i8* nonnull %0, i64 %78)\l... #29\l  %80 = load i8*, i8** %77, align 8, !tbaa !1632\l  %81 = add i64 %30, 1\l  %82 = tail call fastcc i8* @memcpy(i8* %80, i8* nonnull %1, i64 %81) #29\l  %83 = load volatile i8*, i8** @bindings, align 8, !tbaa !1632\l  %84 = tail call i8* asm lock \l  br label %85\l}"];
	Node0x16b33f0 -> Node0x16b3440;
	Node0x16b3440 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%85:\l85:                                               \l  %86 = phi %struct.binding* [ %65, %64 ], [ %43, %48 ]\l  %87 = getelementptr inbounds %struct.binding, %struct.binding* %86, i64 0,\l... i32 2\l  tail call void asm sideeffect mov $1, $0 \l  %88 = load volatile i8*, i8** @bindings, align 8, !tbaa !1632\l  %89 = icmp eq i8* %88, null\l  br i1 %89, label %106, label %90\l|{<s0>T|<s1>F}}"];
	Node0x16b3440:s0 -> Node0x16b35d0;
	Node0x16b3440:s1 -> Node0x16b3490;
	Node0x16b3490 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%90:\l90:                                               \l  %91 = bitcast i8* %88 to %struct.binding*\l  br label %92\l}"];
	Node0x16b3490 -> Node0x16b34e0;
	Node0x16b34e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%92:\l92:                                               \l  %93 = phi %struct.binding* [ %104, %102 ], [ %91, %90 ]\l  %94 = getelementptr inbounds %struct.binding, %struct.binding* %93, i64 0,\l... i32 3\l  %95 = load i8*, i8** %94, align 8, !tbaa !1632\l  %96 = tail call fastcc i32 @strcmp(i8* %95, i8* nonnull %0) #29\l  %97 = icmp ne i32 %96, 0\l  %98 = icmp eq %struct.binding* %93, %86\l  %99 = or i1 %98, %97\l  br i1 %99, label %102, label %100\l|{<s0>T|<s1>F}}"];
	Node0x16b34e0:s0 -> Node0x16b3580;
	Node0x16b34e0:s1 -> Node0x16b3530;
	Node0x16b3530 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%100:\l100:                                              \l  %101 = getelementptr inbounds %struct.binding, %struct.binding* %93, i64 0,\l... i32 2\l  tail call void asm sideeffect mov $1, $0 \l  br label %102\l}"];
	Node0x16b3530 -> Node0x16b3580;
	Node0x16b3580 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c5333470",label="{%102:\l102:                                              \l  %103 = getelementptr inbounds %struct.binding, %struct.binding* %93, i64 0,\l... i32 0\l  %104 = load %struct.binding*, %struct.binding** %103, align 8, !tbaa !1632\l  %105 = icmp eq %struct.binding* %104, null\l  br i1 %105, label %106, label %92\l|{<s0>T|<s1>F}}"];
	Node0x16b3580:s0 -> Node0x16b35d0;
	Node0x16b3580:s1 -> Node0x16b34e0;
	Node0x16b35d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%106:\l106:                                              \l  %107 = getelementptr inbounds [1 x i32], [1 x i32]* @bindtextdomain.lock,\l... i64 0, i64 0\l  tail call fastcc void @__unlock(i32* %107) #29\l  %108 = getelementptr inbounds %struct.binding, %struct.binding* %86, i64 0,\l... i32 4\l  %109 = load i8*, i8** %108, align 8, !tbaa !1632\l  br label %110\l}"];
	Node0x16b35d0 -> Node0x16b3620;
	Node0x16b3620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%110:\l110:                                              \l  %111 = phi i8* [ null, %2 ], [ null, %34 ], [ %109, %106 ], [ null, %62 ], [\l... %23, %21 ], [ null, %6 ], [ null, %24 ]\l  ret i8* %111\l}"];
}
