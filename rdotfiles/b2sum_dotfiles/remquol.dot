digraph "CFG for 'remquol' function" {
	label="CFG for 'remquol' function";

	Node0x1923380 [shape=record,label="{%3:\l  %4 = bitcast x86_fp80 %0 to i80\l  %5 = lshr i80 %4, 64\l  %6 = trunc i80 %5 to i32\l  %7 = and i32 %6, 32767\l  %8 = bitcast x86_fp80 %1 to i80\l  %9 = lshr i80 %8, 64\l  %10 = trunc i80 %9 to i32\l  %11 = and i32 %10, 32767\l  store i32 0, i32* %2, align 4, !tbaa !1632\l  %12 = tail call x86_fp80 @llvm.experimental.constrained.sitofp.f80.i32(i32\l... 0, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %13 = tail call i1 @llvm.experimental.constrained.fcmp.f80(x86_fp80 %1,\l... x86_fp80 %12, metadata !oeq, metadata !fpexcept.ignore) #40\l  br i1 %13, label %19, label %14\l|{<s0>T|<s1>F}}"];
	Node0x1923380:s0 -> Node0x1923420;
	Node0x1923380:s1 -> Node0x19233d0;
	Node0x19233d0 [shape=record,label="{%14:\l14:                                               \l  %15 = tail call i32 @__fpclassifyl(x86_fp80 %1) #41\l  %16 = icmp eq i32 %15, 0\l  %17 = icmp eq i32 %7, 32767\l  %18 = or i1 %17, %16\l  br i1 %18, label %19, label %23\l|{<s0>T|<s1>F}}"];
	Node0x19233d0:s0 -> Node0x1923420;
	Node0x19233d0:s1 -> Node0x1923470;
	Node0x1923420 [shape=record,label="{%19:\l19:                                               \l  %20 = tail call x86_fp80 @llvm.experimental.constrained.fmul.f80(x86_fp80\l... %0, x86_fp80 %1, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %21 = tail call x86_fp80 @llvm.experimental.constrained.fmul.f80(x86_fp80\l... %0, x86_fp80 %1, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %22 = tail call x86_fp80 @llvm.experimental.constrained.fdiv.f80(x86_fp80\l... %20, x86_fp80 %21, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  br label %171\l}"];
	Node0x1923420 -> Node0x1923c90;
	Node0x1923470 [shape=record,label="{%23:\l23:                                               \l  %24 = tail call x86_fp80 @llvm.experimental.constrained.sitofp.f80.i32(i32\l... 0, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %25 = tail call i1 @llvm.experimental.constrained.fcmp.f80(x86_fp80 %0,\l... x86_fp80 %24, metadata !oeq, metadata !fpexcept.ignore) #40\l  br i1 %25, label %171, label %26\l|{<s0>T|<s1>F}}"];
	Node0x1923470:s0 -> Node0x1923c90;
	Node0x1923470:s1 -> Node0x19234c0;
	Node0x19234c0 [shape=record,label="{%26:\l26:                                               \l  %27 = icmp eq i32 %7, 0\l  br i1 %27, label %28, label %37\l|{<s0>T|<s1>F}}"];
	Node0x19234c0:s0 -> Node0x1923510;
	Node0x19234c0:s1 -> Node0x1923560;
	Node0x1923510 [shape=record,label="{%28:\l28:                                               \l  %29 = and i80 %4, 18446744073709551615\l  %30 = bitcast i80 %29 to x86_fp80\l  %31 = tail call x86_fp80 @llvm.experimental.constrained.fpext.f80.f32(float\l... 0x4770000000000000, metadata !fpexcept.ignore) #40\l  %32 = tail call x86_fp80 @llvm.experimental.constrained.fmul.f80(x86_fp80\l... %30, x86_fp80 %31, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %33 = bitcast x86_fp80 %32 to i80\l  %34 = lshr i80 %33, 64\l  %35 = trunc i80 %34 to i32\l  %36 = add nsw i32 %35, -120\l  br label %37\l}"];
	Node0x1923510 -> Node0x1923560;
	Node0x1923560 [shape=record,label="{%37:\l37:                                               \l  %38 = phi i32 [ %7, %26 ], [ %36, %28 ]\l  %39 = phi x86_fp80 [ %0, %26 ], [ %32, %28 ]\l  %40 = icmp eq i32 %11, 0\l  br i1 %40, label %41, label %50\l|{<s0>T|<s1>F}}"];
	Node0x1923560:s0 -> Node0x19235b0;
	Node0x1923560:s1 -> Node0x1923600;
	Node0x19235b0 [shape=record,label="{%41:\l41:                                               \l  %42 = and i80 %8, 18446744073709551615\l  %43 = bitcast i80 %42 to x86_fp80\l  %44 = tail call x86_fp80 @llvm.experimental.constrained.fpext.f80.f32(float\l... 0x4770000000000000, metadata !fpexcept.ignore) #40\l  %45 = tail call x86_fp80 @llvm.experimental.constrained.fmul.f80(x86_fp80\l... %43, x86_fp80 %44, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %46 = bitcast x86_fp80 %45 to i80\l  %47 = lshr i80 %46, 64\l  %48 = trunc i80 %47 to i32\l  %49 = add nsw i32 %48, -120\l  br label %50\l}"];
	Node0x19235b0 -> Node0x1923600;
	Node0x1923600 [shape=record,label="{%50:\l50:                                               \l  %51 = phi x86_fp80 [ %1, %37 ], [ %45, %41 ]\l  %52 = phi i32 [ %11, %37 ], [ %49, %41 ]\l  %53 = icmp slt i32 %38, %52\l  br i1 %53, label %113, label %54\l|{<s0>T|<s1>F}}"];
	Node0x1923600:s0 -> Node0x19239c0;
	Node0x1923600:s1 -> Node0x1923650;
	Node0x1923650 [shape=record,label="{%54:\l54:                                               \l  %55 = bitcast x86_fp80 %39 to i80\l  %56 = trunc i80 %55 to i64\l  %57 = bitcast x86_fp80 %51 to i80\l  %58 = trunc i80 %57 to i64\l  %59 = icmp sgt i32 %38, %52\l  %60 = sub i64 %56, %58\l  %61 = icmp uge i64 %56, %58\l  br i1 %59, label %62, label %88\l|{<s0>T|<s1>F}}"];
	Node0x1923650:s0 -> Node0x19236a0;
	Node0x1923650:s1 -> Node0x1923880;
	Node0x19236a0 [shape=record,label="{%62:\l62:                                               \l  %63 = phi i1 [ %87, %81 ], [ %61, %54 ]\l  %64 = phi i64 [ %86, %81 ], [ %60, %54 ]\l  %65 = phi i64 [ %83, %81 ], [ %56, %54 ]\l  %66 = phi i32 [ %82, %81 ], [ 0, %54 ]\l  %67 = phi i32 [ %84, %81 ], [ %38, %54 ]\l  br i1 %63, label %68, label %72\l|{<s0>T|<s1>F}}"];
	Node0x19236a0:s0 -> Node0x19236f0;
	Node0x19236a0:s1 -> Node0x1923740;
	Node0x19236f0 [shape=record,label="{%68:\l68:                                               \l  %69 = shl i64 %64, 1\l  %70 = shl i32 %66, 1\l  %71 = add i32 %70, 2\l  br label %81\l}"];
	Node0x19236f0 -> Node0x1923830;
	Node0x1923740 [shape=record,label="{%72:\l72:                                               \l  %73 = shl i64 %65, 1\l  %74 = icmp ult i64 %73, %65\l  br i1 %74, label %75, label %79\l|{<s0>T|<s1>F}}"];
	Node0x1923740:s0 -> Node0x1923790;
	Node0x1923740:s1 -> Node0x19237e0;
	Node0x1923790 [shape=record,label="{%75:\l75:                                               \l  %76 = sub i64 %73, %58\l  %77 = shl i32 %66, 1\l  %78 = or i32 %77, 1\l  br label %81\l}"];
	Node0x1923790 -> Node0x1923830;
	Node0x19237e0 [shape=record,label="{%79:\l79:                                               \l  %80 = shl i32 %66, 1\l  br label %81\l}"];
	Node0x19237e0 -> Node0x1923830;
	Node0x1923830 [shape=record,label="{%81:\l81:                                               \l  %82 = phi i32 [ %71, %68 ], [ %78, %75 ], [ %80, %79 ]\l  %83 = phi i64 [ %69, %68 ], [ %76, %75 ], [ %73, %79 ]\l  %84 = add nsw i32 %67, -1\l  %85 = icmp sgt i32 %84, %52\l  %86 = sub i64 %83, %58\l  %87 = icmp uge i64 %83, %58\l  br i1 %85, label %62, label %88\l|{<s0>T|<s1>F}}"];
	Node0x1923830:s0 -> Node0x19236a0;
	Node0x1923830:s1 -> Node0x1923880;
	Node0x1923880 [shape=record,label="{%88:\l88:                                               \l  %89 = phi i32 [ %38, %54 ], [ %52, %81 ]\l  %90 = phi i32 [ 0, %54 ], [ %82, %81 ]\l  %91 = phi i64 [ %56, %54 ], [ %83, %81 ]\l  %92 = phi i64 [ %60, %54 ], [ %86, %81 ]\l  %93 = phi i1 [ %61, %54 ], [ %87, %81 ]\l  %94 = zext i1 %93 to i32\l  %95 = add i32 %90, %94\l  %96 = select i1 %93, i64 %92, i64 %91\l  %97 = icmp eq i64 %96, 0\l  br i1 %97, label %106, label %98\l|{<s0>T|<s1>F}}"];
	Node0x1923880:s0 -> Node0x1923970;
	Node0x1923880:s1 -> Node0x19238d0;
	Node0x19238d0 [shape=record,label="{%98:\l98:                                               \l  %99 = icmp sgt i64 %96, -1\l  br i1 %99, label %100, label %106\l|{<s0>T|<s1>F}}"];
	Node0x19238d0:s0 -> Node0x1923920;
	Node0x19238d0:s1 -> Node0x1923970;
	Node0x1923920 [shape=record,label="{%100:\l100:                                              \l  %101 = phi i64 [ %103, %100 ], [ %96, %98 ]\l  %102 = phi i32 [ %104, %100 ], [ %89, %98 ]\l  %103 = shl nuw i64 %101, 1\l  %104 = add nsw i32 %102, -1\l  %105 = icmp sgt i64 %103, -1\l  br i1 %105, label %100, label %106\l|{<s0>T|<s1>F}}"];
	Node0x1923920:s0 -> Node0x1923920;
	Node0x1923920:s1 -> Node0x1923970;
	Node0x1923970 [shape=record,label="{%106:\l106:                                              \l  %107 = phi i32 [ -120, %88 ], [ %89, %98 ], [ %104, %100 ]\l  %108 = phi i64 [ 0, %88 ], [ %96, %98 ], [ %103, %100 ]\l  %109 = zext i64 %108 to i80\l  %110 = and i80 %55, -18446744073709551616\l  %111 = or i80 %110, %109\l  %112 = bitcast i80 %111 to x86_fp80\l  br label %113\l}"];
	Node0x1923970 -> Node0x19239c0;
	Node0x19239c0 [shape=record,label="{%113:\l113:                                              \l  %114 = phi i32 [ %107, %106 ], [ %38, %50 ]\l  %115 = phi x86_fp80 [ %112, %106 ], [ %39, %50 ]\l  %116 = phi i32 [ %95, %106 ], [ 0, %50 ]\l  %117 = icmp slt i32 %114, 1\l  br i1 %117, label %118, label %129\l|{<s0>T|<s1>F}}"];
	Node0x19239c0:s0 -> Node0x1923a10;
	Node0x19239c0:s1 -> Node0x1923a60;
	Node0x1923a10 [shape=record,label="{%118:\l118:                                              \l  %119 = trunc i32 %114 to i16\l  %120 = add i16 %119, 120\l  %121 = bitcast x86_fp80 %115 to i80\l  %122 = zext i16 %120 to i80\l  %123 = shl nuw i80 %122, 64\l  %124 = and i80 %121, 18446744073709551615\l  %125 = or i80 %123, %124\l  %126 = bitcast i80 %125 to x86_fp80\l  %127 = tail call x86_fp80 @llvm.experimental.constrained.fpext.f80.f32(float\l... 0x3870000000000000, metadata !fpexcept.ignore) #40\l  %128 = tail call x86_fp80 @llvm.experimental.constrained.fmul.f80(x86_fp80\l... %126, x86_fp80 %127, metadata !round.dynamic, metadata !fpexcept.ignore)\l... #40\l  br label %136\l}"];
	Node0x1923a10 -> Node0x1923ab0;
	Node0x1923a60 [shape=record,label="{%129:\l129:                                              \l  %130 = bitcast x86_fp80 %115 to i80\l  %131 = zext i32 %114 to i80\l  %132 = shl i80 %131, 64\l  %133 = and i80 %130, 18446744073709551615\l  %134 = or i80 %133, %132\l  %135 = bitcast i80 %134 to x86_fp80\l  br label %136\l}"];
	Node0x1923a60 -> Node0x1923ab0;
	Node0x1923ab0 [shape=record,label="{%136:\l136:                                              \l  %137 = phi x86_fp80 [ %128, %118 ], [ %135, %129 ]\l  %138 = icmp slt i80 %8, 0\l  %139 = fneg x86_fp80 %1\l  %140 = select i1 %138, x86_fp80 %139, x86_fp80 %1\l  %141 = icmp eq i32 %114, %52\l  br i1 %141, label %157, label %142\l|{<s0>T|<s1>F}}"];
	Node0x1923ab0:s0 -> Node0x1923bf0;
	Node0x1923ab0:s1 -> Node0x1923b00;
	Node0x1923b00 [shape=record,label="{%142:\l142:                                              \l  %143 = add nsw i32 %114, 1\l  %144 = icmp eq i32 %143, %52\l  br i1 %144, label %145, label %160\l|{<s0>T|<s1>F}}"];
	Node0x1923b00:s0 -> Node0x1923b50;
	Node0x1923b00:s1 -> Node0x1923c40;
	Node0x1923b50 [shape=record,label="{%145:\l145:                                              \l  %146 = tail call x86_fp80 @llvm.experimental.constrained.sitofp.f80.i32(i32\l... 2, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %147 = tail call x86_fp80 @llvm.experimental.constrained.fmul.f80(x86_fp80\l... %146, x86_fp80 %137, metadata !round.dynamic, metadata !fpexcept.ignore)\l... #40\l  %148 = tail call i1 @llvm.experimental.constrained.fcmps.f80(x86_fp80 %147,\l... x86_fp80 %140, metadata !ogt, metadata !fpexcept.ignore) #40\l  br i1 %148, label %157, label %149\l|{<s0>T|<s1>F}}"];
	Node0x1923b50:s0 -> Node0x1923bf0;
	Node0x1923b50:s1 -> Node0x1923ba0;
	Node0x1923ba0 [shape=record,label="{%149:\l149:                                              \l  %150 = tail call x86_fp80 @llvm.experimental.constrained.sitofp.f80.i32(i32\l... 2, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %151 = tail call x86_fp80 @llvm.experimental.constrained.fmul.f80(x86_fp80\l... %150, x86_fp80 %137, metadata !round.dynamic, metadata !fpexcept.ignore)\l... #40\l  %152 = tail call i1 @llvm.experimental.constrained.fcmp.f80(x86_fp80 %151,\l... x86_fp80 %140, metadata !oeq, metadata !fpexcept.ignore) #40\l  %153 = xor i1 %152, true\l  %154 = and i32 %116, 1\l  %155 = icmp eq i32 %154, 0\l  %156 = or i1 %155, %153\l  br i1 %156, label %160, label %157\l|{<s0>T|<s1>F}}"];
	Node0x1923ba0:s0 -> Node0x1923c40;
	Node0x1923ba0:s1 -> Node0x1923bf0;
	Node0x1923bf0 [shape=record,label="{%157:\l157:                                              \l  %158 = tail call x86_fp80 @llvm.experimental.constrained.fsub.f80(x86_fp80\l... %137, x86_fp80 %140, metadata !round.dynamic, metadata !fpexcept.ignore)\l... #40\l  %159 = add i32 %116, 1\l  br label %160\l}"];
	Node0x1923bf0 -> Node0x1923c40;
	Node0x1923c40 [shape=record,label="{%160:\l160:                                              \l  %161 = phi i32 [ %159, %157 ], [ %116, %149 ], [ %116, %142 ]\l  %162 = phi x86_fp80 [ %158, %157 ], [ %137, %149 ], [ %137, %142 ]\l  %163 = and i32 %161, 2147483647\l  %164 = xor i80 %8, %4\l  %165 = icmp sgt i80 %164, -1\l  %166 = sub nsw i32 0, %163\l  %167 = select i1 %165, i32 %163, i32 %166\l  store i32 %167, i32* %2, align 4, !tbaa !1632\l  %168 = icmp slt i80 %4, 0\l  %169 = fneg x86_fp80 %162\l  %170 = select i1 %168, x86_fp80 %169, x86_fp80 %162\l  br label %171\l}"];
	Node0x1923c40 -> Node0x1923c90;
	Node0x1923c90 [shape=record,label="{%171:\l171:                                              \l  %172 = phi x86_fp80 [ %22, %19 ], [ %170, %160 ], [ %0, %23 ]\l  ret x86_fp80 %172\l}"];
}
