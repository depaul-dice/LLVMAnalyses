digraph "CFG for 'processblock' function" {
	label="CFG for 'processblock' function";

	Node0x11d48d0 [shape=record,label="{%2:\l  %3 = alloca [80 x i64], align 16\l  %4 = bitcast [80 x i64]* %3 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 640, i8* nonnull %4) #40\l  br label %8\l}"];
	Node0x11d48d0 -> Node0x11d4970;
	Node0x11d4920 [shape=record,label="{%5:\l5:                                                \l  %6 = getelementptr inbounds [80 x i64], [80 x i64]* %3, i64 0, i64 0\l  %7 = load i64, i64* %6, align 16, !tbaa !1632\l  br label %59\l}"];
	Node0x11d4920 -> Node0x11d49c0;
	Node0x11d4970 [shape=record,label="{%8:\l8:                                                \l  %9 = phi i64 [ 0, %2 ], [ %57, %8 ]\l  %10 = shl nuw nsw i64 %9, 3\l  %11 = getelementptr inbounds i8, i8* %1, i64 %10\l  %12 = load i8, i8* %11, align 1, !tbaa !1636\l  %13 = zext i8 %12 to i64\l  %14 = shl nuw i64 %13, 56\l  %15 = getelementptr inbounds [80 x i64], [80 x i64]* %3, i64 0, i64 %9\l  %16 = or i64 %10, 1\l  %17 = getelementptr inbounds i8, i8* %1, i64 %16\l  %18 = load i8, i8* %17, align 1, !tbaa !1636\l  %19 = zext i8 %18 to i64\l  %20 = shl nuw nsw i64 %19, 48\l  %21 = or i64 %20, %14\l  %22 = or i64 %10, 2\l  %23 = getelementptr inbounds i8, i8* %1, i64 %22\l  %24 = load i8, i8* %23, align 1, !tbaa !1636\l  %25 = zext i8 %24 to i64\l  %26 = shl nuw nsw i64 %25, 40\l  %27 = or i64 %26, %21\l  %28 = or i64 %10, 3\l  %29 = getelementptr inbounds i8, i8* %1, i64 %28\l  %30 = load i8, i8* %29, align 1, !tbaa !1636\l  %31 = zext i8 %30 to i64\l  %32 = shl nuw nsw i64 %31, 32\l  %33 = or i64 %32, %27\l  %34 = or i64 %10, 4\l  %35 = getelementptr inbounds i8, i8* %1, i64 %34\l  %36 = load i8, i8* %35, align 1, !tbaa !1636\l  %37 = zext i8 %36 to i64\l  %38 = shl nuw nsw i64 %37, 24\l  %39 = or i64 %38, %33\l  %40 = or i64 %10, 5\l  %41 = getelementptr inbounds i8, i8* %1, i64 %40\l  %42 = load i8, i8* %41, align 1, !tbaa !1636\l  %43 = zext i8 %42 to i64\l  %44 = shl nuw nsw i64 %43, 16\l  %45 = or i64 %44, %39\l  %46 = or i64 %10, 6\l  %47 = getelementptr inbounds i8, i8* %1, i64 %46\l  %48 = load i8, i8* %47, align 1, !tbaa !1636\l  %49 = zext i8 %48 to i64\l  %50 = shl nuw nsw i64 %49, 8\l  %51 = or i64 %50, %45\l  %52 = or i64 %10, 7\l  %53 = getelementptr inbounds i8, i8* %1, i64 %52\l  %54 = load i8, i8* %53, align 1, !tbaa !1636\l  %55 = zext i8 %54 to i64\l  %56 = or i64 %51, %55\l  store i64 %56, i64* %15, align 8, !tbaa !1632\l  %57 = add nuw nsw i64 %9, 1\l  %58 = icmp eq i64 %57, 16\l  br i1 %58, label %5, label %8\l|{<s0>T|<s1>F}}"];
	Node0x11d4970:s0 -> Node0x11d4920;
	Node0x11d4970:s1 -> Node0x11d4970;
	Node0x11d49c0 [shape=record,label="{%59:\l59:                                               \l  %60 = phi i64 [ %7, %5 ], [ %79, %59 ]\l  %61 = phi i64 [ 16, %5 ], [ %93, %59 ]\l  %62 = add nsw i64 %61, -2\l  %63 = getelementptr inbounds [80 x i64], [80 x i64]* %3, i64 0, i64 %62\l  %64 = load i64, i64* %63, align 8, !tbaa !1632\l  %65 = lshr i64 %64, 19\l  %66 = shl i64 %64, 45\l  %67 = or i64 %66, %65\l  %68 = lshr i64 %64, 61\l  %69 = shl i64 %64, 3\l  %70 = or i64 %69, %68\l  %71 = lshr i64 %64, 6\l  %72 = xor i64 %70, %71\l  %73 = xor i64 %72, %67\l  %74 = add nsw i64 %61, -7\l  %75 = getelementptr inbounds [80 x i64], [80 x i64]* %3, i64 0, i64 %74\l  %76 = load i64, i64* %75, align 8, !tbaa !1632\l  %77 = add nsw i64 %61, -15\l  %78 = getelementptr inbounds [80 x i64], [80 x i64]* %3, i64 0, i64 %77\l  %79 = load i64, i64* %78, align 8, !tbaa !1632\l  %80 = lshr i64 %79, 1\l  %81 = shl i64 %79, 63\l  %82 = or i64 %81, %80\l  %83 = lshr i64 %79, 8\l  %84 = shl i64 %79, 56\l  %85 = or i64 %84, %83\l  %86 = lshr i64 %79, 7\l  %87 = xor i64 %85, %86\l  %88 = xor i64 %87, %82\l  %89 = add i64 %60, %76\l  %90 = add i64 %89, %73\l  %91 = add i64 %90, %88\l  %92 = getelementptr inbounds [80 x i64], [80 x i64]* %3, i64 0, i64 %61\l  store i64 %91, i64* %92, align 8, !tbaa !1632\l  %93 = add nuw nsw i64 %61, 1\l  %94 = icmp eq i64 %93, 80\l  br i1 %94, label %95, label %59\l|{<s0>T|<s1>F}}"];
	Node0x11d49c0:s0 -> Node0x11d4a10;
	Node0x11d49c0:s1 -> Node0x11d49c0;
	Node0x11d4a10 [shape=record,label="{%95:\l95:                                               \l  %96 = getelementptr inbounds %struct.sha512, %struct.sha512* %0, i64 0, i32\l... 1, i64 0\l  %97 = load i64, i64* %96, align 8, !tbaa !1632\l  %98 = getelementptr inbounds %struct.sha512, %struct.sha512* %0, i64 0, i32\l... 1, i64 1\l  %99 = load i64, i64* %98, align 8, !tbaa !1632\l  %100 = getelementptr inbounds %struct.sha512, %struct.sha512* %0, i64 0, i32\l... 1, i64 2\l  %101 = load i64, i64* %100, align 8, !tbaa !1632\l  %102 = getelementptr inbounds %struct.sha512, %struct.sha512* %0, i64 0, i32\l... 1, i64 3\l  %103 = load i64, i64* %102, align 8, !tbaa !1632\l  %104 = getelementptr inbounds %struct.sha512, %struct.sha512* %0, i64 0, i32\l... 1, i64 4\l  %105 = load i64, i64* %104, align 8, !tbaa !1632\l  %106 = getelementptr inbounds %struct.sha512, %struct.sha512* %0, i64 0, i32\l... 1, i64 5\l  %107 = load i64, i64* %106, align 8, !tbaa !1632\l  %108 = getelementptr inbounds %struct.sha512, %struct.sha512* %0, i64 0, i32\l... 1, i64 6\l  %109 = load i64, i64* %108, align 8, !tbaa !1632\l  %110 = getelementptr inbounds %struct.sha512, %struct.sha512* %0, i64 0, i32\l... 1, i64 7\l  %111 = load i64, i64* %110, align 8, !tbaa !1632\l  br label %112\l}"];
	Node0x11d4a10 -> Node0x11d4a60;
	Node0x11d4a60 [shape=record,label="{%112:\l112:                                              \l  %113 = phi i64 [ 0, %95 ], [ %162, %112 ]\l  %114 = phi i64 [ %111, %95 ], [ %115, %112 ]\l  %115 = phi i64 [ %109, %95 ], [ %116, %112 ]\l  %116 = phi i64 [ %107, %95 ], [ %117, %112 ]\l  %117 = phi i64 [ %105, %95 ], [ %160, %112 ]\l  %118 = phi i64 [ %103, %95 ], [ %119, %112 ]\l  %119 = phi i64 [ %101, %95 ], [ %120, %112 ]\l  %120 = phi i64 [ %99, %95 ], [ %121, %112 ]\l  %121 = phi i64 [ %97, %95 ], [ %161, %112 ]\l  %122 = lshr i64 %117, 14\l  %123 = shl i64 %117, 50\l  %124 = or i64 %123, %122\l  %125 = lshr i64 %117, 18\l  %126 = shl i64 %117, 46\l  %127 = or i64 %126, %125\l  %128 = xor i64 %124, %127\l  %129 = lshr i64 %117, 41\l  %130 = shl i64 %117, 23\l  %131 = or i64 %130, %129\l  %132 = xor i64 %128, %131\l  %133 = add i64 %132, %114\l  %134 = xor i64 %115, %116\l  %135 = and i64 %134, %117\l  %136 = xor i64 %135, %115\l  %137 = add i64 %133, %136\l  %138 = getelementptr inbounds [80 x i64], [80 x i64]* @K, i64 0, i64 %113\l  %139 = load i64, i64* %138, align 8, !tbaa !1632\l  %140 = add i64 %137, %139\l  %141 = getelementptr inbounds [80 x i64], [80 x i64]* %3, i64 0, i64 %113\l  %142 = load i64, i64* %141, align 8, !tbaa !1632\l  %143 = add i64 %140, %142\l  %144 = lshr i64 %121, 28\l  %145 = shl i64 %121, 36\l  %146 = or i64 %145, %144\l  %147 = lshr i64 %121, 34\l  %148 = shl i64 %121, 30\l  %149 = or i64 %148, %147\l  %150 = xor i64 %146, %149\l  %151 = lshr i64 %121, 39\l  %152 = shl i64 %121, 25\l  %153 = or i64 %152, %151\l  %154 = xor i64 %150, %153\l  %155 = and i64 %120, %121\l  %156 = or i64 %120, %121\l  %157 = and i64 %119, %156\l  %158 = or i64 %157, %155\l  %159 = add i64 %154, %158\l  %160 = add i64 %143, %118\l  %161 = add i64 %159, %143\l  %162 = add nuw nsw i64 %113, 1\l  %163 = icmp eq i64 %162, 80\l  br i1 %163, label %164, label %112\l|{<s0>T|<s1>F}}"];
	Node0x11d4a60:s0 -> Node0x11d4ab0;
	Node0x11d4a60:s1 -> Node0x11d4a60;
	Node0x11d4ab0 [shape=record,label="{%164:\l164:                                              \l  %165 = add i64 %161, %97\l  store i64 %165, i64* %96, align 8, !tbaa !1632\l  %166 = add i64 %121, %99\l  store i64 %166, i64* %98, align 8, !tbaa !1632\l  %167 = add i64 %120, %101\l  store i64 %167, i64* %100, align 8, !tbaa !1632\l  %168 = add i64 %119, %103\l  store i64 %168, i64* %102, align 8, !tbaa !1632\l  %169 = add i64 %160, %105\l  store i64 %169, i64* %104, align 8, !tbaa !1632\l  %170 = add i64 %117, %107\l  store i64 %170, i64* %106, align 8, !tbaa !1632\l  %171 = add i64 %116, %109\l  store i64 %171, i64* %108, align 8, !tbaa !1632\l  %172 = add i64 %115, %111\l  store i64 %172, i64* %110, align 8, !tbaa !1632\l  call void @llvm.lifetime.end.p0i8(i64 640, i8* nonnull %4) #40\l  ret void\l}"];
}
