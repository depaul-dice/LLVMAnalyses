digraph "CFG for '__ldexp_cexp' function" {
	label="CFG for '__ldexp_cexp' function";

	Node0x16fe8a0 [shape=record,label="{%3:\l  %4 = tail call double @llvm.experimental.constrained.fsub.f64(double %0,\l... double 0x40937BE319BA0DA4, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  %5 = tail call double @exp(double %4) #41\l  %6 = bitcast double %5 to i64\l  %7 = lshr i64 %6, 52\l  %8 = trunc i64 %7 to i32\l  %9 = and i64 %6, 4503599627370495\l  %10 = or i64 %9, 9214364837600034816\l  %11 = bitcast i64 %10 to double\l  %12 = add i32 %2, -247\l  %13 = add i32 %12, %8\l  %14 = sdiv i32 %13, 2\l  %15 = shl i32 %14, 20\l  %16 = add i32 %15, 1072693248\l  %17 = zext i32 %16 to i64\l  %18 = shl nuw i64 %17, 32\l  %19 = bitcast i64 %18 to double\l  %20 = sub nsw i32 %13, %14\l  %21 = shl i32 %20, 20\l  %22 = add i32 %21, 1072693248\l  %23 = zext i32 %22 to i64\l  %24 = shl nuw i64 %23, 32\l  %25 = bitcast i64 %24 to double\l  %26 = tail call double @cos(double %1) #41\l  %27 = tail call double @llvm.experimental.constrained.fmul.f64(double %26,\l... double %11, metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %28 = tail call double @llvm.experimental.constrained.fmul.f64(double %27,\l... double %19, metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %29 = tail call double @llvm.experimental.constrained.fmul.f64(double %28,\l... double %25, metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %30 = tail call double @sin(double %1) #41\l  %31 = tail call double @llvm.experimental.constrained.fmul.f64(double %30,\l... double %11, metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %32 = tail call double @llvm.experimental.constrained.fmul.f64(double %31,\l... double %19, metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %33 = tail call double @llvm.experimental.constrained.fmul.f64(double %32,\l... double %25, metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %34 = insertvalue \{ double, double \} undef, double %29, 0\l  %35 = insertvalue \{ double, double \} %34, double %33, 1\l  ret \{ double, double \} %35\l}"];
}
