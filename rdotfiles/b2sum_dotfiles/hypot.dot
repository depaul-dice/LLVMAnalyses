digraph "CFG for 'hypot' function" {
	label="CFG for 'hypot' function";

	Node0x16ddf50 [shape=record,label="{%2:\l  %3 = bitcast double %0 to i64\l  %4 = bitcast double %1 to i64\l  %5 = and i64 %3, 9223372036854775807\l  %6 = and i64 %4, 9223372036854775807\l  %7 = icmp ult i64 %5, %6\l  %8 = select i1 %7, i64 %6, i64 %5\l  %9 = select i1 %7, i64 %5, i64 %6\l  %10 = lshr i64 %8, 52\l  %11 = trunc i64 %10 to i32\l  %12 = lshr i64 %9, 52\l  %13 = trunc i64 %12 to i32\l  %14 = bitcast i64 %8 to double\l  %15 = bitcast i64 %9 to double\l  %16 = icmp eq i32 %13, 2047\l  br i1 %16, label %76, label %17\l|{<s0>T|<s1>F}}"];
	Node0x16ddf50:s0 -> Node0x16de5b0;
	Node0x16ddf50:s1 -> Node0x16de330;
	Node0x16de330 [shape=record,label="{%17:\l17:                                               \l  %18 = icmp eq i32 %11, 2047\l  %19 = icmp eq i64 %9, 0\l  %20 = or i1 %19, %18\l  br i1 %20, label %76, label %21\l|{<s0>T|<s1>F}}"];
	Node0x16de330:s0 -> Node0x16de5b0;
	Node0x16de330:s1 -> Node0x16de380;
	Node0x16de380 [shape=record,label="{%21:\l21:                                               \l  %22 = sub nsw i32 %11, %13\l  %23 = icmp sgt i32 %22, 64\l  br i1 %23, label %24, label %26\l|{<s0>T|<s1>F}}"];
	Node0x16de380:s0 -> Node0x16de3d0;
	Node0x16de380:s1 -> Node0x16de420;
	Node0x16de3d0 [shape=record,label="{%24:\l24:                                               \l  %25 = tail call double @llvm.experimental.constrained.fadd.f64(double %14,\l... double %15, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  br label %76\l}"];
	Node0x16de3d0 -> Node0x16de5b0;
	Node0x16de420 [shape=record,label="{%26:\l26:                                               \l  %27 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 1,\l... metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %28 = icmp ugt i32 %11, 1533\l  br i1 %28, label %29, label %32\l|{<s0>T|<s1>F}}"];
	Node0x16de420:s0 -> Node0x16de470;
	Node0x16de420:s1 -> Node0x16de4c0;
	Node0x16de470 [shape=record,label="{%29:\l29:                                               \l  %30 = tail call double @llvm.experimental.constrained.fmul.f64(double %14,\l... double 0x1430000000000000, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  %31 = tail call double @llvm.experimental.constrained.fmul.f64(double %15,\l... double 0x1430000000000000, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  br label %37\l}"];
	Node0x16de470 -> Node0x16de560;
	Node0x16de4c0 [shape=record,label="{%32:\l32:                                               \l  %33 = icmp ult i32 %13, 573\l  br i1 %33, label %34, label %37\l|{<s0>T|<s1>F}}"];
	Node0x16de4c0:s0 -> Node0x16de510;
	Node0x16de4c0:s1 -> Node0x16de560;
	Node0x16de510 [shape=record,label="{%34:\l34:                                               \l  %35 = tail call double @llvm.experimental.constrained.fmul.f64(double %14,\l... double 0x6BB0000000000000, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  %36 = tail call double @llvm.experimental.constrained.fmul.f64(double %15,\l... double 0x6BB0000000000000, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  br label %37\l}"];
	Node0x16de510 -> Node0x16de560;
	Node0x16de560 [shape=record,label="{%37:\l37:                                               \l  %38 = phi double [ %31, %29 ], [ %36, %34 ], [ %15, %32 ]\l  %39 = phi double [ %30, %29 ], [ %35, %34 ], [ %14, %32 ]\l  %40 = phi double [ 0x6BB0000000000000, %29 ], [ 0x1430000000000000, %34 ], [\l... %27, %32 ]\l  %41 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 1,\l... metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %42 = tail call double @llvm.experimental.constrained.fadd.f64(double\l... 0x41A0000000000000, double %41, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #41\l  %43 = tail call double @llvm.experimental.constrained.fmul.f64(double %39,\l... double %42, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %44 = tail call double @llvm.experimental.constrained.fsub.f64(double %39,\l... double %43, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %45 = tail call double @llvm.experimental.constrained.fadd.f64(double %44,\l... double %43, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %46 = tail call double @llvm.experimental.constrained.fsub.f64(double %39,\l... double %45, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %47 = tail call double @llvm.experimental.constrained.fmul.f64(double %39,\l... double %39, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %48 = tail call double @llvm.experimental.constrained.fmul.f64(double %45,\l... double %45, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %49 = tail call double @llvm.experimental.constrained.fsub.f64(double %48,\l... double %47, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %50 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 2,\l... metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %51 = tail call double @llvm.experimental.constrained.fmul.f64(double %50,\l... double %45, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %52 = tail call double @llvm.experimental.constrained.fmul.f64(double %51,\l... double %46, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %53 = tail call double @llvm.experimental.constrained.fadd.f64(double %49,\l... double %52, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %54 = tail call double @llvm.experimental.constrained.fmul.f64(double %46,\l... double %46, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %55 = tail call double @llvm.experimental.constrained.fadd.f64(double %53,\l... double %54, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %56 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 1,\l... metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %57 = tail call double @llvm.experimental.constrained.fadd.f64(double\l... 0x41A0000000000000, double %56, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #41\l  %58 = tail call double @llvm.experimental.constrained.fmul.f64(double %38,\l... double %57, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %59 = tail call double @llvm.experimental.constrained.fsub.f64(double %38,\l... double %58, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %60 = tail call double @llvm.experimental.constrained.fadd.f64(double %59,\l... double %58, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %61 = tail call double @llvm.experimental.constrained.fsub.f64(double %38,\l... double %60, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %62 = tail call double @llvm.experimental.constrained.fmul.f64(double %38,\l... double %38, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %63 = tail call double @llvm.experimental.constrained.fmul.f64(double %60,\l... double %60, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %64 = tail call double @llvm.experimental.constrained.fsub.f64(double %63,\l... double %62, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %65 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 2,\l... metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %66 = tail call double @llvm.experimental.constrained.fmul.f64(double %65,\l... double %60, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %67 = tail call double @llvm.experimental.constrained.fmul.f64(double %66,\l... double %61, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %68 = tail call double @llvm.experimental.constrained.fadd.f64(double %64,\l... double %67, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %69 = tail call double @llvm.experimental.constrained.fmul.f64(double %61,\l... double %61, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %70 = tail call double @llvm.experimental.constrained.fadd.f64(double %68,\l... double %69, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %71 = tail call double @llvm.experimental.constrained.fadd.f64(double %70,\l... double %55, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %72 = tail call double @llvm.experimental.constrained.fadd.f64(double %71,\l... double %62, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %73 = tail call double @llvm.experimental.constrained.fadd.f64(double %72,\l... double %47, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %74 = tail call double @sqrt(double %73) #42\l  %75 = tail call double @llvm.experimental.constrained.fmul.f64(double %40,\l... double %74, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  br label %76\l}"];
	Node0x16de560 -> Node0x16de5b0;
	Node0x16de5b0 [shape=record,label="{%76:\l76:                                               \l  %77 = phi double [ %25, %24 ], [ %75, %37 ], [ %15, %2 ], [ %14, %17 ]\l  ret double %77\l}"];
}
