digraph "CFG for 'fmod' function" {
	label="CFG for 'fmod' function";

	Node0x1c48380 [shape=record,label="{%2:\l  %3 = bitcast double %0 to i64\l  %4 = bitcast double %1 to i64\l  %5 = lshr i64 %3, 52\l  %6 = trunc i64 %5 to i32\l  %7 = and i32 %6, 2047\l  %8 = lshr i64 %4, 52\l  %9 = trunc i64 %8 to i32\l  %10 = and i32 %9, 2047\l  %11 = and i64 %3, -9223372036854775808\l  %12 = shl i64 %4, 1\l  %13 = icmp eq i64 %12, 0\l  br i1 %13, label %19, label %14\l|{<s0>T|<s1>F}}"];
	Node0x1c48380:s0 -> Node0x1c48900;
	Node0x1c48380:s1 -> Node0x1c488b0;
	Node0x1c488b0 [shape=record,label="{%14:\l14:                                               \l  %15 = and i64 %4, 9223372036854775807\l  %16 = icmp ugt i64 %15, 9218868437227405312\l  %17 = icmp eq i32 %7, 2047\l  %18 = or i1 %16, %17\l  br i1 %18, label %19, label %23\l|{<s0>T|<s1>F}}"];
	Node0x1c488b0:s0 -> Node0x1c48900;
	Node0x1c488b0:s1 -> Node0x1c48950;
	Node0x1c48900 [shape=record,label="{%19:\l19:                                               \l  %20 = tail call double @llvm.experimental.constrained.fmul.f64(double %0,\l... double %1, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %21 = tail call double @llvm.experimental.constrained.fmul.f64(double %0,\l... double %1, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %22 = tail call double @llvm.experimental.constrained.fdiv.f64(double %20,\l... double %21, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  br label %130\l}"];
	Node0x1c48900 -> Node0x1c491c0;
	Node0x1c48950 [shape=record,label="{%23:\l23:                                               \l  %24 = shl i64 %3, 1\l  %25 = icmp ugt i64 %24, %12\l  br i1 %25, label %31, label %26\l|{<s0>T|<s1>F}}"];
	Node0x1c48950:s0 -> Node0x1c48a40;
	Node0x1c48950:s1 -> Node0x1c489a0;
	Node0x1c489a0 [shape=record,label="{%26:\l26:                                               \l  %27 = icmp eq i64 %24, %12\l  br i1 %27, label %28, label %130\l|{<s0>T|<s1>F}}"];
	Node0x1c489a0:s0 -> Node0x1c489f0;
	Node0x1c489a0:s1 -> Node0x1c491c0;
	Node0x1c489f0 [shape=record,label="{%28:\l28:                                               \l  %29 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 0,\l... metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %30 = tail call double @llvm.experimental.constrained.fmul.f64(double %29,\l... double %0, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  br label %130\l}"];
	Node0x1c489f0 -> Node0x1c491c0;
	Node0x1c48a40 [shape=record,label="{%31:\l31:                                               \l  %32 = icmp eq i32 %7, 0\l  br i1 %32, label %33, label %47\l|{<s0>T|<s1>F}}"];
	Node0x1c48a40:s0 -> Node0x1c48a90;
	Node0x1c48a40:s1 -> Node0x1c48b80;
	Node0x1c48a90 [shape=record,label="{%33:\l33:                                               \l  %34 = shl i64 %3, 12\l  %35 = icmp sgt i64 %34, -1\l  br i1 %35, label %36, label %42\l|{<s0>T|<s1>F}}"];
	Node0x1c48a90:s0 -> Node0x1c48ae0;
	Node0x1c48a90:s1 -> Node0x1c48b30;
	Node0x1c48ae0 [shape=record,label="{%36:\l36:                                               \l  %37 = phi i64 [ %40, %36 ], [ %34, %33 ]\l  %38 = phi i32 [ %39, %36 ], [ 0, %33 ]\l  %39 = add nsw i32 %38, -1\l  %40 = shl nuw i64 %37, 1\l  %41 = icmp sgt i64 %40, -1\l  br i1 %41, label %36, label %42\l|{<s0>T|<s1>F}}"];
	Node0x1c48ae0:s0 -> Node0x1c48ae0;
	Node0x1c48ae0:s1 -> Node0x1c48b30;
	Node0x1c48b30 [shape=record,label="{%42:\l42:                                               \l  %43 = phi i32 [ 0, %33 ], [ %39, %36 ]\l  %44 = sub i32 1, %43\l  %45 = zext i32 %44 to i64\l  %46 = shl i64 %3, %45\l  br label %50\l}"];
	Node0x1c48b30 -> Node0x1c48bd0;
	Node0x1c48b80 [shape=record,label="{%47:\l47:                                               \l  %48 = and i64 %3, 4503599627370495\l  %49 = or i64 %48, 4503599627370496\l  br label %50\l}"];
	Node0x1c48b80 -> Node0x1c48bd0;
	Node0x1c48bd0 [shape=record,label="{%50:\l50:                                               \l  %51 = phi i32 [ %7, %47 ], [ %43, %42 ]\l  %52 = phi i64 [ %49, %47 ], [ %46, %42 ]\l  %53 = icmp eq i32 %10, 0\l  br i1 %53, label %54, label %68\l|{<s0>T|<s1>F}}"];
	Node0x1c48bd0:s0 -> Node0x1c48c20;
	Node0x1c48bd0:s1 -> Node0x1c48d10;
	Node0x1c48c20 [shape=record,label="{%54:\l54:                                               \l  %55 = shl i64 %4, 12\l  %56 = icmp sgt i64 %55, -1\l  br i1 %56, label %57, label %63\l|{<s0>T|<s1>F}}"];
	Node0x1c48c20:s0 -> Node0x1c48c70;
	Node0x1c48c20:s1 -> Node0x1c48cc0;
	Node0x1c48c70 [shape=record,label="{%57:\l57:                                               \l  %58 = phi i64 [ %61, %57 ], [ %55, %54 ]\l  %59 = phi i32 [ %60, %57 ], [ 0, %54 ]\l  %60 = add nsw i32 %59, -1\l  %61 = shl nuw i64 %58, 1\l  %62 = icmp sgt i64 %61, -1\l  br i1 %62, label %57, label %63\l|{<s0>T|<s1>F}}"];
	Node0x1c48c70:s0 -> Node0x1c48c70;
	Node0x1c48c70:s1 -> Node0x1c48cc0;
	Node0x1c48cc0 [shape=record,label="{%63:\l63:                                               \l  %64 = phi i32 [ 0, %54 ], [ %60, %57 ]\l  %65 = sub i32 1, %64\l  %66 = zext i32 %65 to i64\l  %67 = shl i64 %4, %66\l  br label %71\l}"];
	Node0x1c48cc0 -> Node0x1c48d60;
	Node0x1c48d10 [shape=record,label="{%68:\l68:                                               \l  %69 = and i64 %4, 4503599627370495\l  %70 = or i64 %69, 4503599627370496\l  br label %71\l}"];
	Node0x1c48d10 -> Node0x1c48d60;
	Node0x1c48d60 [shape=record,label="{%71:\l71:                                               \l  %72 = phi i64 [ %70, %68 ], [ %67, %63 ]\l  %73 = phi i32 [ %10, %68 ], [ %64, %63 ]\l  %74 = icmp sgt i32 %51, %73\l  %75 = sub i64 %52, %72\l  %76 = icmp sgt i64 %75, -1\l  br i1 %74, label %77, label %94\l|{<s0>T|<s1>F}}"];
	Node0x1c48d60:s0 -> Node0x1c48db0;
	Node0x1c48d60:s1 -> Node0x1c48ef0;
	Node0x1c48db0 [shape=record,label="{%77:\l77:                                               \l  %78 = phi i1 [ %93, %87 ], [ %76, %71 ]\l  %79 = phi i64 [ %92, %87 ], [ %75, %71 ]\l  %80 = phi i64 [ %89, %87 ], [ %52, %71 ]\l  %81 = phi i32 [ %90, %87 ], [ %51, %71 ]\l  br i1 %78, label %82, label %87\l|{<s0>T|<s1>F}}"];
	Node0x1c48db0:s0 -> Node0x1c48e00;
	Node0x1c48db0:s1 -> Node0x1c48ea0;
	Node0x1c48e00 [shape=record,label="{%82:\l82:                                               \l  %83 = icmp eq i64 %79, 0\l  br i1 %83, label %84, label %87\l|{<s0>T|<s1>F}}"];
	Node0x1c48e00:s0 -> Node0x1c48e50;
	Node0x1c48e00:s1 -> Node0x1c48ea0;
	Node0x1c48e50 [shape=record,label="{%84:\l84:                                               \l  %85 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 0,\l... metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %86 = tail call double @llvm.experimental.constrained.fmul.f64(double %85,\l... double %0, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  br label %130\l}"];
	Node0x1c48e50 -> Node0x1c491c0;
	Node0x1c48ea0 [shape=record,label="{%87:\l87:                                               \l  %88 = phi i64 [ %80, %77 ], [ %79, %82 ]\l  %89 = shl i64 %88, 1\l  %90 = add nsw i32 %81, -1\l  %91 = icmp sgt i32 %90, %73\l  %92 = sub i64 %89, %72\l  %93 = icmp sgt i64 %92, -1\l  br i1 %91, label %77, label %94\l|{<s0>T|<s1>F}}"];
	Node0x1c48ea0:s0 -> Node0x1c48db0;
	Node0x1c48ea0:s1 -> Node0x1c48ef0;
	Node0x1c48ef0 [shape=record,label="{%94:\l94:                                               \l  %95 = phi i32 [ %51, %71 ], [ %73, %87 ]\l  %96 = phi i64 [ %52, %71 ], [ %89, %87 ]\l  %97 = phi i64 [ %75, %71 ], [ %92, %87 ]\l  %98 = phi i1 [ %76, %71 ], [ %93, %87 ]\l  br i1 %98, label %99, label %104\l|{<s0>T|<s1>F}}"];
	Node0x1c48ef0:s0 -> Node0x1c48f40;
	Node0x1c48ef0:s1 -> Node0x1c48fe0;
	Node0x1c48f40 [shape=record,label="{%99:\l99:                                               \l  %100 = icmp eq i64 %97, 0\l  br i1 %100, label %101, label %104\l|{<s0>T|<s1>F}}"];
	Node0x1c48f40:s0 -> Node0x1c48f90;
	Node0x1c48f40:s1 -> Node0x1c48fe0;
	Node0x1c48f90 [shape=record,label="{%101:\l101:                                              \l  %102 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 0,\l... metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %103 = tail call double @llvm.experimental.constrained.fmul.f64(double %102,\l... double %0, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  br label %130\l}"];
	Node0x1c48f90 -> Node0x1c491c0;
	Node0x1c48fe0 [shape=record,label="{%104:\l104:                                              \l  %105 = phi i64 [ %96, %94 ], [ %97, %99 ]\l  %106 = icmp ult i64 %105, 4503599627370496\l  br i1 %106, label %107, label %113\l|{<s0>T|<s1>F}}"];
	Node0x1c48fe0:s0 -> Node0x1c49030;
	Node0x1c48fe0:s1 -> Node0x1c49080;
	Node0x1c49030 [shape=record,label="{%107:\l107:                                              \l  %108 = phi i64 [ %110, %107 ], [ %105, %104 ]\l  %109 = phi i32 [ %111, %107 ], [ %95, %104 ]\l  %110 = shl nuw nsw i64 %108, 1\l  %111 = add nsw i32 %109, -1\l  %112 = icmp ult i64 %108, 2251799813685248\l  br i1 %112, label %107, label %113\l|{<s0>T|<s1>F}}"];
	Node0x1c49030:s0 -> Node0x1c49030;
	Node0x1c49030:s1 -> Node0x1c49080;
	Node0x1c49080 [shape=record,label="{%113:\l113:                                              \l  %114 = phi i32 [ %95, %104 ], [ %111, %107 ]\l  %115 = phi i64 [ %105, %104 ], [ %110, %107 ]\l  %116 = icmp sgt i32 %114, 0\l  br i1 %116, label %117, label %122\l|{<s0>T|<s1>F}}"];
	Node0x1c49080:s0 -> Node0x1c490d0;
	Node0x1c49080:s1 -> Node0x1c49120;
	Node0x1c490d0 [shape=record,label="{%117:\l117:                                              \l  %118 = add i64 %115, -4503599627370496\l  %119 = zext i32 %114 to i64\l  %120 = shl i64 %119, 52\l  %121 = or i64 %118, %120\l  br label %126\l}"];
	Node0x1c490d0 -> Node0x1c49170;
	Node0x1c49120 [shape=record,label="{%122:\l122:                                              \l  %123 = sub i32 1, %114\l  %124 = zext i32 %123 to i64\l  %125 = lshr i64 %115, %124\l  br label %126\l}"];
	Node0x1c49120 -> Node0x1c49170;
	Node0x1c49170 [shape=record,label="{%126:\l126:                                              \l  %127 = phi i64 [ %121, %117 ], [ %125, %122 ]\l  %128 = or i64 %127, %11\l  %129 = bitcast i64 %128 to double\l  br label %130\l}"];
	Node0x1c49170 -> Node0x1c491c0;
	Node0x1c491c0 [shape=record,label="{%130:\l130:                                              \l  %131 = phi double [ %22, %19 ], [ %30, %28 ], [ %86, %84 ], [ %103, %101 ],\l... [ %129, %126 ], [ %0, %26 ]\l  ret double %131\l}"];
}
