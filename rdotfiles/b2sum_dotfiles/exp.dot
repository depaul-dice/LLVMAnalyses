digraph "CFG for 'exp' function" {
	label="CFG for 'exp' function";

	Node0x16f98f0 [shape=record,label="{%1:\l  %2 = alloca double, align 8\l  %3 = alloca double, align 8\l  %4 = bitcast double %0 to i64\l  %5 = lshr i64 %4, 52\l  %6 = trunc i64 %5 to i32\l  %7 = and i32 %6, 2047\l  %8 = add nsw i32 %7, -969\l  %9 = icmp ult i32 %8, 63\l  br i1 %9, label %34, label %10, !prof !1632, !misexpect !1633\l|{<s0>T|<s1>F}}"];
	Node0x16f98f0:s0 -> Node0x16f9ce0[label="W:2000"];
	Node0x16f98f0:s1 -> Node0x16f9a10[label="W:1"];
	Node0x16f9a10 [shape=record,label="{%10:\l10:                                               \l  %11 = icmp ult i32 %7, 969\l  br i1 %11, label %12, label %14\l|{<s0>T|<s1>F}}"];
	Node0x16f9a10:s0 -> Node0x16f9a60;
	Node0x16f9a10:s1 -> Node0x16f9ab0;
	Node0x16f9a60 [shape=record,label="{%12:\l12:                                               \l  %13 = tail call double @llvm.experimental.constrained.fadd.f64(double\l... 1.000000e+00, double %0, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  br label %112\l}"];
	Node0x16f9a60 -> Node0x16f9f10;
	Node0x16f9ab0 [shape=record,label="{%14:\l14:                                               \l  %15 = icmp ult i32 %7, 1033\l  br i1 %15, label %34, label %16\l|{<s0>T|<s1>F}}"];
	Node0x16f9ab0:s0 -> Node0x16f9ce0;
	Node0x16f9ab0:s1 -> Node0x16f9b00;
	Node0x16f9b00 [shape=record,label="{%16:\l16:                                               \l  %17 = tail call double @llvm.experimental.constrained.fpext.f64.f32(float\l... 0xFFF0000000000000, metadata !fpexcept.ignore) #40\l  %18 = bitcast double %17 to i64\l  %19 = icmp eq i64 %4, %18\l  br i1 %19, label %112, label %20\l|{<s0>T|<s1>F}}"];
	Node0x16f9b00:s0 -> Node0x16f9f10;
	Node0x16f9b00:s1 -> Node0x16f9b50;
	Node0x16f9b50 [shape=record,label="{%20:\l20:                                               \l  %21 = tail call double @llvm.experimental.constrained.fpext.f64.f32(float\l... 0x7FF0000000000000, metadata !fpexcept.ignore) #40\l  %22 = bitcast double %21 to i64\l  %23 = lshr i64 %22, 52\l  %24 = trunc i64 %23 to i32\l  %25 = icmp ult i32 %7, %24\l  br i1 %25, label %28, label %26\l|{<s0>T|<s1>F}}"];
	Node0x16f9b50:s0 -> Node0x16f9bf0;
	Node0x16f9b50:s1 -> Node0x16f9ba0;
	Node0x16f9ba0 [shape=record,label="{%26:\l26:                                               \l  %27 = tail call double @llvm.experimental.constrained.fadd.f64(double\l... 1.000000e+00, double %0, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  br label %112\l}"];
	Node0x16f9ba0 -> Node0x16f9f10;
	Node0x16f9bf0 [shape=record,label="{%28:\l28:                                               \l  %29 = icmp slt i64 %4, 0\l  br i1 %29, label %30, label %32\l|{<s0>T|<s1>F}}"];
	Node0x16f9bf0:s0 -> Node0x16f9c40;
	Node0x16f9bf0:s1 -> Node0x16f9c90;
	Node0x16f9c40 [shape=record,label="{%30:\l30:                                               \l  %31 = tail call double @__math_uflow(i32 0) #41\l  br label %112\l}"];
	Node0x16f9c40 -> Node0x16f9f10;
	Node0x16f9c90 [shape=record,label="{%32:\l32:                                               \l  %33 = tail call double @__math_oflow(i32 0) #41\l  br label %112\l}"];
	Node0x16f9c90 -> Node0x16f9f10;
	Node0x16f9ce0 [shape=record,label="{%34:\l34:                                               \l  %35 = phi i32 [ %7, %1 ], [ 0, %14 ]\l  %36 = load double, double* getelementptr inbounds (%struct.exp_data,\l... %struct.exp_data* @__exp_data, i64 0, i32 0), align 8, !tbaa !1634\l  %37 = tail call double @llvm.experimental.constrained.fmul.f64(double %36,\l... double %0, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %38 = load double, double* getelementptr inbounds (%struct.exp_data,\l... %struct.exp_data* @__exp_data, i64 0, i32 1), align 8, !tbaa !1639\l  %39 = tail call double @llvm.experimental.constrained.fadd.f64(double %37,\l... double %38, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %40 = bitcast double %39 to i64\l  %41 = tail call double @llvm.experimental.constrained.fsub.f64(double %39,\l... double %38, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %42 = load double, double* getelementptr inbounds (%struct.exp_data,\l... %struct.exp_data* @__exp_data, i64 0, i32 2), align 8, !tbaa !1640\l  %43 = tail call double @llvm.experimental.constrained.fmul.f64(double %41,\l... double %42, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %44 = tail call double @llvm.experimental.constrained.fadd.f64(double %0,\l... double %43, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %45 = load double, double* getelementptr inbounds (%struct.exp_data,\l... %struct.exp_data* @__exp_data, i64 0, i32 3), align 8, !tbaa !1641\l  %46 = tail call double @llvm.experimental.constrained.fmul.f64(double %41,\l... double %45, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %47 = tail call double @llvm.experimental.constrained.fadd.f64(double %44,\l... double %46, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %48 = shl i64 %40, 1\l  %49 = and i64 %48, 254\l  %50 = shl i64 %40, 45\l  %51 = getelementptr inbounds %struct.exp_data, %struct.exp_data*\l... @__exp_data, i64 0, i32 7, i64 %49\l  %52 = bitcast i64* %51 to double*\l  %53 = load double, double* %52, align 8, !tbaa !1642\l  %54 = or i64 %49, 1\l  %55 = getelementptr inbounds %struct.exp_data, %struct.exp_data*\l... @__exp_data, i64 0, i32 7, i64 %54\l  %56 = load i64, i64* %55, align 8, !tbaa !1642\l  %57 = add i64 %56, %50\l  %58 = tail call double @llvm.experimental.constrained.fmul.f64(double %47,\l... double %47, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %59 = tail call double @llvm.experimental.constrained.fadd.f64(double %53,\l... double %47, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %60 = load double, double* getelementptr inbounds (%struct.exp_data,\l... %struct.exp_data* @__exp_data, i64 0, i32 4, i64 0), align 8, !tbaa !1644\l  %61 = load double, double* getelementptr inbounds (%struct.exp_data,\l... %struct.exp_data* @__exp_data, i64 0, i32 4, i64 1), align 8, !tbaa !1644\l  %62 = tail call double @llvm.experimental.constrained.fmul.f64(double %47,\l... double %61, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %63 = tail call double @llvm.experimental.constrained.fadd.f64(double %60,\l... double %62, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %64 = tail call double @llvm.experimental.constrained.fmul.f64(double %58,\l... double %63, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %65 = tail call double @llvm.experimental.constrained.fadd.f64(double %59,\l... double %64, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %66 = tail call double @llvm.experimental.constrained.fmul.f64(double %58,\l... double %58, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %67 = load double, double* getelementptr inbounds (%struct.exp_data,\l... %struct.exp_data* @__exp_data, i64 0, i32 4, i64 2), align 8, !tbaa !1644\l  %68 = load double, double* getelementptr inbounds (%struct.exp_data,\l... %struct.exp_data* @__exp_data, i64 0, i32 4, i64 3), align 8, !tbaa !1644\l  %69 = tail call double @llvm.experimental.constrained.fmul.f64(double %47,\l... double %68, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %70 = tail call double @llvm.experimental.constrained.fadd.f64(double %67,\l... double %69, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %71 = tail call double @llvm.experimental.constrained.fmul.f64(double %66,\l... double %70, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %72 = tail call double @llvm.experimental.constrained.fadd.f64(double %65,\l... double %71, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %73 = icmp eq i32 %35, 0\l  br i1 %73, label %74, label %108, !prof !1645, !misexpect !1633\l|{<s0>T|<s1>F}}"];
	Node0x16f9ce0:s0 -> Node0x16f9d30[label="W:1"];
	Node0x16f9ce0:s1 -> Node0x16f9ec0[label="W:2000"];
	Node0x16f9d30 [shape=record,label="{%74:\l74:                                               \l  %75 = trunc i64 %40 to i32\l  %76 = icmp sgt i32 %75, -1\l  br i1 %76, label %77, label %83\l|{<s0>T|<s1>F}}"];
	Node0x16f9d30:s0 -> Node0x16f9d80;
	Node0x16f9d30:s1 -> Node0x16f9dd0;
	Node0x16f9d80 [shape=record,label="{%77:\l77:                                               \l  %78 = add i64 %57, -4544132024016830464\l  %79 = bitcast i64 %78 to double\l  %80 = tail call double @llvm.experimental.constrained.fmul.f64(double %79,\l... double %72, metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %81 = tail call double @llvm.experimental.constrained.fadd.f64(double %79,\l... double %80, metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %82 = tail call double @llvm.experimental.constrained.fmul.f64(double\l... 0x7F00000000000000, double %81, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #42\l  br label %112\l}"];
	Node0x16f9d80 -> Node0x16f9f10;
	Node0x16f9dd0 [shape=record,label="{%83:\l83:                                               \l  %84 = add i64 %57, 4602678819172646912\l  %85 = bitcast i64 %84 to double\l  %86 = tail call double @llvm.experimental.constrained.fmul.f64(double %85,\l... double %72, metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %87 = tail call double @llvm.experimental.constrained.fadd.f64(double %85,\l... double %86, metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %88 = tail call i1 @llvm.experimental.constrained.fcmps.f64(double %87,\l... double 1.000000e+00, metadata !olt, metadata !fpexcept.ignore) #42\l  br i1 %88, label %89, label %105\l|{<s0>T|<s1>F}}"];
	Node0x16f9dd0:s0 -> Node0x16f9e20;
	Node0x16f9dd0:s1 -> Node0x16f9e70;
	Node0x16f9e20 [shape=record,label="{%89:\l89:                                               \l  %90 = tail call double @llvm.experimental.constrained.fsub.f64(double %85,\l... double %87, metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %91 = tail call double @llvm.experimental.constrained.fmul.f64(double %85,\l... double %72, metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %92 = tail call double @llvm.experimental.constrained.fadd.f64(double %90,\l... double %91, metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %93 = tail call double @llvm.experimental.constrained.fadd.f64(double\l... 1.000000e+00, double %87, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #42\l  %94 = tail call double @llvm.experimental.constrained.fsub.f64(double\l... 1.000000e+00, double %93, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #42\l  %95 = tail call double @llvm.experimental.constrained.fadd.f64(double %94,\l... double %87, metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %96 = tail call double @llvm.experimental.constrained.fadd.f64(double %95,\l... double %92, metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %97 = tail call double @llvm.experimental.constrained.fadd.f64(double %93,\l... double %96, metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %98 = tail call double @llvm.experimental.constrained.fsub.f64(double %97,\l... double 1.000000e+00, metadata !round.dynamic, metadata !fpexcept.ignore)\l... #42\l  %99 = tail call i1 @llvm.experimental.constrained.fcmp.f64(double %98,\l... double 0.000000e+00, metadata !oeq, metadata !fpexcept.ignore) #42\l  %100 = select i1 %99, double 0.000000e+00, double %98\l  %101 = bitcast double* %2 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %101)\l  store volatile double 0x10000000000000, double* %2, align 8, !tbaa !1644\l  %102 = load volatile double, double* %2, align 8, !tbaa !1644\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %101)\l  %103 = tail call double @llvm.experimental.constrained.fmul.f64(double %102,\l... double 0x10000000000000, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #42\l  %104 = bitcast double* %3 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %104)\l  store volatile double %103, double* %3, align 8, !tbaa !1644\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %104)\l  br label %105\l}"];
	Node0x16f9e20 -> Node0x16f9e70;
	Node0x16f9e70 [shape=record,label="{%105:\l105:                                              \l  %106 = phi double [ %100, %89 ], [ %87, %83 ]\l  %107 = tail call double @llvm.experimental.constrained.fmul.f64(double\l... 0x10000000000000, double %106, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #42\l  br label %112\l}"];
	Node0x16f9e70 -> Node0x16f9f10;
	Node0x16f9ec0 [shape=record,label="{%108:\l108:                                              \l  %109 = bitcast i64 %57 to double\l  %110 = tail call double @llvm.experimental.constrained.fmul.f64(double %109,\l... double %72, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %111 = tail call double @llvm.experimental.constrained.fadd.f64(double %109,\l... double %110, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  br label %112\l}"];
	Node0x16f9ec0 -> Node0x16f9f10;
	Node0x16f9f10 [shape=record,label="{%112:\l112:                                              \l  %113 = phi double [ %13, %12 ], [ %27, %26 ], [ %31, %30 ], [ %33, %32 ], [\l... %111, %108 ], [ 0.000000e+00, %16 ], [ %82, %77 ], [ %107, %105 ]\l  ret double %113\l}"];
}
