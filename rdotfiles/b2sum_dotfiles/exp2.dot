digraph "CFG for 'exp2' function" {
	label="CFG for 'exp2' function";

	Node0x1550cc0 [shape=record,label="{%1:\l  %2 = alloca double, align 8\l  %3 = alloca double, align 8\l  %4 = bitcast double %0 to i64\l  %5 = lshr i64 %4, 52\l  %6 = trunc i64 %5 to i32\l  %7 = and i32 %6, 2047\l  %8 = add nsw i32 %7, -969\l  %9 = icmp ult i32 %8, 63\l  br i1 %9, label %40, label %10, !prof !1632, !misexpect !1633\l|{<s0>T|<s1>F}}"];
	Node0x1550cc0:s0 -> Node0x1551160[label="W:2000"];
	Node0x1550cc0:s1 -> Node0x1550df0[label="W:1"];
	Node0x1550df0 [shape=record,label="{%10:\l10:                                               \l  %11 = icmp ult i32 %7, 969\l  br i1 %11, label %12, label %14\l|{<s0>T|<s1>F}}"];
	Node0x1550df0:s0 -> Node0x1550e40;
	Node0x1550df0:s1 -> Node0x1550e90;
	Node0x1550e40 [shape=record,label="{%12:\l12:                                               \l  %13 = tail call double @llvm.experimental.constrained.fadd.f64(double\l... 1.000000e+00, double %0, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  br label %114\l}"];
	Node0x1550e40 -> Node0x1551390;
	Node0x1550e90 [shape=record,label="{%14:\l14:                                               \l  %15 = icmp ult i32 %7, 1033\l  br i1 %15, label %36, label %16\l|{<s0>T|<s1>F}}"];
	Node0x1550e90:s0 -> Node0x1551110;
	Node0x1550e90:s1 -> Node0x1550ee0;
	Node0x1550ee0 [shape=record,label="{%16:\l16:                                               \l  %17 = tail call double @llvm.experimental.constrained.fpext.f64.f32(float\l... 0xFFF0000000000000, metadata !fpexcept.ignore) #40\l  %18 = bitcast double %17 to i64\l  %19 = icmp eq i64 %4, %18\l  br i1 %19, label %114, label %20\l|{<s0>T|<s1>F}}"];
	Node0x1550ee0:s0 -> Node0x1551390;
	Node0x1550ee0:s1 -> Node0x1550f30;
	Node0x1550f30 [shape=record,label="{%20:\l20:                                               \l  %21 = tail call double @llvm.experimental.constrained.fpext.f64.f32(float\l... 0x7FF0000000000000, metadata !fpexcept.ignore) #40\l  %22 = bitcast double %21 to i64\l  %23 = lshr i64 %22, 52\l  %24 = trunc i64 %23 to i32\l  %25 = icmp ult i32 %7, %24\l  br i1 %25, label %28, label %26\l|{<s0>T|<s1>F}}"];
	Node0x1550f30:s0 -> Node0x1550fd0;
	Node0x1550f30:s1 -> Node0x1550f80;
	Node0x1550f80 [shape=record,label="{%26:\l26:                                               \l  %27 = tail call double @llvm.experimental.constrained.fadd.f64(double\l... 1.000000e+00, double %0, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  br label %114\l}"];
	Node0x1550f80 -> Node0x1551390;
	Node0x1550fd0 [shape=record,label="{%28:\l28:                                               \l  %29 = icmp slt i64 %4, 0\l  br i1 %29, label %32, label %30\l|{<s0>T|<s1>F}}"];
	Node0x1550fd0:s0 -> Node0x1551070;
	Node0x1550fd0:s1 -> Node0x1551020;
	Node0x1551020 [shape=record,label="{%30:\l30:                                               \l  %31 = tail call double @__math_oflow(i32 0) #41\l  br label %114\l}"];
	Node0x1551020 -> Node0x1551390;
	Node0x1551070 [shape=record,label="{%32:\l32:                                               \l  %33 = icmp ugt i64 %4, -4570929321408987137\l  br i1 %33, label %34, label %36\l|{<s0>T|<s1>F}}"];
	Node0x1551070:s0 -> Node0x15510c0;
	Node0x1551070:s1 -> Node0x1551110;
	Node0x15510c0 [shape=record,label="{%34:\l34:                                               \l  %35 = tail call double @__math_uflow(i32 0) #41\l  br label %114\l}"];
	Node0x15510c0 -> Node0x1551390;
	Node0x1551110 [shape=record,label="{%36:\l36:                                               \l  %37 = shl i64 %4, 1\l  %38 = icmp ugt i64 %37, -9143996093422370816\l  %39 = select i1 %38, i32 0, i32 %7\l  br label %40\l}"];
	Node0x1551110 -> Node0x1551160;
	Node0x1551160 [shape=record,label="{%40:\l40:                                               \l  %41 = phi i32 [ %7, %1 ], [ %39, %36 ]\l  %42 = load double, double* getelementptr inbounds (%struct.exp_data,\l... %struct.exp_data* @__exp_data, i64 0, i32 5), align 8, !tbaa !1634\l  %43 = tail call double @llvm.experimental.constrained.fadd.f64(double %0,\l... double %42, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %44 = bitcast double %43 to i64\l  %45 = tail call double @llvm.experimental.constrained.fsub.f64(double %43,\l... double %42, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %46 = tail call double @llvm.experimental.constrained.fsub.f64(double %0,\l... double %45, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %47 = shl i64 %44, 1\l  %48 = and i64 %47, 254\l  %49 = shl i64 %44, 45\l  %50 = getelementptr inbounds %struct.exp_data, %struct.exp_data*\l... @__exp_data, i64 0, i32 7, i64 %48\l  %51 = bitcast i64* %50 to double*\l  %52 = load double, double* %51, align 8, !tbaa !1639\l  %53 = or i64 %48, 1\l  %54 = getelementptr inbounds %struct.exp_data, %struct.exp_data*\l... @__exp_data, i64 0, i32 7, i64 %53\l  %55 = load i64, i64* %54, align 8, !tbaa !1639\l  %56 = add i64 %55, %49\l  %57 = tail call double @llvm.experimental.constrained.fmul.f64(double %46,\l... double %46, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %58 = load double, double* getelementptr inbounds (%struct.exp_data,\l... %struct.exp_data* @__exp_data, i64 0, i32 6, i64 0), align 8, !tbaa !1641\l  %59 = tail call double @llvm.experimental.constrained.fmul.f64(double %46,\l... double %58, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %60 = tail call double @llvm.experimental.constrained.fadd.f64(double %52,\l... double %59, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %61 = load double, double* getelementptr inbounds (%struct.exp_data,\l... %struct.exp_data* @__exp_data, i64 0, i32 6, i64 1), align 8, !tbaa !1641\l  %62 = load double, double* getelementptr inbounds (%struct.exp_data,\l... %struct.exp_data* @__exp_data, i64 0, i32 6, i64 2), align 8, !tbaa !1641\l  %63 = tail call double @llvm.experimental.constrained.fmul.f64(double %46,\l... double %62, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %64 = tail call double @llvm.experimental.constrained.fadd.f64(double %61,\l... double %63, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %65 = tail call double @llvm.experimental.constrained.fmul.f64(double %57,\l... double %64, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %66 = tail call double @llvm.experimental.constrained.fadd.f64(double %60,\l... double %65, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %67 = tail call double @llvm.experimental.constrained.fmul.f64(double %57,\l... double %57, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %68 = load double, double* getelementptr inbounds (%struct.exp_data,\l... %struct.exp_data* @__exp_data, i64 0, i32 6, i64 3), align 8, !tbaa !1641\l  %69 = load double, double* getelementptr inbounds (%struct.exp_data,\l... %struct.exp_data* @__exp_data, i64 0, i32 6, i64 4), align 8, !tbaa !1641\l  %70 = tail call double @llvm.experimental.constrained.fmul.f64(double %46,\l... double %69, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %71 = tail call double @llvm.experimental.constrained.fadd.f64(double %68,\l... double %70, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %72 = tail call double @llvm.experimental.constrained.fmul.f64(double %67,\l... double %71, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %73 = tail call double @llvm.experimental.constrained.fadd.f64(double %66,\l... double %72, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %74 = icmp eq i32 %41, 0\l  br i1 %74, label %75, label %110, !prof !1642, !misexpect !1633\l|{<s0>T|<s1>F}}"];
	Node0x1551160:s0 -> Node0x15511b0[label="W:1"];
	Node0x1551160:s1 -> Node0x1551340[label="W:2000"];
	Node0x15511b0 [shape=record,label="{%75:\l75:                                               \l  %76 = trunc i64 %44 to i32\l  %77 = icmp sgt i32 %76, -1\l  br i1 %77, label %78, label %85\l|{<s0>T|<s1>F}}"];
	Node0x15511b0:s0 -> Node0x1551200;
	Node0x15511b0:s1 -> Node0x1551250;
	Node0x1551200 [shape=record,label="{%78:\l78:                                               \l  %79 = add i64 %56, -4503599627370496\l  %80 = bitcast i64 %79 to double\l  %81 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 2,\l... metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %82 = tail call double @llvm.experimental.constrained.fmul.f64(double %80,\l... double %73, metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %83 = tail call double @llvm.experimental.constrained.fadd.f64(double %80,\l... double %82, metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %84 = tail call double @llvm.experimental.constrained.fmul.f64(double %81,\l... double %83, metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  br label %114\l}"];
	Node0x1551200 -> Node0x1551390;
	Node0x1551250 [shape=record,label="{%85:\l85:                                               \l  %86 = add i64 %56, 4602678819172646912\l  %87 = bitcast i64 %86 to double\l  %88 = tail call double @llvm.experimental.constrained.fmul.f64(double %87,\l... double %73, metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %89 = tail call double @llvm.experimental.constrained.fadd.f64(double %87,\l... double %88, metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %90 = tail call i1 @llvm.experimental.constrained.fcmps.f64(double %89,\l... double 1.000000e+00, metadata !olt, metadata !fpexcept.ignore) #42\l  br i1 %90, label %91, label %107\l|{<s0>T|<s1>F}}"];
	Node0x1551250:s0 -> Node0x15512a0;
	Node0x1551250:s1 -> Node0x15512f0;
	Node0x15512a0 [shape=record,label="{%91:\l91:                                               \l  %92 = tail call double @llvm.experimental.constrained.fsub.f64(double %87,\l... double %89, metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %93 = tail call double @llvm.experimental.constrained.fmul.f64(double %87,\l... double %73, metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %94 = tail call double @llvm.experimental.constrained.fadd.f64(double %92,\l... double %93, metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %95 = tail call double @llvm.experimental.constrained.fadd.f64(double\l... 1.000000e+00, double %89, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #42\l  %96 = tail call double @llvm.experimental.constrained.fsub.f64(double\l... 1.000000e+00, double %95, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #42\l  %97 = tail call double @llvm.experimental.constrained.fadd.f64(double %96,\l... double %89, metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %98 = tail call double @llvm.experimental.constrained.fadd.f64(double %97,\l... double %94, metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %99 = tail call double @llvm.experimental.constrained.fadd.f64(double %95,\l... double %98, metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %100 = tail call double @llvm.experimental.constrained.fsub.f64(double %99,\l... double 1.000000e+00, metadata !round.dynamic, metadata !fpexcept.ignore)\l... #42\l  %101 = tail call i1 @llvm.experimental.constrained.fcmp.f64(double %100,\l... double 0.000000e+00, metadata !oeq, metadata !fpexcept.ignore) #42\l  %102 = select i1 %101, double 0.000000e+00, double %100\l  %103 = bitcast double* %2 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %103)\l  store volatile double 0x10000000000000, double* %2, align 8, !tbaa !1641\l  %104 = load volatile double, double* %2, align 8, !tbaa !1641\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %103)\l  %105 = tail call double @llvm.experimental.constrained.fmul.f64(double %104,\l... double 0x10000000000000, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #42\l  %106 = bitcast double* %3 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106)\l  store volatile double %105, double* %3, align 8, !tbaa !1641\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106)\l  br label %107\l}"];
	Node0x15512a0 -> Node0x15512f0;
	Node0x15512f0 [shape=record,label="{%107:\l107:                                              \l  %108 = phi double [ %102, %91 ], [ %89, %85 ]\l  %109 = tail call double @llvm.experimental.constrained.fmul.f64(double\l... 0x10000000000000, double %108, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #42\l  br label %114\l}"];
	Node0x15512f0 -> Node0x1551390;
	Node0x1551340 [shape=record,label="{%110:\l110:                                              \l  %111 = bitcast i64 %56 to double\l  %112 = tail call double @llvm.experimental.constrained.fmul.f64(double %111,\l... double %73, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %113 = tail call double @llvm.experimental.constrained.fadd.f64(double %111,\l... double %112, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  br label %114\l}"];
	Node0x1551340 -> Node0x1551390;
	Node0x1551390 [shape=record,label="{%114:\l114:                                              \l  %115 = phi double [ %13, %12 ], [ %27, %26 ], [ %35, %34 ], [ %113, %110 ],\l... [ %31, %30 ], [ 0.000000e+00, %16 ], [ %84, %78 ], [ %109, %107 ]\l  ret double %115\l}"];
}
