digraph "CFG for 'adjtime' function" {
	label="CFG for 'adjtime' function";

	Node0x1f8dcd0 [shape=record,label="{%2:\l  %3 = alloca %struct.timex, align 8\l  %4 = bitcast %struct.timex* %3 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %4) #40\l  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 dereferenceable(208) %4,\l... i8 0, i64 208, i1 false)\l  %5 = icmp eq %struct.timeval* %0, null\l  br i1 %5, label %21, label %6\l|{<s0>T|<s1>F}}"];
	Node0x1f8dcd0:s0 -> Node0x1f8df20;
	Node0x1f8dcd0:s1 -> Node0x1f8dde0;
	Node0x1f8dde0 [shape=record,label="{%6:\l6:                                                \l  %7 = getelementptr inbounds %struct.timeval, %struct.timeval* %0, i64 0, i32\l... 0\l  %8 = load i64, i64* %7, align 8, !tbaa !1632\l  %9 = icmp sgt i64 %8, 1000\l  br i1 %9, label %14, label %10\l|{<s0>T|<s1>F}}"];
	Node0x1f8dde0:s0 -> Node0x1f8de80;
	Node0x1f8dde0:s1 -> Node0x1f8de30;
	Node0x1f8de30 [shape=record,label="{%10:\l10:                                               \l  %11 = getelementptr inbounds %struct.timeval, %struct.timeval* %0, i64 0,\l... i32 1\l  %12 = load i64, i64* %11, align 8, !tbaa !1637\l  %13 = icmp sgt i64 %12, 1000000000\l  br i1 %13, label %14, label %16\l|{<s0>T|<s1>F}}"];
	Node0x1f8de30:s0 -> Node0x1f8de80;
	Node0x1f8de30:s1 -> Node0x1f8ded0;
	Node0x1f8de80 [shape=record,label="{%14:\l14:                                               \l  %15 = tail call i32* @___errno_location() #41\l  store i32 22, i32* %15, align 4, !tbaa !1638\l  br label %39\l}"];
	Node0x1f8de80 -> Node0x1f8e060;
	Node0x1f8ded0 [shape=record,label="{%16:\l16:                                               \l  %17 = mul nsw i64 %8, 1000000\l  %18 = add nsw i64 %12, %17\l  %19 = getelementptr inbounds %struct.timex, %struct.timex* %3, i64 0, i32 1\l  store i64 %18, i64* %19, align 8, !tbaa !1640\l  %20 = getelementptr inbounds %struct.timex, %struct.timex* %3, i64 0, i32 0\l  store i32 32769, i32* %20, align 8, !tbaa !1642\l  br label %21\l}"];
	Node0x1f8ded0 -> Node0x1f8df20;
	Node0x1f8df20 [shape=record,label="{%21:\l21:                                               \l  %22 = ptrtoint %struct.timex* %3 to i64\l  %23 = call i64 asm sideeffect syscall,\l... =\{ax\},\{ax\},\{di\},~\{rcx\},~\{r11\},~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}(i64\l... 159, i64 %22) #40, !srcloc !1643\l  %24 = call i64 @__syscall_ret(i64 %23) #41\l  %25 = icmp slt i64 %24, 0\l  br i1 %25, label %39, label %26\l|{<s0>T|<s1>F}}"];
	Node0x1f8df20:s0 -> Node0x1f8e060;
	Node0x1f8df20:s1 -> Node0x1f8df70;
	Node0x1f8df70 [shape=record,label="{%26:\l26:                                               \l  %27 = icmp eq %struct.timeval* %1, null\l  br i1 %27, label %39, label %28\l|{<s0>T|<s1>F}}"];
	Node0x1f8df70:s0 -> Node0x1f8e060;
	Node0x1f8df70:s1 -> Node0x1f8dfc0;
	Node0x1f8dfc0 [shape=record,label="{%28:\l28:                                               \l  %29 = getelementptr inbounds %struct.timex, %struct.timex* %3, i64 0, i32 1\l  %30 = load i64, i64* %29, align 8, !tbaa !1640\l  %31 = sdiv i64 %30, 1000000\l  %32 = getelementptr inbounds %struct.timeval, %struct.timeval* %1, i64 0,\l... i32 0\l  store i64 %31, i64* %32, align 8, !tbaa !1632\l  %33 = srem i64 %30, 1000000\l  %34 = getelementptr inbounds %struct.timeval, %struct.timeval* %1, i64 0,\l... i32 1\l  store i64 %33, i64* %34, align 8, !tbaa !1637\l  %35 = icmp slt i64 %33, 0\l  br i1 %35, label %36, label %39\l|{<s0>T|<s1>F}}"];
	Node0x1f8dfc0:s0 -> Node0x1f8e010;
	Node0x1f8dfc0:s1 -> Node0x1f8e060;
	Node0x1f8e010 [shape=record,label="{%36:\l36:                                               \l  %37 = add nsw i64 %31, -1\l  store i64 %37, i64* %32, align 8, !tbaa !1632\l  %38 = add nsw i64 %33, 1000000\l  store i64 %38, i64* %34, align 8, !tbaa !1637\l  br label %39\l}"];
	Node0x1f8e010 -> Node0x1f8e060;
	Node0x1f8e060 [shape=record,label="{%39:\l39:                                               \l  %40 = phi i32 [ -1, %14 ], [ -1, %21 ], [ 0, %26 ], [ 0, %28 ], [ 0, %36 ]\l  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %4) #40\l  ret i32 %40\l}"];
}
