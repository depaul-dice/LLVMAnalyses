digraph "CFG for 'ctanh' function" {
	label="CFG for 'ctanh' function";

	Node0x19d1dd0 [shape=record,label="{%2:\l  %3 = bitcast double %0 to i64\l  %4 = lshr i64 %3, 32\l  %5 = trunc i64 %4 to i32\l  %6 = and i32 %5, 2147483647\l  %7 = icmp ugt i32 %6, 2146435071\l  br i1 %7, label %8, label %32\l|{<s0>T|<s1>F}}"];
	Node0x19d1dd0:s0 -> Node0x19d1f00;
	Node0x19d1dd0:s1 -> Node0x19d20e0;
	Node0x19d1f00 [shape=record,label="{%8:\l8:                                                \l  %9 = trunc i64 %3 to i32\l  %10 = and i32 %5, 1048575\l  %11 = or i32 %10, %9\l  %12 = icmp eq i32 %11, 0\l  br i1 %12, label %18, label %13\l|{<s0>T|<s1>F}}"];
	Node0x19d1f00:s0 -> Node0x19d1ff0;
	Node0x19d1f00:s1 -> Node0x19d1f50;
	Node0x19d1f50 [shape=record,label="{%13:\l13:                                               \l  %14 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 0,\l... metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %15 = tail call i1 @llvm.experimental.constrained.fcmp.f64(double %1, double\l... %14, metadata !oeq, metadata !fpexcept.ignore) #40\l  br i1 %15, label %75, label %16\l|{<s0>T|<s1>F}}"];
	Node0x19d1f50:s0 -> Node0x19d2310;
	Node0x19d1f50:s1 -> Node0x19d1fa0;
	Node0x19d1fa0 [shape=record,label="{%16:\l16:                                               \l  %17 = tail call double @llvm.experimental.constrained.fmul.f64(double %0,\l... double %1, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  br label %75\l}"];
	Node0x19d1fa0 -> Node0x19d2310;
	Node0x19d1ff0 [shape=record,label="{%18:\l18:                                               \l  %19 = add i64 %3, -4611686018427387904\l  %20 = bitcast i64 %19 to double\l  %21 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 0,\l... metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %22 = bitcast double %1 to i64\l  %23 = and i64 %22, 9223372036854775807\l  %24 = icmp eq i64 %23, 9218868437227405312\l  br i1 %24, label %29, label %25\l|{<s0>T|<s1>F}}"];
	Node0x19d1ff0:s0 -> Node0x19d2090;
	Node0x19d1ff0:s1 -> Node0x19d2040;
	Node0x19d2040 [shape=record,label="{%25:\l25:                                               \l  %26 = tail call double @sin(double %1) #41\l  %27 = tail call double @cos(double %1) #41\l  %28 = tail call double @llvm.experimental.constrained.fmul.f64(double %26,\l... double %27, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  br label %29\l}"];
	Node0x19d2040 -> Node0x19d2090;
	Node0x19d2090 [shape=record,label="{%29:\l29:                                               \l  %30 = phi double [ %28, %25 ], [ %1, %18 ]\l  %31 = tail call double @copysign(double %21, double %30) #41\l  br label %75\l}"];
	Node0x19d2090 -> Node0x19d2310;
	Node0x19d20e0 [shape=record,label="{%32:\l32:                                               \l  %33 = bitcast double %1 to i64\l  %34 = and i64 %33, 9218868437227405312\l  %35 = icmp eq i64 %34, 9218868437227405312\l  br i1 %35, label %36, label %43\l|{<s0>T|<s1>F}}"];
	Node0x19d20e0:s0 -> Node0x19d2130;
	Node0x19d20e0:s1 -> Node0x19d2220;
	Node0x19d2130 [shape=record,label="{%36:\l36:                                               \l  %37 = tail call i1 @llvm.experimental.constrained.fcmp.f64(double %0, double\l... 0.000000e+00, metadata !une, metadata !fpexcept.ignore) #40\l  br i1 %37, label %38, label %40\l|{<s0>T|<s1>F}}"];
	Node0x19d2130:s0 -> Node0x19d2180;
	Node0x19d2130:s1 -> Node0x19d21d0;
	Node0x19d2180 [shape=record,label="{%38:\l38:                                               \l  %39 = tail call double @llvm.experimental.constrained.fsub.f64(double %1,\l... double %1, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  br label %40\l}"];
	Node0x19d2180 -> Node0x19d21d0;
	Node0x19d21d0 [shape=record,label="{%40:\l40:                                               \l  %41 = phi double [ %39, %38 ], [ %0, %36 ]\l  %42 = tail call double @llvm.experimental.constrained.fsub.f64(double %1,\l... double %1, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  br label %75\l}"];
	Node0x19d21d0 -> Node0x19d2310;
	Node0x19d2220 [shape=record,label="{%43:\l43:                                               \l  %44 = icmp ugt i32 %6, 1077280767\l  br i1 %44, label %45, label %58\l|{<s0>T|<s1>F}}"];
	Node0x19d2220:s0 -> Node0x19d2270;
	Node0x19d2220:s1 -> Node0x19d22c0;
	Node0x19d2270 [shape=record,label="{%45:\l45:                                               \l  %46 = tail call double @fabs(double %0) #41\l  %47 = fneg double %46\l  %48 = tail call double @exp(double %47) #41\l  %49 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 1,\l... metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %50 = tail call double @copysign(double %49, double %0) #41\l  %51 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 4,\l... metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %52 = tail call double @sin(double %1) #41\l  %53 = tail call double @llvm.experimental.constrained.fmul.f64(double %51,\l... double %52, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %54 = tail call double @cos(double %1) #41\l  %55 = tail call double @llvm.experimental.constrained.fmul.f64(double %53,\l... double %54, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %56 = tail call double @llvm.experimental.constrained.fmul.f64(double %55,\l... double %48, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %57 = tail call double @llvm.experimental.constrained.fmul.f64(double %56,\l... double %48, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  br label %75\l}"];
	Node0x19d2270 -> Node0x19d2310;
	Node0x19d22c0 [shape=record,label="{%58:\l58:                                               \l  %59 = tail call double @tan(double %1) #41\l  %60 = tail call double @llvm.experimental.constrained.fmul.f64(double %59,\l... double %59, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %61 = tail call double @llvm.experimental.constrained.fadd.f64(double\l... 1.000000e+00, double %60, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  %62 = tail call double @sinh(double %0) #41\l  %63 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 1,\l... metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %64 = tail call double @llvm.experimental.constrained.fmul.f64(double %62,\l... double %62, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %65 = tail call double @llvm.experimental.constrained.fadd.f64(double %63,\l... double %64, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %66 = tail call double @sqrt(double %65) #41\l  %67 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 1,\l... metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %68 = tail call double @llvm.experimental.constrained.fmul.f64(double %61,\l... double %62, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %69 = tail call double @llvm.experimental.constrained.fmul.f64(double %68,\l... double %62, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %70 = tail call double @llvm.experimental.constrained.fadd.f64(double %67,\l... double %69, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %71 = tail call double @llvm.experimental.constrained.fmul.f64(double %61,\l... double %66, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %72 = tail call double @llvm.experimental.constrained.fmul.f64(double %71,\l... double %62, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %73 = tail call double @llvm.experimental.constrained.fdiv.f64(double %72,\l... double %70, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %74 = tail call double @llvm.experimental.constrained.fdiv.f64(double %59,\l... double %70, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  br label %75\l}"];
	Node0x19d22c0 -> Node0x19d2310;
	Node0x19d2310 [shape=record,label="{%75:\l75:                                               \l  %76 = phi double [ %20, %29 ], [ %50, %45 ], [ %73, %58 ], [ %41, %40 ], [\l... %0, %13 ], [ %0, %16 ]\l  %77 = phi double [ %31, %29 ], [ %57, %45 ], [ %74, %58 ], [ %42, %40 ], [\l... %1, %13 ], [ %17, %16 ]\l  %78 = insertvalue \{ double, double \} undef, double %76, 0\l  %79 = insertvalue \{ double, double \} %78, double %77, 1\l  ret \{ double, double \} %79\l}"];
}
