digraph "CFG for 'prctl' function" {
	label="CFG for 'prctl' function";

	Node0x1da6140 [shape=record,label="{%1:\l  %2 = alloca [4 x i64], align 16\l  %3 = alloca [1 x %struct.__va_list_tag], align 16\l  %4 = bitcast [4 x i64]* %2 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #40\l  %5 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #40\l  call void @llvm.va_start(i8* nonnull %5) #41\l  %6 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x\l... %struct.__va_list_tag]* %3, i64 0, i64 0, i32 0\l  %7 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x\l... %struct.__va_list_tag]* %3, i64 0, i64 0, i32 2\l  %8 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x\l... %struct.__va_list_tag]* %3, i64 0, i64 0, i32 3\l  %9 = load i8*, i8** %8, align 16\l  %10 = load i32, i32* %6, align 16\l  br label %11\l}"];
	Node0x1da6140 -> Node0x1da61d0;
	Node0x1da61d0 [shape=record,label="{%11:\l11:                                               \l  %12 = phi i32 [ %10, %1 ], [ %23, %22 ]\l  %13 = phi i64 [ 0, %1 ], [ %28, %22 ]\l  %14 = icmp ult i32 %12, 41\l  br i1 %14, label %15, label %19\l|{<s0>T|<s1>F}}"];
	Node0x1da61d0:s0 -> Node0x1da6220;
	Node0x1da61d0:s1 -> Node0x1da6270;
	Node0x1da6220 [shape=record,label="{%15:\l15:                                               \l  %16 = zext i32 %12 to i64\l  %17 = getelementptr i8, i8* %9, i64 %16\l  %18 = add nuw nsw i32 %12, 8\l  store i32 %18, i32* %6, align 16\l  br label %22\l}"];
	Node0x1da6220 -> Node0x1da62c0;
	Node0x1da6270 [shape=record,label="{%19:\l19:                                               \l  %20 = load i8*, i8** %7, align 8\l  %21 = getelementptr i8, i8* %20, i64 8\l  store i8* %21, i8** %7, align 8\l  br label %22\l}"];
	Node0x1da6270 -> Node0x1da62c0;
	Node0x1da62c0 [shape=record,label="{%22:\l22:                                               \l  %23 = phi i32 [ %18, %15 ], [ %12, %19 ]\l  %24 = phi i8* [ %17, %15 ], [ %20, %19 ]\l  %25 = bitcast i8* %24 to i64*\l  %26 = load i64, i64* %25, align 8\l  %27 = getelementptr inbounds [4 x i64], [4 x i64]* %2, i64 0, i64 %13\l  store i64 %26, i64* %27, align 8, !tbaa !1632\l  %28 = add nuw nsw i64 %13, 1\l  %29 = icmp eq i64 %28, 4\l  br i1 %29, label %30, label %11\l|{<s0>T|<s1>F}}"];
	Node0x1da62c0:s0 -> Node0x1da6310;
	Node0x1da62c0:s1 -> Node0x1da61d0;
	Node0x1da6310 [shape=record,label="{%30:\l30:                                               \l  call void @llvm.va_end(i8* nonnull %5) #41\l  %31 = sext i32 %0 to i64\l  %32 = getelementptr inbounds [4 x i64], [4 x i64]* %2, i64 0, i64 0\l  %33 = load i64, i64* %32, align 16, !tbaa !1632\l  %34 = getelementptr inbounds [4 x i64], [4 x i64]* %2, i64 0, i64 1\l  %35 = load i64, i64* %34, align 8, !tbaa !1632\l  %36 = getelementptr inbounds [4 x i64], [4 x i64]* %2, i64 0, i64 2\l  %37 = load i64, i64* %36, align 16, !tbaa !1632\l  %38 = getelementptr inbounds [4 x i64], [4 x i64]* %2, i64 0, i64 3\l  %39 = load i64, i64* %38, align 8, !tbaa !1632\l  %40 = call i64 asm sideeffect syscall,\l... =\{ax\},\{ax\},\{di\},\{si\},\{dx\},\{r10\},\{r8\},~\{rcx\},~\{r11\},~\{memory\},~\{dirflag\},~\{fps\l...r\},~\{flags\}(i64 157, i64 %31, i64 %33, i64 %35, i64 %37, i64 %39) #40,\l... !srcloc !1636\l  %41 = call i64 @__syscall_ret(i64 %40) #42\l  %42 = trunc i64 %41 to i32\l  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #40\l  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #40\l  ret i32 %42\l}"];
}
