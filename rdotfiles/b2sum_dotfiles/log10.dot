digraph "CFG for 'log10' function" {
	label="CFG for 'log10' function";

	Node0x1eaa890 [shape=record,label="{%1:\l  %2 = bitcast double %0 to i64\l  %3 = lshr i64 %2, 32\l  %4 = trunc i64 %3 to i32\l  %5 = icmp ult i32 %4, 1048576\l  %6 = icmp slt i64 %2, 0\l  %7 = or i1 %6, %5\l  br i1 %7, label %8, label %24\l|{<s0>T|<s1>F}}"];
	Node0x1eaa890:s0 -> Node0x1eaa8e0;
	Node0x1eaa890:s1 -> Node0x1eaaa70;
	Node0x1eaa8e0 [shape=record,label="{%8:\l8:                                                \l  %9 = and i64 %2, 9223372036854775807\l  %10 = icmp eq i64 %9, 0\l  br i1 %10, label %11, label %15\l|{<s0>T|<s1>F}}"];
	Node0x1eaa8e0:s0 -> Node0x1eaa930;
	Node0x1eaa8e0:s1 -> Node0x1eaa980;
	Node0x1eaa930 [shape=record,label="{%11:\l11:                                               \l  %12 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 -1,\l... metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %13 = tail call double @llvm.experimental.constrained.fmul.f64(double %0,\l... double %0, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %14 = tail call double @llvm.experimental.constrained.fdiv.f64(double %12,\l... double %13, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  br label %90\l}"];
	Node0x1eaa930 -> Node0x1eaac00;
	Node0x1eaa980 [shape=record,label="{%15:\l15:                                               \l  br i1 %6, label %16, label %19\l|{<s0>T|<s1>F}}"];
	Node0x1eaa980:s0 -> Node0x1eaa9d0;
	Node0x1eaa980:s1 -> Node0x1eaaa20;
	Node0x1eaa9d0 [shape=record,label="{%16:\l16:                                               \l  %17 = tail call double @llvm.experimental.constrained.fsub.f64(double %0,\l... double %0, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %18 = tail call double @llvm.experimental.constrained.fdiv.f64(double %17,\l... double 0.000000e+00, metadata !round.dynamic, metadata !fpexcept.ignore)\l... #40\l  br label %90\l}"];
	Node0x1eaa9d0 -> Node0x1eaac00;
	Node0x1eaaa20 [shape=record,label="{%19:\l19:                                               \l  %20 = tail call double @llvm.experimental.constrained.fmul.f64(double %0,\l... double 0x4350000000000000, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  %21 = bitcast double %20 to i64\l  %22 = lshr i64 %21, 32\l  %23 = trunc i64 %22 to i32\l  br label %33\l}"];
	Node0x1eaaa20 -> Node0x1eaabb0;
	Node0x1eaaa70 [shape=record,label="{%24:\l24:                                               \l  %25 = icmp ugt i32 %4, 2146435071\l  br i1 %25, label %90, label %26\l|{<s0>T|<s1>F}}"];
	Node0x1eaaa70:s0 -> Node0x1eaac00;
	Node0x1eaaa70:s1 -> Node0x1eaaac0;
	Node0x1eaaac0 [shape=record,label="{%26:\l26:                                               \l  %27 = icmp eq i32 %4, 1072693248\l  br i1 %27, label %28, label %33\l|{<s0>T|<s1>F}}"];
	Node0x1eaaac0:s0 -> Node0x1eaab10;
	Node0x1eaaac0:s1 -> Node0x1eaabb0;
	Node0x1eaab10 [shape=record,label="{%28:\l28:                                               \l  %29 = and i64 %2, 4294967295\l  %30 = icmp eq i64 %29, 0\l  br i1 %30, label %31, label %33\l|{<s0>T|<s1>F}}"];
	Node0x1eaab10:s0 -> Node0x1eaab60;
	Node0x1eaab10:s1 -> Node0x1eaabb0;
	Node0x1eaab60 [shape=record,label="{%31:\l31:                                               \l  %32 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 0,\l... metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  br label %90\l}"];
	Node0x1eaab60 -> Node0x1eaac00;
	Node0x1eaabb0 [shape=record,label="{%33:\l33:                                               \l  %34 = phi i64 [ %21, %19 ], [ %2, %28 ], [ %2, %26 ]\l  %35 = phi i32 [ %23, %19 ], [ 1072693248, %28 ], [ %4, %26 ]\l  %36 = phi i32 [ -1077, %19 ], [ -1023, %28 ], [ -1023, %26 ]\l  %37 = add i32 %35, 614242\l  %38 = lshr i32 %37, 20\l  %39 = add nsw i32 %36, %38\l  %40 = and i32 %37, 1048575\l  %41 = add nuw nsw i32 %40, 1072079006\l  %42 = zext i32 %41 to i64\l  %43 = shl nuw nsw i64 %42, 32\l  %44 = and i64 %34, 4294967295\l  %45 = or i64 %43, %44\l  %46 = bitcast i64 %45 to double\l  %47 = tail call double @llvm.experimental.constrained.fsub.f64(double %46,\l... double 1.000000e+00, metadata !round.dynamic, metadata !fpexcept.ignore)\l... #40\l  %48 = tail call double @llvm.experimental.constrained.fmul.f64(double\l... 5.000000e-01, double %47, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  %49 = tail call double @llvm.experimental.constrained.fmul.f64(double %48,\l... double %47, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %50 = tail call double @llvm.experimental.constrained.fadd.f64(double\l... 2.000000e+00, double %47, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  %51 = tail call double @llvm.experimental.constrained.fdiv.f64(double %47,\l... double %50, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %52 = tail call double @llvm.experimental.constrained.fmul.f64(double %51,\l... double %51, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %53 = tail call double @llvm.experimental.constrained.fmul.f64(double %52,\l... double %52, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %54 = tail call double @llvm.experimental.constrained.fmul.f64(double %53,\l... double 0x3FC39A09D078C69F, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  %55 = tail call double @llvm.experimental.constrained.fadd.f64(double\l... 0x3FCC71C51D8E78AF, double %54, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  %56 = tail call double @llvm.experimental.constrained.fmul.f64(double %53,\l... double %55, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %57 = tail call double @llvm.experimental.constrained.fadd.f64(double\l... 0x3FD999999997FA04, double %56, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  %58 = tail call double @llvm.experimental.constrained.fmul.f64(double %53,\l... double %57, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %59 = tail call double @llvm.experimental.constrained.fmul.f64(double %53,\l... double 0x3FC2F112DF3E5244, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  %60 = tail call double @llvm.experimental.constrained.fadd.f64(double\l... 0x3FC7466496CB03DE, double %59, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  %61 = tail call double @llvm.experimental.constrained.fmul.f64(double %53,\l... double %60, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %62 = tail call double @llvm.experimental.constrained.fadd.f64(double\l... 0x3FD2492494229359, double %61, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  %63 = tail call double @llvm.experimental.constrained.fmul.f64(double %53,\l... double %62, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %64 = tail call double @llvm.experimental.constrained.fadd.f64(double\l... 0x3FE5555555555593, double %63, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  %65 = tail call double @llvm.experimental.constrained.fmul.f64(double %52,\l... double %64, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %66 = tail call double @llvm.experimental.constrained.fadd.f64(double %65,\l... double %58, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %67 = tail call double @llvm.experimental.constrained.fsub.f64(double %47,\l... double %49, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %68 = bitcast double %67 to i64\l  %69 = and i64 %68, -4294967296\l  %70 = bitcast i64 %69 to double\l  %71 = tail call double @llvm.experimental.constrained.fsub.f64(double %47,\l... double %70, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %72 = tail call double @llvm.experimental.constrained.fsub.f64(double %71,\l... double %49, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %73 = tail call double @llvm.experimental.constrained.fadd.f64(double %49,\l... double %66, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %74 = tail call double @llvm.experimental.constrained.fmul.f64(double %51,\l... double %73, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %75 = tail call double @llvm.experimental.constrained.fadd.f64(double %72,\l... double %74, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %76 = tail call double @llvm.experimental.constrained.fmul.f64(double %70,\l... double 0x3FDBCB7B15200000, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  %77 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32\l... %39, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %78 = tail call double @llvm.experimental.constrained.fmul.f64(double %77,\l... double 0x3FD34413509F6000, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  %79 = tail call double @llvm.experimental.constrained.fmul.f64(double %77,\l... double 0x3D59FEF311F12B36, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  %80 = tail call double @llvm.experimental.constrained.fadd.f64(double %75,\l... double %70, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %81 = tail call double @llvm.experimental.constrained.fmul.f64(double %80,\l... double 0x3DBB9438CA9AADD5, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  %82 = tail call double @llvm.experimental.constrained.fadd.f64(double %79,\l... double %81, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %83 = tail call double @llvm.experimental.constrained.fmul.f64(double %75,\l... double 0x3FDBCB7B15200000, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  %84 = tail call double @llvm.experimental.constrained.fadd.f64(double %82,\l... double %83, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %85 = tail call double @llvm.experimental.constrained.fadd.f64(double %78,\l... double %76, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %86 = tail call double @llvm.experimental.constrained.fsub.f64(double %78,\l... double %85, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %87 = tail call double @llvm.experimental.constrained.fadd.f64(double %86,\l... double %76, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %88 = tail call double @llvm.experimental.constrained.fadd.f64(double %84,\l... double %87, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %89 = tail call double @llvm.experimental.constrained.fadd.f64(double %88,\l... double %85, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  br label %90\l}"];
	Node0x1eaabb0 -> Node0x1eaac00;
	Node0x1eaac00 [shape=record,label="{%90:\l90:                                               \l  %91 = phi double [ %14, %11 ], [ %18, %16 ], [ %89, %33 ], [ %32, %31 ], [\l... %0, %24 ]\l  ret double %91\l}"];
}
