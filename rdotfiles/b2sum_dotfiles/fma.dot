digraph "CFG for 'fma' function" {
	label="CFG for 'fma' function";

	Node0x1dde230 [shape=record,label="{%3:\l  %4 = tail call fastcc \{ i64, i64 \} @normalize(double %0) #40\l  %5 = extractvalue \{ i64, i64 \} %4, 0\l  %6 = extractvalue \{ i64, i64 \} %4, 1\l  %7 = tail call fastcc \{ i64, i64 \} @normalize(double %1) #40\l  %8 = extractvalue \{ i64, i64 \} %7, 0\l  %9 = extractvalue \{ i64, i64 \} %7, 1\l  %10 = tail call fastcc \{ i64, i64 \} @normalize(double %2) #40\l  %11 = extractvalue \{ i64, i64 \} %10, 0\l  %12 = extractvalue \{ i64, i64 \} %10, 1\l  %13 = trunc i64 %6 to i32\l  %14 = icmp sgt i32 %13, 970\l  br i1 %14, label %18, label %15\l|{<s0>T|<s1>F}}"];
	Node0x1dde230:s0 -> Node0x1ddfb00;
	Node0x1dde230:s1 -> Node0x1ddf910;
	Node0x1ddf910 [shape=record,label="{%15:\l15:                                               \l  %16 = trunc i64 %9 to i32\l  %17 = icmp sgt i32 %16, 970\l  br i1 %17, label %18, label %21\l|{<s0>T|<s1>F}}"];
	Node0x1ddf910:s0 -> Node0x1ddfb00;
	Node0x1ddf910:s1 -> Node0x1ddfb50;
	Node0x1ddfb00 [shape=record,label="{%18:\l18:                                               \l  %19 = tail call double @llvm.experimental.constrained.fmul.f64(double %0,\l... double %1, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %20 = tail call double @llvm.experimental.constrained.fadd.f64(double %19,\l... double %2, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  br label %218\l}"];
	Node0x1ddfb00 -> Node0x1de0500;
	Node0x1ddfb50 [shape=record,label="{%21:\l21:                                               \l  %22 = trunc i64 %12 to i32\l  %23 = icmp sgt i32 %22, 970\l  br i1 %23, label %24, label %29\l|{<s0>T|<s1>F}}"];
	Node0x1ddfb50:s0 -> Node0x1ddfba0;
	Node0x1ddfb50:s1 -> Node0x1ddfc40;
	Node0x1ddfba0 [shape=record,label="{%24:\l24:                                               \l  %25 = icmp eq i32 %22, 971\l  br i1 %25, label %218, label %26\l|{<s0>T|<s1>F}}"];
	Node0x1ddfba0:s0 -> Node0x1de0500;
	Node0x1ddfba0:s1 -> Node0x1ddfbf0;
	Node0x1ddfbf0 [shape=record,label="{%26:\l26:                                               \l  %27 = tail call double @llvm.experimental.constrained.fmul.f64(double %0,\l... double %1, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %28 = tail call double @llvm.experimental.constrained.fadd.f64(double %27,\l... double %2, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  br label %218\l}"];
	Node0x1ddfbf0 -> Node0x1de0500;
	Node0x1ddfc40 [shape=record,label="{%29:\l29:                                               \l  %30 = and i64 %5, 4294967295\l  %31 = lshr i64 %5, 32\l  %32 = and i64 %8, 4294967295\l  %33 = lshr i64 %8, 32\l  %34 = mul nuw i64 %32, %30\l  %35 = mul nuw i64 %33, %30\l  %36 = mul nuw i64 %32, %31\l  %37 = add i64 %35, %36\l  %38 = mul nuw i64 %33, %31\l  %39 = shl i64 %37, 32\l  %40 = add i64 %39, %34\l  %41 = lshr i64 %37, 32\l  %42 = add nuw i64 %41, %38\l  %43 = icmp ugt i64 %34, %40\l  %44 = zext i1 %43 to i64\l  %45 = add nuw i64 %42, %44\l  %46 = add nsw i32 %16, %13\l  %47 = sub nsw i32 %22, %46\l  %48 = icmp sgt i32 %47, 0\l  br i1 %48, label %49, label %75\l|{<s0>T|<s1>F}}"];
	Node0x1ddfc40:s0 -> Node0x1ddfc90;
	Node0x1ddfc40:s1 -> Node0x1ddfe20;
	Node0x1ddfc90 [shape=record,label="{%49:\l49:                                               \l  %50 = icmp slt i32 %47, 64\l  br i1 %50, label %51, label %57\l|{<s0>T|<s1>F}}"];
	Node0x1ddfc90:s0 -> Node0x1ddfce0;
	Node0x1ddfc90:s1 -> Node0x1ddfd30;
	Node0x1ddfce0 [shape=record,label="{%51:\l51:                                               \l  %52 = zext i32 %47 to i64\l  %53 = shl i64 %11, %52\l  %54 = sub nuw nsw i32 64, %47\l  %55 = zext i32 %54 to i64\l  %56 = lshr i64 %11, %55\l  br label %89\l}"];
	Node0x1ddfce0 -> Node0x1ddff10;
	Node0x1ddfd30 [shape=record,label="{%57:\l57:                                               \l  %58 = add nsw i32 %22, -64\l  %59 = add nsw i32 %47, -64\l  %60 = icmp eq i32 %59, 0\l  br i1 %60, label %89, label %61\l|{<s0>T|<s1>F}}"];
	Node0x1ddfd30:s0 -> Node0x1ddff10;
	Node0x1ddfd30:s1 -> Node0x1ddfd80;
	Node0x1ddfd80 [shape=record,label="{%61:\l61:                                               \l  %62 = icmp slt i32 %47, 128\l  br i1 %62, label %63, label %89\l|{<s0>T|<s1>F}}"];
	Node0x1ddfd80:s0 -> Node0x1ddfdd0;
	Node0x1ddfd80:s1 -> Node0x1ddff10;
	Node0x1ddfdd0 [shape=record,label="{%63:\l63:                                               \l  %64 = sub nuw nsw i32 128, %47\l  %65 = zext i32 %64 to i64\l  %66 = shl i64 %45, %65\l  %67 = zext i32 %59 to i64\l  %68 = lshr i64 %40, %67\l  %69 = shl i64 %40, %65\l  %70 = icmp ne i64 %69, 0\l  %71 = zext i1 %70 to i64\l  %72 = or i64 %68, %71\l  %73 = or i64 %72, %66\l  %74 = lshr i64 %45, %67\l  br label %89\l}"];
	Node0x1ddfdd0 -> Node0x1ddff10;
	Node0x1ddfe20 [shape=record,label="{%75:\l75:                                               \l  %76 = sub nsw i32 0, %47\l  %77 = icmp eq i32 %47, 0\l  br i1 %77, label %89, label %78\l|{<s0>T|<s1>F}}"];
	Node0x1ddfe20:s0 -> Node0x1ddff10;
	Node0x1ddfe20:s1 -> Node0x1ddfe70;
	Node0x1ddfe70 [shape=record,label="{%78:\l78:                                               \l  %79 = icmp sgt i32 %47, -64\l  br i1 %79, label %80, label %89\l|{<s0>T|<s1>F}}"];
	Node0x1ddfe70:s0 -> Node0x1ddfec0;
	Node0x1ddfe70:s1 -> Node0x1ddff10;
	Node0x1ddfec0 [shape=record,label="{%80:\l80:                                               \l  %81 = zext i32 %76 to i64\l  %82 = lshr i64 %11, %81\l  %83 = add nsw i32 %47, 64\l  %84 = zext i32 %83 to i64\l  %85 = shl i64 %11, %84\l  %86 = icmp ne i64 %85, 0\l  %87 = zext i1 %86 to i64\l  %88 = or i64 %82, %87\l  br label %89\l}"];
	Node0x1ddfec0 -> Node0x1ddff10;
	Node0x1ddff10 [shape=record,label="{%89:\l89:                                               \l  %90 = phi i64 [ %45, %51 ], [ %45, %57 ], [ %74, %63 ], [ %45, %75 ], [ %45,\l... %80 ], [ %45, %78 ], [ 0, %61 ]\l  %91 = phi i64 [ %40, %51 ], [ %40, %57 ], [ %73, %63 ], [ %40, %75 ], [ %40,\l... %80 ], [ %40, %78 ], [ 1, %61 ]\l  %92 = phi i32 [ %46, %51 ], [ %58, %57 ], [ %58, %63 ], [ %46, %75 ], [ %46,\l... %80 ], [ %46, %78 ], [ %58, %61 ]\l  %93 = phi i64 [ %53, %51 ], [ 0, %57 ], [ 0, %63 ], [ %11, %75 ], [ %88, %80\l... ], [ 1, %78 ], [ 0, %61 ]\l  %94 = phi i64 [ %56, %51 ], [ %11, %57 ], [ %11, %63 ], [ 0, %75 ], [ 0, %80\l... ], [ 0, %78 ], [ %11, %61 ]\l  %95 = xor i64 %9, %6\l  %96 = lshr i64 %95, 32\l  %97 = trunc i64 %96 to i32\l  %98 = lshr i64 %12, 32\l  %99 = icmp eq i64 %96, %98\l  br i1 %99, label %100, label %106\l|{<s0>T|<s1>F}}"];
	Node0x1ddff10:s0 -> Node0x1ddff60;
	Node0x1ddff10:s1 -> Node0x1ddffb0;
	Node0x1ddff60 [shape=record,label="{%100:\l100:                                              \l  %101 = add i64 %93, %91\l  %102 = icmp ult i64 %101, %93\l  %103 = zext i1 %102 to i64\l  %104 = add i64 %94, %90\l  %105 = add i64 %104, %103\l  br label %125\l}"];
	Node0x1ddff60 -> Node0x1de00a0;
	Node0x1ddffb0 [shape=record,label="{%106:\l106:                                              \l  %107 = sub i64 %91, %93\l  %108 = sub i64 %90, %94\l  %109 = icmp ult i64 %91, %93\l  %110 = sext i1 %109 to i64\l  %111 = add i64 %108, %110\l  %112 = icmp slt i64 %111, 0\l  br i1 %112, label %113, label %120\l|{<s0>T|<s1>F}}"];
	Node0x1ddffb0:s0 -> Node0x1de0000;
	Node0x1ddffb0:s1 -> Node0x1de0050;
	Node0x1de0000 [shape=record,label="{%113:\l113:                                              \l  %114 = sub i64 0, %107\l  %115 = icmp ne i64 %107, 0\l  %116 = sext i1 %115 to i64\l  %117 = sub i64 %116, %111\l  %118 = icmp eq i32 %97, 0\l  %119 = zext i1 %118 to i32\l  br label %120\l}"];
	Node0x1de0000 -> Node0x1de0050;
	Node0x1de0050 [shape=record,label="{%120:\l120:                                              \l  %121 = phi i64 [ %117, %113 ], [ %111, %106 ]\l  %122 = phi i64 [ %114, %113 ], [ %107, %106 ]\l  %123 = phi i32 [ %119, %113 ], [ %97, %106 ]\l  %124 = icmp eq i64 %121, 0\l  br i1 %124, label %143, label %125\l|{<s0>T|<s1>F}}"];
	Node0x1de0050:s0 -> Node0x1de00f0;
	Node0x1de0050:s1 -> Node0x1de00a0;
	Node0x1de00a0 [shape=record,label="{%125:\l125:                                              \l  %126 = phi i32 [ %97, %100 ], [ %123, %120 ]\l  %127 = phi i64 [ %101, %100 ], [ %122, %120 ]\l  %128 = phi i64 [ %105, %100 ], [ %121, %120 ]\l  %129 = add nsw i32 %92, 64\l  %130 = tail call i64 asm bsr $1,$0 \l  %131 = trunc i64 %130 to i32\l  %132 = add nsw i32 %131, -1\l  %133 = zext i32 %132 to i64\l  %134 = shl i64 %128, %133\l  %135 = sub i64 65, %130\l  %136 = and i64 %135, 4294967295\l  %137 = lshr i64 %127, %136\l  %138 = or i64 %134, %137\l  %139 = shl i64 %127, %133\l  %140 = icmp ne i64 %139, 0\l  %141 = zext i1 %140 to i64\l  %142 = or i64 %138, %141\l  br label %160\l}"];
	Node0x1de00a0 -> Node0x1de0280;
	Node0x1de00f0 [shape=record,label="{%143:\l143:                                              \l  %144 = icmp eq i64 %122, 0\l  br i1 %144, label %157, label %145\l|{<s0>T|<s1>F}}"];
	Node0x1de00f0:s0 -> Node0x1de0230;
	Node0x1de00f0:s1 -> Node0x1de0140;
	Node0x1de0140 [shape=record,label="{%145:\l145:                                              \l  %146 = tail call i64 asm bsr $1,$0 \l  %147 = trunc i64 %146 to i32\l  %148 = add nsw i32 %147, -1\l  %149 = icmp slt i32 %147, 1\l  br i1 %149, label %150, label %154\l|{<s0>T|<s1>F}}"];
	Node0x1de0140:s0 -> Node0x1de0190;
	Node0x1de0140:s1 -> Node0x1de01e0;
	Node0x1de0190 [shape=record,label="{%150:\l150:                                              \l  %151 = lshr i64 %122, 1\l  %152 = and i64 %122, 1\l  %153 = or i64 %151, %152\l  br label %160\l}"];
	Node0x1de0190 -> Node0x1de0280;
	Node0x1de01e0 [shape=record,label="{%154:\l154:                                              \l  %155 = zext i32 %148 to i64\l  %156 = shl i64 %122, %155\l  br label %160\l}"];
	Node0x1de01e0 -> Node0x1de0280;
	Node0x1de0230 [shape=record,label="{%157:\l157:                                              \l  %158 = tail call double @llvm.experimental.constrained.fmul.f64(double %0,\l... double %1, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %159 = tail call double @llvm.experimental.constrained.fadd.f64(double %158,\l... double %2, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  br label %218\l}"];
	Node0x1de0230 -> Node0x1de0500;
	Node0x1de0280 [shape=record,label="{%160:\l160:                                              \l  %161 = phi i32 [ %126, %125 ], [ %123, %150 ], [ %123, %154 ]\l  %162 = phi i64 [ %142, %125 ], [ %153, %150 ], [ %156, %154 ]\l  %163 = phi i32 [ %129, %125 ], [ %92, %150 ], [ %92, %154 ]\l  %164 = phi i32 [ %132, %125 ], [ %148, %150 ], [ %148, %154 ]\l  %165 = sub nsw i32 %163, %164\l  %166 = icmp ne i32 %161, 0\l  %167 = sub nsw i64 0, %162\l  %168 = select i1 %166, i64 %167, i64 %162\l  %169 = tail call double @llvm.experimental.constrained.sitofp.f64.i64(i64\l... %168, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %170 = icmp slt i32 %165, -1084\l  br i1 %170, label %171, label %215\l|{<s0>T|<s1>F}}"];
	Node0x1de0280:s0 -> Node0x1de02d0;
	Node0x1de0280:s1 -> Node0x1de04b0;
	Node0x1de02d0 [shape=record,label="{%171:\l171:                                              \l  %172 = icmp eq i32 %165, -1085\l  br i1 %172, label %173, label %206\l|{<s0>T|<s1>F}}"];
	Node0x1de02d0:s0 -> Node0x1de0320;
	Node0x1de02d0:s1 -> Node0x1de0460;
	Node0x1de0320 [shape=record,label="{%173:\l173:                                              \l  %174 = select i1 %166, double 0xC3E0000000000000, double 0x43E0000000000000\l  %175 = tail call i1 @llvm.experimental.constrained.fcmp.f64(double %169,\l... double %174, metadata !oeq, metadata !fpexcept.ignore) #41\l  br i1 %175, label %197, label %176\l|{<s0>T|<s1>F}}"];
	Node0x1de0320:s0 -> Node0x1de0410;
	Node0x1de0320:s1 -> Node0x1de0370;
	Node0x1de0370 [shape=record,label="{%176:\l176:                                              \l  %177 = and i64 %162, 2047\l  %178 = icmp eq i64 %177, 0\l  br i1 %178, label %215, label %179\l|{<s0>T|<s1>F}}"];
	Node0x1de0370:s0 -> Node0x1de04b0;
	Node0x1de0370:s1 -> Node0x1de03c0;
	Node0x1de03c0 [shape=record,label="{%179:\l179:                                              \l  %180 = lshr i64 %162, 1\l  %181 = and i64 %162, 1\l  %182 = or i64 %181, %180\l  %183 = or i64 %182, 4611686018427387904\l  %184 = sub nsw i64 0, %183\l  %185 = select i1 %166, i64 %184, i64 %183\l  %186 = tail call double @llvm.experimental.constrained.sitofp.f64.i64(i64\l... %185, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %187 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 2,\l... metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %188 = tail call double @llvm.experimental.constrained.fmul.f64(double %187,\l... double %186, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %189 = tail call double @llvm.experimental.constrained.fsub.f64(double %188,\l... double %174, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %190 = tail call double @llvm.experimental.constrained.fpext.f64.f32(float\l... 0x3810000000000000, metadata !fpexcept.ignore) #41\l  %191 = tail call double @llvm.experimental.constrained.fdiv.f64(double\l... 0x10000000000000, double %190, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #41\l  %192 = tail call double @llvm.experimental.constrained.fmul.f64(double %191,\l... double %189, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %193 = tail call double @llvm.experimental.constrained.fmul.f64(double %192,\l... double %192, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %194 = tail call double @llvm.experimental.constrained.fsub.f64(double %189,\l... double %189, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %195 = tail call double @llvm.experimental.constrained.fmul.f64(double %193,\l... double %194, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %196 = tail call double @llvm.experimental.constrained.fadd.f64(double %189,\l... double %195, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  br label %215\l}"];
	Node0x1de03c0 -> Node0x1de04b0;
	Node0x1de0410 [shape=record,label="{%197:\l197:                                              \l  %198 = tail call double @llvm.experimental.constrained.fpext.f64.f32(float\l... 0x3810000000000000, metadata !fpexcept.ignore) #41\l  %199 = tail call double @llvm.experimental.constrained.fmul.f64(double\l... 0x3BFFFFFFF0000000, double %198, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #41\l  %200 = tail call double @llvm.experimental.constrained.fmul.f64(double %199,\l... double %169, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %201 = tail call float @llvm.experimental.constrained.fptrunc.f32.f64(double\l... %200, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %202 = tail call double @llvm.experimental.constrained.fpext.f64.f32(float\l... 0x3810000000000000, metadata !fpexcept.ignore) #41\l  %203 = tail call double @llvm.experimental.constrained.fdiv.f64(double\l... 0x10000000000000, double %202, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #41\l  %204 = tail call double @llvm.experimental.constrained.fpext.f64.f32(float\l... %201, metadata !fpexcept.ignore) #41\l  %205 = tail call double @llvm.experimental.constrained.fmul.f64(double %203,\l... double %204, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  br label %218\l}"];
	Node0x1de0410 -> Node0x1de0500;
	Node0x1de0460 [shape=record,label="{%206:\l206:                                              \l  %207 = and i64 %162, 1023\l  %208 = icmp eq i64 %207, 0\l  %209 = select i1 %208, i64 0, i64 1024\l  %210 = and i64 %162, -1024\l  %211 = or i64 %209, %210\l  %212 = sub nsw i64 0, %211\l  %213 = select i1 %166, i64 %212, i64 %211\l  %214 = tail call double @llvm.experimental.constrained.sitofp.f64.i64(i64\l... %213, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  br label %215\l}"];
	Node0x1de0460 -> Node0x1de04b0;
	Node0x1de04b0 [shape=record,label="{%215:\l215:                                              \l  %216 = phi double [ %214, %206 ], [ %169, %160 ], [ %169, %176 ], [ %196,\l... %179 ]\l  %217 = tail call double @scalbn(double %216, i32 %165) #43\l  br label %218\l}"];
	Node0x1de04b0 -> Node0x1de0500;
	Node0x1de0500 [shape=record,label="{%218:\l218:                                              \l  %219 = phi double [ %20, %18 ], [ %28, %26 ], [ %2, %24 ], [ %159, %157 ], [\l... %217, %215 ], [ %205, %197 ]\l  ret double %219\l}"];
}
