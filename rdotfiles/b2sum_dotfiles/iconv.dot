digraph "CFG for 'iconv' function" {
	label="CFG for 'iconv' function";

	Node0x1ef8b90 [shape=record,label="{%5:\l  %6 = alloca i64, align 8\l  %7 = bitcast i64* %6 to %struct.FTW*\l  %8 = alloca i32, align 4\l  %9 = alloca %struct.pthread_rwlockattr_t, align 4\l  %10 = alloca i8*, align 8\l  %11 = alloca i8*, align 8\l  %12 = alloca i64, align 8\l  %13 = alloca i64, align 8\l  %14 = alloca [4 x i8], align 1\l  %15 = ptrtoint i8* %0 to i64\l  %16 = and i64 %15, 1\l  %17 = icmp eq i64 %16, 0\l  br i1 %17, label %18, label %22\l|{<s0>T|<s1>F}}"];
	Node0x1ef8b90:s0 -> Node0x1ef9280;
	Node0x1ef8b90:s1 -> Node0x1ef92d0;
	Node0x1ef9280 [shape=record,label="{%18:\l18:                                               \l  %19 = bitcast i8* %0 to %struct.stateful_cd*\l  %20 = bitcast i8* %0 to i64*\l  %21 = load i64, i64* %20, align 8, !tbaa !1632\l  br label %22\l}"];
	Node0x1ef9280 -> Node0x1ef92d0;
	Node0x1ef92d0 [shape=record,label="{%22:\l22:                                               \l  %23 = phi i64 [ %15, %5 ], [ %21, %18 ]\l  %24 = phi %struct.stateful_cd* [ null, %5 ], [ %19, %18 ]\l  %25 = lshr i64 %23, 1\l  %26 = and i64 %25, 32767\l  %27 = lshr i64 %23, 16\l  %28 = and i64 %27, 4294967295\l  %29 = getelementptr inbounds [4884 x i8], [4884 x i8]* @charmaps, i64 0, i64\l... %28\l  %30 = getelementptr inbounds i8, i8* %29, i64 1\l  %31 = getelementptr inbounds [4884 x i8], [4884 x i8]* @charmaps, i64 0, i64\l... %26\l  %32 = getelementptr inbounds i8, i8* %31, i64 1\l  %33 = bitcast i64* %6 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #40\l  store i64 0, i64* %6, align 8\l  %34 = bitcast i32* %8 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %34) #40\l  %35 = load i8, i8* %29, align 1, !tbaa !1638\l  %36 = load i8, i8* %31, align 1, !tbaa !1638\l  %37 = tail call %struct.__pthread* asm mov %fs:0,$0,\l... =r,~\{dirflag\},~\{fpsr\},~\{flags\}() #41, !srcloc !1639\l  %38 = getelementptr inbounds %struct.__pthread, %struct.__pthread* %37, i64\l... 0, i32 24\l  %39 = bitcast %struct.__locale_struct** %38 to i64*\l  %40 = load i64, i64* %39, align 8, !tbaa !1640\l  %41 = icmp eq i8** %1, null\l  br i1 %41, label %917, label %42\l|{<s0>T|<s1>F}}"];
	Node0x1ef92d0:s0 -> Node0x1efcb60;
	Node0x1ef92d0:s1 -> Node0x1ef9320;
	Node0x1ef9320 [shape=record,label="{%42:\l42:                                               \l  %43 = load i8*, i8** %1, align 8, !tbaa !1640\l  %44 = icmp eq i8* %43, null\l  br i1 %44, label %917, label %45\l|{<s0>T|<s1>F}}"];
	Node0x1ef9320:s0 -> Node0x1efcb60;
	Node0x1ef9320:s1 -> Node0x1ef9370;
	Node0x1ef9370 [shape=record,label="{%45:\l45:                                               \l  %46 = load i64, i64* %2, align 8, !tbaa !1641\l  %47 = icmp eq i64 %46, 0\l  br i1 %47, label %917, label %48\l|{<s0>T|<s1>F}}"];
	Node0x1ef9370:s0 -> Node0x1efcb60;
	Node0x1ef9370:s1 -> Node0x1ef93c0;
	Node0x1ef93c0 [shape=record,label="{%48:\l48:                                               \l  store %struct.__locale_struct* @__c_dot_utf8_locale,\l... %struct.__locale_struct** %38, align 8, !tbaa !1640\l  %49 = bitcast %struct.pthread_rwlockattr_t* %9 to i8*\l  %50 = bitcast i8** %10 to i8*\l  %51 = bitcast i8** %10 to %struct.pthread_rwlockattr_t**\l  %52 = shl nuw nsw i64 %26, 1\l  %53 = bitcast i8** %10 to i64*\l  %54 = ptrtoint %struct.pthread_rwlockattr_t* %9 to i64\l  %55 = getelementptr inbounds %struct.stateful_cd, %struct.stateful_cd* %24,\l... i64 0, i32 1\l  %56 = getelementptr inbounds [4 x i8], [4 x i8]* %14, i64 0, i64 0\l  %57 = bitcast i8** %3 to i32**\l  %58 = load i8*, i8** %1, align 8, !tbaa !1640\l  %59 = bitcast i8** %3 to i32**\l  br label %60\l}"];
	Node0x1ef93c0 -> Node0x1ef9410;
	Node0x1ef9410 [shape=record,label="{%60:\l60:                                               \l  %61 = phi i8* [ %58, %48 ], [ %908, %902 ]\l  %62 = phi i64 [ 0, %48 ], [ %906, %902 ]\l  %63 = phi i8 [ %36, %48 ], [ %905, %902 ]\l  %64 = phi i8 [ %35, %48 ], [ %904, %902 ]\l  %65 = phi i64 [ %46, %48 ], [ %909, %902 ]\l  %66 = load i8, i8* %61, align 1, !tbaa !1638\l  %67 = zext i8 %66 to i32\l  %68 = zext i8 %64 to i32\l  switch i8 %64, label %599 [\l    i8 -56, label %69\l    i8 -57, label %75\l    i8 -58, label %77\l    i8 -64, label %82\l    i8 -61, label %82\l    i8 -60, label %117\l    i8 -59, label %117\l    i8 -62, label %117\l    i8 -63, label %117\l    i8 -52, label %155\l    i8 -54, label %155\l    i8 -53, label %177\l    i8 -47, label %205\l    i8 -48, label %251\l    i8 -46, label %278\l    i8 -38, label %333\l    i8 -39, label %337\l    i8 -40, label %337\l    i8 -32, label %428\l    i8 -24, label %513\l  ]\l|{<s0>def|<s1>-56|<s2>-57|<s3>-58|<s4>-64|<s5>-61|<s6>-60|<s7>-59|<s8>-62|<s9>-63|<s10>-52|<s11>-54|<s12>-53|<s13>-47|<s14>-48|<s15>-46|<s16>-38|<s17>-39|<s18>-40|<s19>-32|<s20>-24}}"];
	Node0x1ef9410:s0 -> Node0x1efb6c0;
	Node0x1ef9410:s1 -> Node0x1ef9460;
	Node0x1ef9410:s2 -> Node0x1ef9550;
	Node0x1ef9410:s3 -> Node0x1ef95a0;
	Node0x1ef9410:s4 -> Node0x1ef9640;
	Node0x1ef9410:s5 -> Node0x1ef9640;
	Node0x1ef9410:s6 -> Node0x1ef9730;
	Node0x1ef9410:s7 -> Node0x1ef9730;
	Node0x1ef9410:s8 -> Node0x1ef9730;
	Node0x1ef9410:s9 -> Node0x1ef9730;
	Node0x1ef9410:s10 -> Node0x1ef9910;
	Node0x1ef9410:s11 -> Node0x1ef9910;
	Node0x1ef9410:s12 -> Node0x1ef9aa0;
	Node0x1ef9410:s13 -> Node0x1ef9c30;
	Node0x1ef9410:s14 -> Node0x1ef9ff0;
	Node0x1ef9410:s15 -> Node0x1efa220;
	Node0x1ef9410:s16 -> Node0x1efa770;
	Node0x1ef9410:s17 -> Node0x1efa810;
	Node0x1ef9410:s18 -> Node0x1efa810;
	Node0x1ef9410:s19 -> Node0x1efad10;
	Node0x1ef9410:s20 -> Node0x1efb170;
	Node0x1ef9460 [shape=record,label="{%69:\l69:                                               \l  %70 = icmp sgt i8 %66, -1\l  br i1 %70, label %604, label %71\l|{<s0>T|<s1>F}}"];
	Node0x1ef9460:s0 -> Node0x1efb760;
	Node0x1ef9460:s1 -> Node0x1ef94b0;
	Node0x1ef94b0 [shape=record,label="{%71:\l71:                                               \l  %72 = call i64 @mbrtowc(i32* nonnull %8, i8* nonnull %61, i64 %65,\l... %struct.FTW* nonnull %7) #42\l  switch i64 %72, label %73 [\l    i64 -1, label %912\l    i64 -2, label %914\l  ]\l|{<s0>def|<s1>-1|<s2>-2}}"];
	Node0x1ef94b0:s0 -> Node0x1ef9500;
	Node0x1ef94b0:s1 -> Node0x1efcac0;
	Node0x1ef94b0:s2 -> Node0x1efcb10;
	Node0x1ef9500 [shape=record,label="{%73:\l73:                                               \l  %74 = load i32, i32* %8, align 4, !tbaa !1643\l  br label %604\l}"];
	Node0x1ef9500 -> Node0x1efb760;
	Node0x1ef9550 [shape=record,label="{%75:\l75:                                               \l  %76 = icmp slt i8 %66, 0\l  br i1 %76, label %912, label %604\l|{<s0>T|<s1>F}}"];
	Node0x1ef9550:s0 -> Node0x1efcac0;
	Node0x1ef9550:s1 -> Node0x1efb760;
	Node0x1ef95a0 [shape=record,label="{%77:\l77:                                               \l  %78 = icmp ult i64 %65, 4\l  br i1 %78, label %914, label %79\l|{<s0>T|<s1>F}}"];
	Node0x1ef95a0:s0 -> Node0x1efcb10;
	Node0x1ef95a0:s1 -> Node0x1ef95f0;
	Node0x1ef95f0 [shape=record,label="{%79:\l79:                                               \l  %80 = bitcast i8* %61 to i32*\l  %81 = load i32, i32* %80, align 4, !tbaa !1643\l  br label %111\l}"];
	Node0x1ef95f0 -> Node0x1ef96e0;
	Node0x1ef9640 [shape=record,label="{%82:\l82:                                               \l  %83 = icmp ult i64 %65, 4\l  br i1 %83, label %914, label %84\l|{<s0>T|<s1>F}}"];
	Node0x1ef9640:s0 -> Node0x1efcb10;
	Node0x1ef9640:s1 -> Node0x1ef9690;
	Node0x1ef9690 [shape=record,label="{%84:\l84:                                               \l  %85 = and i32 %68, 3\l  %86 = zext i32 %85 to i64\l  %87 = getelementptr inbounds i8, i8* %61, i64 %86\l  %88 = load i8, i8* %87, align 1, !tbaa !1638\l  %89 = zext i8 %88 to i32\l  %90 = shl nuw i32 %89, 24\l  %91 = xor i32 %85, 1\l  %92 = zext i32 %91 to i64\l  %93 = getelementptr inbounds i8, i8* %61, i64 %92\l  %94 = load i8, i8* %93, align 1, !tbaa !1638\l  %95 = zext i8 %94 to i32\l  %96 = shl nuw nsw i32 %95, 16\l  %97 = or i32 %96, %90\l  %98 = xor i32 %85, 2\l  %99 = zext i32 %98 to i64\l  %100 = getelementptr inbounds i8, i8* %61, i64 %99\l  %101 = load i8, i8* %100, align 1, !tbaa !1638\l  %102 = zext i8 %101 to i32\l  %103 = shl nuw nsw i32 %102, 8\l  %104 = or i32 %97, %103\l  %105 = xor i32 %85, 3\l  %106 = zext i32 %105 to i64\l  %107 = getelementptr inbounds i8, i8* %61, i64 %106\l  %108 = load i8, i8* %107, align 1, !tbaa !1638\l  %109 = zext i8 %108 to i32\l  %110 = or i32 %104, %109\l  br label %111\l}"];
	Node0x1ef9690 -> Node0x1ef96e0;
	Node0x1ef96e0 [shape=record,label="{%111:\l111:                                              \l  %112 = phi i32 [ %110, %84 ], [ %81, %79 ]\l  %113 = and i32 %112, -2048\l  %114 = icmp eq i32 %113, 55296\l  %115 = icmp ugt i32 %112, 1114111\l  %116 = or i1 %115, %114\l  br i1 %116, label %912, label %604\l|{<s0>T|<s1>F}}"];
	Node0x1ef96e0:s0 -> Node0x1efcac0;
	Node0x1ef96e0:s1 -> Node0x1efb760;
	Node0x1ef9730 [shape=record,label="{%117:\l117:                                              \l  %118 = icmp ult i64 %65, 2\l  br i1 %118, label %914, label %119\l|{<s0>T|<s1>F}}"];
	Node0x1ef9730:s0 -> Node0x1efcb10;
	Node0x1ef9730:s1 -> Node0x1ef9780;
	Node0x1ef9780 [shape=record,label="{%119:\l119:                                              \l  %120 = and i32 %68, 1\l  %121 = zext i32 %120 to i64\l  %122 = getelementptr inbounds i8, i8* %61, i64 %121\l  %123 = load i8, i8* %122, align 1, !tbaa !1638\l  %124 = zext i8 %123 to i32\l  %125 = shl nuw nsw i32 %124, 8\l  %126 = xor i32 %120, 1\l  %127 = zext i32 %126 to i64\l  %128 = getelementptr inbounds i8, i8* %61, i64 %127\l  %129 = load i8, i8* %128, align 1, !tbaa !1638\l  %130 = zext i8 %129 to i32\l  %131 = or i32 %125, %130\l  %132 = trunc i32 %125 to i16\l  %133 = and i16 %132, -1024\l  switch i16 %133, label %604 [\l    i16 -9216, label %912\l    i16 -10240, label %134\l  ]\l|{<s0>def|<s1>-9216|<s2>-10240}}"];
	Node0x1ef9780:s0 -> Node0x1efb760;
	Node0x1ef9780:s1 -> Node0x1efcac0;
	Node0x1ef9780:s2 -> Node0x1ef97d0;
	Node0x1ef97d0 [shape=record,label="{%134:\l134:                                              \l  %135 = and i32 %68, 254\l  %136 = icmp eq i32 %135, 196\l  br i1 %136, label %912, label %137\l|{<s0>T|<s1>F}}"];
	Node0x1ef97d0:s0 -> Node0x1efcac0;
	Node0x1ef97d0:s1 -> Node0x1ef9820;
	Node0x1ef9820 [shape=record,label="{%137:\l137:                                              \l  %138 = icmp ult i64 %65, 4\l  br i1 %138, label %914, label %139\l|{<s0>T|<s1>F}}"];
	Node0x1ef9820:s0 -> Node0x1efcb10;
	Node0x1ef9820:s1 -> Node0x1ef9870;
	Node0x1ef9870 [shape=record,label="{%139:\l139:                                              \l  %140 = getelementptr inbounds i8, i8* %61, i64 2\l  %141 = getelementptr inbounds i8, i8* %140, i64 %121\l  %142 = load i8, i8* %141, align 1, !tbaa !1638\l  %143 = zext i8 %142 to i32\l  %144 = shl nuw nsw i32 %143, 8\l  %145 = getelementptr inbounds i8, i8* %140, i64 %127\l  %146 = load i8, i8* %145, align 1, !tbaa !1638\l  %147 = zext i8 %146 to i32\l  %148 = or i32 %144, %147\l  %149 = add nsw i32 %148, -56320\l  %150 = icmp ugt i32 %149, 1023\l  br i1 %150, label %912, label %151\l|{<s0>T|<s1>F}}"];
	Node0x1ef9870:s0 -> Node0x1efcac0;
	Node0x1ef9870:s1 -> Node0x1ef98c0;
	Node0x1ef98c0 [shape=record,label="{%151:\l151:                                              \l  %152 = shl nuw nsw i32 %131, 10\l  %153 = add nsw i32 %152, -56557568\l  %154 = add nsw i32 %153, %149\l  br label %604\l}"];
	Node0x1ef98c0 -> Node0x1efb760;
	Node0x1ef9910 [shape=record,label="{%155:\l155:                                              \l  %156 = load i32, i32* %55, align 8, !tbaa !1644\l  %157 = icmp eq i32 %156, 0\l  br i1 %157, label %158, label %173\l|{<s0>T|<s1>F}}"];
	Node0x1ef9910:s0 -> Node0x1ef9960;
	Node0x1ef9910:s1 -> Node0x1ef9a50;
	Node0x1ef9960 [shape=record,label="{%158:\l158:                                              \l  %159 = icmp ult i64 %65, 2\l  br i1 %159, label %914, label %160\l|{<s0>T|<s1>F}}"];
	Node0x1ef9960:s0 -> Node0x1efcb10;
	Node0x1ef9960:s1 -> Node0x1ef99b0;
	Node0x1ef99b0 [shape=record,label="{%160:\l160:                                              \l  %161 = shl nuw nsw i32 %67, 8\l  %162 = getelementptr inbounds i8, i8* %61, i64 1\l  %163 = load i8, i8* %162, align 1, !tbaa !1638\l  %164 = zext i8 %163 to i32\l  %165 = or i32 %161, %164\l  %166 = icmp eq i8 %64, -52\l  %167 = icmp eq i32 %165, 65534\l  %168 = select i1 %167, i32 197, i32 196\l  %169 = select i1 %167, i32 193, i32 194\l  %170 = select i1 %166, i32 %168, i32 %169\l  store i32 %170, i32* %55, align 8, !tbaa !1644\l  %171 = trunc i32 %165 to i16\l  switch i16 %171, label %173 [\l    i16 -2, label %172\l    i16 -257, label %172\l  ]\l|{<s0>def|<s1>-2|<s2>-257}}"];
	Node0x1ef99b0:s0 -> Node0x1ef9a50;
	Node0x1ef99b0:s1 -> Node0x1ef9a00;
	Node0x1ef99b0:s2 -> Node0x1ef9a00;
	Node0x1ef9a00 [shape=record,label="{%172:\l172:                                              \l  br label %173\l}"];
	Node0x1ef9a00 -> Node0x1ef9a50;
	Node0x1ef9a50 [shape=record,label="{%173:\l173:                                              \l  %174 = phi i32 [ %156, %155 ], [ %170, %172 ], [ %170, %160 ]\l  %175 = phi i64 [ 0, %155 ], [ 2, %172 ], [ 0, %160 ]\l  %176 = trunc i32 %174 to i8\l  br label %902\l}"];
	Node0x1ef9a50 -> Node0x1efca20;
	Node0x1ef9aa0 [shape=record,label="{%177:\l177:                                              \l  %178 = load i32, i32* %55, align 8, !tbaa !1644\l  %179 = icmp eq i32 %178, 0\l  br i1 %179, label %180, label %201\l|{<s0>T|<s1>F}}"];
	Node0x1ef9aa0:s0 -> Node0x1ef9af0;
	Node0x1ef9aa0:s1 -> Node0x1ef9be0;
	Node0x1ef9af0 [shape=record,label="{%180:\l180:                                              \l  %181 = icmp ult i64 %65, 4\l  br i1 %181, label %914, label %182\l|{<s0>T|<s1>F}}"];
	Node0x1ef9af0:s0 -> Node0x1efcb10;
	Node0x1ef9af0:s1 -> Node0x1ef9b40;
	Node0x1ef9b40 [shape=record,label="{%182:\l182:                                              \l  %183 = shl nuw i32 %67, 24\l  %184 = getelementptr inbounds i8, i8* %61, i64 1\l  %185 = load i8, i8* %184, align 1, !tbaa !1638\l  %186 = zext i8 %185 to i32\l  %187 = shl nuw nsw i32 %186, 16\l  %188 = or i32 %187, %183\l  %189 = getelementptr inbounds i8, i8* %61, i64 2\l  %190 = load i8, i8* %189, align 1, !tbaa !1638\l  %191 = zext i8 %190 to i32\l  %192 = shl nuw nsw i32 %191, 8\l  %193 = or i32 %188, %192\l  %194 = getelementptr inbounds i8, i8* %61, i64 3\l  %195 = load i8, i8* %194, align 1, !tbaa !1638\l  %196 = zext i8 %195 to i32\l  %197 = or i32 %193, %196\l  %198 = icmp eq i32 %197, -131072\l  %199 = select i1 %198, i32 195, i32 192\l  store i32 %199, i32* %55, align 8, !tbaa !1644\l  switch i32 %197, label %201 [\l    i32 -131072, label %200\l    i32 65279, label %200\l  ]\l|{<s0>def|<s1>-131072|<s2>65279}}"];
	Node0x1ef9b40:s0 -> Node0x1ef9be0;
	Node0x1ef9b40:s1 -> Node0x1ef9b90;
	Node0x1ef9b40:s2 -> Node0x1ef9b90;
	Node0x1ef9b90 [shape=record,label="{%200:\l200:                                              \l  br label %201\l}"];
	Node0x1ef9b90 -> Node0x1ef9be0;
	Node0x1ef9be0 [shape=record,label="{%201:\l201:                                              \l  %202 = phi i32 [ %178, %177 ], [ %199, %200 ], [ %199, %182 ]\l  %203 = phi i64 [ 0, %177 ], [ 4, %200 ], [ 0, %182 ]\l  %204 = trunc i32 %202 to i8\l  br label %902\l}"];
	Node0x1ef9be0 -> Node0x1efca20;
	Node0x1ef9c30 [shape=record,label="{%205:\l205:                                              \l  %206 = icmp sgt i8 %66, -1\l  br i1 %206, label %604, label %207\l|{<s0>T|<s1>F}}"];
	Node0x1ef9c30:s0 -> Node0x1efb760;
	Node0x1ef9c30:s1 -> Node0x1ef9c80;
	Node0x1ef9c80 [shape=record,label="{%207:\l207:                                              \l  %208 = add nsw i32 %67, -161\l  %209 = icmp ult i32 %208, 63\l  br i1 %209, label %210, label %212\l|{<s0>T|<s1>F}}"];
	Node0x1ef9c80:s0 -> Node0x1ef9cd0;
	Node0x1ef9c80:s1 -> Node0x1ef9d20;
	Node0x1ef9cd0 [shape=record,label="{%210:\l210:                                              \l  %211 = add nuw nsw i32 %67, 65216\l  br label %604\l}"];
	Node0x1ef9cd0 -> Node0x1efb760;
	Node0x1ef9d20 [shape=record,label="{%212:\l212:                                              \l  %213 = icmp ult i64 %65, 2\l  br i1 %213, label %914, label %214\l|{<s0>T|<s1>F}}"];
	Node0x1ef9d20:s0 -> Node0x1efcb10;
	Node0x1ef9d20:s1 -> Node0x1ef9d70;
	Node0x1ef9d70 [shape=record,label="{%214:\l214:                                              \l  %215 = getelementptr inbounds i8, i8* %61, i64 1\l  %216 = load i8, i8* %215, align 1, !tbaa !1638\l  %217 = zext i8 %216 to i32\l  %218 = add nsw i32 %67, -129\l  %219 = icmp ult i32 %218, 31\l  br i1 %219, label %225, label %220\l|{<s0>T|<s1>F}}"];
	Node0x1ef9d70:s0 -> Node0x1ef9e60;
	Node0x1ef9d70:s1 -> Node0x1ef9dc0;
	Node0x1ef9dc0 [shape=record,label="{%220:\l220:                                              \l  %221 = and i32 %67, 240\l  %222 = icmp eq i32 %221, 224\l  br i1 %222, label %223, label %912\l|{<s0>T|<s1>F}}"];
	Node0x1ef9dc0:s0 -> Node0x1ef9e10;
	Node0x1ef9dc0:s1 -> Node0x1efcac0;
	Node0x1ef9e10 [shape=record,label="{%223:\l223:                                              \l  %224 = add nsw i32 %67, -193\l  br label %225\l}"];
	Node0x1ef9e10 -> Node0x1ef9e60;
	Node0x1ef9e60 [shape=record,label="{%225:\l225:                                              \l  %226 = phi i32 [ %224, %223 ], [ %218, %214 ]\l  %227 = shl nsw i32 %226, 1\l  %228 = add nsw i32 %217, -64\l  %229 = icmp ult i32 %228, 95\l  br i1 %229, label %230, label %236\l|{<s0>T|<s1>F}}"];
	Node0x1ef9e60:s0 -> Node0x1ef9eb0;
	Node0x1ef9e60:s1 -> Node0x1ef9f50;
	Node0x1ef9eb0 [shape=record,label="{%230:\l230:                                              \l  %231 = icmp eq i8 %216, 127\l  br i1 %231, label %912, label %232\l|{<s0>T|<s1>F}}"];
	Node0x1ef9eb0:s0 -> Node0x1efcac0;
	Node0x1ef9eb0:s1 -> Node0x1ef9f00;
	Node0x1ef9f00 [shape=record,label="{%232:\l232:                                              \l  %233 = ashr i8 %216, 7\l  %234 = sext i8 %233 to i32\l  %235 = add nsw i32 %228, %234\l  br label %242\l}"];
	Node0x1ef9f00 -> Node0x1ef9fa0;
	Node0x1ef9f50 [shape=record,label="{%236:\l236:                                              \l  %237 = add nsw i32 %217, -159\l  %238 = icmp ult i32 %237, 94\l  %239 = zext i1 %238 to i32\l  %240 = or i32 %227, %239\l  %241 = select i1 %238, i32 %237, i32 %217\l  br label %242\l}"];
	Node0x1ef9f50 -> Node0x1ef9fa0;
	Node0x1ef9fa0 [shape=record,label="{%242:\l242:                                              \l  %243 = phi i32 [ %227, %232 ], [ %240, %236 ]\l  %244 = phi i32 [ %235, %232 ], [ %241, %236 ]\l  %245 = zext i32 %243 to i64\l  %246 = zext i32 %244 to i64\l  %247 = getelementptr inbounds [84 x [94 x i16]], [84 x [94 x i16]]* bitcast\l... (\<\{ [94 x i16], [94 x i16], [94 x i16], \<\{ [83 x i16], [11 x i16] \}\>, \<\{ [86\l... x i16], [8 x i16] \}\>, \<\{ [56 x i16], [38 x i16] \}\>, \<\{ [81 x i16], [13 x i16]\l... \}\>, \<\{ [32 x i16], [62 x i16] \}\>, [94 x i16], [94 x i16], [94 x i16], [94 x\l... i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16],\l... [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x\l... i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16],\l... [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x\l... i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16],\l... [94 x i16], [94 x i16], \<\{ [51 x i16], [43 x i16] \}\>, [94 x i16], [94 x i16],\l... [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x\l... i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16],\l... [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x\l... i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16],\l... [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x\l... i16], [94 x i16], \<\{ i16, i16, i16, i16, i16, i16, [88 x i16] \}\> \}\>* @jis0208\l... to [84 x [94 x i16]]*), i64 0, i64 %245, i64 %246\l  %248 = load i16, i16* %247, align 2, !tbaa !1645\l  %249 = zext i16 %248 to i32\l  %250 = icmp eq i16 %248, 0\l  br i1 %250, label %912, label %604\l|{<s0>T|<s1>F}}"];
	Node0x1ef9fa0:s0 -> Node0x1efcac0;
	Node0x1ef9fa0:s1 -> Node0x1efb760;
	Node0x1ef9ff0 [shape=record,label="{%251:\l251:                                              \l  %252 = icmp sgt i8 %66, -1\l  br i1 %252, label %604, label %253\l|{<s0>T|<s1>F}}"];
	Node0x1ef9ff0:s0 -> Node0x1efb760;
	Node0x1ef9ff0:s1 -> Node0x1efa040;
	Node0x1efa040 [shape=record,label="{%253:\l253:                                              \l  %254 = icmp ult i64 %65, 2\l  br i1 %254, label %914, label %255\l|{<s0>T|<s1>F}}"];
	Node0x1efa040:s0 -> Node0x1efcb10;
	Node0x1efa040:s1 -> Node0x1efa090;
	Node0x1efa090 [shape=record,label="{%255:\l255:                                              \l  %256 = getelementptr inbounds i8, i8* %61, i64 1\l  %257 = load i8, i8* %256, align 1, !tbaa !1638\l  %258 = zext i8 %257 to i32\l  %259 = icmp eq i8 %66, -114\l  br i1 %259, label %260, label %265\l|{<s0>T|<s1>F}}"];
	Node0x1efa090:s0 -> Node0x1efa0e0;
	Node0x1efa090:s1 -> Node0x1efa180;
	Node0x1efa0e0 [shape=record,label="{%260:\l260:                                              \l  %261 = add nsw i32 %258, -161\l  %262 = icmp ugt i32 %261, 62\l  br i1 %262, label %912, label %263\l|{<s0>T|<s1>F}}"];
	Node0x1efa0e0:s0 -> Node0x1efcac0;
	Node0x1efa0e0:s1 -> Node0x1efa130;
	Node0x1efa130 [shape=record,label="{%263:\l263:                                              \l  %264 = add nuw nsw i32 %258, 65216\l  br label %604\l}"];
	Node0x1efa130 -> Node0x1efb760;
	Node0x1efa180 [shape=record,label="{%265:\l265:                                              \l  %266 = add nsw i32 %67, -161\l  %267 = add nsw i32 %258, -161\l  %268 = icmp ugt i32 %266, 83\l  %269 = icmp ugt i32 %267, 93\l  %270 = or i1 %268, %269\l  br i1 %270, label %912, label %271\l|{<s0>T|<s1>F}}"];
	Node0x1efa180:s0 -> Node0x1efcac0;
	Node0x1efa180:s1 -> Node0x1efa1d0;
	Node0x1efa1d0 [shape=record,label="{%271:\l271:                                              \l  %272 = zext i32 %266 to i64\l  %273 = zext i32 %267 to i64\l  %274 = getelementptr inbounds [84 x [94 x i16]], [84 x [94 x i16]]* bitcast\l... (\<\{ [94 x i16], [94 x i16], [94 x i16], \<\{ [83 x i16], [11 x i16] \}\>, \<\{ [86\l... x i16], [8 x i16] \}\>, \<\{ [56 x i16], [38 x i16] \}\>, \<\{ [81 x i16], [13 x i16]\l... \}\>, \<\{ [32 x i16], [62 x i16] \}\>, [94 x i16], [94 x i16], [94 x i16], [94 x\l... i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16],\l... [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x\l... i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16],\l... [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x\l... i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16],\l... [94 x i16], [94 x i16], \<\{ [51 x i16], [43 x i16] \}\>, [94 x i16], [94 x i16],\l... [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x\l... i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16],\l... [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x\l... i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16],\l... [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x\l... i16], [94 x i16], \<\{ i16, i16, i16, i16, i16, i16, [88 x i16] \}\> \}\>* @jis0208\l... to [84 x [94 x i16]]*), i64 0, i64 %272, i64 %273\l  %275 = load i16, i16* %274, align 2, !tbaa !1645\l  %276 = zext i16 %275 to i32\l  %277 = icmp eq i16 %275, 0\l  br i1 %277, label %912, label %604\l|{<s0>T|<s1>F}}"];
	Node0x1efa1d0:s0 -> Node0x1efcac0;
	Node0x1efa1d0:s1 -> Node0x1efb760;
	Node0x1efa220 [shape=record,label="{%278:\l278:                                              \l  %279 = icmp slt i8 %66, 0\l  br i1 %279, label %912, label %280\l|{<s0>T|<s1>F}}"];
	Node0x1efa220:s0 -> Node0x1efcac0;
	Node0x1efa220:s1 -> Node0x1efa270;
	Node0x1efa270 [shape=record,label="{%280:\l280:                                              \l  %281 = icmp eq i8 %66, 27\l  br i1 %281, label %282, label %299\l|{<s0>T|<s1>F}}"];
	Node0x1efa270:s0 -> Node0x1efa2c0;
	Node0x1efa270:s1 -> Node0x1efa540;
	Node0x1efa2c0 [shape=record,label="{%282:\l282:                                              \l  %283 = icmp ult i64 %65, 3\l  br i1 %283, label %914, label %284\l|{<s0>T|<s1>F}}"];
	Node0x1efa2c0:s0 -> Node0x1efcb10;
	Node0x1efa2c0:s1 -> Node0x1efa310;
	Node0x1efa310 [shape=record,label="{%284:\l284:                                              \l  %285 = getelementptr inbounds i8, i8* %61, i64 1\l  %286 = load i8, i8* %285, align 1, !tbaa !1638\l  switch i8 %286, label %912 [\l    i8 40, label %287\l    i8 36, label %287\l  ]\l|{<s0>def|<s1>40|<s2>36}}"];
	Node0x1efa310:s0 -> Node0x1efcac0;
	Node0x1efa310:s1 -> Node0x1efa360;
	Node0x1efa310:s2 -> Node0x1efa360;
	Node0x1efa360 [shape=record,label="{%287:\l287:                                              \l  %288 = getelementptr inbounds i8, i8* %61, i64 2\l  %289 = load i8, i8* %288, align 1, !tbaa !1638\l  %290 = zext i8 %289 to i32\l  %291 = icmp eq i8 %286, 36\l  %292 = select i1 %291, i32 128, i32 0\l  %293 = add nuw nsw i32 %292, %290\l  switch i32 %293, label %912 [\l    i32 66, label %294\l    i32 74, label %295\l    i32 73, label %296\l    i32 192, label %297\l    i32 194, label %298\l  ]\l|{<s0>def|<s1>66|<s2>74|<s3>73|<s4>192|<s5>194}}"];
	Node0x1efa360:s0 -> Node0x1efcac0;
	Node0x1efa360:s1 -> Node0x1efa3b0;
	Node0x1efa360:s2 -> Node0x1efa400;
	Node0x1efa360:s3 -> Node0x1efa450;
	Node0x1efa360:s4 -> Node0x1efa4a0;
	Node0x1efa360:s5 -> Node0x1efa4f0;
	Node0x1efa3b0 [shape=record,label="{%294:\l294:                                              \l  store i32 0, i32* %55, align 8, !tbaa !1644\l  br label %902\l}"];
	Node0x1efa3b0 -> Node0x1efca20;
	Node0x1efa400 [shape=record,label="{%295:\l295:                                              \l  store i32 1, i32* %55, align 8, !tbaa !1644\l  br label %902\l}"];
	Node0x1efa400 -> Node0x1efca20;
	Node0x1efa450 [shape=record,label="{%296:\l296:                                              \l  store i32 4, i32* %55, align 8, !tbaa !1644\l  br label %902\l}"];
	Node0x1efa450 -> Node0x1efca20;
	Node0x1efa4a0 [shape=record,label="{%297:\l297:                                              \l  store i32 2, i32* %55, align 8, !tbaa !1644\l  br label %902\l}"];
	Node0x1efa4a0 -> Node0x1efca20;
	Node0x1efa4f0 [shape=record,label="{%298:\l298:                                              \l  store i32 3, i32* %55, align 8, !tbaa !1644\l  br label %902\l}"];
	Node0x1efa4f0 -> Node0x1efca20;
	Node0x1efa540 [shape=record,label="{%299:\l299:                                              \l  %300 = load i32, i32* %55, align 8, !tbaa !1644\l  switch i32 %300, label %604 [\l    i32 1, label %301\l    i32 2, label %307\l    i32 3, label %307\l    i32 4, label %325\l  ]\l|{<s0>def|<s1>1|<s2>2|<s3>3|<s4>4}}"];
	Node0x1efa540:s0 -> Node0x1efb760;
	Node0x1efa540:s1 -> Node0x1efa590;
	Node0x1efa540:s2 -> Node0x1efa5e0;
	Node0x1efa540:s3 -> Node0x1efa5e0;
	Node0x1efa540:s4 -> Node0x1efa6d0;
	Node0x1efa590 [shape=record,label="{%301:\l301:                                              \l  %302 = icmp eq i8 %66, 92\l  %303 = select i1 %302, i8 -91, i8 %66\l  %304 = zext i8 %303 to i32\l  %305 = icmp eq i8 %303, 126\l  %306 = select i1 %305, i32 8254, i32 %304\l  br label %604\l}"];
	Node0x1efa590 -> Node0x1efb760;
	Node0x1efa5e0 [shape=record,label="{%307:\l307:                                              \l  %308 = icmp ult i64 %65, 2\l  br i1 %308, label %914, label %309\l|{<s0>T|<s1>F}}"];
	Node0x1efa5e0:s0 -> Node0x1efcb10;
	Node0x1efa5e0:s1 -> Node0x1efa630;
	Node0x1efa630 [shape=record,label="{%309:\l309:                                              \l  %310 = getelementptr inbounds i8, i8* %61, i64 1\l  %311 = load i8, i8* %310, align 1, !tbaa !1638\l  %312 = zext i8 %311 to i32\l  %313 = add nsw i32 %67, -33\l  %314 = add nsw i32 %312, -33\l  %315 = icmp ugt i32 %313, 83\l  %316 = icmp ugt i32 %314, 93\l  %317 = or i1 %315, %316\l  br i1 %317, label %912, label %318\l|{<s0>T|<s1>F}}"];
	Node0x1efa630:s0 -> Node0x1efcac0;
	Node0x1efa630:s1 -> Node0x1efa680;
	Node0x1efa680 [shape=record,label="{%318:\l318:                                              \l  %319 = zext i32 %313 to i64\l  %320 = zext i32 %314 to i64\l  %321 = getelementptr inbounds [84 x [94 x i16]], [84 x [94 x i16]]* bitcast\l... (\<\{ [94 x i16], [94 x i16], [94 x i16], \<\{ [83 x i16], [11 x i16] \}\>, \<\{ [86\l... x i16], [8 x i16] \}\>, \<\{ [56 x i16], [38 x i16] \}\>, \<\{ [81 x i16], [13 x i16]\l... \}\>, \<\{ [32 x i16], [62 x i16] \}\>, [94 x i16], [94 x i16], [94 x i16], [94 x\l... i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16],\l... [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x\l... i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16],\l... [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x\l... i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16],\l... [94 x i16], [94 x i16], \<\{ [51 x i16], [43 x i16] \}\>, [94 x i16], [94 x i16],\l... [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x\l... i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16],\l... [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x\l... i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16],\l... [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x\l... i16], [94 x i16], \<\{ i16, i16, i16, i16, i16, i16, [88 x i16] \}\> \}\>* @jis0208\l... to [84 x [94 x i16]]*), i64 0, i64 %319, i64 %320\l  %322 = load i16, i16* %321, align 2, !tbaa !1645\l  %323 = zext i16 %322 to i32\l  %324 = icmp eq i16 %322, 0\l  br i1 %324, label %912, label %604\l|{<s0>T|<s1>F}}"];
	Node0x1efa680:s0 -> Node0x1efcac0;
	Node0x1efa680:s1 -> Node0x1efb760;
	Node0x1efa6d0 [shape=record,label="{%325:\l325:                                              \l  %326 = add nsw i32 %67, -96\l  %327 = icmp ult i32 %326, 31\l  br i1 %327, label %912, label %328\l|{<s0>T|<s1>F}}"];
	Node0x1efa6d0:s0 -> Node0x1efcac0;
	Node0x1efa6d0:s1 -> Node0x1efa720;
	Node0x1efa720 [shape=record,label="{%328:\l328:                                              \l  %329 = add nsw i32 %67, -33\l  %330 = icmp ult i32 %329, 94\l  %331 = add nuw nsw i32 %67, 65344\l  %332 = select i1 %330, i32 %331, i32 %67\l  br label %604\l}"];
	Node0x1efa720 -> Node0x1efb760;
	Node0x1efa770 [shape=record,label="{%333:\l333:                                              \l  %334 = icmp sgt i8 %66, -1\l  br i1 %334, label %604, label %335\l|{<s0>T|<s1>F}}"];
	Node0x1efa770:s0 -> Node0x1efb760;
	Node0x1efa770:s1 -> Node0x1efa7c0;
	Node0x1efa7c0 [shape=record,label="{%335:\l335:                                              \l  %336 = icmp ult i8 %66, -95\l  br i1 %336, label %912, label %339\l|{<s0>T|<s1>F}}"];
	Node0x1efa7c0:s0 -> Node0x1efcac0;
	Node0x1efa7c0:s1 -> Node0x1efa860;
	Node0x1efa810 [shape=record,label="{%337:\l337:                                              \l  %338 = icmp sgt i8 %66, -1\l  br i1 %338, label %604, label %339\l|{<s0>T|<s1>F}}"];
	Node0x1efa810:s0 -> Node0x1efb760;
	Node0x1efa810:s1 -> Node0x1efa860;
	Node0x1efa860 [shape=record,label="{%339:\l339:                                              \l  %340 = add nsw i32 %67, -129\l  %341 = icmp ugt i32 %340, 125\l  br i1 %341, label %912, label %342\l|{<s0>T|<s1>F}}"];
	Node0x1efa860:s0 -> Node0x1efcac0;
	Node0x1efa860:s1 -> Node0x1efa8b0;
	Node0x1efa8b0 [shape=record,label="{%342:\l342:                                              \l  %343 = icmp ult i64 %65, 2\l  br i1 %343, label %914, label %344\l|{<s0>T|<s1>F}}"];
	Node0x1efa8b0:s0 -> Node0x1efcb10;
	Node0x1efa8b0:s1 -> Node0x1efa900;
	Node0x1efa900 [shape=record,label="{%344:\l344:                                              \l  %345 = getelementptr inbounds i8, i8* %61, i64 1\l  %346 = load i8, i8* %345, align 1, !tbaa !1638\l  %347 = zext i8 %346 to i32\l  %348 = icmp ult i8 %346, -95\l  %349 = icmp eq i8 %64, -38\l  %350 = and i1 %349, %348\l  br i1 %350, label %912, label %351\l|{<s0>T|<s1>F}}"];
	Node0x1efa900:s0 -> Node0x1efcac0;
	Node0x1efa900:s1 -> Node0x1efa950;
	Node0x1efa950 [shape=record,label="{%351:\l351:                                              \l  %352 = add nsw i32 %347, -64\l  %353 = icmp ugt i32 %352, 190\l  %354 = icmp eq i8 %346, 127\l  %355 = or i1 %354, %353\l  br i1 %355, label %356, label %419\l|{<s0>T|<s1>F}}"];
	Node0x1efa950:s0 -> Node0x1efa9a0;
	Node0x1efa950:s1 -> Node0x1efacc0;
	Node0x1efa9a0 [shape=record,label="{%356:\l356:                                              \l  %357 = add nsw i32 %347, -48\l  %358 = icmp ult i32 %357, 10\l  %359 = icmp eq i8 %64, -40\l  %360 = and i1 %359, %358\l  br i1 %360, label %361, label %912\l|{<s0>T|<s1>F}}"];
	Node0x1efa9a0:s0 -> Node0x1efa9f0;
	Node0x1efa9a0:s1 -> Node0x1efcac0;
	Node0x1efa9f0 [shape=record,label="{%361:\l361:                                              \l  %362 = icmp ult i64 %65, 4\l  br i1 %362, label %914, label %363\l|{<s0>T|<s1>F}}"];
	Node0x1efa9f0:s0 -> Node0x1efcb10;
	Node0x1efa9f0:s1 -> Node0x1efaa40;
	Node0x1efaa40 [shape=record,label="{%363:\l363:                                              \l  %364 = getelementptr inbounds i8, i8* %61, i64 2\l  %365 = load i8, i8* %364, align 1, !tbaa !1638\l  %366 = zext i8 %365 to i32\l  %367 = add nsw i32 %366, -129\l  %368 = icmp ugt i32 %367, 126\l  br i1 %368, label %912, label %369\l|{<s0>T|<s1>F}}"];
	Node0x1efaa40:s0 -> Node0x1efcac0;
	Node0x1efaa40:s1 -> Node0x1efaa90;
	Node0x1efaa90 [shape=record,label="{%369:\l369:                                              \l  %370 = getelementptr inbounds i8, i8* %61, i64 3\l  %371 = load i8, i8* %370, align 1, !tbaa !1638\l  %372 = zext i8 %371 to i32\l  %373 = add nsw i32 %372, -48\l  %374 = icmp ugt i32 %373, 9\l  br i1 %374, label %912, label %375\l|{<s0>T|<s1>F}}"];
	Node0x1efaa90:s0 -> Node0x1efcac0;
	Node0x1efaa90:s1 -> Node0x1efaae0;
	Node0x1efaae0 [shape=record,label="{%375:\l375:                                              \l  %376 = mul nuw nsw i32 %340, 10\l  %377 = add nuw nsw i32 %376, %347\l  %378 = mul nuw nsw i32 %377, 1260\l  %379 = mul nuw nsw i32 %367, 10\l  %380 = add nsw i32 %378, -60352\l  %381 = add nuw nsw i32 %380, %379\l  %382 = add nuw nsw i32 %381, %373\l  br label %383\l}"];
	Node0x1efaae0 -> Node0x1efab30;
	Node0x1efab30 [shape=record,label="{%383:\l383:                                              \l  %384 = phi i32 [ 0, %375 ], [ %415, %414 ]\l  %385 = phi i32 [ %382, %375 ], [ %417, %414 ]\l  %386 = sub i32 %385, %384\l  %387 = insertelement \<2 x i32\> undef, i32 %384, i32 0\l  %388 = shufflevector \<2 x i32\> %387, \<2 x i32\> undef, \<2 x i32\>\l... zeroinitializer\l  %389 = insertelement \<2 x i32\> undef, i32 %386, i32 0\l  %390 = shufflevector \<2 x i32\> %389, \<2 x i32\> undef, \<2 x i32\>\l... zeroinitializer\l  br label %391\l}"];
	Node0x1efab30 -> Node0x1efab80;
	Node0x1efab80 [shape=record,label="{%391:\l391:                                              \l  %392 = phi i64 [ 0, %383 ], [ %412, %408 ]\l  %393 = phi i64 [ 0, %383 ], [ %411, %408 ]\l  %394 = insertelement \<2 x i64\> \<i64 undef, i64 0\>, i64 %393, i32 0\l  br label %395\l}"];
	Node0x1efab80 -> Node0x1efabd0;
	Node0x1efabd0 [shape=record,label="{%395:\l395:                                              \l  %396 = phi i64 [ 0, %391 ], [ %406, %395 ]\l  %397 = phi \<2 x i64\> [ %394, %391 ], [ %405, %395 ]\l  %398 = getelementptr inbounds [126 x [190 x i16]], [126 x [190 x i16]]*\l... @gb18030, i64 0, i64 %392, i64 %396\l  %399 = bitcast i16* %398 to \<2 x i16\>*\l  %400 = load \<2 x i16\>, \<2 x i16\>* %399, align 4, !tbaa !1645\l  %401 = zext \<2 x i16\> %400 to \<2 x i32\>\l  %402 = sub \<2 x i32\> %401, %388\l  %403 = icmp ule \<2 x i32\> %402, %390\l  %404 = zext \<2 x i1\> %403 to \<2 x i64\>\l  %405 = add \<2 x i64\> %397, %404\l  %406 = add i64 %396, 2\l  %407 = icmp eq i64 %406, 190\l  br i1 %407, label %408, label %395, !llvm.loop !1647\l|{<s0>T|<s1>F}}"];
	Node0x1efabd0:s0 -> Node0x1efac20;
	Node0x1efabd0:s1 -> Node0x1efabd0;
	Node0x1efac20 [shape=record,label="{%408:\l408:                                              \l  %409 = shufflevector \<2 x i64\> %405, \<2 x i64\> undef, \<2 x i32\> \<i32 1, i32\l... undef\>\l  %410 = add \<2 x i64\> %405, %409\l  %411 = extractelement \<2 x i64\> %410, i32 0\l  %412 = add nuw nsw i64 %392, 1\l  %413 = icmp eq i64 %412, 126\l  br i1 %413, label %414, label %391\l|{<s0>T|<s1>F}}"];
	Node0x1efac20:s0 -> Node0x1efac70;
	Node0x1efac20:s1 -> Node0x1efab80;
	Node0x1efac70 [shape=record,label="{%414:\l414:                                              \l  %415 = add i32 %385, 1\l  %416 = trunc i64 %411 to i32\l  %417 = add i32 %385, %416\l  %418 = icmp ult i32 %417, %415\l  br i1 %418, label %604, label %383\l|{<s0>T|<s1>F}}"];
	Node0x1efac70:s0 -> Node0x1efb760;
	Node0x1efac70:s1 -> Node0x1efab30;
	Node0x1efacc0 [shape=record,label="{%419:\l419:                                              \l  %420 = icmp ugt i32 %352, 63\l  %421 = add nsw i32 %347, -65\l  %422 = select i1 %420, i32 %421, i32 %352\l  %423 = zext i32 %340 to i64\l  %424 = zext i32 %422 to i64\l  %425 = getelementptr inbounds [126 x [190 x i16]], [126 x [190 x i16]]*\l... @gb18030, i64 0, i64 %423, i64 %424\l  %426 = load i16, i16* %425, align 2, !tbaa !1645\l  %427 = zext i16 %426 to i32\l  br label %604\l}"];
	Node0x1efacc0 -> Node0x1efb760;
	Node0x1efad10 [shape=record,label="{%428:\l428:                                              \l  %429 = icmp sgt i8 %66, -1\l  br i1 %429, label %604, label %430\l|{<s0>T|<s1>F}}"];
	Node0x1efad10:s0 -> Node0x1efb760;
	Node0x1efad10:s1 -> Node0x1efad60;
	Node0x1efad60 [shape=record,label="{%430:\l430:                                              \l  %431 = icmp ult i64 %65, 2\l  br i1 %431, label %914, label %432\l|{<s0>T|<s1>F}}"];
	Node0x1efad60:s0 -> Node0x1efcb10;
	Node0x1efad60:s1 -> Node0x1efadb0;
	Node0x1efadb0 [shape=record,label="{%432:\l432:                                              \l  %433 = getelementptr inbounds i8, i8* %61, i64 1\l  %434 = load i8, i8* %433, align 1, !tbaa !1638\l  %435 = zext i8 %434 to i32\l  %436 = add nsw i32 %435, -64\l  %437 = icmp ugt i32 %436, 190\l  %438 = add nsw i32 %435, -127\l  %439 = icmp ult i32 %438, 34\l  %440 = or i1 %437, %439\l  br i1 %440, label %912, label %441\l|{<s0>T|<s1>F}}"];
	Node0x1efadb0:s0 -> Node0x1efcac0;
	Node0x1efadb0:s1 -> Node0x1efae00;
	Node0x1efae00 [shape=record,label="{%441:\l441:                                              \l  %442 = icmp ugt i32 %436, 62\l  %443 = add nsw i32 %435, -98\l  %444 = select i1 %442, i32 %443, i32 %436\l  %445 = add nsw i32 %67, -161\l  %446 = icmp ugt i32 %445, 88\l  br i1 %446, label %447, label %500\l|{<s0>T|<s1>F}}"];
	Node0x1efae00:s0 -> Node0x1efae50;
	Node0x1efae00:s1 -> Node0x1efb030;
	Node0x1efae50 [shape=record,label="{%447:\l447:                                              \l  %448 = add nsw i32 %67, -135\l  %449 = icmp ugt i32 %448, 119\l  br i1 %449, label %912, label %450\l|{<s0>T|<s1>F}}"];
	Node0x1efae50:s0 -> Node0x1efcac0;
	Node0x1efae50:s1 -> Node0x1efaea0;
	Node0x1efaea0 [shape=record,label="{%450:\l450:                                              \l  %451 = icmp ult i8 %66, -95\l  %452 = add nsw i32 %67, -224\l  %453 = select i1 %451, i32 %448, i32 %452\l  %454 = mul nsw i32 %453, 157\l  %455 = add nsw i32 %444, %454\l  %456 = lshr i32 %455, 4\l  %457 = add nuw nsw i32 %456, 4867\l  %458 = zext i32 %457 to i64\l  %459 = getelementptr inbounds [5172 x i16], [5172 x i16]* @hkscs, i64 0, i64\l... %458\l  %460 = load i16, i16* %459, align 2, !tbaa !1645\l  %461 = zext i16 %460 to i32\l  %462 = and i32 %455, 15\l  %463 = lshr i32 %461, %462\l  %464 = shl i32 %463, 17\l  %465 = and i32 %464, 131072\l  %466 = zext i32 %455 to i64\l  %467 = getelementptr inbounds [5172 x i16], [5172 x i16]* @hkscs, i64 0, i64\l... %466\l  %468 = load i16, i16* %467, align 2, !tbaa !1645\l  %469 = zext i16 %468 to i32\l  %470 = or i32 %465, %469\l  %471 = and i32 %470, 196352\l  %472 = icmp eq i32 %471, 56320\l  br i1 %472, label %473, label %498\l|{<s0>T|<s1>F}}"];
	Node0x1efaea0:s0 -> Node0x1efaef0;
	Node0x1efaea0:s1 -> Node0x1efafe0;
	Node0x1efaef0 [shape=record,label="{%473:\l473:                                              \l  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #40\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #40\l  store %struct.pthread_rwlockattr_t* %9, %struct.pthread_rwlockattr_t** %51,\l... align 8, !tbaa !1640\l  %474 = call fastcc i64 @find_charmap(i8* getelementptr inbounds ([5 x i8],\l... [5 x i8]* @.str.799, i64 0, i64 0)) #43\l  %475 = shl i64 %474, 16\l  %476 = or i64 %52, %475\l  %477 = or i64 %476, 1\l  %478 = inttoptr i64 %477 to i8*\l  %479 = and i32 %469, 255\l  %480 = zext i32 %479 to i64\l  %481 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.1.800, i64 0, i64\l... %480\l  store i8* %481, i8** %11, align 8, !tbaa !1640\l  store i64 4, i64* %12, align 8, !tbaa !1641\l  store i64 8, i64* %13, align 8, !tbaa !1641\l  %482 = call i64 @iconv(i8* nonnull %478, i8** nonnull %11, i64* nonnull %12,\l... i8** nonnull %10, i64* nonnull %13) #43\l  %483 = load i64, i64* %53, align 8, !tbaa !1640\l  %484 = sub i64 %483, %54\l  %485 = load i64, i64* %4, align 8, !tbaa !1641\l  %486 = icmp ugt i64 %484, %485\l  br i1 %486, label %497, label %487\l|{<s0>T|<s1>F}}"];
	Node0x1efaef0:s0 -> Node0x1efaf90;
	Node0x1efaef0:s1 -> Node0x1efaf40;
	Node0x1efaf40 [shape=record,label="{%487:\l487:                                              \l  %488 = icmp ne i64 %482, 0\l  %489 = zext i1 %488 to i64\l  %490 = add i64 %62, %489\l  %491 = load i8*, i8** %3, align 8, !tbaa !1640\l  %492 = call i8* @memcpy(i8* %491, i8* nonnull %49, i64 %484) #42\l  %493 = load i8*, i8** %3, align 8, !tbaa !1640\l  %494 = getelementptr inbounds i8, i8* %493, i64 %484\l  store i8* %494, i8** %3, align 8, !tbaa !1640\l  %495 = load i64, i64* %4, align 8, !tbaa !1641\l  %496 = sub i64 %495, %484\l  store i64 %496, i64* %4, align 8, !tbaa !1641\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #40\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #40\l  br label %902\l}"];
	Node0x1efaf40 -> Node0x1efca20;
	Node0x1efaf90 [shape=record,label="{%497:\l497:                                              \l  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #40\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #40\l  br label %914\l}"];
	Node0x1efaf90 -> Node0x1efcb10;
	Node0x1efafe0 [shape=record,label="{%498:\l498:                                              \l  %499 = icmp eq i32 %470, 0\l  br i1 %499, label %912, label %604\l|{<s0>T|<s1>F}}"];
	Node0x1efafe0:s0 -> Node0x1efcac0;
	Node0x1efafe0:s1 -> Node0x1efb760;
	Node0x1efb030 [shape=record,label="{%500:\l500:                                              \l  %501 = zext i32 %445 to i64\l  %502 = zext i32 %444 to i64\l  %503 = getelementptr inbounds [89 x [157 x i16]], [89 x [157 x i16]]*\l... bitcast (\<\{ [157 x i16], [157 x i16], \<\{ [128 x i16], [29 x i16] \}\>, [157 x\l... i16], [157 x i16], [157 x i16], [157 x i16], [157 x i16], [157 x i16], [157 x\l... i16], [157 x i16], [157 x i16], [157 x i16], [157 x i16], [157 x i16], [157 x\l... i16], [157 x i16], [157 x i16], [157 x i16], [157 x i16], [157 x i16], [157 x\l... i16], [157 x i16], [157 x i16], [157 x i16], [157 x i16], [157 x i16], [157 x\l... i16], [157 x i16], [157 x i16], [157 x i16], [157 x i16], [157 x i16], [157 x\l... i16], [157 x i16], [157 x i16], [157 x i16], [157 x i16], [157 x i16], [157 x\l... i16], [157 x i16], [157 x i16], [157 x i16], [157 x i16], [157 x i16], [157 x\l... i16], [157 x i16], [157 x i16], [157 x i16], [157 x i16], [157 x i16], [157 x\l... i16], [157 x i16], [157 x i16], [157 x i16], [157 x i16], [157 x i16], [157 x\l... i16], [157 x i16], [157 x i16], [157 x i16], [157 x i16], [157 x i16], [157 x\l... i16], [157 x i16], [157 x i16], [157 x i16], [157 x i16], [157 x i16], [157 x\l... i16], [157 x i16], [157 x i16], [157 x i16], [157 x i16], [157 x i16], [157 x\l... i16], [157 x i16], [157 x i16], [157 x i16], [157 x i16], [157 x i16], [157 x\l... i16], [157 x i16], [157 x i16], [157 x i16], [157 x i16], [157 x i16], [157 x\l... i16], [157 x i16] \}\>* @big5 to [89 x [157 x i16]]*), i64 0, i64 %501, i64 %502\l  %504 = load i16, i16* %503, align 2, !tbaa !1645\l  %505 = zext i16 %504 to i32\l  %506 = icmp eq i32 %445, 39\l  br i1 %506, label %507, label %508\l|{<s0>T|<s1>F}}"];
	Node0x1efb030:s0 -> Node0x1efb080;
	Node0x1efb030:s1 -> Node0x1efb0d0;
	Node0x1efb080 [shape=record,label="{%507:\l507:                                              \l  switch i32 %444, label %508 [\l    i32 60, label %509\l    i32 58, label %509\l    i32 66, label %509\l  ]\l|{<s0>def|<s1>60|<s2>58|<s3>66}}"];
	Node0x1efb080:s0 -> Node0x1efb0d0;
	Node0x1efb080:s1 -> Node0x1efb120;
	Node0x1efb080:s2 -> Node0x1efb120;
	Node0x1efb080:s3 -> Node0x1efb120;
	Node0x1efb0d0 [shape=record,label="{%508:\l508:                                              \l  br label %509\l}"];
	Node0x1efb0d0 -> Node0x1efb120;
	Node0x1efb120 [shape=record,label="{%509:\l509:                                              \l  %510 = phi i32 [ 0, %508 ], [ 131072, %507 ], [ 131072, %507 ], [ 131072,\l... %507 ]\l  %511 = or i32 %510, %505\l  %512 = icmp eq i32 %511, 0\l  br i1 %512, label %912, label %604\l|{<s0>T|<s1>F}}"];
	Node0x1efb120:s0 -> Node0x1efcac0;
	Node0x1efb120:s1 -> Node0x1efb760;
	Node0x1efb170 [shape=record,label="{%513:\l513:                                              \l  %514 = icmp sgt i8 %66, -1\l  br i1 %514, label %604, label %515\l|{<s0>T|<s1>F}}"];
	Node0x1efb170:s0 -> Node0x1efb760;
	Node0x1efb170:s1 -> Node0x1efb1c0;
	Node0x1efb1c0 [shape=record,label="{%515:\l515:                                              \l  %516 = icmp ult i64 %65, 2\l  br i1 %516, label %914, label %517\l|{<s0>T|<s1>F}}"];
	Node0x1efb1c0:s0 -> Node0x1efcb10;
	Node0x1efb1c0:s1 -> Node0x1efb210;
	Node0x1efb210 [shape=record,label="{%517:\l517:                                              \l  %518 = getelementptr inbounds i8, i8* %61, i64 1\l  %519 = load i8, i8* %518, align 1, !tbaa !1638\l  %520 = zext i8 %519 to i32\l  %521 = add nsw i32 %67, -161\l  %522 = add nsw i32 %520, -161\l  %523 = icmp ugt i32 %521, 92\l  %524 = icmp ugt i32 %522, 93\l  %525 = or i1 %523, %524\l  br i1 %525, label %526, label %592\l|{<s0>T|<s1>F}}"];
	Node0x1efb210:s0 -> Node0x1efb260;
	Node0x1efb210:s1 -> Node0x1efb670;
	Node0x1efb260 [shape=record,label="{%526:\l526:                                              \l  %527 = add nsw i32 %67, -129\l  %528 = icmp ugt i32 %527, 92\l  br i1 %528, label %912, label %529\l|{<s0>T|<s1>F}}"];
	Node0x1efb260:s0 -> Node0x1efcac0;
	Node0x1efb260:s1 -> Node0x1efb2b0;
	Node0x1efb2b0 [shape=record,label="{%529:\l529:                                              \l  %530 = icmp ugt i32 %527, 68\l  %531 = icmp ugt i8 %519, 82\l  %532 = and i1 %530, %531\l  br i1 %532, label %912, label %533\l|{<s0>T|<s1>F}}"];
	Node0x1efb2b0:s0 -> Node0x1efcac0;
	Node0x1efb2b0:s1 -> Node0x1efb300;
	Node0x1efb300 [shape=record,label="{%533:\l533:                                              \l  %534 = add nsw i32 %520, -65\l  %535 = icmp ult i32 %534, 26\l  br i1 %535, label %546, label %536\l|{<s0>T|<s1>F}}"];
	Node0x1efb300:s0 -> Node0x1efb490;
	Node0x1efb300:s1 -> Node0x1efb350;
	Node0x1efb350 [shape=record,label="{%536:\l536:                                              \l  %537 = add nsw i32 %520, -97\l  %538 = icmp ult i32 %537, 26\l  br i1 %538, label %539, label %541\l|{<s0>T|<s1>F}}"];
	Node0x1efb350:s0 -> Node0x1efb3a0;
	Node0x1efb350:s1 -> Node0x1efb3f0;
	Node0x1efb3a0 [shape=record,label="{%539:\l539:                                              \l  %540 = add nsw i32 %520, -71\l  br label %546\l}"];
	Node0x1efb3a0 -> Node0x1efb490;
	Node0x1efb3f0 [shape=record,label="{%541:\l541:                                              \l  %542 = add nsw i32 %520, -129\l  %543 = icmp ult i32 %542, 126\l  br i1 %543, label %544, label %912\l|{<s0>T|<s1>F}}"];
	Node0x1efb3f0:s0 -> Node0x1efb440;
	Node0x1efb3f0:s1 -> Node0x1efcac0;
	Node0x1efb440 [shape=record,label="{%544:\l544:                                              \l  %545 = add nsw i32 %520, -77\l  br label %546\l}"];
	Node0x1efb440 -> Node0x1efb490;
	Node0x1efb490 [shape=record,label="{%546:\l546:                                              \l  %547 = phi i32 [ %540, %539 ], [ %545, %544 ], [ %534, %533 ]\l  %548 = icmp ult i32 %527, 32\l  %549 = mul nuw nsw i32 %527, 178\l  %550 = mul nsw i32 %521, 84\l  %551 = add nsw i32 %550, 5696\l  %552 = select i1 %548, i32 %549, i32 %551\l  %553 = add nsw i32 %552, 44032\l  %554 = add nuw nsw i32 %553, %547\l  %555 = icmp ult i32 %554, 44032\l  br i1 %555, label %604, label %556\l|{<s0>T|<s1>F}}"];
	Node0x1efb490:s0 -> Node0x1efb760;
	Node0x1efb490:s1 -> Node0x1efb4e0;
	Node0x1efb4e0 [shape=record,label="{%556:\l556:                                              \l  %557 = phi i32 [ %588, %587 ], [ 44032, %546 ]\l  %558 = phi i32 [ %590, %587 ], [ %554, %546 ]\l  %559 = sub i32 %558, %557\l  %560 = insertelement \<2 x i32\> undef, i32 %557, i32 0\l  %561 = shufflevector \<2 x i32\> %560, \<2 x i32\> undef, \<2 x i32\>\l... zeroinitializer\l  %562 = insertelement \<2 x i32\> undef, i32 %559, i32 0\l  %563 = shufflevector \<2 x i32\> %562, \<2 x i32\> undef, \<2 x i32\>\l... zeroinitializer\l  br label %564\l}"];
	Node0x1efb4e0 -> Node0x1efb530;
	Node0x1efb530 [shape=record,label="{%564:\l564:                                              \l  %565 = phi i64 [ 0, %556 ], [ %585, %581 ]\l  %566 = phi i64 [ 0, %556 ], [ %584, %581 ]\l  %567 = insertelement \<2 x i64\> \<i64 undef, i64 0\>, i64 %566, i32 0\l  br label %568\l}"];
	Node0x1efb530 -> Node0x1efb580;
	Node0x1efb580 [shape=record,label="{%568:\l568:                                              \l  %569 = phi i64 [ 0, %564 ], [ %579, %568 ]\l  %570 = phi \<2 x i64\> [ %567, %564 ], [ %578, %568 ]\l  %571 = getelementptr inbounds [93 x [94 x i16]], [93 x [94 x i16]]* bitcast\l... (\<\{ [94 x i16], \<\{ [71 x i16], [23 x i16] \}\>, [94 x i16], [94 x i16], [94 x\l... i16], \<\{ [68 x i16], [26 x i16] \}\>, \<\{ [79 x i16], [15 x i16] \}\>, [94 x i16],\l... [94 x i16], \<\{ [83 x i16], [11 x i16] \}\>, \<\{ [86 x i16], [8 x i16] \}\>, \<\{ [81\l... x i16], [13 x i16] \}\>, [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x\l... i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16],\l... [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x\l... i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16],\l... [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x\l... i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16],\l... [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x\l... i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16],\l... [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x\l... i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16],\l... [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x\l... i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16],\l... [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16] \}\>* @ksc to [93 x\l... [94 x i16]]*), i64 0, i64 %565, i64 %569\l  %572 = bitcast i16* %571 to \<2 x i16\>*\l  %573 = load \<2 x i16\>, \<2 x i16\>* %572, align 4, !tbaa !1645\l  %574 = zext \<2 x i16\> %573 to \<2 x i32\>\l  %575 = sub \<2 x i32\> %574, %561\l  %576 = icmp ule \<2 x i32\> %575, %563\l  %577 = zext \<2 x i1\> %576 to \<2 x i64\>\l  %578 = add \<2 x i64\> %570, %577\l  %579 = add i64 %569, 2\l  %580 = icmp eq i64 %579, 94\l  br i1 %580, label %581, label %568, !llvm.loop !1649\l|{<s0>T|<s1>F}}"];
	Node0x1efb580:s0 -> Node0x1efb5d0;
	Node0x1efb580:s1 -> Node0x1efb580;
	Node0x1efb5d0 [shape=record,label="{%581:\l581:                                              \l  %582 = shufflevector \<2 x i64\> %578, \<2 x i64\> undef, \<2 x i32\> \<i32 1, i32\l... undef\>\l  %583 = add \<2 x i64\> %578, %582\l  %584 = extractelement \<2 x i64\> %583, i32 0\l  %585 = add nuw nsw i64 %565, 1\l  %586 = icmp eq i64 %585, 93\l  br i1 %586, label %587, label %564\l|{<s0>T|<s1>F}}"];
	Node0x1efb5d0:s0 -> Node0x1efb620;
	Node0x1efb5d0:s1 -> Node0x1efb530;
	Node0x1efb620 [shape=record,label="{%587:\l587:                                              \l  %588 = add i32 %558, 1\l  %589 = trunc i64 %584 to i32\l  %590 = add i32 %558, %589\l  %591 = icmp ult i32 %590, %588\l  br i1 %591, label %604, label %556\l|{<s0>T|<s1>F}}"];
	Node0x1efb620:s0 -> Node0x1efb760;
	Node0x1efb620:s1 -> Node0x1efb4e0;
	Node0x1efb670 [shape=record,label="{%592:\l592:                                              \l  %593 = zext i32 %521 to i64\l  %594 = zext i32 %522 to i64\l  %595 = getelementptr inbounds [93 x [94 x i16]], [93 x [94 x i16]]* bitcast\l... (\<\{ [94 x i16], \<\{ [71 x i16], [23 x i16] \}\>, [94 x i16], [94 x i16], [94 x\l... i16], \<\{ [68 x i16], [26 x i16] \}\>, \<\{ [79 x i16], [15 x i16] \}\>, [94 x i16],\l... [94 x i16], \<\{ [83 x i16], [11 x i16] \}\>, \<\{ [86 x i16], [8 x i16] \}\>, \<\{ [81\l... x i16], [13 x i16] \}\>, [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x\l... i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16],\l... [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x\l... i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16],\l... [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x\l... i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16],\l... [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x\l... i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16],\l... [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x\l... i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16],\l... [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x\l... i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16],\l... [94 x i16], [94 x i16], [94 x i16], [94 x i16], [94 x i16] \}\>* @ksc to [93 x\l... [94 x i16]]*), i64 0, i64 %593, i64 %594\l  %596 = load i16, i16* %595, align 2, !tbaa !1645\l  %597 = zext i16 %596 to i32\l  %598 = icmp eq i16 %596, 0\l  br i1 %598, label %912, label %604\l|{<s0>T|<s1>F}}"];
	Node0x1efb670:s0 -> Node0x1efcac0;
	Node0x1efb670:s1 -> Node0x1efb760;
	Node0x1efb6c0 [shape=record,label="{%599:\l599:                                              \l  %600 = icmp eq i8 %66, 0\l  br i1 %600, label %604, label %601\l|{<s0>T|<s1>F}}"];
	Node0x1efb6c0:s0 -> Node0x1efb760;
	Node0x1efb6c0:s1 -> Node0x1efb710;
	Node0x1efb710 [shape=record,label="{%601:\l601:                                              \l  %602 = call fastcc i32 @legacy_map(i8* nonnull %30, i32 %67) #43\l  %603 = icmp eq i32 %602, 0\l  br i1 %603, label %912, label %604\l|{<s0>T|<s1>F}}"];
	Node0x1efb710:s0 -> Node0x1efcac0;
	Node0x1efb710:s1 -> Node0x1efb760;
	Node0x1efb760 [shape=record,label="{%604:\l604:                                              \l  %605 = phi i32 [ %602, %601 ], [ 0, %599 ], [ %67, %513 ], [ %597, %592 ], [\l... %67, %428 ], [ %470, %498 ], [ %511, %509 ], [ %67, %337 ], [ %427, %419 ], [\l... %67, %333 ], [ %67, %299 ], [ %323, %318 ], [ %67, %251 ], [ %264, %263 ], [\l... %276, %271 ], [ %67, %205 ], [ %211, %210 ], [ %249, %242 ], [ %154, %151 ],\l... [ %112, %111 ], [ %67, %75 ], [ %67, %69 ], [ %74, %73 ], [ %332, %328 ], [\l... %306, %301 ], [ %131, %119 ], [ %554, %546 ], [ %417, %414 ], [ %590, %587 ]\l  %606 = phi i64 [ 1, %601 ], [ 1, %599 ], [ 1, %513 ], [ 2, %592 ], [ 1, %428\l... ], [ 2, %498 ], [ 2, %509 ], [ 1, %337 ], [ 2, %419 ], [ 1, %333 ], [ 1, %299\l... ], [ 2, %318 ], [ 1, %251 ], [ 2, %263 ], [ 2, %271 ], [ 1, %205 ], [ 1, %210\l... ], [ 2, %242 ], [ 4, %151 ], [ 4, %111 ], [ 1, %75 ], [ 1, %69 ], [ %72, %73\l... ], [ 1, %328 ], [ 1, %301 ], [ 2, %119 ], [ 2, %546 ], [ 4, %414 ], [ 2, %587\l... ]\l  %607 = zext i8 %63 to i32\l  switch i8 %63, label %643 [\l    i8 -58, label %608\l    i8 -56, label %615\l    i8 -57, label %637\l    i8 -47, label %677\l    i8 -48, label %723\l    i8 -46, label %749\l    i8 -52, label %813\l    i8 -60, label %814\l    i8 -59, label %814\l    i8 -54, label %814\l    i8 -62, label %814\l    i8 -63, label %814\l    i8 -53, label %871\l    i8 -64, label %872\l    i8 -61, label %872\l  ]\l|{<s0>def|<s1>-58|<s2>-56|<s3>-57|<s4>-47|<s5>-48|<s6>-46|<s7>-52|<s8>-60|<s9>-59|<s10>-54|<s11>-62|<s12>-63|<s13>-53|<s14>-64|<s15>-61}}"];
	Node0x1efb760:s0 -> Node0x1efbad0;
	Node0x1efb760:s1 -> Node0x1efb7b0;
	Node0x1efb760:s2 -> Node0x1efb850;
	Node0x1efb760:s3 -> Node0x1efba30;
	Node0x1efb760:s4 -> Node0x1efbda0;
	Node0x1efb760:s5 -> Node0x1efc160;
	Node0x1efb760:s6 -> Node0x1efc340;
	Node0x1efb760:s7 -> Node0x1efc700;
	Node0x1efb760:s8 -> Node0x1efc750;
	Node0x1efb760:s9 -> Node0x1efc750;
	Node0x1efb760:s10 -> Node0x1efc750;
	Node0x1efb760:s11 -> Node0x1efc750;
	Node0x1efb760:s12 -> Node0x1efc750;
	Node0x1efb760:s13 -> Node0x1efc930;
	Node0x1efb760:s14 -> Node0x1efc980;
	Node0x1efb760:s15 -> Node0x1efc980;
	Node0x1efb7b0 [shape=record,label="{%608:\l608:                                              \l  %609 = load i64, i64* %4, align 8, !tbaa !1641\l  %610 = icmp ult i64 %609, 4\l  br i1 %610, label %912, label %611\l|{<s0>T|<s1>F}}"];
	Node0x1efb7b0:s0 -> Node0x1efcac0;
	Node0x1efb7b0:s1 -> Node0x1efb800;
	Node0x1efb800 [shape=record,label="{%611:\l611:                                              \l  %612 = load i32*, i32** %57, align 8, !tbaa !1640\l  store i32 %605, i32* %612, align 4, !tbaa !1643\l  %613 = getelementptr inbounds i32, i32* %612, i64 1\l  store i32* %613, i32** %59, align 8, !tbaa !1640\l  %614 = add i64 %609, -4\l  store i64 %614, i64* %4, align 8, !tbaa !1641\l  br label %902\l}"];
	Node0x1efb800 -> Node0x1efca20;
	Node0x1efb850 [shape=record,label="{%615:\l615:                                              \l  %616 = load i64, i64* %4, align 8, !tbaa !1641\l  %617 = icmp ult i64 %616, 4\l  br i1 %617, label %618, label %627\l|{<s0>T|<s1>F}}"];
	Node0x1efb850:s0 -> Node0x1efb8a0;
	Node0x1efb850:s1 -> Node0x1efb990;
	Node0x1efb8a0 [shape=record,label="{%618:\l618:                                              \l  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %56) #40\l  %619 = call i32 @wctomb(i8* nonnull %56, i32 %605) #42\l  %620 = sext i32 %619 to i64\l  %621 = load i64, i64* %4, align 8, !tbaa !1641\l  %622 = icmp ult i64 %621, %620\l  br i1 %622, label %626, label %623\l|{<s0>T|<s1>F}}"];
	Node0x1efb8a0:s0 -> Node0x1efb940;
	Node0x1efb8a0:s1 -> Node0x1efb8f0;
	Node0x1efb8f0 [shape=record,label="{%623:\l623:                                              \l  %624 = load i8*, i8** %3, align 8, !tbaa !1640\l  %625 = call i8* @memcpy(i8* %624, i8* nonnull %56, i64 %620) #42\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %56) #40\l  br label %631\l}"];
	Node0x1efb8f0 -> Node0x1efb9e0;
	Node0x1efb940 [shape=record,label="{%626:\l626:                                              \l  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %56) #40\l  br label %914\l}"];
	Node0x1efb940 -> Node0x1efcb10;
	Node0x1efb990 [shape=record,label="{%627:\l627:                                              \l  %628 = load i8*, i8** %3, align 8, !tbaa !1640\l  %629 = call i32 @wctomb(i8* %628, i32 %605) #42\l  %630 = sext i32 %629 to i64\l  br label %631\l}"];
	Node0x1efb990 -> Node0x1efb9e0;
	Node0x1efb9e0 [shape=record,label="{%631:\l631:                                              \l  %632 = phi i64 [ %630, %627 ], [ %620, %623 ]\l  %633 = load i8*, i8** %3, align 8, !tbaa !1640\l  %634 = getelementptr inbounds i8, i8* %633, i64 %632\l  store i8* %634, i8** %3, align 8, !tbaa !1640\l  %635 = load i64, i64* %4, align 8, !tbaa !1641\l  %636 = sub i64 %635, %632\l  store i64 %636, i64* %4, align 8, !tbaa !1641\l  br label %902\l}"];
	Node0x1efb9e0 -> Node0x1efca20;
	Node0x1efba30 [shape=record,label="{%637:\l637:                                              \l  %638 = icmp ugt i32 %605, 127\l  br i1 %638, label %639, label %643\l|{<s0>T|<s1>F}}"];
	Node0x1efba30:s0 -> Node0x1efba80;
	Node0x1efba30:s1 -> Node0x1efbad0;
	Node0x1efba80 [shape=record,label="{%639:\l639:                                              \l  %640 = phi i8 [ %64, %785 ], [ %64, %730 ], [ %64, %689 ], [ %64, %637 ], [\l... %644, %666 ], [ %644, %674 ]\l  %641 = phi i64 [ %62, %785 ], [ %62, %730 ], [ %62, %689 ], [ %62, %637 ], [\l... %646, %666 ], [ %646, %674 ]\l  %642 = add i64 %641, 1\l  br label %643\l}"];
	Node0x1efba80 -> Node0x1efbad0;
	Node0x1efbad0 [shape=record,label="{%643:\l643:                                              \l  %644 = phi i8 [ %64, %604 ], [ %640, %639 ], [ %64, %637 ]\l  %645 = phi i32 [ %605, %604 ], [ 42, %639 ], [ %605, %637 ]\l  %646 = phi i64 [ %62, %604 ], [ %642, %639 ], [ %62, %637 ]\l  %647 = load i64, i64* %4, align 8, !tbaa !1641\l  %648 = icmp eq i64 %647, 0\l  br i1 %648, label %912, label %649\l|{<s0>T|<s1>F}}"];
	Node0x1efbad0:s0 -> Node0x1efcac0;
	Node0x1efbad0:s1 -> Node0x1efbb20;
	Node0x1efbb20 [shape=record,label="{%649:\l649:                                              \l  %650 = icmp ult i32 %645, 256\l  br i1 %650, label %651, label %666\l|{<s0>T|<s1>F}}"];
	Node0x1efbb20:s0 -> Node0x1efbb70;
	Node0x1efbb20:s1 -> Node0x1efbc60;
	Node0x1efbb70 [shape=record,label="{%651:\l651:                                              \l  %652 = call fastcc i32 @legacy_map(i8* nonnull %32, i32 %645) #43\l  %653 = icmp eq i32 %645, %652\l  br i1 %653, label %654, label %666\l|{<s0>T|<s1>F}}"];
	Node0x1efbb70:s0 -> Node0x1efbbc0;
	Node0x1efbb70:s1 -> Node0x1efbc60;
	Node0x1efbbc0 [shape=record,label="{%654:\l654:                                              \l  %655 = phi i8 [ %644, %651 ], [ %64, %749 ], [ %64, %723 ], [ %64, %677 ], [\l... %64, %680 ], [ %64, %682 ], [ %64, %687 ], [ %644, %670 ]\l  %656 = phi i32 [ %645, %651 ], [ %605, %749 ], [ %605, %723 ], [ %605, %677\l... ], [ 92, %680 ], [ 126, %682 ], [ %688, %687 ], [ %671, %670 ]\l  %657 = phi i64 [ %646, %651 ], [ %62, %749 ], [ %62, %723 ], [ %62, %677 ],\l... [ %681, %680 ], [ %683, %682 ], [ %62, %687 ], [ %646, %670 ]\l  %658 = load i64, i64* %4, align 8, !tbaa !1641\l  %659 = icmp eq i64 %658, 0\l  br i1 %659, label %912, label %660\l|{<s0>T|<s1>F}}"];
	Node0x1efbbc0:s0 -> Node0x1efcac0;
	Node0x1efbbc0:s1 -> Node0x1efbc10;
	Node0x1efbc10 [shape=record,label="{%660:\l660:                                              \l  %661 = trunc i32 %656 to i8\l  %662 = load i8*, i8** %3, align 8, !tbaa !1640\l  %663 = getelementptr inbounds i8, i8* %662, i64 1\l  store i8* %663, i8** %3, align 8, !tbaa !1640\l  store i8 %661, i8* %662, align 1, !tbaa !1638\l  %664 = load i64, i64* %4, align 8, !tbaa !1641\l  %665 = add i64 %664, -1\l  store i64 %665, i64* %4, align 8, !tbaa !1641\l  br label %902\l}"];
	Node0x1efbc10 -> Node0x1efca20;
	Node0x1efbc60 [shape=record,label="{%666:\l666:                                              \l  %667 = icmp ult i8 %63, 64\l  br i1 %667, label %668, label %639\l|{<s0>T|<s1>F}}"];
	Node0x1efbc60:s0 -> Node0x1efbcb0;
	Node0x1efbc60:s1 -> Node0x1efba80;
	Node0x1efbcb0 [shape=record,label="{%668:\l668:                                              \l  %669 = shl nuw nsw i32 %607, 2\l  br label %670\l}"];
	Node0x1efbcb0 -> Node0x1efbd00;
	Node0x1efbd00 [shape=record,label="{%670:\l670:                                              \l  %671 = phi i32 [ %675, %674 ], [ %669, %668 ]\l  %672 = call fastcc i32 @legacy_map(i8* nonnull %32, i32 %671) #43\l  %673 = icmp eq i32 %645, %672\l  br i1 %673, label %654, label %674\l|{<s0>T|<s1>F}}"];
	Node0x1efbd00:s0 -> Node0x1efbbc0;
	Node0x1efbd00:s1 -> Node0x1efbd50;
	Node0x1efbd50 [shape=record,label="{%674:\l674:                                              \l  %675 = add nuw nsw i32 %671, 1\l  %676 = icmp ult i32 %671, 255\l  br i1 %676, label %670, label %639\l|{<s0>T|<s1>F}}"];
	Node0x1efbd50:s0 -> Node0x1efbd00;
	Node0x1efbd50:s1 -> Node0x1efba80;
	Node0x1efbda0 [shape=record,label="{%677:\l677:                                              \l  %678 = icmp ult i32 %605, 128\l  br i1 %678, label %654, label %679\l|{<s0>T|<s1>F}}"];
	Node0x1efbda0:s0 -> Node0x1efbbc0;
	Node0x1efbda0:s1 -> Node0x1efbdf0;
	Node0x1efbdf0 [shape=record,label="{%679:\l679:                                              \l  switch i32 %605, label %684 [\l    i32 165, label %680\l    i32 8254, label %682\l  ]\l|{<s0>def|<s1>165|<s2>8254}}"];
	Node0x1efbdf0:s0 -> Node0x1efbee0;
	Node0x1efbdf0:s1 -> Node0x1efbe40;
	Node0x1efbdf0:s2 -> Node0x1efbe90;
	Node0x1efbe40 [shape=record,label="{%680:\l680:                                              \l  %681 = add i64 %62, 1\l  br label %654\l}"];
	Node0x1efbe40 -> Node0x1efbbc0;
	Node0x1efbe90 [shape=record,label="{%682:\l682:                                              \l  %683 = add i64 %62, 1\l  br label %654\l}"];
	Node0x1efbe90 -> Node0x1efbbc0;
	Node0x1efbee0 [shape=record,label="{%684:\l684:                                              \l  %685 = add i32 %605, -65377\l  %686 = icmp ult i32 %685, 63\l  br i1 %686, label %687, label %689\l|{<s0>T|<s1>F}}"];
	Node0x1efbee0:s0 -> Node0x1efbf30;
	Node0x1efbee0:s1 -> Node0x1efbf80;
	Node0x1efbf30 [shape=record,label="{%687:\l687:                                              \l  %688 = add nsw i32 %605, -65216\l  br label %654\l}"];
	Node0x1efbf30 -> Node0x1efbbc0;
	Node0x1efbf80 [shape=record,label="{%689:\l689:                                              \l  %690 = call fastcc i32 @uni_to_jis(i32 %605) #43\l  %691 = icmp eq i32 %690, 0\l  br i1 %691, label %639, label %692\l|{<s0>T|<s1>F}}"];
	Node0x1efbf80:s0 -> Node0x1efba80;
	Node0x1efbf80:s1 -> Node0x1efbfd0;
	Node0x1efbfd0 [shape=record,label="{%692:\l692:                                              \l  %693 = load i64, i64* %4, align 8, !tbaa !1641\l  %694 = icmp ult i64 %693, 2\l  br i1 %694, label %912, label %695\l|{<s0>T|<s1>F}}"];
	Node0x1efbfd0:s0 -> Node0x1efcac0;
	Node0x1efbfd0:s1 -> Node0x1efc020;
	Node0x1efc020 [shape=record,label="{%695:\l695:                                              \l  %696 = and i32 %690, 255\l  %697 = lshr i32 %690, 8\l  %698 = add nuw nsw i32 %697, 1\l  %699 = lshr i32 %698, 1\l  %700 = icmp ult i32 %690, 24320\l  %701 = select i1 %700, i32 112, i32 176\l  %702 = add nuw nsw i32 %699, %701\l  %703 = trunc i32 %702 to i8\l  %704 = load i8*, i8** %3, align 8, !tbaa !1640\l  %705 = getelementptr inbounds i8, i8* %704, i64 1\l  store i8* %705, i8** %3, align 8, !tbaa !1640\l  store i8 %703, i8* %704, align 1, !tbaa !1638\l  %706 = and i32 %690, 256\l  %707 = icmp eq i32 %706, 0\l  br i1 %707, label %714, label %708\l|{<s0>T|<s1>F}}"];
	Node0x1efc020:s0 -> Node0x1efc0c0;
	Node0x1efc020:s1 -> Node0x1efc070;
	Node0x1efc070 [shape=record,label="{%708:\l708:                                              \l  %709 = add nuw nsw i32 %696, 31\l  %710 = trunc i32 %690 to i8\l  %711 = udiv i8 %710, 96\l  %712 = zext i8 %711 to i32\l  %713 = add nuw nsw i32 %709, %712\l  br label %716\l}"];
	Node0x1efc070 -> Node0x1efc110;
	Node0x1efc0c0 [shape=record,label="{%714:\l714:                                              \l  %715 = add nuw nsw i32 %696, 126\l  br label %716\l}"];
	Node0x1efc0c0 -> Node0x1efc110;
	Node0x1efc110 [shape=record,label="{%716:\l716:                                              \l  %717 = phi i32 [ %713, %708 ], [ %715, %714 ]\l  %718 = trunc i32 %717 to i8\l  %719 = load i8*, i8** %3, align 8, !tbaa !1640\l  %720 = getelementptr inbounds i8, i8* %719, i64 1\l  store i8* %720, i8** %3, align 8, !tbaa !1640\l  store i8 %718, i8* %719, align 1, !tbaa !1638\l  %721 = load i64, i64* %4, align 8, !tbaa !1641\l  %722 = add i64 %721, -2\l  store i64 %722, i64* %4, align 8, !tbaa !1641\l  br label %902\l}"];
	Node0x1efc110 -> Node0x1efca20;
	Node0x1efc160 [shape=record,label="{%723:\l723:                                              \l  %724 = icmp ult i32 %605, 128\l  br i1 %724, label %654, label %725\l|{<s0>T|<s1>F}}"];
	Node0x1efc160:s0 -> Node0x1efbbc0;
	Node0x1efc160:s1 -> Node0x1efc1b0;
	Node0x1efc1b0 [shape=record,label="{%725:\l725:                                              \l  %726 = add i32 %605, -65377\l  %727 = icmp ult i32 %726, 63\l  br i1 %727, label %728, label %730\l|{<s0>T|<s1>F}}"];
	Node0x1efc1b0:s0 -> Node0x1efc200;
	Node0x1efc1b0:s1 -> Node0x1efc250;
	Node0x1efc200 [shape=record,label="{%728:\l728:                                              \l  %729 = add nsw i32 %605, -61760\l  br label %733\l}"];
	Node0x1efc200 -> Node0x1efc2a0;
	Node0x1efc250 [shape=record,label="{%730:\l730:                                              \l  %731 = call fastcc i32 @uni_to_jis(i32 %605) #43\l  %732 = icmp eq i32 %731, 0\l  br i1 %732, label %639, label %733\l|{<s0>T|<s1>F}}"];
	Node0x1efc250:s0 -> Node0x1efba80;
	Node0x1efc250:s1 -> Node0x1efc2a0;
	Node0x1efc2a0 [shape=record,label="{%733:\l733:                                              \l  %734 = phi i32 [ %729, %728 ], [ %731, %730 ]\l  %735 = load i64, i64* %4, align 8, !tbaa !1641\l  %736 = icmp ult i64 %735, 2\l  br i1 %736, label %912, label %737\l|{<s0>T|<s1>F}}"];
	Node0x1efc2a0:s0 -> Node0x1efcac0;
	Node0x1efc2a0:s1 -> Node0x1efc2f0;
	Node0x1efc2f0 [shape=record,label="{%737:\l737:                                              \l  %738 = lshr i32 %734, 8\l  %739 = trunc i32 %738 to i8\l  %740 = xor i8 %739, -128\l  %741 = load i8*, i8** %3, align 8, !tbaa !1640\l  %742 = getelementptr inbounds i8, i8* %741, i64 1\l  store i8* %742, i8** %3, align 8, !tbaa !1640\l  store i8 %740, i8* %741, align 1, !tbaa !1638\l  %743 = trunc i32 %734 to i8\l  %744 = xor i8 %743, -128\l  %745 = load i8*, i8** %3, align 8, !tbaa !1640\l  %746 = getelementptr inbounds i8, i8* %745, i64 1\l  store i8* %746, i8** %3, align 8, !tbaa !1640\l  store i8 %744, i8* %745, align 1, !tbaa !1638\l  %747 = load i64, i64* %4, align 8, !tbaa !1641\l  %748 = add i64 %747, -2\l  store i64 %748, i64* %4, align 8, !tbaa !1641\l  br label %902\l}"];
	Node0x1efc2f0 -> Node0x1efca20;
	Node0x1efc340 [shape=record,label="{%749:\l749:                                              \l  %750 = icmp ult i32 %605, 128\l  br i1 %750, label %654, label %751\l|{<s0>T|<s1>F}}"];
	Node0x1efc340:s0 -> Node0x1efbbc0;
	Node0x1efc340:s1 -> Node0x1efc390;
	Node0x1efc390 [shape=record,label="{%751:\l751:                                              \l  %752 = add i32 %605, -65377\l  %753 = icmp ult i32 %752, 63\l  br i1 %753, label %755, label %754\l|{<s0>T|<s1>F}}"];
	Node0x1efc390:s0 -> Node0x1efc430;
	Node0x1efc390:s1 -> Node0x1efc3e0;
	Node0x1efc3e0 [shape=record,label="{%754:\l754:                                              \l  switch i32 %605, label %785 [\l    i32 8254, label %755\l    i32 165, label %755\l  ]\l|{<s0>def|<s1>8254|<s2>165}}"];
	Node0x1efc3e0:s0 -> Node0x1efc610;
	Node0x1efc3e0:s1 -> Node0x1efc430;
	Node0x1efc3e0:s2 -> Node0x1efc430;
	Node0x1efc430 [shape=record,label="{%755:\l755:                                              \l  %756 = load i64, i64* %4, align 8, !tbaa !1641\l  %757 = icmp ult i64 %756, 7\l  br i1 %757, label %912, label %758\l|{<s0>T|<s1>F}}"];
	Node0x1efc430:s0 -> Node0x1efcac0;
	Node0x1efc430:s1 -> Node0x1efc480;
	Node0x1efc480 [shape=record,label="{%758:\l758:                                              \l  %759 = load i8*, i8** %3, align 8, !tbaa !1640\l  %760 = getelementptr inbounds i8, i8* %759, i64 1\l  store i8* %760, i8** %3, align 8, !tbaa !1640\l  store i8 27, i8* %759, align 1, !tbaa !1638\l  %761 = load i8*, i8** %3, align 8, !tbaa !1640\l  %762 = getelementptr inbounds i8, i8* %761, i64 1\l  store i8* %762, i8** %3, align 8, !tbaa !1640\l  store i8 40, i8* %761, align 1, !tbaa !1638\l  %763 = load i8*, i8** %3, align 8, !tbaa !1640\l  %764 = getelementptr inbounds i8, i8* %763, i64 1\l  store i8* %764, i8** %3, align 8, !tbaa !1640\l  switch i32 %605, label %771 [\l    i32 165, label %765\l    i32 8254, label %768\l  ]\l|{<s0>def|<s1>165|<s2>8254}}"];
	Node0x1efc480:s0 -> Node0x1efc570;
	Node0x1efc480:s1 -> Node0x1efc4d0;
	Node0x1efc480:s2 -> Node0x1efc520;
	Node0x1efc4d0 [shape=record,label="{%765:\l765:                                              \l  store i8 74, i8* %763, align 1, !tbaa !1638\l  %766 = load i8*, i8** %3, align 8, !tbaa !1640\l  %767 = getelementptr inbounds i8, i8* %766, i64 1\l  store i8* %767, i8** %3, align 8, !tbaa !1640\l  store i8 92, i8* %766, align 1, !tbaa !1638\l  br label %776\l}"];
	Node0x1efc4d0 -> Node0x1efc5c0;
	Node0x1efc520 [shape=record,label="{%768:\l768:                                              \l  store i8 74, i8* %763, align 1, !tbaa !1638\l  %769 = load i8*, i8** %3, align 8, !tbaa !1640\l  %770 = getelementptr inbounds i8, i8* %769, i64 1\l  store i8* %770, i8** %3, align 8, !tbaa !1640\l  store i8 126, i8* %769, align 1, !tbaa !1638\l  br label %776\l}"];
	Node0x1efc520 -> Node0x1efc5c0;
	Node0x1efc570 [shape=record,label="{%771:\l771:                                              \l  store i8 73, i8* %763, align 1, !tbaa !1638\l  %772 = trunc i32 %605 to i8\l  %773 = add i8 %772, -64\l  %774 = load i8*, i8** %3, align 8, !tbaa !1640\l  %775 = getelementptr inbounds i8, i8* %774, i64 1\l  store i8* %775, i8** %3, align 8, !tbaa !1640\l  store i8 %773, i8* %774, align 1, !tbaa !1638\l  br label %776\l}"];
	Node0x1efc570 -> Node0x1efc5c0;
	Node0x1efc5c0 [shape=record,label="{%776:\l776:                                              \l  %777 = load i8*, i8** %3, align 8, !tbaa !1640\l  %778 = getelementptr inbounds i8, i8* %777, i64 1\l  store i8* %778, i8** %3, align 8, !tbaa !1640\l  store i8 27, i8* %777, align 1, !tbaa !1638\l  %779 = load i8*, i8** %3, align 8, !tbaa !1640\l  %780 = getelementptr inbounds i8, i8* %779, i64 1\l  store i8* %780, i8** %3, align 8, !tbaa !1640\l  store i8 40, i8* %779, align 1, !tbaa !1638\l  %781 = load i8*, i8** %3, align 8, !tbaa !1640\l  %782 = getelementptr inbounds i8, i8* %781, i64 1\l  store i8* %782, i8** %3, align 8, !tbaa !1640\l  store i8 66, i8* %781, align 1, !tbaa !1638\l  %783 = load i64, i64* %4, align 8, !tbaa !1641\l  %784 = add i64 %783, -7\l  store i64 %784, i64* %4, align 8, !tbaa !1641\l  br label %902\l}"];
	Node0x1efc5c0 -> Node0x1efca20;
	Node0x1efc610 [shape=record,label="{%785:\l785:                                              \l  %786 = call fastcc i32 @uni_to_jis(i32 %605) #43\l  %787 = icmp eq i32 %786, 0\l  br i1 %787, label %639, label %788\l|{<s0>T|<s1>F}}"];
	Node0x1efc610:s0 -> Node0x1efba80;
	Node0x1efc610:s1 -> Node0x1efc660;
	Node0x1efc660 [shape=record,label="{%788:\l788:                                              \l  %789 = load i64, i64* %4, align 8, !tbaa !1641\l  %790 = icmp ult i64 %789, 8\l  br i1 %790, label %912, label %791\l|{<s0>T|<s1>F}}"];
	Node0x1efc660:s0 -> Node0x1efcac0;
	Node0x1efc660:s1 -> Node0x1efc6b0;
	Node0x1efc6b0 [shape=record,label="{%791:\l791:                                              \l  %792 = load i8*, i8** %3, align 8, !tbaa !1640\l  %793 = getelementptr inbounds i8, i8* %792, i64 1\l  store i8* %793, i8** %3, align 8, !tbaa !1640\l  store i8 27, i8* %792, align 1, !tbaa !1638\l  %794 = load i8*, i8** %3, align 8, !tbaa !1640\l  %795 = getelementptr inbounds i8, i8* %794, i64 1\l  store i8* %795, i8** %3, align 8, !tbaa !1640\l  store i8 36, i8* %794, align 1, !tbaa !1638\l  %796 = load i8*, i8** %3, align 8, !tbaa !1640\l  %797 = getelementptr inbounds i8, i8* %796, i64 1\l  store i8* %797, i8** %3, align 8, !tbaa !1640\l  store i8 66, i8* %796, align 1, !tbaa !1638\l  %798 = lshr i32 %786, 8\l  %799 = trunc i32 %798 to i8\l  %800 = load i8*, i8** %3, align 8, !tbaa !1640\l  %801 = getelementptr inbounds i8, i8* %800, i64 1\l  store i8* %801, i8** %3, align 8, !tbaa !1640\l  store i8 %799, i8* %800, align 1, !tbaa !1638\l  %802 = trunc i32 %786 to i8\l  %803 = load i8*, i8** %3, align 8, !tbaa !1640\l  %804 = getelementptr inbounds i8, i8* %803, i64 1\l  store i8* %804, i8** %3, align 8, !tbaa !1640\l  store i8 %802, i8* %803, align 1, !tbaa !1638\l  %805 = load i8*, i8** %3, align 8, !tbaa !1640\l  %806 = getelementptr inbounds i8, i8* %805, i64 1\l  store i8* %806, i8** %3, align 8, !tbaa !1640\l  store i8 27, i8* %805, align 1, !tbaa !1638\l  %807 = load i8*, i8** %3, align 8, !tbaa !1640\l  %808 = getelementptr inbounds i8, i8* %807, i64 1\l  store i8* %808, i8** %3, align 8, !tbaa !1640\l  store i8 40, i8* %807, align 1, !tbaa !1638\l  %809 = load i8*, i8** %3, align 8, !tbaa !1640\l  %810 = getelementptr inbounds i8, i8* %809, i64 1\l  store i8* %810, i8** %3, align 8, !tbaa !1640\l  store i8 66, i8* %809, align 1, !tbaa !1638\l  %811 = load i64, i64* %4, align 8, !tbaa !1641\l  %812 = add i64 %811, -8\l  store i64 %812, i64* %4, align 8, !tbaa !1641\l  br label %902\l}"];
	Node0x1efc6b0 -> Node0x1efca20;
	Node0x1efc700 [shape=record,label="{%813:\l813:                                              \l  br label %814\l}"];
	Node0x1efc700 -> Node0x1efc750;
	Node0x1efc750 [shape=record,label="{%814:\l814:                                              \l  %815 = phi i8 [ %63, %604 ], [ %63, %604 ], [ %63, %604 ], [ %63, %604 ], [\l... %63, %604 ], [ -60, %813 ]\l  %816 = icmp ult i32 %605, 65536\l  br i1 %816, label %821, label %817\l|{<s0>T|<s1>F}}"];
	Node0x1efc750:s0 -> Node0x1efc7f0;
	Node0x1efc750:s1 -> Node0x1efc7a0;
	Node0x1efc7a0 [shape=record,label="{%817:\l817:                                              \l  %818 = zext i8 %815 to i32\l  %819 = and i32 %818, 254\l  %820 = icmp eq i32 %819, 196\l  br i1 %820, label %821, label %841\l|{<s0>T|<s1>F}}"];
	Node0x1efc7a0:s0 -> Node0x1efc7f0;
	Node0x1efc7a0:s1 -> Node0x1efc890;
	Node0x1efc7f0 [shape=record,label="{%821:\l821:                                              \l  %822 = icmp ugt i32 %605, 65535\l  %823 = select i1 %822, i32 65533, i32 %605\l  %824 = load i64, i64* %4, align 8, !tbaa !1641\l  %825 = icmp ult i64 %824, 2\l  br i1 %825, label %912, label %826\l|{<s0>T|<s1>F}}"];
	Node0x1efc7f0:s0 -> Node0x1efcac0;
	Node0x1efc7f0:s1 -> Node0x1efc840;
	Node0x1efc840 [shape=record,label="{%826:\l826:                                              \l  %827 = load i8*, i8** %3, align 8, !tbaa !1640\l  %828 = and i8 %815, 1\l  %829 = lshr i32 %823, 8\l  %830 = trunc i32 %829 to i8\l  %831 = zext i8 %828 to i64\l  %832 = getelementptr inbounds i8, i8* %827, i64 %831\l  store i8 %830, i8* %832, align 1, !tbaa !1638\l  %833 = trunc i32 %823 to i8\l  %834 = xor i8 %828, 1\l  %835 = zext i8 %834 to i64\l  %836 = getelementptr inbounds i8, i8* %827, i64 %835\l  store i8 %833, i8* %836, align 1, !tbaa !1638\l  %837 = load i8*, i8** %3, align 8, !tbaa !1640\l  %838 = getelementptr inbounds i8, i8* %837, i64 2\l  store i8* %838, i8** %3, align 8, !tbaa !1640\l  %839 = load i64, i64* %4, align 8, !tbaa !1641\l  %840 = add i64 %839, -2\l  store i64 %840, i64* %4, align 8, !tbaa !1641\l  br label %902\l}"];
	Node0x1efc840 -> Node0x1efca20;
	Node0x1efc890 [shape=record,label="{%841:\l841:                                              \l  %842 = load i64, i64* %4, align 8, !tbaa !1641\l  %843 = icmp ult i64 %842, 4\l  br i1 %843, label %912, label %844\l|{<s0>T|<s1>F}}"];
	Node0x1efc890:s0 -> Node0x1efcac0;
	Node0x1efc890:s1 -> Node0x1efc8e0;
	Node0x1efc8e0 [shape=record,label="{%844:\l844:                                              \l  %845 = add i32 %605, -65536\l  %846 = load i8*, i8** %3, align 8, !tbaa !1640\l  %847 = lshr i32 %845, 10\l  %848 = and i32 %818, 1\l  %849 = lshr i32 %845, 18\l  %850 = trunc i32 %849 to i8\l  %851 = or i8 %850, -40\l  %852 = zext i32 %848 to i64\l  %853 = getelementptr inbounds i8, i8* %846, i64 %852\l  store i8 %851, i8* %853, align 1, !tbaa !1638\l  %854 = trunc i32 %847 to i8\l  %855 = xor i32 %848, 1\l  %856 = zext i32 %855 to i64\l  %857 = getelementptr inbounds i8, i8* %846, i64 %856\l  store i8 %854, i8* %857, align 1, !tbaa !1638\l  %858 = load i8*, i8** %3, align 8, !tbaa !1640\l  %859 = getelementptr inbounds i8, i8* %858, i64 2\l  %860 = lshr i32 %845, 8\l  %861 = trunc i32 %860 to i8\l  %862 = and i8 %861, 3\l  %863 = or i8 %862, -36\l  %864 = getelementptr inbounds i8, i8* %859, i64 %852\l  store i8 %863, i8* %864, align 1, !tbaa !1638\l  %865 = trunc i32 %845 to i8\l  %866 = getelementptr inbounds i8, i8* %859, i64 %856\l  store i8 %865, i8* %866, align 1, !tbaa !1638\l  %867 = load i8*, i8** %3, align 8, !tbaa !1640\l  %868 = getelementptr inbounds i8, i8* %867, i64 4\l  store i8* %868, i8** %3, align 8, !tbaa !1640\l  %869 = load i64, i64* %4, align 8, !tbaa !1641\l  %870 = add i64 %869, -4\l  store i64 %870, i64* %4, align 8, !tbaa !1641\l  br label %902\l}"];
	Node0x1efc8e0 -> Node0x1efca20;
	Node0x1efc930 [shape=record,label="{%871:\l871:                                              \l  br label %872\l}"];
	Node0x1efc930 -> Node0x1efc980;
	Node0x1efc980 [shape=record,label="{%872:\l872:                                              \l  %873 = phi i8 [ %63, %604 ], [ %63, %604 ], [ -64, %871 ]\l  %874 = load i64, i64* %4, align 8, !tbaa !1641\l  %875 = icmp ult i64 %874, 4\l  br i1 %875, label %912, label %876\l|{<s0>T|<s1>F}}"];
	Node0x1efc980:s0 -> Node0x1efcac0;
	Node0x1efc980:s1 -> Node0x1efc9d0;
	Node0x1efc9d0 [shape=record,label="{%876:\l876:                                              \l  %877 = load i8*, i8** %3, align 8, !tbaa !1640\l  %878 = and i8 %873, 3\l  %879 = zext i8 %878 to i32\l  %880 = lshr i32 %605, 24\l  %881 = trunc i32 %880 to i8\l  %882 = zext i8 %878 to i64\l  %883 = getelementptr inbounds i8, i8* %877, i64 %882\l  store i8 %881, i8* %883, align 1, !tbaa !1638\l  %884 = lshr i32 %605, 16\l  %885 = trunc i32 %884 to i8\l  %886 = xor i32 %879, 1\l  %887 = zext i32 %886 to i64\l  %888 = getelementptr inbounds i8, i8* %877, i64 %887\l  store i8 %885, i8* %888, align 1, !tbaa !1638\l  %889 = lshr i32 %605, 8\l  %890 = trunc i32 %889 to i8\l  %891 = xor i32 %879, 2\l  %892 = zext i32 %891 to i64\l  %893 = getelementptr inbounds i8, i8* %877, i64 %892\l  store i8 %890, i8* %893, align 1, !tbaa !1638\l  %894 = trunc i32 %605 to i8\l  %895 = xor i32 %879, 3\l  %896 = zext i32 %895 to i64\l  %897 = getelementptr inbounds i8, i8* %877, i64 %896\l  store i8 %894, i8* %897, align 1, !tbaa !1638\l  %898 = load i8*, i8** %3, align 8, !tbaa !1640\l  %899 = getelementptr inbounds i8, i8* %898, i64 4\l  store i8* %899, i8** %3, align 8, !tbaa !1640\l  %900 = load i64, i64* %4, align 8, !tbaa !1641\l  %901 = add i64 %900, -4\l  store i64 %901, i64* %4, align 8, !tbaa !1641\l  br label %902\l}"];
	Node0x1efc9d0 -> Node0x1efca20;
	Node0x1efca20 [shape=record,label="{%902:\l902:                                              \l  %903 = phi i64 [ %606, %660 ], [ %606, %876 ], [ %606, %826 ], [ %606, %844\l... ], [ %606, %776 ], [ %606, %791 ], [ %606, %737 ], [ %606, %716 ], [ %606,\l... %631 ], [ %606, %611 ], [ 3, %298 ], [ 3, %297 ], [ 3, %296 ], [ 3, %295 ], [\l... 3, %294 ], [ %203, %201 ], [ %175, %173 ], [ 2, %487 ]\l  %904 = phi i8 [ %655, %660 ], [ %64, %876 ], [ %64, %826 ], [ %64, %844 ], [\l... %64, %776 ], [ %64, %791 ], [ %64, %737 ], [ %64, %716 ], [ %64, %631 ], [\l... %64, %611 ], [ -46, %298 ], [ -46, %297 ], [ -46, %296 ], [ -46, %295 ], [\l... -46, %294 ], [ %204, %201 ], [ %176, %173 ], [ -32, %487 ]\l  %905 = phi i8 [ %63, %660 ], [ %873, %876 ], [ %815, %826 ], [ %815, %844 ],\l... [ -46, %776 ], [ -46, %791 ], [ -48, %737 ], [ -47, %716 ], [ -56, %631 ], [\l... -58, %611 ], [ %63, %298 ], [ %63, %297 ], [ %63, %296 ], [ %63, %295 ], [\l... %63, %294 ], [ %63, %201 ], [ %63, %173 ], [ %63, %487 ]\l  %906 = phi i64 [ %657, %660 ], [ %62, %876 ], [ %62, %826 ], [ %62, %844 ],\l... [ %62, %776 ], [ %62, %791 ], [ %62, %737 ], [ %62, %716 ], [ %62, %631 ], [\l... %62, %611 ], [ %62, %298 ], [ %62, %297 ], [ %62, %296 ], [ %62, %295 ], [\l... %62, %294 ], [ %62, %201 ], [ %62, %173 ], [ %490, %487 ]\l  %907 = load i8*, i8** %1, align 8, !tbaa !1640\l  %908 = getelementptr inbounds i8, i8* %907, i64 %903\l  store i8* %908, i8** %1, align 8, !tbaa !1640\l  %909 = sub i64 %65, %903\l  store i64 %909, i64* %2, align 8, !tbaa !1641\l  %910 = icmp eq i64 %909, 0\l  br i1 %910, label %911, label %60\l|{<s0>T|<s1>F}}"];
	Node0x1efca20:s0 -> Node0x1efca70;
	Node0x1efca20:s1 -> Node0x1ef9410;
	Node0x1efca70 [shape=record,label="{%911:\l911:                                              \l  store i64 %40, i64* %39, align 8, !tbaa !1640\l  br label %917\l}"];
	Node0x1efca70 -> Node0x1efcb60;
	Node0x1efcac0 [shape=record,label="{%912:\l912:                                              \l  %913 = phi i32 [ 7, %608 ], [ 7, %643 ], [ 7, %654 ], [ 7, %692 ], [ 7, %733\l... ], [ 7, %755 ], [ 7, %788 ], [ 7, %821 ], [ 7, %841 ], [ 7, %872 ], [ 84, %75\l... ], [ 84, %111 ], [ 84, %119 ], [ 84, %134 ], [ 84, %139 ], [ 84, %220 ], [\l... 84, %230 ], [ 84, %260 ], [ 84, %265 ], [ 84, %278 ], [ 84, %287 ], [ 84,\l... %309 ], [ 84, %325 ], [ 84, %335 ], [ 84, %339 ], [ 84, %363 ], [ 84, %369 ],\l... [ 84, %432 ], [ 84, %447 ], [ 84, %529 ], [ 84, %526 ], [ 84, %541 ], [ 84,\l... %592 ], [ 84, %509 ], [ 84, %498 ], [ 84, %318 ], [ 84, %271 ], [ 84, %242 ],\l... [ 84, %601 ], [ 84, %71 ], [ 84, %284 ], [ 84, %344 ], [ 84, %356 ]\l  br label %914\l}"];
	Node0x1efcac0 -> Node0x1efcb10;
	Node0x1efcb10 [shape=record,label="{%914:\l914:                                              \l  %915 = phi i32 [ 7, %626 ], [ 7, %497 ], [ %913, %912 ], [ 22, %71 ], [ 22,\l... %515 ], [ 22, %430 ], [ 22, %361 ], [ 22, %342 ], [ 22, %307 ], [ 22, %282 ],\l... [ 22, %253 ], [ 22, %212 ], [ 22, %180 ], [ 22, %158 ], [ 22, %137 ], [ 22,\l... %117 ], [ 22, %82 ], [ 22, %77 ]\l  %916 = call i32* @___errno_location() #42\l  store i32 %915, i32* %916, align 4, !tbaa !1643\l  store i64 %40, i64* %39, align 8, !tbaa !1640\l  br label %917\l}"];
	Node0x1efcb10 -> Node0x1efcb60;
	Node0x1efcb60 [shape=record,label="{%917:\l917:                                              \l  %918 = phi i64 [ -1, %914 ], [ %906, %911 ], [ 0, %45 ], [ 0, %42 ], [ 0,\l... %22 ]\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %34) #40\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #40\l  ret i64 %918\l}"];
}
