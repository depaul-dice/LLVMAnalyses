digraph "CFG for 'cpowl' function" {
	label="CFG for 'cpowl' function";

	Node0x1e7f6e0 [shape=record,label="{%2:\l  %3 = alloca \{ x86_fp80, x86_fp80 \}, align 16\l  %4 = alloca \{ x86_fp80, x86_fp80 \}, align 16\l  %5 = getelementptr inbounds \{ x86_fp80, x86_fp80 \}, \{ x86_fp80, x86_fp80 \}*\l... %1, i64 0, i32 0\l  %6 = load x86_fp80, x86_fp80* %5, align 16\l  %7 = getelementptr inbounds \{ x86_fp80, x86_fp80 \}, \{ x86_fp80, x86_fp80 \}*\l... %1, i64 0, i32 1\l  %8 = load x86_fp80, x86_fp80* %7, align 16\l  %9 = getelementptr inbounds \{ x86_fp80, x86_fp80 \}, \{ x86_fp80, x86_fp80 \}*\l... %0, i64 0, i32 0\l  %10 = load x86_fp80, x86_fp80* %9, align 16\l  %11 = getelementptr inbounds \{ x86_fp80, x86_fp80 \}, \{ x86_fp80, x86_fp80 \}*\l... %0, i64 0, i32 1\l  %12 = load x86_fp80, x86_fp80* %11, align 16\l  %13 = getelementptr inbounds \{ x86_fp80, x86_fp80 \}, \{ x86_fp80, x86_fp80 \}*\l... %3, i64 0, i32 0\l  %14 = getelementptr inbounds \{ x86_fp80, x86_fp80 \}, \{ x86_fp80, x86_fp80 \}*\l... %3, i64 0, i32 1\l  store x86_fp80 %10, x86_fp80* %13, align 16\l  store x86_fp80 %12, x86_fp80* %14, align 16\l  %15 = tail call \{ x86_fp80, x86_fp80 \} @clogl(\{ x86_fp80, x86_fp80 \}*\l... nonnull byval(\{ x86_fp80, x86_fp80 \}) align 16 %3) #40\l  %16 = extractvalue \{ x86_fp80, x86_fp80 \} %15, 0\l  %17 = extractvalue \{ x86_fp80, x86_fp80 \} %15, 1\l  %18 = tail call x86_fp80 @llvm.experimental.constrained.fmul.f80(x86_fp80\l... %6, x86_fp80 %16, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %19 = tail call x86_fp80 @llvm.experimental.constrained.fmul.f80(x86_fp80\l... %8, x86_fp80 %17, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %20 = tail call x86_fp80 @llvm.experimental.constrained.fmul.f80(x86_fp80\l... %6, x86_fp80 %17, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %21 = tail call x86_fp80 @llvm.experimental.constrained.fmul.f80(x86_fp80\l... %8, x86_fp80 %16, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %22 = tail call x86_fp80 @llvm.experimental.constrained.fsub.f80(x86_fp80\l... %18, x86_fp80 %19, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %23 = tail call x86_fp80 @llvm.experimental.constrained.fadd.f80(x86_fp80\l... %20, x86_fp80 %21, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %24 = tail call i1 @llvm.experimental.constrained.fcmp.f80(x86_fp80 %22,\l... x86_fp80 %22, metadata !uno, metadata !fpexcept.ignore) #41\l  br i1 %24, label %25, label %31, !prof !1632\l|{<s0>T|<s1>F}}"];
	Node0x1e7f6e0:s0 -> Node0x1e80210[label="W:1"];
	Node0x1e7f6e0:s1 -> Node0x1e802b0[label="W:1048575"];
	Node0x1e80210 [shape=record,label="{%25:\l25:                                               \l  %26 = tail call i1 @llvm.experimental.constrained.fcmp.f80(x86_fp80 %23,\l... x86_fp80 %23, metadata !uno, metadata !fpexcept.ignore) #41\l  br i1 %26, label %27, label %31, !prof !1632\l|{<s0>T|<s1>F}}"];
	Node0x1e80210:s0 -> Node0x1e80260[label="W:1"];
	Node0x1e80210:s1 -> Node0x1e802b0[label="W:1048575"];
	Node0x1e80260 [shape=record,label="{%27:\l27:                                               \l  %28 = tail call \{ x86_fp80, x86_fp80 \} @__mulxc3(x86_fp80 %6, x86_fp80 %8,\l... x86_fp80 %16, x86_fp80 %17) #42\l  %29 = extractvalue \{ x86_fp80, x86_fp80 \} %28, 0\l  %30 = extractvalue \{ x86_fp80, x86_fp80 \} %28, 1\l  br label %31\l}"];
	Node0x1e80260 -> Node0x1e802b0;
	Node0x1e802b0 [shape=record,label="{%31:\l31:                                               \l  %32 = phi x86_fp80 [ %22, %2 ], [ %22, %25 ], [ %29, %27 ]\l  %33 = phi x86_fp80 [ %23, %2 ], [ %23, %25 ], [ %30, %27 ]\l  %34 = getelementptr inbounds \{ x86_fp80, x86_fp80 \}, \{ x86_fp80, x86_fp80 \}*\l... %4, i64 0, i32 0\l  %35 = getelementptr inbounds \{ x86_fp80, x86_fp80 \}, \{ x86_fp80, x86_fp80 \}*\l... %4, i64 0, i32 1\l  store x86_fp80 %32, x86_fp80* %34, align 16\l  store x86_fp80 %33, x86_fp80* %35, align 16\l  %36 = tail call \{ x86_fp80, x86_fp80 \} @cexpl(\{ x86_fp80, x86_fp80 \}*\l... nonnull byval(\{ x86_fp80, x86_fp80 \}) align 16 %4) #40\l  ret \{ x86_fp80, x86_fp80 \} %36\l}"];
}
