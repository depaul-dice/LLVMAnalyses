digraph "CFG for 'atanh' function" {
	label="CFG for 'atanh' function";

	Node0x1f87770 [shape=record,label="{%1:\l  %2 = alloca float, align 4\l  %3 = bitcast double %0 to i64\l  %4 = lshr i64 %3, 52\l  %5 = trunc i64 %4 to i32\l  %6 = and i32 %5, 2047\l  %7 = and i64 %3, 9223372036854775807\l  %8 = bitcast i64 %7 to double\l  %9 = icmp ult i32 %6, 1022\l  br i1 %9, label %10, label %29\l|{<s0>T|<s1>F}}"];
	Node0x1f87770:s0 -> Node0x1f877c0;
	Node0x1f87770:s1 -> Node0x1f87900;
	Node0x1f877c0 [shape=record,label="{%10:\l10:                                               \l  %11 = icmp ult i32 %6, 991\l  br i1 %11, label %12, label %17\l|{<s0>T|<s1>F}}"];
	Node0x1f877c0:s0 -> Node0x1f87810;
	Node0x1f877c0:s1 -> Node0x1f878b0;
	Node0x1f87810 [shape=record,label="{%12:\l12:                                               \l  %13 = icmp eq i32 %6, 0\l  br i1 %13, label %14, label %37\l|{<s0>T|<s1>F}}"];
	Node0x1f87810:s0 -> Node0x1f87860;
	Node0x1f87810:s1 -> Node0x1f87950;
	Node0x1f87860 [shape=record,label="{%14:\l14:                                               \l  %15 = tail call float @llvm.experimental.constrained.fptrunc.f32.f64(double\l... %8, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %16 = bitcast float* %2 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16)\l  store volatile float %15, float* %2, align 4, !tbaa !1632\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16)\l  br label %37\l}"];
	Node0x1f87860 -> Node0x1f87950;
	Node0x1f878b0 [shape=record,label="{%17:\l17:                                               \l  %18 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 2,\l... metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %19 = tail call double @llvm.experimental.constrained.fmul.f64(double %18,\l... double %8, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %20 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 2,\l... metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %21 = tail call double @llvm.experimental.constrained.fmul.f64(double %20,\l... double %8, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %22 = tail call double @llvm.experimental.constrained.fmul.f64(double %21,\l... double %8, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %23 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 1,\l... metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %24 = tail call double @llvm.experimental.constrained.fsub.f64(double %23,\l... double %8, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %25 = tail call double @llvm.experimental.constrained.fdiv.f64(double %22,\l... double %24, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %26 = tail call double @llvm.experimental.constrained.fadd.f64(double %19,\l... double %25, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %27 = tail call double @log1p(double %26) #41\l  %28 = tail call double @llvm.experimental.constrained.fmul.f64(double\l... 5.000000e-01, double %27, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  br label %37\l}"];
	Node0x1f878b0 -> Node0x1f87950;
	Node0x1f87900 [shape=record,label="{%29:\l29:                                               \l  %30 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 2,\l... metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %31 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 1,\l... metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %32 = tail call double @llvm.experimental.constrained.fsub.f64(double %31,\l... double %8, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %33 = tail call double @llvm.experimental.constrained.fdiv.f64(double %8,\l... double %32, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %34 = tail call double @llvm.experimental.constrained.fmul.f64(double %30,\l... double %33, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %35 = tail call double @log1p(double %34) #41\l  %36 = tail call double @llvm.experimental.constrained.fmul.f64(double\l... 5.000000e-01, double %35, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  br label %37\l}"];
	Node0x1f87900 -> Node0x1f87950;
	Node0x1f87950 [shape=record,label="{%37:\l37:                                               \l  %38 = phi double [ %8, %14 ], [ %8, %12 ], [ %28, %17 ], [ %36, %29 ]\l  %39 = icmp slt i64 %3, 0\l  %40 = fneg double %38\l  %41 = select i1 %39, double %40, double %38\l  ret double %41\l}"];
}
