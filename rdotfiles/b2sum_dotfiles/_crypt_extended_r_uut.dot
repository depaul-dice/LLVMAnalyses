digraph "CFG for '_crypt_extended_r_uut' function" {
	label="CFG for '_crypt_extended_r_uut' function";

	Node0x1a27c70 [shape=record,label="{%3:\l  %4 = alloca i32, align 4\l  %5 = alloca i32, align 4\l  %6 = alloca %struct.expanded_key, align 4\l  %7 = alloca [8 x i8], align 1\l  %8 = alloca i32, align 4\l  %9 = alloca i32, align 4\l  %10 = bitcast %struct.expanded_key* %6 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 128, i8* nonnull %10) #40\l  %11 = getelementptr inbounds [8 x i8], [8 x i8]* %7, i64 0, i64 0\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #40\l  %12 = bitcast i32* %8 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #40\l  %13 = bitcast i32* %9 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #40\l  %14 = getelementptr inbounds [8 x i8], [8 x i8]* %7, i64 0, i64 7\l  br label %15\l}"];
	Node0x1a27c70 -> Node0x1a27df0;
	Node0x1a27df0 [shape=record,label="{%15:\l15:                                               \l  %16 = phi i8* [ %0, %3 ], [ %24, %15 ]\l  %17 = phi i8* [ %11, %3 ], [ %20, %15 ]\l  %18 = load i8, i8* %16, align 1, !tbaa !1632\l  %19 = shl i8 %18, 1\l  %20 = getelementptr inbounds i8, i8* %17, i64 1\l  store i8 %19, i8* %17, align 1, !tbaa !1632\l  %21 = load i8, i8* %16, align 1, !tbaa !1632\l  %22 = icmp eq i8 %21, 0\l  %23 = getelementptr inbounds i8, i8* %16, i64 1\l  %24 = select i1 %22, i8* %16, i8* %23\l  %25 = icmp ugt i8* %20, %14\l  br i1 %25, label %26, label %15\l|{<s0>T|<s1>F}}"];
	Node0x1a27df0:s0 -> Node0x1a27e40;
	Node0x1a27df0:s1 -> Node0x1a27df0;
	Node0x1a27e40 [shape=record,label="{%26:\l26:                                               \l  call void @__des_setkey(i8* nonnull %11, %struct.expanded_key* nonnull %6)\l... #41\l  %27 = load i8, i8* %1, align 1, !tbaa !1632\l  switch i8 %27, label %161 [\l    i8 95, label %28\l    i8 0, label %277\l    i8 10, label %277\l    i8 58, label %277\l  ]\l|{<s0>def|<s1>95|<s2>0|<s3>10|<s4>58}}"];
	Node0x1a27e40:s0 -> Node0x1a28250;
	Node0x1a27e40:s1 -> Node0x1a27e90;
	Node0x1a27e40:s2 -> Node0x1a283e0;
	Node0x1a27e40:s3 -> Node0x1a283e0;
	Node0x1a27e40:s4 -> Node0x1a283e0;
	Node0x1a27e90 [shape=record,label="{%28:\l28:                                               \l  %29 = phi i64 [ %53, %47 ], [ 1, %26 ]\l  %30 = phi i32 [ %52, %47 ], [ 0, %26 ]\l  %31 = getelementptr inbounds i8, i8* %1, i64 %29\l  %32 = load i8, i8* %31, align 1, !tbaa !1632\l  %33 = zext i8 %32 to i32\l  %34 = icmp sgt i8 %32, -1\l  %35 = or i32 %33, -256\l  %36 = select i1 %34, i32 %33, i32 %35\l  %37 = icmp sgt i32 %36, 64\l  %38 = icmp sgt i32 %36, 96\l  %39 = select i1 %38, i32 5, i32 11\l  %40 = select i1 %37, i32 %39, i32 18\l  %41 = add nsw i32 %40, %36\l  %42 = and i32 %41, 63\l  %43 = zext i32 %42 to i64\l  %44 = getelementptr inbounds [65 x i8], [65 x i8]* @ascii64, i64 0, i64 %43\l  %45 = load i8, i8* %44, align 1, !tbaa !1632\l  %46 = icmp eq i8 %45, %32\l  br i1 %46, label %47, label %277\l|{<s0>T|<s1>F}}"];
	Node0x1a27e90:s0 -> Node0x1a27ee0;
	Node0x1a27e90:s1 -> Node0x1a283e0;
	Node0x1a27ee0 [shape=record,label="{%47:\l47:                                               \l  %48 = trunc i64 %29 to i32\l  %49 = mul i32 %48, 6\l  %50 = add i32 %49, -6\l  %51 = shl nuw nsw i32 %42, %50\l  %52 = or i32 %51, %30\l  %53 = add nuw nsw i64 %29, 1\l  %54 = icmp eq i64 %53, 5\l  br i1 %54, label %55, label %28\l|{<s0>T|<s1>F}}"];
	Node0x1a27ee0:s0 -> Node0x1a27f30;
	Node0x1a27ee0:s1 -> Node0x1a27e90;
	Node0x1a27f30 [shape=record,label="{%55:\l55:                                               \l  %56 = icmp eq i32 %52, 0\l  br i1 %56, label %277, label %69\l|{<s0>T|<s1>F}}"];
	Node0x1a27f30:s0 -> Node0x1a283e0;
	Node0x1a27f30:s1 -> Node0x1a28020;
	Node0x1a27f80 [shape=record,label="{%57:\l57:                                               \l  %58 = load i8, i8* %24, align 1, !tbaa !1632\l  %59 = icmp eq i8 %58, 0\l  br i1 %59, label %158, label %60\l|{<s0>T|<s1>F}}"];
	Node0x1a27f80:s0 -> Node0x1a28200;
	Node0x1a27f80:s1 -> Node0x1a27fd0;
	Node0x1a27fd0 [shape=record,label="{%60:\l60:                                               \l  %61 = bitcast i32* %4 to i8*\l  %62 = bitcast i32* %5 to i8*\l  %63 = getelementptr inbounds [8 x i8], [8 x i8]* %7, i64 0, i64 3\l  %64 = getelementptr inbounds [8 x i8], [8 x i8]* %7, i64 0, i64 2\l  %65 = getelementptr inbounds [8 x i8], [8 x i8]* %7, i64 0, i64 1\l  %66 = getelementptr inbounds [8 x i8], [8 x i8]* %7, i64 0, i64 6\l  %67 = getelementptr inbounds [8 x i8], [8 x i8]* %7, i64 0, i64 5\l  %68 = getelementptr inbounds [8 x i8], [8 x i8]* %7, i64 0, i64 4\l  br label %96\l}"];
	Node0x1a27fd0 -> Node0x1a280c0;
	Node0x1a28020 [shape=record,label="{%69:\l69:                                               \l  %70 = phi i64 [ %94, %88 ], [ 5, %55 ]\l  %71 = phi i32 [ %93, %88 ], [ 0, %55 ]\l  %72 = getelementptr inbounds i8, i8* %1, i64 %70\l  %73 = load i8, i8* %72, align 1, !tbaa !1632\l  %74 = zext i8 %73 to i32\l  %75 = icmp sgt i8 %73, -1\l  %76 = or i32 %74, -256\l  %77 = select i1 %75, i32 %74, i32 %76\l  %78 = icmp sgt i32 %77, 64\l  %79 = icmp sgt i32 %77, 96\l  %80 = select i1 %79, i32 5, i32 11\l  %81 = select i1 %78, i32 %80, i32 18\l  %82 = add nsw i32 %81, %77\l  %83 = and i32 %82, 63\l  %84 = zext i32 %83 to i64\l  %85 = getelementptr inbounds [65 x i8], [65 x i8]* @ascii64, i64 0, i64 %84\l  %86 = load i8, i8* %85, align 1, !tbaa !1632\l  %87 = icmp eq i8 %86, %73\l  br i1 %87, label %88, label %277\l|{<s0>T|<s1>F}}"];
	Node0x1a28020:s0 -> Node0x1a28070;
	Node0x1a28020:s1 -> Node0x1a283e0;
	Node0x1a28070 [shape=record,label="{%88:\l88:                                               \l  %89 = trunc i64 %70 to i32\l  %90 = mul i32 %89, 6\l  %91 = add i32 %90, -30\l  %92 = shl nuw nsw i32 %83, %91\l  %93 = or i32 %92, %71\l  %94 = add nuw nsw i64 %70, 1\l  %95 = icmp eq i64 %94, 9\l  br i1 %95, label %57, label %69\l|{<s0>T|<s1>F}}"];
	Node0x1a28070:s0 -> Node0x1a27f80;
	Node0x1a28070:s1 -> Node0x1a28020;
	Node0x1a280c0 [shape=record,label="{%96:\l96:                                               \l  %97 = phi i8* [ %24, %60 ], [ %155, %154 ]\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %61) #40\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %62) #40\l  %98 = load i8, i8* %63, align 1, !tbaa !1632\l  %99 = zext i8 %98 to i32\l  %100 = load i8, i8* %64, align 1, !tbaa !1632\l  %101 = zext i8 %100 to i32\l  %102 = shl nuw nsw i32 %101, 8\l  %103 = or i32 %102, %99\l  %104 = load i8, i8* %65, align 1, !tbaa !1632\l  %105 = zext i8 %104 to i32\l  %106 = shl nuw nsw i32 %105, 16\l  %107 = or i32 %103, %106\l  %108 = load i8, i8* %11, align 1, !tbaa !1632\l  %109 = zext i8 %108 to i32\l  %110 = shl nuw i32 %109, 24\l  %111 = or i32 %107, %110\l  %112 = load i8, i8* %14, align 1, !tbaa !1632\l  %113 = zext i8 %112 to i32\l  %114 = load i8, i8* %66, align 1, !tbaa !1632\l  %115 = zext i8 %114 to i32\l  %116 = shl nuw nsw i32 %115, 8\l  %117 = or i32 %116, %113\l  %118 = load i8, i8* %67, align 1, !tbaa !1632\l  %119 = zext i8 %118 to i32\l  %120 = shl nuw nsw i32 %119, 16\l  %121 = or i32 %117, %120\l  %122 = load i8, i8* %68, align 1, !tbaa !1632\l  %123 = zext i8 %122 to i32\l  %124 = shl nuw i32 %123, 24\l  %125 = or i32 %121, %124\l  call void @__do_des(i32 %111, i32 %125, i32* nonnull %4, i32* nonnull %5,\l... i32 1, i32 0, %struct.expanded_key* nonnull %6) #42\l  %126 = load i32, i32* %4, align 4, !tbaa !1635\l  %127 = lshr i32 %126, 24\l  %128 = trunc i32 %127 to i8\l  store i8 %128, i8* %11, align 1, !tbaa !1632\l  %129 = lshr i32 %126, 16\l  %130 = trunc i32 %129 to i8\l  store i8 %130, i8* %65, align 1, !tbaa !1632\l  %131 = lshr i32 %126, 8\l  %132 = trunc i32 %131 to i8\l  store i8 %132, i8* %64, align 1, !tbaa !1632\l  %133 = trunc i32 %126 to i8\l  store i8 %133, i8* %63, align 1, !tbaa !1632\l  %134 = load i32, i32* %5, align 4, !tbaa !1635\l  %135 = lshr i32 %134, 24\l  %136 = trunc i32 %135 to i8\l  store i8 %136, i8* %68, align 1, !tbaa !1632\l  %137 = lshr i32 %134, 16\l  %138 = trunc i32 %137 to i8\l  store i8 %138, i8* %67, align 1, !tbaa !1632\l  %139 = lshr i32 %134, 8\l  %140 = trunc i32 %139 to i8\l  store i8 %140, i8* %66, align 1, !tbaa !1632\l  %141 = trunc i32 %134 to i8\l  store i8 %141, i8* %14, align 1, !tbaa !1632\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %62) #40\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %61) #40\l  br label %142\l}"];
	Node0x1a280c0 -> Node0x1a28110;
	Node0x1a28110 [shape=record,label="{%142:\l142:                                              \l  %143 = phi i8* [ %97, %96 ], [ %148, %147 ]\l  %144 = phi i8* [ %11, %96 ], [ %150, %147 ]\l  %145 = load i8, i8* %143, align 1, !tbaa !1632\l  %146 = icmp eq i8 %145, 0\l  br i1 %146, label %154, label %147\l|{<s0>T|<s1>F}}"];
	Node0x1a28110:s0 -> Node0x1a281b0;
	Node0x1a28110:s1 -> Node0x1a28160;
	Node0x1a28160 [shape=record,label="{%147:\l147:                                              \l  %148 = getelementptr inbounds i8, i8* %143, i64 1\l  %149 = shl i8 %145, 1\l  %150 = getelementptr inbounds i8, i8* %144, i64 1\l  %151 = load i8, i8* %144, align 1, !tbaa !1632\l  %152 = xor i8 %151, %149\l  store i8 %152, i8* %144, align 1, !tbaa !1632\l  %153 = icmp ugt i8* %150, %14\l  br i1 %153, label %154, label %142\l|{<s0>T|<s1>F}}"];
	Node0x1a28160:s0 -> Node0x1a281b0;
	Node0x1a28160:s1 -> Node0x1a28110;
	Node0x1a281b0 [shape=record,label="{%154:\l154:                                              \l  %155 = phi i8* [ %143, %142 ], [ %148, %147 ]\l  call void @__des_setkey(i8* nonnull %11, %struct.expanded_key* nonnull %6)\l... #41\l  %156 = load i8, i8* %155, align 1, !tbaa !1632\l  %157 = icmp eq i8 %156, 0\l  br i1 %157, label %158, label %96\l|{<s0>T|<s1>F}}"];
	Node0x1a281b0:s0 -> Node0x1a28200;
	Node0x1a281b0:s1 -> Node0x1a280c0;
	Node0x1a28200 [shape=record,label="{%158:\l158:                                              \l  %159 = call i8* @memcpy(i8* %2, i8* nonnull %1, i64 9) #42\l  %160 = getelementptr inbounds i8, i8* %2, i64 9\l  store i8 0, i8* %160, align 1, !tbaa !1632\l  br label %190\l}"];
	Node0x1a28200 -> Node0x1a282f0;
	Node0x1a28250 [shape=record,label="{%161:\l161:                                              \l  %162 = getelementptr inbounds i8, i8* %1, i64 1\l  %163 = load i8, i8* %162, align 1, !tbaa !1632\l  switch i8 %163, label %164 [\l    i8 0, label %277\l    i8 10, label %277\l    i8 58, label %277\l  ]\l|{<s0>def|<s1>0|<s2>10|<s3>58}}"];
	Node0x1a28250:s0 -> Node0x1a282a0;
	Node0x1a28250:s1 -> Node0x1a283e0;
	Node0x1a28250:s2 -> Node0x1a283e0;
	Node0x1a28250:s3 -> Node0x1a283e0;
	Node0x1a282a0 [shape=record,label="{%164:\l164:                                              \l  %165 = zext i8 %163 to i32\l  %166 = icmp sgt i8 %163, -1\l  %167 = or i32 %165, -256\l  %168 = select i1 %166, i32 %165, i32 %167\l  %169 = icmp sgt i32 %168, 64\l  %170 = icmp sgt i32 %168, 96\l  %171 = select i1 %170, i32 5, i32 11\l  %172 = select i1 %169, i32 %171, i32 18\l  %173 = add nsw i32 %172, %168\l  %174 = shl nsw i32 %173, 6\l  %175 = and i32 %174, 4032\l  %176 = zext i8 %27 to i32\l  %177 = icmp sgt i8 %27, -1\l  %178 = or i32 %176, -256\l  %179 = select i1 %177, i32 %176, i32 %178\l  %180 = icmp sgt i32 %179, 64\l  %181 = icmp sgt i32 %179, 96\l  %182 = select i1 %181, i32 5, i32 11\l  %183 = select i1 %180, i32 %182, i32 18\l  %184 = add nsw i32 %183, %179\l  %185 = and i32 %184, 63\l  %186 = or i32 %175, %185\l  store i8 %27, i8* %2, align 1, !tbaa !1632\l  %187 = load i8, i8* %162, align 1, !tbaa !1632\l  %188 = getelementptr inbounds i8, i8* %2, i64 1\l  store i8 %187, i8* %188, align 1, !tbaa !1632\l  %189 = getelementptr inbounds i8, i8* %2, i64 2\l  br label %190\l}"];
	Node0x1a282a0 -> Node0x1a282f0;
	Node0x1a282f0 [shape=record,label="{%190:\l190:                                              \l  %191 = phi i32 [ %52, %158 ], [ 25, %164 ]\l  %192 = phi i32 [ %93, %158 ], [ %186, %164 ]\l  %193 = phi i8* [ %160, %158 ], [ %189, %164 ]\l  br label %194\l}"];
	Node0x1a282f0 -> Node0x1a28340;
	Node0x1a28340 [shape=record,label="{%194:\l194:                                              \l  %195 = phi i32 [ 0, %190 ], [ %205, %194 ]\l  %196 = phi i32 [ 0, %190 ], [ %202, %194 ]\l  %197 = phi i32 [ 1, %190 ], [ %203, %194 ]\l  %198 = phi i32 [ 8388608, %190 ], [ %204, %194 ]\l  %199 = and i32 %197, %192\l  %200 = icmp eq i32 %199, 0\l  %201 = select i1 %200, i32 0, i32 %198\l  %202 = or i32 %201, %196\l  %203 = shl i32 %197, 1\l  %204 = lshr i32 %198, 1\l  %205 = add nuw nsw i32 %195, 1\l  %206 = icmp eq i32 %205, 24\l  br i1 %206, label %207, label %194\l|{<s0>T|<s1>F}}"];
	Node0x1a28340:s0 -> Node0x1a28390;
	Node0x1a28340:s1 -> Node0x1a28340;
	Node0x1a28390 [shape=record,label="{%207:\l207:                                              \l  call void @__do_des(i32 0, i32 0, i32* nonnull %8, i32* nonnull %9, i32\l... %191, i32 %202, %struct.expanded_key* nonnull %6) #41\l  %208 = load i32, i32* %8, align 4, !tbaa !1635\l  %209 = lshr i32 %208, 8\l  %210 = lshr i32 %208, 26\l  %211 = zext i32 %210 to i64\l  %212 = getelementptr inbounds [65 x i8], [65 x i8]* @ascii64, i64 0, i64 %211\l  %213 = load i8, i8* %212, align 1, !tbaa !1632\l  %214 = getelementptr inbounds i8, i8* %193, i64 1\l  store i8 %213, i8* %193, align 1, !tbaa !1632\l  %215 = lshr i32 %208, 20\l  %216 = and i32 %215, 63\l  %217 = zext i32 %216 to i64\l  %218 = getelementptr inbounds [65 x i8], [65 x i8]* @ascii64, i64 0, i64 %217\l  %219 = load i8, i8* %218, align 1, !tbaa !1632\l  %220 = getelementptr inbounds i8, i8* %193, i64 2\l  store i8 %219, i8* %214, align 1, !tbaa !1632\l  %221 = lshr i32 %208, 14\l  %222 = and i32 %221, 63\l  %223 = zext i32 %222 to i64\l  %224 = getelementptr inbounds [65 x i8], [65 x i8]* @ascii64, i64 0, i64 %223\l  %225 = load i8, i8* %224, align 1, !tbaa !1632\l  %226 = getelementptr inbounds i8, i8* %193, i64 3\l  store i8 %225, i8* %220, align 1, !tbaa !1632\l  %227 = and i32 %209, 63\l  %228 = zext i32 %227 to i64\l  %229 = getelementptr inbounds [65 x i8], [65 x i8]* @ascii64, i64 0, i64 %228\l  %230 = load i8, i8* %229, align 1, !tbaa !1632\l  %231 = getelementptr inbounds i8, i8* %193, i64 4\l  store i8 %230, i8* %226, align 1, !tbaa !1632\l  %232 = shl i32 %208, 16\l  %233 = load i32, i32* %9, align 4, !tbaa !1635\l  %234 = lshr i32 %233, 16\l  %235 = or i32 %234, %232\l  %236 = lshr i32 %208, 2\l  %237 = and i32 %236, 63\l  %238 = zext i32 %237 to i64\l  %239 = getelementptr inbounds [65 x i8], [65 x i8]* @ascii64, i64 0, i64 %238\l  %240 = load i8, i8* %239, align 1, !tbaa !1632\l  %241 = getelementptr inbounds i8, i8* %193, i64 5\l  store i8 %240, i8* %231, align 1, !tbaa !1632\l  %242 = lshr i32 %235, 12\l  %243 = and i32 %242, 63\l  %244 = zext i32 %243 to i64\l  %245 = getelementptr inbounds [65 x i8], [65 x i8]* @ascii64, i64 0, i64 %244\l  %246 = load i8, i8* %245, align 1, !tbaa !1632\l  %247 = getelementptr inbounds i8, i8* %193, i64 6\l  store i8 %246, i8* %241, align 1, !tbaa !1632\l  %248 = lshr i32 %233, 22\l  %249 = and i32 %248, 63\l  %250 = zext i32 %249 to i64\l  %251 = getelementptr inbounds [65 x i8], [65 x i8]* @ascii64, i64 0, i64 %250\l  %252 = load i8, i8* %251, align 1, !tbaa !1632\l  %253 = getelementptr inbounds i8, i8* %193, i64 7\l  store i8 %252, i8* %247, align 1, !tbaa !1632\l  %254 = and i32 %234, 63\l  %255 = zext i32 %254 to i64\l  %256 = getelementptr inbounds [65 x i8], [65 x i8]* @ascii64, i64 0, i64 %255\l  %257 = load i8, i8* %256, align 1, !tbaa !1632\l  %258 = getelementptr inbounds i8, i8* %193, i64 8\l  store i8 %257, i8* %253, align 1, !tbaa !1632\l  %259 = shl i32 %233, 2\l  %260 = lshr i32 %233, 10\l  %261 = and i32 %260, 63\l  %262 = zext i32 %261 to i64\l  %263 = getelementptr inbounds [65 x i8], [65 x i8]* @ascii64, i64 0, i64 %262\l  %264 = load i8, i8* %263, align 1, !tbaa !1632\l  %265 = getelementptr inbounds i8, i8* %193, i64 9\l  store i8 %264, i8* %258, align 1, !tbaa !1632\l  %266 = lshr i32 %233, 4\l  %267 = and i32 %266, 63\l  %268 = zext i32 %267 to i64\l  %269 = getelementptr inbounds [65 x i8], [65 x i8]* @ascii64, i64 0, i64 %268\l  %270 = load i8, i8* %269, align 1, !tbaa !1632\l  %271 = getelementptr inbounds i8, i8* %193, i64 10\l  store i8 %270, i8* %265, align 1, !tbaa !1632\l  %272 = and i32 %259, 60\l  %273 = zext i32 %272 to i64\l  %274 = getelementptr inbounds [65 x i8], [65 x i8]* @ascii64, i64 0, i64 %273\l  %275 = load i8, i8* %274, align 4, !tbaa !1632\l  %276 = getelementptr inbounds i8, i8* %193, i64 11\l  store i8 %275, i8* %271, align 1, !tbaa !1632\l  store i8 0, i8* %276, align 1, !tbaa !1632\l  br label %277\l}"];
	Node0x1a28390 -> Node0x1a283e0;
	Node0x1a283e0 [shape=record,label="{%277:\l277:                                              \l  %278 = phi i8* [ %2, %207 ], [ null, %55 ], [ null, %161 ], [ null, %161 ],\l... [ null, %26 ], [ null, %26 ], [ null, %26 ], [ null, %161 ], [ null, %69 ], [\l... null, %28 ]\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #40\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #40\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #40\l  call void @llvm.lifetime.end.p0i8(i64 128, i8* nonnull %10) #40\l  ret i8* %278\l}"];
}
