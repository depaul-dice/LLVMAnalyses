digraph "CFG for 'memccpy' function" {
	label="CFG for 'memccpy' function";

	Node0x1ccb2a0 [shape=record,label="{%4:\l  %5 = and i32 %2, 255\l  %6 = ptrtoint i8* %1 to i64\l  %7 = ptrtoint i8* %0 to i64\l  %8 = xor i64 %6, %7\l  %9 = and i64 %8, 7\l  %10 = icmp eq i64 %9, 0\l  br i1 %10, label %11, label %68\l|{<s0>T|<s1>F}}"];
	Node0x1ccb2a0:s0 -> Node0x1ccb2f0;
	Node0x1ccb2a0:s1 -> Node0x1ccbaa0;
	Node0x1ccb2f0 [shape=record,label="{%11:\l11:                                               \l  %12 = and i64 %6, 7\l  %13 = icmp ne i64 %12, 0\l  %14 = icmp ne i64 %3, 0\l  %15 = and i1 %14, %13\l  br i1 %15, label %16, label %33\l|{<s0>T|<s1>F}}"];
	Node0x1ccb2f0:s0 -> Node0x1ccb7d0;
	Node0x1ccb2f0:s1 -> Node0x1ccb8c0;
	Node0x1ccb7d0 [shape=record,label="{%16:\l16:                                               \l  %17 = trunc i32 %2 to i8\l  br label %18\l}"];
	Node0x1ccb7d0 -> Node0x1ccb820;
	Node0x1ccb820 [shape=record,label="{%18:\l18:                                               \l  %19 = phi i8* [ %1, %16 ], [ %26, %24 ]\l  %20 = phi i8* [ %0, %16 ], [ %27, %24 ]\l  %21 = phi i64 [ %3, %16 ], [ %25, %24 ]\l  %22 = load i8, i8* %19, align 1, !tbaa !1632\l  store i8 %22, i8* %20, align 1, !tbaa !1632\l  %23 = icmp eq i8 %22, %17\l  br i1 %23, label %88, label %24\l|{<s0>T|<s1>F}}"];
	Node0x1ccb820:s0 -> Node0x1ccbc30;
	Node0x1ccb820:s1 -> Node0x1ccb870;
	Node0x1ccb870 [shape=record,label="{%24:\l24:                                               \l  %25 = add i64 %21, -1\l  %26 = getelementptr inbounds i8, i8* %19, i64 1\l  %27 = getelementptr inbounds i8, i8* %20, i64 1\l  %28 = ptrtoint i8* %26 to i64\l  %29 = and i64 %28, 7\l  %30 = icmp ne i64 %29, 0\l  %31 = icmp ne i64 %25, 0\l  %32 = and i1 %31, %30\l  br i1 %32, label %18, label %33\l|{<s0>T|<s1>F}}"];
	Node0x1ccb870:s0 -> Node0x1ccb820;
	Node0x1ccb870:s1 -> Node0x1ccb8c0;
	Node0x1ccb8c0 [shape=record,label="{%33:\l33:                                               \l  %34 = phi i64 [ %3, %11 ], [ %25, %24 ]\l  %35 = phi i8* [ %0, %11 ], [ %27, %24 ]\l  %36 = phi i8* [ %1, %11 ], [ %26, %24 ]\l  %37 = phi i1 [ %13, %11 ], [ %30, %24 ]\l  br i1 %37, label %86, label %38\l|{<s0>T|<s1>F}}"];
	Node0x1ccb8c0:s0 -> Node0x1ccbbe0;
	Node0x1ccb8c0:s1 -> Node0x1ccb910;
	Node0x1ccb910 [shape=record,label="{%38:\l38:                                               \l  %39 = zext i32 %5 to i64\l  %40 = mul nuw i64 %39, 72340172838076673\l  %41 = bitcast i8* %35 to i64*\l  %42 = bitcast i8* %36 to i64*\l  %43 = icmp ugt i64 %34, 7\l  br i1 %43, label %44, label %62\l|{<s0>T|<s1>F}}"];
	Node0x1ccb910:s0 -> Node0x1ccb960;
	Node0x1ccb910:s1 -> Node0x1ccba50;
	Node0x1ccb960 [shape=record,label="{%44:\l44:                                               \l  %45 = and i64 %34, 7\l  br label %46\l}"];
	Node0x1ccb960 -> Node0x1ccb9b0;
	Node0x1ccb9b0 [shape=record,label="{%46:\l46:                                               \l  %47 = phi i64* [ %59, %57 ], [ %42, %44 ]\l  %48 = phi i64* [ %60, %57 ], [ %41, %44 ]\l  %49 = phi i64 [ %58, %57 ], [ %34, %44 ]\l  %50 = load i64, i64* %47, align 8, !tbaa !1632\l  %51 = xor i64 %50, %40\l  %52 = add i64 %51, -72340172838076673\l  %53 = and i64 %51, -9187201950435737472\l  %54 = xor i64 %53, -9187201950435737472\l  %55 = and i64 %54, %52\l  %56 = icmp eq i64 %55, 0\l  br i1 %56, label %57, label %62\l|{<s0>T|<s1>F}}"];
	Node0x1ccb9b0:s0 -> Node0x1ccba00;
	Node0x1ccb9b0:s1 -> Node0x1ccba50;
	Node0x1ccba00 [shape=record,label="{%57:\l57:                                               \l  store i64 %50, i64* %48, align 8, !tbaa !1632\l  %58 = add i64 %49, -8\l  %59 = getelementptr inbounds i64, i64* %47, i64 1\l  %60 = getelementptr inbounds i64, i64* %48, i64 1\l  %61 = icmp ugt i64 %58, 7\l  br i1 %61, label %46, label %62\l|{<s0>T|<s1>F}}"];
	Node0x1ccba00:s0 -> Node0x1ccb9b0;
	Node0x1ccba00:s1 -> Node0x1ccba50;
	Node0x1ccba50 [shape=record,label="{%62:\l62:                                               \l  %63 = phi i64 [ %34, %38 ], [ %45, %57 ], [ %49, %46 ]\l  %64 = phi i64* [ %41, %38 ], [ %60, %57 ], [ %48, %46 ]\l  %65 = phi i64* [ %42, %38 ], [ %59, %57 ], [ %47, %46 ]\l  %66 = bitcast i64* %64 to i8*\l  %67 = bitcast i64* %65 to i8*\l  br label %68\l}"];
	Node0x1ccba50 -> Node0x1ccbaa0;
	Node0x1ccbaa0 [shape=record,label="{%68:\l68:                                               \l  %69 = phi i64 [ %63, %62 ], [ %3, %4 ]\l  %70 = phi i8* [ %66, %62 ], [ %0, %4 ]\l  %71 = phi i8* [ %67, %62 ], [ %1, %4 ]\l  %72 = icmp eq i64 %69, 0\l  br i1 %72, label %100, label %73\l|{<s0>T|<s1>F}}"];
	Node0x1ccbaa0:s0 -> Node0x1ccbcd0;
	Node0x1ccbaa0:s1 -> Node0x1ccbaf0;
	Node0x1ccbaf0 [shape=record,label="{%73:\l73:                                               \l  %74 = trunc i32 %2 to i8\l  br label %75\l}"];
	Node0x1ccbaf0 -> Node0x1ccbb40;
	Node0x1ccbb40 [shape=record,label="{%75:\l75:                                               \l  %76 = phi i8* [ %71, %73 ], [ %83, %81 ]\l  %77 = phi i8* [ %70, %73 ], [ %84, %81 ]\l  %78 = phi i64 [ %69, %73 ], [ %82, %81 ]\l  %79 = load i8, i8* %76, align 1, !tbaa !1632\l  store i8 %79, i8* %77, align 1, !tbaa !1632\l  %80 = icmp eq i8 %79, %74\l  br i1 %80, label %93, label %81\l|{<s0>T|<s1>F}}"];
	Node0x1ccbb40:s0 -> Node0x1ccbc80;
	Node0x1ccbb40:s1 -> Node0x1ccbb90;
	Node0x1ccbb90 [shape=record,label="{%81:\l81:                                               \l  %82 = add i64 %78, -1\l  %83 = getelementptr inbounds i8, i8* %76, i64 1\l  %84 = getelementptr inbounds i8, i8* %77, i64 1\l  %85 = icmp eq i64 %82, 0\l  br i1 %85, label %100, label %75\l|{<s0>T|<s1>F}}"];
	Node0x1ccbb90:s0 -> Node0x1ccbcd0;
	Node0x1ccbb90:s1 -> Node0x1ccbb40;
	Node0x1ccbbe0 [shape=record,label="{%86:\l86:                                               \l  %87 = icmp eq i64 %34, 0\l  br i1 %87, label %100, label %88\l|{<s0>T|<s1>F}}"];
	Node0x1ccbbe0:s0 -> Node0x1ccbcd0;
	Node0x1ccbbe0:s1 -> Node0x1ccbc30;
	Node0x1ccbc30 [shape=record,label="{%88:\l88:                                               \l  %89 = phi i8* [ %35, %86 ], [ %20, %18 ]\l  %90 = phi i8* [ %36, %86 ], [ %19, %18 ]\l  %91 = load i8, i8* %90, align 1, !tbaa !1632\l  %92 = trunc i32 %2 to i8\l  br label %93\l}"];
	Node0x1ccbc30 -> Node0x1ccbc80;
	Node0x1ccbc80 [shape=record,label="{%93:\l93:                                               \l  %94 = phi i8 [ %92, %88 ], [ %74, %75 ]\l  %95 = phi i8 [ %91, %88 ], [ %74, %75 ]\l  %96 = phi i8* [ %89, %88 ], [ %77, %75 ]\l  %97 = icmp eq i8 %95, %94\l  %98 = getelementptr inbounds i8, i8* %96, i64 1\l  %99 = select i1 %97, i8* %98, i8* null\l  ret i8* %99\l}"];
	Node0x1ccbcd0 [shape=record,label="{%100:\l100:                                              \l  ret i8* null\l}"];
}
