digraph "CFG for 'BF_encrypt' function" {
	label="CFG for 'BF_encrypt' function";

	Node0x1d2ed20 [shape=record,label="{%5:\l  %6 = getelementptr inbounds %union.BF_ctx, %union.BF_ctx* %0, i64 0, i32 0,\l... i32 0, i64 17\l  %7 = getelementptr inbounds %union.BF_ctx, %union.BF_ctx* %0, i64 0, i32 0,\l... i32 0, i64 0\l  br label %8\l}"];
	Node0x1d2ed20 -> Node0x1d2ee40;
	Node0x1d2ee40 [shape=record,label="{%8:\l8:                                                \l  %9 = phi i32 [ %2, %5 ], [ %75, %14 ]\l  %10 = phi i32 [ %1, %5 ], [ %16, %14 ]\l  %11 = phi i32* [ %3, %5 ], [ %18, %14 ]\l  %12 = load i32, i32* %7, align 4, !tbaa !1632\l  %13 = xor i32 %12, %10\l  br label %20\l}"];
	Node0x1d2ee40 -> Node0x1d2eee0;
	Node0x1d2ee90 [shape=record,label="{%14:\l14:                                               \l  %15 = load i32, i32* %6, align 4, !tbaa !1632\l  %16 = xor i32 %15, %49\l  %17 = getelementptr inbounds i32, i32* %11, i64 1\l  store i32 %16, i32* %11, align 4, !tbaa !1635\l  %18 = getelementptr inbounds i32, i32* %11, i64 2\l  store i32 %75, i32* %17, align 4, !tbaa !1635\l  %19 = icmp ult i32* %18, %4\l  br i1 %19, label %8, label %77\l|{<s0>T|<s1>F}}"];
	Node0x1d2ee90:s0 -> Node0x1d2ee40;
	Node0x1d2ee90:s1 -> Node0x1d2ef30;
	Node0x1d2eee0 [shape=record,label="{%20:\l20:                                               \l  %21 = phi i64 [ 0, %8 ], [ %70, %20 ]\l  %22 = phi i32 [ %13, %8 ], [ %75, %20 ]\l  %23 = phi i32 [ %9, %8 ], [ %49, %20 ]\l  %24 = and i32 %22, 255\l  %25 = lshr i32 %22, 8\l  %26 = and i32 %25, 255\l  %27 = lshr i32 %22, 16\l  %28 = and i32 %27, 255\l  %29 = lshr i32 %22, 24\l  %30 = zext i32 %24 to i64\l  %31 = getelementptr inbounds %union.BF_ctx, %union.BF_ctx* %0, i64 0, i32 0,\l... i32 1, i64 3, i64 %30\l  %32 = load i32, i32* %31, align 4, !tbaa !1632\l  %33 = zext i32 %26 to i64\l  %34 = getelementptr inbounds %union.BF_ctx, %union.BF_ctx* %0, i64 0, i32 0,\l... i32 1, i64 2, i64 %33\l  %35 = load i32, i32* %34, align 4, !tbaa !1632\l  %36 = zext i32 %28 to i64\l  %37 = getelementptr inbounds %union.BF_ctx, %union.BF_ctx* %0, i64 0, i32 0,\l... i32 1, i64 1, i64 %36\l  %38 = load i32, i32* %37, align 4, !tbaa !1632\l  %39 = zext i32 %29 to i64\l  %40 = getelementptr inbounds %union.BF_ctx, %union.BF_ctx* %0, i64 0, i32 0,\l... i32 1, i64 0, i64 %39\l  %41 = load i32, i32* %40, align 4, !tbaa !1632\l  %42 = add i32 %41, %38\l  %43 = xor i32 %42, %35\l  %44 = or i64 %21, 1\l  %45 = getelementptr inbounds %union.BF_ctx, %union.BF_ctx* %0, i64 0, i32 0,\l... i32 0, i64 %44\l  %46 = load i32, i32* %45, align 4, !tbaa !1632\l  %47 = xor i32 %46, %23\l  %48 = add i32 %43, %32\l  %49 = xor i32 %47, %48\l  %50 = and i32 %49, 255\l  %51 = lshr i32 %49, 8\l  %52 = and i32 %51, 255\l  %53 = lshr i32 %49, 16\l  %54 = and i32 %53, 255\l  %55 = lshr i32 %49, 24\l  %56 = zext i32 %50 to i64\l  %57 = getelementptr inbounds %union.BF_ctx, %union.BF_ctx* %0, i64 0, i32 0,\l... i32 1, i64 3, i64 %56\l  %58 = load i32, i32* %57, align 4, !tbaa !1632\l  %59 = zext i32 %52 to i64\l  %60 = getelementptr inbounds %union.BF_ctx, %union.BF_ctx* %0, i64 0, i32 0,\l... i32 1, i64 2, i64 %59\l  %61 = load i32, i32* %60, align 4, !tbaa !1632\l  %62 = zext i32 %54 to i64\l  %63 = getelementptr inbounds %union.BF_ctx, %union.BF_ctx* %0, i64 0, i32 0,\l... i32 1, i64 1, i64 %62\l  %64 = load i32, i32* %63, align 4, !tbaa !1632\l  %65 = zext i32 %55 to i64\l  %66 = getelementptr inbounds %union.BF_ctx, %union.BF_ctx* %0, i64 0, i32 0,\l... i32 1, i64 0, i64 %65\l  %67 = load i32, i32* %66, align 4, !tbaa !1632\l  %68 = add i32 %67, %64\l  %69 = xor i32 %68, %61\l  %70 = add nuw nsw i64 %21, 2\l  %71 = getelementptr inbounds %union.BF_ctx, %union.BF_ctx* %0, i64 0, i32 0,\l... i32 0, i64 %70\l  %72 = load i32, i32* %71, align 4, !tbaa !1632\l  %73 = xor i32 %72, %22\l  %74 = add i32 %69, %58\l  %75 = xor i32 %73, %74\l  %76 = icmp ult i64 %21, 14\l  br i1 %76, label %20, label %14\l|{<s0>T|<s1>F}}"];
	Node0x1d2eee0:s0 -> Node0x1d2eee0;
	Node0x1d2eee0:s1 -> Node0x1d2ee90;
	Node0x1d2ef30 [shape=record,label="{%77:\l77:                                               \l  ret i32 %16\l}"];
}
