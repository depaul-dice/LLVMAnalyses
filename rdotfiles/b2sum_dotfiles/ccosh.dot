digraph "CFG for 'ccosh' function" {
	label="CFG for 'ccosh' function";

	Node0x1caf020 [shape=record,label="{%2:\l  %3 = bitcast double %0 to i64\l  %4 = lshr i64 %3, 32\l  %5 = trunc i64 %4 to i32\l  %6 = trunc i64 %3 to i32\l  %7 = bitcast double %1 to i64\l  %8 = lshr i64 %7, 32\l  %9 = trunc i64 %8 to i32\l  %10 = trunc i64 %7 to i32\l  %11 = and i32 %5, 2147483647\l  %12 = and i32 %9, 2147483647\l  %13 = icmp ult i32 %11, 2146435072\l  %14 = icmp ult i32 %12, 2146435072\l  %15 = and i1 %13, %14\l  br i1 %15, label %16, label %59\l|{<s0>T|<s1>F}}"];
	Node0x1caf020:s0 -> Node0x1caf8b0;
	Node0x1caf020:s1 -> Node0x1cafb80;
	Node0x1caf8b0 [shape=record,label="{%16:\l16:                                               \l  %17 = or i32 %12, %10\l  %18 = icmp eq i32 %17, 0\l  br i1 %18, label %19, label %22\l|{<s0>T|<s1>F}}"];
	Node0x1caf8b0:s0 -> Node0x1caf900;
	Node0x1caf8b0:s1 -> Node0x1caf950;
	Node0x1caf900 [shape=record,label="{%19:\l19:                                               \l  %20 = tail call double @cosh(double %0) #40\l  %21 = tail call double @llvm.experimental.constrained.fmul.f64(double %0,\l... double %1, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  br label %116\l}"];
	Node0x1caf900 -> Node0x1caffe0;
	Node0x1caf950 [shape=record,label="{%22:\l22:                                               \l  %23 = icmp ult i32 %11, 1077280768\l  br i1 %23, label %24, label %31\l|{<s0>T|<s1>F}}"];
	Node0x1caf950:s0 -> Node0x1caf9a0;
	Node0x1caf950:s1 -> Node0x1caf9f0;
	Node0x1caf9a0 [shape=record,label="{%24:\l24:                                               \l  %25 = tail call double @cosh(double %0) #40\l  %26 = tail call double @cos(double %1) #40\l  %27 = tail call double @llvm.experimental.constrained.fmul.f64(double %25,\l... double %26, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %28 = tail call double @sinh(double %0) #40\l  %29 = tail call double @sin(double %1) #40\l  %30 = tail call double @llvm.experimental.constrained.fmul.f64(double %28,\l... double %29, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  br label %116\l}"];
	Node0x1caf9a0 -> Node0x1caffe0;
	Node0x1caf9f0 [shape=record,label="{%31:\l31:                                               \l  %32 = icmp ult i32 %11, 1082535490\l  br i1 %32, label %33, label %42\l|{<s0>T|<s1>F}}"];
	Node0x1caf9f0:s0 -> Node0x1cafa40;
	Node0x1caf9f0:s1 -> Node0x1cafa90;
	Node0x1cafa40 [shape=record,label="{%33:\l33:                                               \l  %34 = tail call double @fabs(double %0) #40\l  %35 = tail call double @exp(double %34) #40\l  %36 = tail call double @llvm.experimental.constrained.fmul.f64(double %35,\l... double 5.000000e-01, metadata !round.dynamic, metadata !fpexcept.ignore)\l... #41\l  %37 = tail call double @cos(double %1) #40\l  %38 = tail call double @llvm.experimental.constrained.fmul.f64(double %36,\l... double %37, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %39 = tail call double @copysign(double %36, double %0) #40\l  %40 = tail call double @sin(double %1) #40\l  %41 = tail call double @llvm.experimental.constrained.fmul.f64(double %39,\l... double %40, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  br label %116\l}"];
	Node0x1cafa40 -> Node0x1caffe0;
	Node0x1cafa90 [shape=record,label="{%42:\l42:                                               \l  %43 = icmp ult i32 %11, 1083620266\l  br i1 %43, label %44, label %52\l|{<s0>T|<s1>F}}"];
	Node0x1cafa90:s0 -> Node0x1cafae0;
	Node0x1cafa90:s1 -> Node0x1cafb30;
	Node0x1cafae0 [shape=record,label="{%44:\l44:                                               \l  %45 = tail call double @fabs(double %0) #40\l  %46 = tail call \{ double, double \} @__ldexp_cexp(double %45, double %1, i32\l... -1) #40\l  %47 = extractvalue \{ double, double \} %46, 0\l  %48 = extractvalue \{ double, double \} %46, 1\l  %49 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 1,\l... metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %50 = tail call double @copysign(double %49, double %0) #40\l  %51 = tail call double @llvm.experimental.constrained.fmul.f64(double %48,\l... double %50, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  br label %116\l}"];
	Node0x1cafae0 -> Node0x1caffe0;
	Node0x1cafb30 [shape=record,label="{%52:\l52:                                               \l  %53 = tail call double @llvm.experimental.constrained.fmul.f64(double\l... 0x7FE0000000000000, double %0, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #41\l  %54 = tail call double @llvm.experimental.constrained.fmul.f64(double %53,\l... double %53, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %55 = tail call double @cos(double %1) #40\l  %56 = tail call double @llvm.experimental.constrained.fmul.f64(double %54,\l... double %55, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %57 = tail call double @sin(double %1) #40\l  %58 = tail call double @llvm.experimental.constrained.fmul.f64(double %53,\l... double %57, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  br label %116\l}"];
	Node0x1cafb30 -> Node0x1caffe0;
	Node0x1cafb80 [shape=record,label="{%59:\l59:                                               \l  %60 = or i32 %11, %6\l  %61 = icmp eq i32 %60, 0\l  %62 = icmp ugt i32 %12, 2146435071\l  %63 = and i1 %61, %62\l  br i1 %63, label %64, label %70\l|{<s0>T|<s1>F}}"];
	Node0x1cafb80:s0 -> Node0x1cafbd0;
	Node0x1cafb80:s1 -> Node0x1cafc20;
	Node0x1cafbd0 [shape=record,label="{%64:\l64:                                               \l  %65 = tail call double @llvm.experimental.constrained.fsub.f64(double %1,\l... double %1, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %66 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 0,\l... metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %67 = tail call double @llvm.experimental.constrained.fsub.f64(double %1,\l... double %1, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %68 = tail call double @llvm.experimental.constrained.fmul.f64(double %0,\l... double %67, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %69 = tail call double @copysign(double %66, double %68) #40\l  br label %116\l}"];
	Node0x1cafbd0 -> Node0x1caffe0;
	Node0x1cafc20 [shape=record,label="{%70:\l70:                                               \l  %71 = or i32 %12, %10\l  %72 = icmp eq i32 %71, 0\l  %73 = icmp ugt i32 %11, 2146435071\l  %74 = and i1 %73, %72\l  br i1 %74, label %75, label %88\l|{<s0>T|<s1>F}}"];
	Node0x1cafc20:s0 -> Node0x1cafc70;
	Node0x1cafc20:s1 -> Node0x1cafd60;
	Node0x1cafc70 [shape=record,label="{%75:\l75:                                               \l  %76 = and i32 %5, 1048575\l  %77 = or i32 %76, %6\l  %78 = icmp eq i32 %77, 0\l  %79 = tail call double @llvm.experimental.constrained.fmul.f64(double %0,\l... double %0, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %80 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 0,\l... metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  br i1 %78, label %81, label %84\l|{<s0>T|<s1>F}}"];
	Node0x1cafc70:s0 -> Node0x1cafcc0;
	Node0x1cafc70:s1 -> Node0x1cafd10;
	Node0x1cafcc0 [shape=record,label="{%81:\l81:                                               \l  %82 = tail call double @copysign(double %80, double %0) #40\l  %83 = tail call double @llvm.experimental.constrained.fmul.f64(double %82,\l... double %1, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  br label %116\l}"];
	Node0x1cafcc0 -> Node0x1caffe0;
	Node0x1cafd10 [shape=record,label="{%84:\l84:                                               \l  %85 = tail call double @llvm.experimental.constrained.fadd.f64(double %0,\l... double %0, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %86 = tail call double @llvm.experimental.constrained.fmul.f64(double %85,\l... double %1, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %87 = tail call double @copysign(double %80, double %86) #40\l  br label %116\l}"];
	Node0x1cafd10 -> Node0x1caffe0;
	Node0x1cafd60 [shape=record,label="{%88:\l88:                                               \l  %89 = and i1 %13, %62\l  br i1 %89, label %90, label %94\l|{<s0>T|<s1>F}}"];
	Node0x1cafd60:s0 -> Node0x1cafdb0;
	Node0x1cafd60:s1 -> Node0x1cafe00;
	Node0x1cafdb0 [shape=record,label="{%90:\l90:                                               \l  %91 = tail call double @llvm.experimental.constrained.fsub.f64(double %1,\l... double %1, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %92 = tail call double @llvm.experimental.constrained.fsub.f64(double %1,\l... double %1, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %93 = tail call double @llvm.experimental.constrained.fmul.f64(double %0,\l... double %92, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  br label %116\l}"];
	Node0x1cafdb0 -> Node0x1caffe0;
	Node0x1cafe00 [shape=record,label="{%94:\l94:                                               \l  br i1 %73, label %95, label %109\l|{<s0>T|<s1>F}}"];
	Node0x1cafe00:s0 -> Node0x1cafe50;
	Node0x1cafe00:s1 -> Node0x1caff90;
	Node0x1cafe50 [shape=record,label="{%95:\l95:                                               \l  %96 = and i32 %5, 1048575\l  %97 = or i32 %96, %6\l  %98 = icmp eq i32 %97, 0\l  br i1 %98, label %99, label %109\l|{<s0>T|<s1>F}}"];
	Node0x1cafe50:s0 -> Node0x1cafea0;
	Node0x1cafe50:s1 -> Node0x1caff90;
	Node0x1cafea0 [shape=record,label="{%99:\l99:                                               \l  %100 = tail call double @llvm.experimental.constrained.fmul.f64(double %0,\l... double %0, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  br i1 %62, label %101, label %104\l|{<s0>T|<s1>F}}"];
	Node0x1cafea0:s0 -> Node0x1cafef0;
	Node0x1cafea0:s1 -> Node0x1caff40;
	Node0x1cafef0 [shape=record,label="{%101:\l101:                                              \l  %102 = tail call double @llvm.experimental.constrained.fsub.f64(double %1,\l... double %1, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %103 = tail call double @llvm.experimental.constrained.fmul.f64(double %0,\l... double %102, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  br label %116\l}"];
	Node0x1cafef0 -> Node0x1caffe0;
	Node0x1caff40 [shape=record,label="{%104:\l104:                                              \l  %105 = tail call double @cos(double %1) #40\l  %106 = tail call double @llvm.experimental.constrained.fmul.f64(double %100,\l... double %105, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %107 = tail call double @sin(double %1) #40\l  %108 = tail call double @llvm.experimental.constrained.fmul.f64(double %0,\l... double %107, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  br label %116\l}"];
	Node0x1caff40 -> Node0x1caffe0;
	Node0x1caff90 [shape=record,label="{%109:\l109:                                              \l  %110 = tail call double @llvm.experimental.constrained.fmul.f64(double %0,\l... double %0, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %111 = tail call double @llvm.experimental.constrained.fsub.f64(double %1,\l... double %1, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %112 = tail call double @llvm.experimental.constrained.fmul.f64(double %110,\l... double %111, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %113 = tail call double @llvm.experimental.constrained.fadd.f64(double %0,\l... double %0, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %114 = tail call double @llvm.experimental.constrained.fsub.f64(double %1,\l... double %1, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %115 = tail call double @llvm.experimental.constrained.fmul.f64(double %113,\l... double %114, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  br label %116\l}"];
	Node0x1caff90 -> Node0x1caffe0;
	Node0x1caffe0 [shape=record,label="{%116:\l116:                                              \l  %117 = phi double [ %20, %19 ], [ %27, %24 ], [ %38, %33 ], [ %47, %44 ], [\l... %56, %52 ], [ %65, %64 ], [ %79, %81 ], [ %79, %84 ], [ %91, %90 ], [ %100,\l... %101 ], [ %106, %104 ], [ %112, %109 ]\l  %118 = phi double [ %21, %19 ], [ %30, %24 ], [ %41, %33 ], [ %51, %44 ], [\l... %58, %52 ], [ %69, %64 ], [ %83, %81 ], [ %87, %84 ], [ %93, %90 ], [ %103,\l... %101 ], [ %108, %104 ], [ %115, %109 ]\l  %119 = insertvalue \{ double, double \} undef, double %117, 0\l  %120 = insertvalue \{ double, double \} %119, double %118, 1\l  ret \{ double, double \} %120\l}"];
}
