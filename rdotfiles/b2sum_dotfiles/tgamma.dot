digraph "CFG for 'tgamma' function" {
	label="CFG for 'tgamma' function";

	Node0x1880ab0 [shape=record,label="{%1:\l  %2 = alloca float, align 4\l  %3 = bitcast double %0 to i64\l  %4 = lshr i64 %3, 32\l  %5 = trunc i64 %4 to i32\l  %6 = and i32 %5, 2147483647\l  %7 = icmp ugt i32 %6, 2146435071\l  br i1 %7, label %8, label %11\l|{<s0>T|<s1>F}}"];
	Node0x1880ab0:s0 -> Node0x1880e80;
	Node0x1880ab0:s1 -> Node0x1880ed0;
	Node0x1880e80 [shape=record,label="{%8:\l8:                                                \l  %9 = tail call double @llvm.experimental.constrained.fpext.f64.f32(float\l... 0x7FF0000000000000, metadata !fpexcept.ignore) #40\l  %10 = tail call double @llvm.experimental.constrained.fadd.f64(double %0,\l... double %9, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  br label %156\l}"];
	Node0x1880e80 -> Node0x18816f0;
	Node0x1880ed0 [shape=record,label="{%11:\l11:                                               \l  %12 = icmp ult i32 %6, 1016070144\l  br i1 %12, label %13, label %16\l|{<s0>T|<s1>F}}"];
	Node0x1880ed0:s0 -> Node0x1880f20;
	Node0x1880ed0:s1 -> Node0x1880f70;
	Node0x1880f20 [shape=record,label="{%13:\l13:                                               \l  %14 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 1,\l... metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %15 = tail call double @llvm.experimental.constrained.fdiv.f64(double %14,\l... double %0, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  br label %156\l}"];
	Node0x1880f20 -> Node0x18816f0;
	Node0x1880f70 [shape=record,label="{%16:\l16:                                               \l  %17 = tail call double @floor(double %0) #41\l  %18 = tail call i1 @llvm.experimental.constrained.fcmp.f64(double %0, double\l... %17, metadata !oeq, metadata !fpexcept.ignore) #40\l  br i1 %18, label %19, label %33\l|{<s0>T|<s1>F}}"];
	Node0x1880f70:s0 -> Node0x1880fc0;
	Node0x1880f70:s1 -> Node0x1881100;
	Node0x1880fc0 [shape=record,label="{%19:\l19:                                               \l  %20 = icmp slt i64 %3, 0\l  br i1 %20, label %21, label %24\l|{<s0>T|<s1>F}}"];
	Node0x1880fc0:s0 -> Node0x1881010;
	Node0x1880fc0:s1 -> Node0x1881060;
	Node0x1881010 [shape=record,label="{%21:\l21:                                               \l  %22 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 0,\l... metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %23 = tail call double @llvm.experimental.constrained.fdiv.f64(double %22,\l... double 0.000000e+00, metadata !round.dynamic, metadata !fpexcept.ignore)\l... #40\l  br label %156\l}"];
	Node0x1881010 -> Node0x18816f0;
	Node0x1881060 [shape=record,label="{%24:\l24:                                               \l  %25 = tail call double @llvm.experimental.constrained.uitofp.f64.i64(i64 23,\l... metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %26 = tail call i1 @llvm.experimental.constrained.fcmps.f64(double %0,\l... double %25, metadata !ole, metadata !fpexcept.ignore) #40\l  br i1 %26, label %27, label %33\l|{<s0>T|<s1>F}}"];
	Node0x1881060:s0 -> Node0x18810b0;
	Node0x1881060:s1 -> Node0x1881100;
	Node0x18810b0 [shape=record,label="{%27:\l27:                                               \l  %28 = tail call i32 @llvm.experimental.constrained.fptosi.i32.f64(double %0,\l... metadata !fpexcept.ignore) #40\l  %29 = add nsw i32 %28, -1\l  %30 = sext i32 %29 to i64\l  %31 = getelementptr inbounds [23 x double], [23 x double]* @fact, i64 0, i64\l... %30\l  %32 = load double, double* %31, align 8, !tbaa !1632\l  br label %156\l}"];
	Node0x18810b0 -> Node0x18816f0;
	Node0x1881100 [shape=record,label="{%33:\l33:                                               \l  %34 = icmp ugt i32 %6, 1080492031\l  %35 = icmp slt i64 %3, 0\l  br i1 %34, label %36, label %50\l|{<s0>T|<s1>F}}"];
	Node0x1881100:s0 -> Node0x1881150;
	Node0x1881100:s1 -> Node0x1881290;
	Node0x1881150 [shape=record,label="{%36:\l36:                                               \l  br i1 %35, label %37, label %48\l|{<s0>T|<s1>F}}"];
	Node0x1881150:s0 -> Node0x18811a0;
	Node0x1881150:s1 -> Node0x1881240;
	Node0x18811a0 [shape=record,label="{%37:\l37:                                               \l  %38 = tail call double @llvm.experimental.constrained.fdiv.f64(double\l... 0x3810000000000000, double %0, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  %39 = tail call float @llvm.experimental.constrained.fptrunc.f32.f64(double\l... %38, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %40 = bitcast float* %2 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %40)\l  store volatile float %39, float* %2, align 4, !tbaa !1636\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %40)\l  %41 = tail call double @floor(double %0) #41\l  %42 = tail call double @llvm.experimental.constrained.fmul.f64(double %41,\l... double 5.000000e-01, metadata !round.dynamic, metadata !fpexcept.ignore)\l... #40\l  %43 = tail call double @llvm.experimental.constrained.fmul.f64(double %0,\l... double 5.000000e-01, metadata !round.dynamic, metadata !fpexcept.ignore)\l... #40\l  %44 = tail call double @floor(double %43) #41\l  %45 = tail call i1 @llvm.experimental.constrained.fcmp.f64(double %42,\l... double %44, metadata !oeq, metadata !fpexcept.ignore) #40\l  br i1 %45, label %46, label %156\l|{<s0>T|<s1>F}}"];
	Node0x18811a0:s0 -> Node0x18811f0;
	Node0x18811a0:s1 -> Node0x18816f0;
	Node0x18811f0 [shape=record,label="{%46:\l46:                                               \l  %47 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 0,\l... metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  br label %156\l}"];
	Node0x18811f0 -> Node0x18816f0;
	Node0x1881240 [shape=record,label="{%48:\l48:                                               \l  %49 = tail call double @llvm.experimental.constrained.fmul.f64(double %0,\l... double 0x7FE0000000000000, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  br label %156\l}"];
	Node0x1881240 -> Node0x18816f0;
	Node0x1881290 [shape=record,label="{%50:\l50:                                               \l  %51 = fneg double %0\l  %52 = select i1 %35, double %51, double %0\l  %53 = tail call double @llvm.experimental.constrained.fadd.f64(double %52,\l... double 0x40161945B9800000, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  %54 = tail call i1 @llvm.experimental.constrained.fcmps.f64(double %52,\l... double 0x40161945B9800000, metadata !ogt, metadata !fpexcept.ignore) #40\l  br i1 %54, label %55, label %58\l|{<s0>T|<s1>F}}"];
	Node0x1881290:s0 -> Node0x18812e0;
	Node0x1881290:s1 -> Node0x1881330;
	Node0x18812e0 [shape=record,label="{%55:\l55:                                               \l  %56 = tail call double @llvm.experimental.constrained.fsub.f64(double %53,\l... double %52, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %57 = tail call double @llvm.experimental.constrained.fsub.f64(double %56,\l... double 0x40161945B9800000, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  br label %61\l}"];
	Node0x18812e0 -> Node0x1881380;
	Node0x1881330 [shape=record,label="{%58:\l58:                                               \l  %59 = tail call double @llvm.experimental.constrained.fsub.f64(double %53,\l... double 0x40161945B9800000, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  %60 = tail call double @llvm.experimental.constrained.fsub.f64(double %59,\l... double %52, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  br label %61\l}"];
	Node0x1881330 -> Node0x1881380;
	Node0x1881380 [shape=record,label="{%61:\l61:                                               \l  %62 = phi double [ %57, %55 ], [ %60, %58 ]\l  %63 = tail call double @llvm.experimental.constrained.fsub.f64(double %52,\l... double 5.000000e-01, metadata !round.dynamic, metadata !fpexcept.ignore)\l... #40\l  %64 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 0,\l... metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %65 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 0,\l... metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %66 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 8,\l... metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %67 = tail call i1 @llvm.experimental.constrained.fcmps.f64(double %52,\l... double %66, metadata !olt, metadata !fpexcept.ignore) #42\l  br i1 %67, label %68, label %82\l|{<s0>T|<s1>F}}"];
	Node0x1881380:s0 -> Node0x18813d0;
	Node0x1881380:s1 -> Node0x1881420;
	Node0x18813d0 [shape=record,label="{%68:\l68:                                               \l  %69 = phi i64 [ %80, %68 ], [ 12, %61 ]\l  %70 = phi double [ %79, %68 ], [ %65, %61 ]\l  %71 = phi double [ %75, %68 ], [ %64, %61 ]\l  %72 = tail call double @llvm.experimental.constrained.fmul.f64(double %71,\l... double %52, metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %73 = getelementptr inbounds [13 x double], [13 x double]* @Snum, i64 0, i64\l... %69\l  %74 = load double, double* %73, align 8, !tbaa !1632\l  %75 = tail call double @llvm.experimental.constrained.fadd.f64(double %72,\l... double %74, metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %76 = tail call double @llvm.experimental.constrained.fmul.f64(double %70,\l... double %52, metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %77 = getelementptr inbounds [13 x double], [13 x double]* @Sden, i64 0, i64\l... %69\l  %78 = load double, double* %77, align 8, !tbaa !1632\l  %79 = tail call double @llvm.experimental.constrained.fadd.f64(double %76,\l... double %78, metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %80 = add nsw i64 %69, -1\l  %81 = icmp eq i64 %69, 0\l  br i1 %81, label %96, label %68\l|{<s0>T|<s1>F}}"];
	Node0x18813d0:s0 -> Node0x1881470;
	Node0x18813d0:s1 -> Node0x18813d0;
	Node0x1881420 [shape=record,label="{%82:\l82:                                               \l  %83 = phi i64 [ %94, %82 ], [ 0, %61 ]\l  %84 = phi double [ %93, %82 ], [ %65, %61 ]\l  %85 = phi double [ %89, %82 ], [ %64, %61 ]\l  %86 = tail call double @llvm.experimental.constrained.fdiv.f64(double %85,\l... double %52, metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %87 = getelementptr inbounds [13 x double], [13 x double]* @Snum, i64 0, i64\l... %83\l  %88 = load double, double* %87, align 8, !tbaa !1632\l  %89 = tail call double @llvm.experimental.constrained.fadd.f64(double %86,\l... double %88, metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %90 = tail call double @llvm.experimental.constrained.fdiv.f64(double %84,\l... double %52, metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %91 = getelementptr inbounds [13 x double], [13 x double]* @Sden, i64 0, i64\l... %83\l  %92 = load double, double* %91, align 8, !tbaa !1632\l  %93 = tail call double @llvm.experimental.constrained.fadd.f64(double %90,\l... double %92, metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %94 = add nuw nsw i64 %83, 1\l  %95 = icmp eq i64 %94, 13\l  br i1 %95, label %96, label %82\l|{<s0>T|<s1>F}}"];
	Node0x1881420:s0 -> Node0x1881470;
	Node0x1881420:s1 -> Node0x1881420;
	Node0x1881470 [shape=record,label="{%96:\l96:                                               \l  %97 = phi double [ %75, %68 ], [ %89, %82 ]\l  %98 = phi double [ %79, %68 ], [ %93, %82 ]\l  %99 = tail call double @llvm.experimental.constrained.fdiv.f64(double %97,\l... double %98, metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %100 = fneg double %53\l  %101 = tail call double @exp(double %100) #41\l  %102 = tail call double @llvm.experimental.constrained.fmul.f64(double %99,\l... double %101, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %103 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 0,\l... metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %104 = tail call i1 @llvm.experimental.constrained.fcmps.f64(double %0,\l... double %103, metadata !olt, metadata !fpexcept.ignore) #40\l  %105 = insertelement \<2 x double\> undef, double %62, i32 0\l  %106 = insertelement \<2 x double\> %105, double %63, i32 1\l  br i1 %104, label %107, label %142\l|{<s0>T|<s1>F}}"];
	Node0x1881470:s0 -> Node0x18814c0;
	Node0x1881470:s1 -> Node0x18816a0;
	Node0x18814c0 [shape=record,label="{%107:\l107:                                              \l  %108 = tail call double @llvm.experimental.constrained.fmul.f64(double %52,\l... double 5.000000e-01, metadata !round.dynamic, metadata !fpexcept.ignore)\l... #42\l  %109 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 2,\l... metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %110 = tail call double @floor(double %108) #41\l  %111 = tail call double @llvm.experimental.constrained.fsub.f64(double %108,\l... double %110, metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %112 = tail call double @llvm.experimental.constrained.fmul.f64(double %109,\l... double %111, metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %113 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 4,\l... metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %114 = tail call double @llvm.experimental.constrained.fmul.f64(double %113,\l... double %112, metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %115 = tail call i32 @llvm.experimental.constrained.fptosi.i32.f64(double\l... %114, metadata !fpexcept.ignore) #42\l  %116 = add nsw i32 %115, 1\l  %117 = sdiv i32 %116, 2\l  %118 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32\l... %117, metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %119 = tail call double @llvm.experimental.constrained.fmul.f64(double %118,\l... double 5.000000e-01, metadata !round.dynamic, metadata !fpexcept.ignore)\l... #42\l  %120 = tail call double @llvm.experimental.constrained.fsub.f64(double %112,\l... double %119, metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %121 = tail call double @llvm.experimental.constrained.fmul.f64(double %120,\l... double 0x400921FB54442D18, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #42\l  switch i32 %117, label %122 [\l    i32 3, label %132\l    i32 1, label %125\l    i32 2, label %128\l  ]\l|{<s0>def|<s1>3|<s2>1|<s3>2}}"];
	Node0x18814c0:s0 -> Node0x1881510;
	Node0x18814c0:s1 -> Node0x1881600;
	Node0x18814c0:s2 -> Node0x1881560;
	Node0x18814c0:s3 -> Node0x18815b0;
	Node0x1881510 [shape=record,label="{%122:\l122:                                              \l  %123 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 0,\l... metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %124 = tail call double @__sin(double %121, double %123, i32 0) #41\l  br label %136\l}"];
	Node0x1881510 -> Node0x1881650;
	Node0x1881560 [shape=record,label="{%125:\l125:                                              \l  %126 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 0,\l... metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %127 = tail call double @__cos(double %121, double %126) #41\l  br label %136\l}"];
	Node0x1881560 -> Node0x1881650;
	Node0x18815b0 [shape=record,label="{%128:\l128:                                              \l  %129 = fneg double %121\l  %130 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 0,\l... metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %131 = tail call double @__sin(double %129, double %130, i32 0) #41\l  br label %136\l}"];
	Node0x18815b0 -> Node0x1881650;
	Node0x1881600 [shape=record,label="{%132:\l132:                                              \l  %133 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 0,\l... metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %134 = tail call double @__cos(double %121, double %133) #41\l  %135 = fneg double %134\l  br label %136\l}"];
	Node0x1881600 -> Node0x1881650;
	Node0x1881650 [shape=record,label="{%136:\l136:                                              \l  %137 = phi double [ %124, %122 ], [ %131, %128 ], [ %127, %125 ], [ %135,\l... %132 ]\l  %138 = tail call double @llvm.experimental.constrained.fmul.f64(double %137,\l... double %52, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %139 = tail call double @llvm.experimental.constrained.fmul.f64(double %138,\l... double %102, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %140 = tail call double @llvm.experimental.constrained.fdiv.f64(double\l... 0xC00921FB54442D18, double %139, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  %141 = fneg \<2 x double\> %106\l  br label %142\l}"];
	Node0x1881650 -> Node0x18816a0;
	Node0x18816a0 [shape=record,label="{%142:\l142:                                              \l  %143 = phi double [ %140, %136 ], [ %102, %96 ]\l  %144 = phi \<2 x double\> [ %141, %136 ], [ %106, %96 ]\l  %145 = tail call double @llvm.experimental.constrained.fadd.f64(double\l... 0x40161945B9800000, double 5.000000e-01, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  %146 = extractelement \<2 x double\> %144, i32 0\l  %147 = tail call double @llvm.experimental.constrained.fmul.f64(double %146,\l... double %145, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %148 = tail call double @llvm.experimental.constrained.fmul.f64(double %147,\l... double %143, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %149 = tail call double @llvm.experimental.constrained.fdiv.f64(double %148,\l... double %53, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %150 = tail call double @llvm.experimental.constrained.fadd.f64(double %143,\l... double %149, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %151 = extractelement \<2 x double\> %144, i32 1\l  %152 = tail call double @llvm.experimental.constrained.fmul.f64(double\l... 5.000000e-01, double %151, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  %153 = tail call double @pow(double %53, double %152) #41\l  %154 = tail call double @llvm.experimental.constrained.fmul.f64(double %150,\l... double %153, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %155 = tail call double @llvm.experimental.constrained.fmul.f64(double %154,\l... double %153, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  br label %156\l}"];
	Node0x18816a0 -> Node0x18816f0;
	Node0x18816f0 [shape=record,label="{%156:\l156:                                              \l  %157 = phi double [ %10, %8 ], [ %15, %13 ], [ %23, %21 ], [ %32, %27 ], [\l... %47, %46 ], [ %49, %48 ], [ %155, %142 ], [ -0.000000e+00, %37 ]\l  ret double %157\l}"];
}
