digraph "CFG for 'strlcpy' function" {
	label="CFG for 'strlcpy' function";

	Node0x1c6efa0 [shape=record,label="{%3:\l  %4 = add i64 %2, -1\l  %5 = icmp eq i64 %2, 0\l  br i1 %5, label %6, label %8\l|{<s0>T|<s1>F}}"];
	Node0x1c6efa0:s0 -> Node0x1c6f110;
	Node0x1c6efa0:s1 -> Node0x1c6f160;
	Node0x1c6f110 [shape=record,label="{%6:\l6:                                                \l  %7 = ptrtoint i8* %0 to i64\l  br label %92\l}"];
	Node0x1c6f110 -> Node0x1c6f610;
	Node0x1c6f160 [shape=record,label="{%8:\l8:                                                \l  %9 = ptrtoint i8* %1 to i64\l  %10 = ptrtoint i8* %0 to i64\l  %11 = xor i64 %9, %10\l  %12 = and i64 %11, 7\l  %13 = icmp eq i64 %12, 0\l  br i1 %13, label %14, label %72\l|{<s0>T|<s1>F}}"];
	Node0x1c6f160:s0 -> Node0x1c6f1b0;
	Node0x1c6f160:s1 -> Node0x1c6f4d0;
	Node0x1c6f1b0 [shape=record,label="{%14:\l14:                                               \l  %15 = and i64 %9, 7\l  %16 = icmp ne i64 %15, 0\l  %17 = icmp ne i64 %4, 0\l  %18 = and i1 %17, %16\l  br i1 %18, label %19, label %34\l|{<s0>T|<s1>F}}"];
	Node0x1c6f1b0:s0 -> Node0x1c6f200;
	Node0x1c6f1b0:s1 -> Node0x1c6f2a0;
	Node0x1c6f200 [shape=record,label="{%19:\l19:                                               \l  %20 = phi i8* [ %28, %25 ], [ %0, %14 ]\l  %21 = phi i64 [ %26, %25 ], [ %4, %14 ]\l  %22 = phi i8* [ %27, %25 ], [ %1, %14 ]\l  %23 = load i8, i8* %22, align 1, !tbaa !1632\l  store i8 %23, i8* %20, align 1, !tbaa !1632\l  %24 = icmp eq i8 %23, 0\l  br i1 %24, label %39, label %25\l|{<s0>T|<s1>F}}"];
	Node0x1c6f200:s0 -> Node0x1c6f2f0;
	Node0x1c6f200:s1 -> Node0x1c6f250;
	Node0x1c6f250 [shape=record,label="{%25:\l25:                                               \l  %26 = add i64 %21, -1\l  %27 = getelementptr inbounds i8, i8* %22, i64 1\l  %28 = getelementptr inbounds i8, i8* %20, i64 1\l  %29 = ptrtoint i8* %27 to i64\l  %30 = and i64 %29, 7\l  %31 = icmp ne i64 %30, 0\l  %32 = icmp ne i64 %26, 0\l  %33 = and i1 %32, %31\l  br i1 %33, label %19, label %34\l|{<s0>T|<s1>F}}"];
	Node0x1c6f250:s0 -> Node0x1c6f200;
	Node0x1c6f250:s1 -> Node0x1c6f2a0;
	Node0x1c6f2a0 [shape=record,label="{%34:\l34:                                               \l  %35 = phi i8* [ %1, %14 ], [ %27, %25 ]\l  %36 = phi i64 [ %4, %14 ], [ %26, %25 ]\l  %37 = phi i8* [ %0, %14 ], [ %28, %25 ]\l  %38 = phi i1 [ %17, %14 ], [ %32, %25 ]\l  br i1 %38, label %39, label %88\l|{<s0>T|<s1>F}}"];
	Node0x1c6f2a0:s0 -> Node0x1c6f2f0;
	Node0x1c6f2a0:s1 -> Node0x1c6f5c0;
	Node0x1c6f2f0 [shape=record,label="{%39:\l39:                                               \l  %40 = phi i8* [ %37, %34 ], [ %20, %19 ]\l  %41 = phi i64 [ %36, %34 ], [ %21, %19 ]\l  %42 = phi i8* [ %35, %34 ], [ %22, %19 ]\l  %43 = load i8, i8* %42, align 1, !tbaa !1632\l  %44 = icmp eq i8 %43, 0\l  br i1 %44, label %72, label %45\l|{<s0>T|<s1>F}}"];
	Node0x1c6f2f0:s0 -> Node0x1c6f4d0;
	Node0x1c6f2f0:s1 -> Node0x1c6f340;
	Node0x1c6f340 [shape=record,label="{%45:\l45:                                               \l  %46 = bitcast i8* %40 to i64*\l  %47 = bitcast i8* %42 to i64*\l  %48 = icmp ugt i64 %41, 7\l  br i1 %48, label %49, label %66\l|{<s0>T|<s1>F}}"];
	Node0x1c6f340:s0 -> Node0x1c6f390;
	Node0x1c6f340:s1 -> Node0x1c6f480;
	Node0x1c6f390 [shape=record,label="{%49:\l49:                                               \l  %50 = and i64 %41, 7\l  br label %51\l}"];
	Node0x1c6f390 -> Node0x1c6f3e0;
	Node0x1c6f3e0 [shape=record,label="{%51:\l51:                                               \l  %52 = phi i64* [ %63, %61 ], [ %47, %49 ]\l  %53 = phi i64* [ %64, %61 ], [ %46, %49 ]\l  %54 = phi i64 [ %62, %61 ], [ %41, %49 ]\l  %55 = load i64, i64* %52, align 8, !tbaa !1632\l  %56 = add i64 %55, -72340172838076673\l  %57 = and i64 %55, -9187201950435737472\l  %58 = xor i64 %57, -9187201950435737472\l  %59 = and i64 %58, %56\l  %60 = icmp eq i64 %59, 0\l  br i1 %60, label %61, label %66\l|{<s0>T|<s1>F}}"];
	Node0x1c6f3e0:s0 -> Node0x1c6f430;
	Node0x1c6f3e0:s1 -> Node0x1c6f480;
	Node0x1c6f430 [shape=record,label="{%61:\l61:                                               \l  store i64 %55, i64* %53, align 8, !tbaa !1635\l  %62 = add i64 %54, -8\l  %63 = getelementptr inbounds i64, i64* %52, i64 1\l  %64 = getelementptr inbounds i64, i64* %53, i64 1\l  %65 = icmp ugt i64 %62, 7\l  br i1 %65, label %51, label %66\l|{<s0>T|<s1>F}}"];
	Node0x1c6f430:s0 -> Node0x1c6f3e0;
	Node0x1c6f430:s1 -> Node0x1c6f480;
	Node0x1c6f480 [shape=record,label="{%66:\l66:                                               \l  %67 = phi i64 [ %41, %45 ], [ %50, %61 ], [ %54, %51 ]\l  %68 = phi i64* [ %46, %45 ], [ %64, %61 ], [ %53, %51 ]\l  %69 = phi i64* [ %47, %45 ], [ %63, %61 ], [ %52, %51 ]\l  %70 = bitcast i64* %68 to i8*\l  %71 = bitcast i64* %69 to i8*\l  br label %72\l}"];
	Node0x1c6f480 -> Node0x1c6f4d0;
	Node0x1c6f4d0 [shape=record,label="{%72:\l72:                                               \l  %73 = phi i8* [ %71, %66 ], [ %42, %39 ], [ %1, %8 ]\l  %74 = phi i64 [ %67, %66 ], [ %41, %39 ], [ %4, %8 ]\l  %75 = phi i8* [ %70, %66 ], [ %40, %39 ], [ %0, %8 ]\l  %76 = icmp eq i64 %74, 0\l  br i1 %76, label %88, label %77\l|{<s0>T|<s1>F}}"];
	Node0x1c6f4d0:s0 -> Node0x1c6f5c0;
	Node0x1c6f4d0:s1 -> Node0x1c6f520;
	Node0x1c6f520 [shape=record,label="{%77:\l77:                                               \l  %78 = phi i8* [ %86, %83 ], [ %75, %72 ]\l  %79 = phi i64 [ %84, %83 ], [ %74, %72 ]\l  %80 = phi i8* [ %85, %83 ], [ %73, %72 ]\l  %81 = load i8, i8* %80, align 1, !tbaa !1632\l  store i8 %81, i8* %78, align 1, !tbaa !1632\l  %82 = icmp eq i8 %81, 0\l  br i1 %82, label %88, label %83\l|{<s0>T|<s1>F}}"];
	Node0x1c6f520:s0 -> Node0x1c6f5c0;
	Node0x1c6f520:s1 -> Node0x1c6f570;
	Node0x1c6f570 [shape=record,label="{%83:\l83:                                               \l  %84 = add i64 %79, -1\l  %85 = getelementptr inbounds i8, i8* %80, i64 1\l  %86 = getelementptr inbounds i8, i8* %78, i64 1\l  %87 = icmp eq i64 %84, 0\l  br i1 %87, label %88, label %77\l|{<s0>T|<s1>F}}"];
	Node0x1c6f570:s0 -> Node0x1c6f5c0;
	Node0x1c6f570:s1 -> Node0x1c6f520;
	Node0x1c6f5c0 [shape=record,label="{%88:\l88:                                               \l  %89 = phi i8* [ %73, %72 ], [ %35, %34 ], [ %80, %77 ], [ %85, %83 ]\l  %90 = phi i8* [ %75, %72 ], [ %37, %34 ], [ %78, %77 ], [ %86, %83 ]\l  store i8 0, i8* %90, align 1, !tbaa !1632\l  %91 = ptrtoint i8* %90 to i64\l  br label %92\l}"];
	Node0x1c6f5c0 -> Node0x1c6f610;
	Node0x1c6f610 [shape=record,label="{%92:\l92:                                               \l  %93 = phi i64 [ %7, %6 ], [ %91, %88 ]\l  %94 = phi i64 [ %7, %6 ], [ %10, %88 ]\l  %95 = phi i8* [ %1, %6 ], [ %89, %88 ]\l  %96 = sub i64 %93, %94\l  %97 = tail call i64 @strlen(i8* %95) #40\l  %98 = add i64 %96, %97\l  ret i64 %98\l}"];
}
