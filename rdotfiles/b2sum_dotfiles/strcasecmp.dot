digraph "CFG for 'strcasecmp' function" {
	label="CFG for 'strcasecmp' function";

	Node0x1e63560 [shape=record,label="{%2:\l  %3 = load i8, i8* %0, align 1, !tbaa !1632\l  %4 = icmp eq i8 %3, 0\l  br i1 %4, label %27, label %5\l|{<s0>T|<s1>F}}"];
	Node0x1e63560:s0 -> Node0x1e63cb0;
	Node0x1e63560:s1 -> Node0x1e63b20;
	Node0x1e63b20 [shape=record,label="{%5:\l5:                                                \l  %6 = phi i8 [ %25, %22 ], [ %3, %2 ]\l  %7 = phi i8* [ %24, %22 ], [ %1, %2 ]\l  %8 = phi i8* [ %23, %22 ], [ %0, %2 ]\l  %9 = zext i8 %6 to i32\l  %10 = load i8, i8* %7, align 1, !tbaa !1632\l  %11 = icmp eq i8 %10, 0\l  br i1 %11, label %27, label %12\l|{<s0>T|<s1>F}}"];
	Node0x1e63b20:s0 -> Node0x1e63cb0;
	Node0x1e63b20:s1 -> Node0x1e63b70;
	Node0x1e63b70 [shape=record,label="{%12:\l12:                                               \l  %13 = icmp eq i8 %6, %10\l  br i1 %13, label %22, label %14\l|{<s0>T|<s1>F}}"];
	Node0x1e63b70:s0 -> Node0x1e63c60;
	Node0x1e63b70:s1 -> Node0x1e63bc0;
	Node0x1e63bc0 [shape=record,label="{%14:\l14:                                               \l  %15 = tail call i32 @tolower(i32 %9) #40\l  %16 = load i8, i8* %7, align 1, !tbaa !1632\l  %17 = zext i8 %16 to i32\l  %18 = tail call i32 @tolower(i32 %17) #40\l  %19 = icmp eq i32 %15, %18\l  br i1 %19, label %22, label %20\l|{<s0>T|<s1>F}}"];
	Node0x1e63bc0:s0 -> Node0x1e63c60;
	Node0x1e63bc0:s1 -> Node0x1e63c10;
	Node0x1e63c10 [shape=record,label="{%20:\l20:                                               \l  %21 = load i8, i8* %8, align 1, !tbaa !1632\l  br label %27\l}"];
	Node0x1e63c10 -> Node0x1e63cb0;
	Node0x1e63c60 [shape=record,label="{%22:\l22:                                               \l  %23 = getelementptr inbounds i8, i8* %8, i64 1\l  %24 = getelementptr inbounds i8, i8* %7, i64 1\l  %25 = load i8, i8* %23, align 1, !tbaa !1632\l  %26 = icmp eq i8 %25, 0\l  br i1 %26, label %27, label %5\l|{<s0>T|<s1>F}}"];
	Node0x1e63c60:s0 -> Node0x1e63cb0;
	Node0x1e63c60:s1 -> Node0x1e63b20;
	Node0x1e63cb0 [shape=record,label="{%27:\l27:                                               \l  %28 = phi i8 [ 0, %2 ], [ %21, %20 ], [ 0, %22 ], [ %6, %5 ]\l  %29 = phi i8* [ %1, %2 ], [ %7, %20 ], [ %24, %22 ], [ %7, %5 ]\l  %30 = zext i8 %28 to i32\l  %31 = tail call i32 @tolower(i32 %30) #40\l  %32 = load i8, i8* %29, align 1, !tbaa !1632\l  %33 = zext i8 %32 to i32\l  %34 = tail call i32 @tolower(i32 %33) #40\l  %35 = sub nsw i32 %31, %34\l  ret i32 %35\l}"];
}
