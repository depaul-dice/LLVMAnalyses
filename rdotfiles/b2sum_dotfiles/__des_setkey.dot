digraph "CFG for '__des_setkey' function" {
	label="CFG for '__des_setkey' function";

	Node0x165ef90 [shape=record,label="{%2:\l  %3 = getelementptr inbounds i8, i8* %0, i64 3\l  %4 = load i8, i8* %3, align 1, !tbaa !1632\l  %5 = zext i8 %4 to i32\l  %6 = getelementptr inbounds i8, i8* %0, i64 2\l  %7 = load i8, i8* %6, align 1, !tbaa !1632\l  %8 = zext i8 %7 to i32\l  %9 = shl nuw nsw i32 %8, 8\l  %10 = or i32 %9, %5\l  %11 = getelementptr inbounds i8, i8* %0, i64 1\l  %12 = load i8, i8* %11, align 1, !tbaa !1632\l  %13 = zext i8 %12 to i32\l  %14 = shl nuw nsw i32 %13, 16\l  %15 = or i32 %10, %14\l  %16 = load i8, i8* %0, align 1, !tbaa !1632\l  %17 = zext i8 %16 to i32\l  %18 = shl nuw i32 %17, 24\l  %19 = or i32 %15, %18\l  %20 = getelementptr inbounds i8, i8* %0, i64 7\l  %21 = load i8, i8* %20, align 1, !tbaa !1632\l  %22 = zext i8 %21 to i32\l  %23 = getelementptr inbounds i8, i8* %0, i64 6\l  %24 = load i8, i8* %23, align 1, !tbaa !1632\l  %25 = zext i8 %24 to i32\l  %26 = shl nuw nsw i32 %25, 8\l  %27 = or i32 %26, %22\l  %28 = getelementptr inbounds i8, i8* %0, i64 5\l  %29 = load i8, i8* %28, align 1, !tbaa !1632\l  %30 = zext i8 %29 to i32\l  %31 = shl nuw nsw i32 %30, 16\l  %32 = or i32 %27, %31\l  %33 = getelementptr inbounds i8, i8* %0, i64 4\l  %34 = load i8, i8* %33, align 1, !tbaa !1632\l  %35 = zext i8 %34 to i32\l  %36 = shl nuw i32 %35, 24\l  %37 = or i32 %32, %36\l  br label %38\l}"];
	Node0x165ef90 -> Node0x165f080;
	Node0x165f080 [shape=record,label="{%38:\l38:                                               \l  %39 = phi i64 [ 0, %2 ], [ %75, %38 ]\l  %40 = phi i32 [ 0, %2 ], [ %56, %38 ]\l  %41 = phi i32 [ 0, %2 ], [ %74, %38 ]\l  %42 = phi i32 [ 28, %2 ], [ %76, %38 ]\l  %43 = shl nuw nsw i64 %39, 1\l  %44 = lshr i32 %19, %42\l  %45 = and i32 %44, 15\l  %46 = zext i32 %45 to i64\l  %47 = getelementptr inbounds [8 x [16 x i32]], [8 x [16 x i32]]*\l... @key_perm_maskl, i64 0, i64 %39, i64 %46\l  %48 = load i32, i32* %47, align 4, !tbaa !1635\l  %49 = add nuw nsw i64 %39, 4\l  %50 = lshr i32 %37, %42\l  %51 = and i32 %50, 15\l  %52 = zext i32 %51 to i64\l  %53 = getelementptr inbounds [8 x [16 x i32]], [8 x [16 x i32]]*\l... @key_perm_maskl, i64 0, i64 %49, i64 %52\l  %54 = load i32, i32* %53, align 4, !tbaa !1635\l  %55 = or i32 %48, %40\l  %56 = or i32 %55, %54\l  %57 = getelementptr inbounds [12 x [16 x i32]], [12 x [16 x i32]]*\l... @key_perm_maskr, i64 0, i64 %43, i64 %46\l  %58 = load i32, i32* %57, align 4, !tbaa !1635\l  %59 = add nsw i32 %42, -4\l  %60 = or i64 %43, 1\l  %61 = lshr i32 %19, %59\l  %62 = and i32 %61, 15\l  %63 = zext i32 %62 to i64\l  %64 = getelementptr inbounds [12 x [16 x i32]], [12 x [16 x i32]]*\l... @key_perm_maskr, i64 0, i64 %60, i64 %63\l  %65 = load i32, i32* %64, align 4, !tbaa !1635\l  %66 = add nuw nsw i64 %39, 8\l  %67 = lshr i32 %37, %59\l  %68 = and i32 %67, 15\l  %69 = zext i32 %68 to i64\l  %70 = getelementptr inbounds [12 x [16 x i32]], [12 x [16 x i32]]*\l... @key_perm_maskr, i64 0, i64 %66, i64 %69\l  %71 = load i32, i32* %70, align 4, !tbaa !1635\l  %72 = or i32 %58, %41\l  %73 = or i32 %72, %65\l  %74 = or i32 %73, %71\l  %75 = add nuw nsw i64 %39, 1\l  %76 = add nsw i32 %42, -8\l  %77 = icmp eq i64 %75, 4\l  br i1 %77, label %78, label %38\l|{<s0>T|<s1>F}}"];
	Node0x165f080:s0 -> Node0x165f0d0;
	Node0x165f080:s1 -> Node0x165f080;
	Node0x165f0d0 [shape=record,label="{%78:\l78:                                               \l  %79 = phi i64 [ %128, %125 ], [ 0, %38 ]\l  %80 = phi i32 [ %84, %125 ], [ 0, %38 ]\l  %81 = getelementptr inbounds [16 x i8], [16 x i8]* @key_shifts, i64 0, i64\l... %79\l  %82 = load i8, i8* %81, align 1, !tbaa !1632\l  %83 = zext i8 %82 to i32\l  %84 = add i32 %80, %83\l  %85 = shl i32 %56, %84\l  %86 = sub i32 28, %84\l  %87 = lshr i32 %56, %86\l  %88 = or i32 %87, %85\l  %89 = shl i32 %74, %84\l  %90 = lshr i32 %74, %86\l  %91 = or i32 %90, %89\l  br label %92\l}"];
	Node0x165f0d0 -> Node0x165f120;
	Node0x165f120 [shape=record,label="{%92:\l92:                                               \l  %93 = phi i64 [ 0, %78 ], [ %123, %92 ]\l  %94 = phi i32 [ 0, %78 ], [ %121, %92 ]\l  %95 = phi i32 [ 0, %78 ], [ %115, %92 ]\l  %96 = phi i32 [ 25, %78 ], [ %122, %92 ]\l  %97 = lshr i32 %88, %96\l  %98 = and i32 %97, 7\l  %99 = zext i32 %98 to i64\l  %100 = getelementptr inbounds [4 x [8 x i32]], [4 x [8 x i32]]*\l... @comp_maskl0, i64 0, i64 %93, i64 %99\l  %101 = load i32, i32* %100, align 4, !tbaa !1635\l  %102 = or i32 %101, %95\l  %103 = lshr i32 %91, %96\l  %104 = and i32 %103, 7\l  %105 = zext i32 %104 to i64\l  %106 = getelementptr inbounds [4 x [8 x i32]], [4 x [8 x i32]]*\l... @comp_maskr0, i64 0, i64 %93, i64 %105\l  %107 = load i32, i32* %106, align 4, !tbaa !1635\l  %108 = or i32 %107, %94\l  %109 = add nsw i32 %96, -4\l  %110 = lshr i32 %88, %109\l  %111 = and i32 %110, 15\l  %112 = zext i32 %111 to i64\l  %113 = getelementptr inbounds [4 x [16 x i32]], [4 x [16 x i32]]*\l... @comp_maskl1, i64 0, i64 %93, i64 %112\l  %114 = load i32, i32* %113, align 4, !tbaa !1635\l  %115 = or i32 %102, %114\l  %116 = lshr i32 %91, %109\l  %117 = and i32 %116, 15\l  %118 = zext i32 %117 to i64\l  %119 = getelementptr inbounds [4 x [16 x i32]], [4 x [16 x i32]]*\l... @comp_maskr1, i64 0, i64 %93, i64 %118\l  %120 = load i32, i32* %119, align 4, !tbaa !1635\l  %121 = or i32 %108, %120\l  %122 = add nsw i32 %96, -7\l  %123 = add nuw nsw i64 %93, 1\l  %124 = icmp eq i64 %123, 4\l  br i1 %124, label %125, label %92\l|{<s0>T|<s1>F}}"];
	Node0x165f120:s0 -> Node0x165f170;
	Node0x165f120:s1 -> Node0x165f120;
	Node0x165f170 [shape=record,label="{%125:\l125:                                              \l  %126 = getelementptr inbounds %struct.expanded_key, %struct.expanded_key*\l... %1, i64 0, i32 0, i64 %79\l  store i32 %115, i32* %126, align 4, !tbaa !1635\l  %127 = getelementptr inbounds %struct.expanded_key, %struct.expanded_key*\l... %1, i64 0, i32 1, i64 %79\l  store i32 %121, i32* %127, align 4, !tbaa !1635\l  %128 = add nuw nsw i64 %79, 1\l  %129 = icmp eq i64 %128, 16\l  br i1 %129, label %130, label %78\l|{<s0>T|<s1>F}}"];
	Node0x165f170:s0 -> Node0x165f1c0;
	Node0x165f170:s1 -> Node0x165f0d0;
	Node0x165f1c0 [shape=record,label="{%130:\l130:                                              \l  ret void\l}"];
}
