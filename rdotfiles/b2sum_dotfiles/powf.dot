digraph "CFG for 'powf' function" {
	label="CFG for 'powf' function";

	Node0x1e8f930 [shape=record,label="{%2:\l  %3 = alloca float, align 4\l  %4 = bitcast float %0 to i32\l  %5 = bitcast float %1 to i32\l  %6 = add i32 %4, -8388608\l  %7 = icmp ugt i32 %6, 2130706431\l  %8 = shl i32 %5, 1\l  %9 = add i32 %8, -1\l  br i1 %7, label %12, label %10, !prof !1632\l|{<s0>T|<s1>F}}"];
	Node0x1e8f930:s0 -> Node0x1e900e0[label="W:1"];
	Node0x1e8f930:s1 -> Node0x1e8f980[label="W:2000"];
	Node0x1e8f980 [shape=record,label="{%10:\l10:                                               \l  %11 = icmp ugt i32 %9, -16777218\l  br i1 %11, label %14, label %98, !prof !1632, !misexpect !1633\l|{<s0>T|<s1>F}}"];
	Node0x1e8f980:s0 -> Node0x1e90130[label="W:1"];
	Node0x1e8f980:s1 -> Node0x1e90810[label="W:2000"];
	Node0x1e900e0 [shape=record,label="{%12:\l12:                                               \l  %13 = icmp ult i32 %9, -16777217\l  br i1 %13, label %35, label %14, !prof !1634, !misexpect !1633\l|{<s0>T|<s1>F}}"];
	Node0x1e900e0:s0 -> Node0x1e90310[label="W:2000"];
	Node0x1e900e0:s1 -> Node0x1e90130[label="W:1"];
	Node0x1e90130 [shape=record,label="{%14:\l14:                                               \l  %15 = icmp eq i32 %8, 0\l  %16 = icmp eq i32 %4, 1065353216\l  %17 = or i1 %16, %15\l  br i1 %17, label %185, label %18\l|{<s0>T|<s1>F}}"];
	Node0x1e90130:s0 -> Node0x1e909f0;
	Node0x1e90130:s1 -> Node0x1e90180;
	Node0x1e90180 [shape=record,label="{%18:\l18:                                               \l  %19 = shl i32 %4, 1\l  %20 = icmp ugt i32 %19, -16777216\l  %21 = icmp ugt i32 %8, -16777216\l  %22 = or i1 %20, %21\l  br i1 %22, label %23, label %25\l|{<s0>T|<s1>F}}"];
	Node0x1e90180:s0 -> Node0x1e901d0;
	Node0x1e90180:s1 -> Node0x1e90220;
	Node0x1e901d0 [shape=record,label="{%23:\l23:                                               \l  %24 = tail call float @llvm.experimental.constrained.fadd.f32(float %0,\l... float %1, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  br label %185\l}"];
	Node0x1e901d0 -> Node0x1e909f0;
	Node0x1e90220 [shape=record,label="{%25:\l25:                                               \l  %26 = icmp eq i32 %19, 2130706432\l  br i1 %26, label %185, label %27\l|{<s0>T|<s1>F}}"];
	Node0x1e90220:s0 -> Node0x1e909f0;
	Node0x1e90220:s1 -> Node0x1e90270;
	Node0x1e90270 [shape=record,label="{%27:\l27:                                               \l  %28 = icmp ult i32 %19, 2130706432\l  %29 = zext i1 %28 to i32\l  %30 = lshr i32 %5, 31\l  %31 = xor i32 %30, 1\l  %32 = icmp eq i32 %31, %29\l  br i1 %32, label %185, label %33\l|{<s0>T|<s1>F}}"];
	Node0x1e90270:s0 -> Node0x1e909f0;
	Node0x1e90270:s1 -> Node0x1e902c0;
	Node0x1e902c0 [shape=record,label="{%33:\l33:                                               \l  %34 = tail call float @llvm.experimental.constrained.fmul.f32(float %1,\l... float %1, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  br label %185\l}"];
	Node0x1e902c0 -> Node0x1e909f0;
	Node0x1e90310 [shape=record,label="{%35:\l35:                                               \l  %36 = shl i32 %4, 1\l  %37 = add i32 %36, -1\l  %38 = icmp ult i32 %37, -16777217\l  br i1 %38, label %66, label %39, !prof !1634, !misexpect !1633\l|{<s0>T|<s1>F}}"];
	Node0x1e90310:s0 -> Node0x1e904f0[label="W:2000"];
	Node0x1e90310:s1 -> Node0x1e90360[label="W:1"];
	Node0x1e90360 [shape=record,label="{%39:\l39:                                               \l  %40 = tail call float @llvm.experimental.constrained.fmul.f32(float %0,\l... float %0, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %41 = icmp slt i32 %4, 0\l  br i1 %41, label %42, label %58\l|{<s0>T|<s1>F}}"];
	Node0x1e90360:s0 -> Node0x1e903b0;
	Node0x1e90360:s1 -> Node0x1e90450;
	Node0x1e903b0 [shape=record,label="{%42:\l42:                                               \l  %43 = lshr i32 %5, 23\l  %44 = and i32 %43, 255\l  %45 = add nsw i32 %44, -127\l  %46 = icmp ugt i32 %45, 23\l  br i1 %46, label %58, label %47\l|{<s0>T|<s1>F}}"];
	Node0x1e903b0:s0 -> Node0x1e90450;
	Node0x1e903b0:s1 -> Node0x1e90400;
	Node0x1e90400 [shape=record,label="{%47:\l47:                                               \l  %48 = sub nuw nsw i32 150, %44\l  %49 = shl nuw nsw i32 1, %48\l  %50 = add nsw i32 %49, -1\l  %51 = and i32 %50, %5\l  %52 = icmp ne i32 %51, 0\l  %53 = and i32 %49, %5\l  %54 = icmp eq i32 %53, 0\l  %55 = or i1 %54, %52\l  %56 = fneg float %40\l  %57 = select i1 %55, float %40, float %56\l  br label %58\l}"];
	Node0x1e90400 -> Node0x1e90450;
	Node0x1e90450 [shape=record,label="{%58:\l58:                                               \l  %59 = phi float [ %40, %39 ], [ %40, %42 ], [ %57, %47 ]\l  %60 = icmp slt i32 %5, 0\l  br i1 %60, label %61, label %185\l|{<s0>T|<s1>F}}"];
	Node0x1e90450:s0 -> Node0x1e904a0;
	Node0x1e90450:s1 -> Node0x1e909f0;
	Node0x1e904a0 [shape=record,label="{%61:\l61:                                               \l  %62 = tail call float @llvm.experimental.constrained.sitofp.f32.i32(i32 1,\l... metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %63 = tail call float @llvm.experimental.constrained.fdiv.f32(float %62,\l... float %59, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %64 = bitcast float* %3 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %64)\l  store volatile float %63, float* %3, align 4, !tbaa !1635\l  %65 = load volatile float, float* %3, align 4, !tbaa !1635\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %64)\l  br label %185\l}"];
	Node0x1e904a0 -> Node0x1e909f0;
	Node0x1e904f0 [shape=record,label="{%66:\l66:                                               \l  %67 = icmp slt i32 %4, 0\l  br i1 %67, label %68, label %89\l|{<s0>T|<s1>F}}"];
	Node0x1e904f0:s0 -> Node0x1e90540;
	Node0x1e904f0:s1 -> Node0x1e90770;
	Node0x1e90540 [shape=record,label="{%68:\l68:                                               \l  %69 = lshr i32 %5, 23\l  %70 = and i32 %69, 255\l  %71 = icmp ult i32 %70, 127\l  br i1 %71, label %87, label %72\l|{<s0>T|<s1>F}}"];
	Node0x1e90540:s0 -> Node0x1e90720;
	Node0x1e90540:s1 -> Node0x1e90590;
	Node0x1e90590 [shape=record,label="{%72:\l72:                                               \l  %73 = icmp ugt i32 %70, 150\l  br i1 %73, label %83, label %74\l|{<s0>T|<s1>F}}"];
	Node0x1e90590:s0 -> Node0x1e90680;
	Node0x1e90590:s1 -> Node0x1e905e0;
	Node0x1e905e0 [shape=record,label="{%74:\l74:                                               \l  %75 = sub nuw nsw i32 150, %70\l  %76 = shl nuw nsw i32 1, %75\l  %77 = add nsw i32 %76, -1\l  %78 = and i32 %77, %5\l  %79 = icmp eq i32 %78, 0\l  br i1 %79, label %80, label %87\l|{<s0>T|<s1>F}}"];
	Node0x1e905e0:s0 -> Node0x1e90630;
	Node0x1e905e0:s1 -> Node0x1e90720;
	Node0x1e90630 [shape=record,label="{%80:\l80:                                               \l  %81 = and i32 %76, %5\l  %82 = icmp eq i32 %81, 0\l  br i1 %82, label %83, label %84\l|{<s0>T|<s1>F}}"];
	Node0x1e90630:s0 -> Node0x1e90680;
	Node0x1e90630:s1 -> Node0x1e906d0;
	Node0x1e90680 [shape=record,label="{%83:\l83:                                               \l  br label %84\l}"];
	Node0x1e90680 -> Node0x1e906d0;
	Node0x1e906d0 [shape=record,label="{%84:\l84:                                               \l  %85 = phi i32 [ 0, %83 ], [ 65536, %80 ]\l  %86 = and i32 %4, 2147483647\l  br label %89\l}"];
	Node0x1e906d0 -> Node0x1e90770;
	Node0x1e90720 [shape=record,label="{%87:\l87:                                               \l  %88 = tail call float @__math_invalidf(float %0) #41\l  br label %185\l}"];
	Node0x1e90720 -> Node0x1e909f0;
	Node0x1e90770 [shape=record,label="{%89:\l89:                                               \l  %90 = phi i32 [ %4, %66 ], [ %86, %84 ]\l  %91 = phi i32 [ 0, %66 ], [ %85, %84 ]\l  %92 = icmp ult i32 %90, 8388608\l  br i1 %92, label %93, label %98\l|{<s0>T|<s1>F}}"];
	Node0x1e90770:s0 -> Node0x1e907c0;
	Node0x1e90770:s1 -> Node0x1e90810;
	Node0x1e907c0 [shape=record,label="{%93:\l93:                                               \l  %94 = tail call float @llvm.experimental.constrained.fmul.f32(float %0,\l... float 0x4160000000000000, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  %95 = bitcast float %94 to i32\l  %96 = and i32 %95, 2147483647\l  %97 = add nsw i32 %96, -192937984\l  br label %98\l}"];
	Node0x1e907c0 -> Node0x1e90810;
	Node0x1e90810 [shape=record,label="{%98:\l98:                                               \l  %99 = phi i32 [ %97, %93 ], [ %90, %89 ], [ %4, %10 ]\l  %100 = phi i32 [ %91, %93 ], [ %91, %89 ], [ 0, %10 ]\l  %101 = add nsw i32 %99, -1060306944\l  %102 = lshr i32 %101, 19\l  %103 = and i32 %102, 15\l  %104 = and i32 %101, -8388608\l  %105 = sub i32 %99, %104\l  %106 = ashr i32 %101, 23\l  %107 = zext i32 %103 to i64\l  %108 = getelementptr inbounds %struct.powf_log2_data,\l... %struct.powf_log2_data* @__powf_log2_data, i64 0, i32 0, i64 %107, i32 0\l  %109 = load double, double* %108, align 8, !tbaa !1639\l  %110 = getelementptr inbounds %struct.powf_log2_data,\l... %struct.powf_log2_data* @__powf_log2_data, i64 0, i32 0, i64 %107, i32 1\l  %111 = load double, double* %110, align 8, !tbaa !1642\l  %112 = bitcast i32 %105 to float\l  %113 = tail call double @llvm.experimental.constrained.fpext.f64.f32(float\l... %112, metadata !fpexcept.ignore) #42\l  %114 = tail call double @llvm.experimental.constrained.fmul.f64(double %113,\l... double %109, metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %115 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 1,\l... metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %116 = tail call double @llvm.experimental.constrained.fsub.f64(double %114,\l... double %115, metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %117 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32\l... %106, metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %118 = tail call double @llvm.experimental.constrained.fadd.f64(double %111,\l... double %117, metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %119 = tail call double @llvm.experimental.constrained.fmul.f64(double %116,\l... double %116, metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %120 = load double, double* getelementptr inbounds (%struct.powf_log2_data,\l... %struct.powf_log2_data* @__powf_log2_data, i64 0, i32 1, i64 0), align 8,\l... !tbaa !1643\l  %121 = tail call double @llvm.experimental.constrained.fmul.f64(double %120,\l... double %116, metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %122 = load double, double* getelementptr inbounds (%struct.powf_log2_data,\l... %struct.powf_log2_data* @__powf_log2_data, i64 0, i32 1, i64 1), align 8,\l... !tbaa !1643\l  %123 = tail call double @llvm.experimental.constrained.fadd.f64(double %121,\l... double %122, metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %124 = load double, double* getelementptr inbounds (%struct.powf_log2_data,\l... %struct.powf_log2_data* @__powf_log2_data, i64 0, i32 1, i64 2), align 8,\l... !tbaa !1643\l  %125 = tail call double @llvm.experimental.constrained.fmul.f64(double %124,\l... double %116, metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %126 = load double, double* getelementptr inbounds (%struct.powf_log2_data,\l... %struct.powf_log2_data* @__powf_log2_data, i64 0, i32 1, i64 3), align 8,\l... !tbaa !1643\l  %127 = tail call double @llvm.experimental.constrained.fadd.f64(double %125,\l... double %126, metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %128 = tail call double @llvm.experimental.constrained.fmul.f64(double %119,\l... double %119, metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %129 = load double, double* getelementptr inbounds (%struct.powf_log2_data,\l... %struct.powf_log2_data* @__powf_log2_data, i64 0, i32 1, i64 4), align 8,\l... !tbaa !1643\l  %130 = tail call double @llvm.experimental.constrained.fmul.f64(double %129,\l... double %116, metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %131 = tail call double @llvm.experimental.constrained.fadd.f64(double %130,\l... double %118, metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %132 = tail call double @llvm.experimental.constrained.fmul.f64(double %127,\l... double %119, metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %133 = tail call double @llvm.experimental.constrained.fadd.f64(double %132,\l... double %131, metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %134 = tail call double @llvm.experimental.constrained.fmul.f64(double %123,\l... double %128, metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %135 = tail call double @llvm.experimental.constrained.fadd.f64(double %134,\l... double %133, metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %136 = tail call double @llvm.experimental.constrained.fpext.f64.f32(float\l... %1, metadata !fpexcept.ignore) #40\l  %137 = tail call double @llvm.experimental.constrained.fmul.f64(double %136,\l... double %135, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %138 = bitcast double %137 to i64\l  %139 = lshr i64 %138, 47\l  %140 = and i64 %139, 65535\l  %141 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 1,\l... metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %142 = tail call double @llvm.experimental.constrained.fmul.f64(double\l... 1.260000e+02, double %141, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  %143 = bitcast double %142 to i64\l  %144 = lshr i64 %143, 47\l  %145 = icmp ult i64 %140, %144\l  br i1 %145, label %158, label %146, !prof !1634, !misexpect !1633\l|{<s0>T|<s1>F}}"];
	Node0x1e90810:s0 -> Node0x1e909a0[label="W:2000"];
	Node0x1e90810:s1 -> Node0x1e90860[label="W:1"];
	Node0x1e90860 [shape=record,label="{%146:\l146:                                              \l  %147 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 1,\l... metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %148 = tail call double @llvm.experimental.constrained.fmul.f64(double\l... 0x405FFFFFFFD1D571, double %147, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  %149 = tail call i1 @llvm.experimental.constrained.fcmps.f64(double %137,\l... double %148, metadata !ogt, metadata !fpexcept.ignore) #40\l  br i1 %149, label %150, label %152\l|{<s0>T|<s1>F}}"];
	Node0x1e90860:s0 -> Node0x1e908b0;
	Node0x1e90860:s1 -> Node0x1e90900;
	Node0x1e908b0 [shape=record,label="{%150:\l150:                                              \l  %151 = tail call float @__math_oflowf(i32 %100) #41\l  br label %185\l}"];
	Node0x1e908b0 -> Node0x1e909f0;
	Node0x1e90900 [shape=record,label="{%152:\l152:                                              \l  %153 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 1,\l... metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %154 = tail call double @llvm.experimental.constrained.fmul.f64(double\l... -1.500000e+02, double %153, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  %155 = tail call i1 @llvm.experimental.constrained.fcmps.f64(double %137,\l... double %154, metadata !ole, metadata !fpexcept.ignore) #40\l  br i1 %155, label %156, label %158\l|{<s0>T|<s1>F}}"];
	Node0x1e90900:s0 -> Node0x1e90950;
	Node0x1e90900:s1 -> Node0x1e909a0;
	Node0x1e90950 [shape=record,label="{%156:\l156:                                              \l  %157 = tail call float @__math_uflowf(i32 %100) #41\l  br label %185\l}"];
	Node0x1e90950 -> Node0x1e909f0;
	Node0x1e909a0 [shape=record,label="{%158:\l158:                                              \l  %159 = load double, double* getelementptr inbounds (%struct.exp2f_data,\l... %struct.exp2f_data* @__exp2f_data, i64 0, i32 1), align 8, !tbaa !1644\l  %160 = tail call double @llvm.experimental.constrained.fadd.f64(double %137,\l... double %159, metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %161 = bitcast double %160 to i64\l  %162 = tail call double @llvm.experimental.constrained.fsub.f64(double %160,\l... double %159, metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %163 = tail call double @llvm.experimental.constrained.fsub.f64(double %137,\l... double %162, metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %164 = and i64 %161, 31\l  %165 = getelementptr inbounds %struct.exp2f_data, %struct.exp2f_data*\l... @__exp2f_data, i64 0, i32 0, i64 %164\l  %166 = load i64, i64* %165, align 8, !tbaa !1646\l  %167 = zext i32 %100 to i64\l  %168 = add i64 %161, %167\l  %169 = shl i64 %168, 47\l  %170 = add i64 %166, %169\l  %171 = bitcast i64 %170 to double\l  %172 = load double, double* getelementptr inbounds (%struct.exp2f_data,\l... %struct.exp2f_data* @__exp2f_data, i64 0, i32 2, i64 0), align 8, !tbaa !1643\l  %173 = tail call double @llvm.experimental.constrained.fmul.f64(double %172,\l... double %163, metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %174 = load double, double* getelementptr inbounds (%struct.exp2f_data,\l... %struct.exp2f_data* @__exp2f_data, i64 0, i32 2, i64 1), align 8, !tbaa !1643\l  %175 = tail call double @llvm.experimental.constrained.fadd.f64(double %173,\l... double %174, metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %176 = tail call double @llvm.experimental.constrained.fmul.f64(double %163,\l... double %163, metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %177 = load double, double* getelementptr inbounds (%struct.exp2f_data,\l... %struct.exp2f_data* @__exp2f_data, i64 0, i32 2, i64 2), align 8, !tbaa !1643\l  %178 = tail call double @llvm.experimental.constrained.fmul.f64(double %177,\l... double %163, metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %179 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 1,\l... metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %180 = tail call double @llvm.experimental.constrained.fadd.f64(double %178,\l... double %179, metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %181 = tail call double @llvm.experimental.constrained.fmul.f64(double %175,\l... double %176, metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %182 = tail call double @llvm.experimental.constrained.fadd.f64(double %181,\l... double %180, metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %183 = tail call double @llvm.experimental.constrained.fmul.f64(double %182,\l... double %171, metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  %184 = tail call float @llvm.experimental.constrained.fptrunc.f32.f64(double\l... %183, metadata !round.dynamic, metadata !fpexcept.ignore) #42\l  br label %185\l}"];
	Node0x1e909a0 -> Node0x1e909f0;
	Node0x1e909f0 [shape=record,label="{%185:\l185:                                              \l  %186 = phi float [ %24, %23 ], [ %34, %33 ], [ %88, %87 ], [ 1.000000e+00,\l... %14 ], [ 1.000000e+00, %25 ], [ 0.000000e+00, %27 ], [ %65, %61 ], [ %59, %58\l... ], [ %151, %150 ], [ %157, %156 ], [ %184, %158 ]\l  ret float %186\l}"];
}
