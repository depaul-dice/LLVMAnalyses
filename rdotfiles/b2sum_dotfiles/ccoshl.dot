digraph "CFG for 'ccoshl' function" {
	label="CFG for 'ccoshl' function";

	Node0x1caefd0 [shape=record,label="{%1:\l  %2 = getelementptr inbounds \{ x86_fp80, x86_fp80 \}, \{ x86_fp80, x86_fp80 \}*\l... %0, i64 0, i32 0\l  %3 = load x86_fp80, x86_fp80* %2, align 16\l  %4 = getelementptr inbounds \{ x86_fp80, x86_fp80 \}, \{ x86_fp80, x86_fp80 \}*\l... %0, i64 0, i32 1\l  %5 = load x86_fp80, x86_fp80* %4, align 16\l  %6 = tail call double\l... @llvm.experimental.constrained.fptrunc.f64.f80(x86_fp80 %3, metadata\l... !round.dynamic, metadata !fpexcept.ignore) #40\l  %7 = tail call double\l... @llvm.experimental.constrained.fptrunc.f64.f80(x86_fp80 %5, metadata\l... !round.dynamic, metadata !fpexcept.ignore) #40\l  %8 = tail call \{ double, double \} @ccosh(double %6, double %7) #41\l  %9 = extractvalue \{ double, double \} %8, 0\l  %10 = extractvalue \{ double, double \} %8, 1\l  %11 = tail call x86_fp80 @llvm.experimental.constrained.fpext.f80.f64(double\l... %9, metadata !fpexcept.ignore) #40\l  %12 = tail call x86_fp80 @llvm.experimental.constrained.fpext.f80.f64(double\l... %10, metadata !fpexcept.ignore) #40\l  %13 = insertvalue \{ x86_fp80, x86_fp80 \} undef, x86_fp80 %11, 0\l  %14 = insertvalue \{ x86_fp80, x86_fp80 \} %13, x86_fp80 %12, 1\l  ret \{ x86_fp80, x86_fp80 \} %14\l}"];
}
