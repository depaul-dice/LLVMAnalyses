digraph "CFG for 'trinkle' function" {
	label="CFG for 'trinkle' function";

	Node0x197d0c0 [shape=record,label="{%7:\l  %8 = alloca [113 x i8*], align 16\l  %9 = bitcast [113 x i8*]* %8 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 904, i8* nonnull %9) #40\l  %10 = load i64, i64* %3, align 8, !tbaa !1632\l  %11 = getelementptr inbounds i64, i64* %3, i64 1\l  %12 = load i64, i64* %11, align 8, !tbaa !1632\l  %13 = getelementptr inbounds [113 x i8*], [113 x i8*]* %8, i64 0, i64 0\l  store i8* %0, i8** %13, align 16, !tbaa !1636\l  %14 = icmp ne i64 %10, 1\l  %15 = icmp ne i64 %12, 0\l  %16 = or i1 %15, %14\l  br i1 %16, label %17, label %99\l|{<s0>T|<s1>F}}"];
	Node0x197d0c0:s0 -> Node0x197d2c0;
	Node0x197d0c0:s1 -> Node0x197d630;
	Node0x197d2c0 [shape=record,label="{%17:\l17:                                               \l  %18 = sub i64 0, %1\l  %19 = sext i32 %4 to i64\l  %20 = getelementptr inbounds i64, i64* %6, i64 %19\l  %21 = load i64, i64* %20, align 8, !tbaa !1632\l  %22 = sub i64 0, %21\l  %23 = getelementptr inbounds i8, i8* %0, i64 %22\l  %24 = tail call i32 %2(i8* %23, i8* %0) #41\l  %25 = icmp slt i32 %24, 1\l  br i1 %25, label %99, label %26\l|{<s0>T|<s1>F}}"];
	Node0x197d2c0:s0 -> Node0x197d630;
	Node0x197d2c0:s1 -> Node0x197d310;
	Node0x197d310 [shape=record,label="{%26:\l26:                                               \l  %27 = icmp eq i32 %5, 0\l  br label %28\l}"];
	Node0x197d310 -> Node0x197d360;
	Node0x197d360 [shape=record,label="{%28:\l28:                                               \l  %29 = phi i8* [ %23, %26 ], [ %94, %88 ]\l  %30 = phi i64 [ %12, %26 ], [ %83, %88 ]\l  %31 = phi i64 [ %10, %26 ], [ %82, %88 ]\l  %32 = phi i1 [ %27, %26 ], [ true, %88 ]\l  %33 = phi i32 [ %4, %26 ], [ %84, %88 ]\l  %34 = phi i32 [ 1, %26 ], [ %54, %88 ]\l  %35 = phi i8* [ %0, %26 ], [ %29, %88 ]\l  %36 = phi i64 [ 1, %26 ], [ %53, %88 ]\l  %37 = icmp sgt i32 %33, 1\l  %38 = and i1 %32, %37\l  br i1 %38, label %39, label %52\l|{<s0>T|<s1>F}}"];
	Node0x197d360:s0 -> Node0x197d3b0;
	Node0x197d360:s1 -> Node0x197d450;
	Node0x197d3b0 [shape=record,label="{%39:\l39:                                               \l  %40 = getelementptr inbounds i8, i8* %35, i64 %18\l  %41 = add nsw i32 %33, -2\l  %42 = sext i32 %41 to i64\l  %43 = getelementptr inbounds i64, i64* %6, i64 %42\l  %44 = load i64, i64* %43, align 8, !tbaa !1632\l  %45 = tail call i32 %2(i8* %40, i8* %29) #41\l  %46 = icmp sgt i32 %45, -1\l  br i1 %46, label %105, label %47\l|{<s0>T|<s1>F}}"];
	Node0x197d3b0:s0 -> Node0x197d680;
	Node0x197d3b0:s1 -> Node0x197d400;
	Node0x197d400 [shape=record,label="{%47:\l47:                                               \l  %48 = sub i64 0, %44\l  %49 = getelementptr inbounds i8, i8* %40, i64 %48\l  %50 = tail call i32 %2(i8* %49, i8* %29) #41\l  %51 = icmp sgt i32 %50, -1\l  br i1 %51, label %107, label %52\l|{<s0>T|<s1>F}}"];
	Node0x197d400:s0 -> Node0x197d6d0;
	Node0x197d400:s1 -> Node0x197d450;
	Node0x197d450 [shape=record,label="{%52:\l52:                                               \l  %53 = add nuw i64 %36, 1\l  %54 = add nuw nsw i32 %34, 1\l  %55 = getelementptr inbounds [113 x i8*], [113 x i8*]* %8, i64 0, i64 %36\l  store i8* %29, i8** %55, align 8, !tbaa !1636\l  %56 = add i64 %31, -1\l  %57 = tail call i64 asm bsf $1,$0, =r,r,~\{dirflag\},~\{fpsr\},~\{flags\}(i64\l... %56) #42, !srcloc !1638\l  %58 = trunc i64 %57 to i32\l  %59 = icmp eq i32 %58, 0\l  br i1 %59, label %60, label %65\l|{<s0>T|<s1>F}}"];
	Node0x197d450:s0 -> Node0x197d4a0;
	Node0x197d450:s1 -> Node0x197d4f0;
	Node0x197d4a0 [shape=record,label="{%60:\l60:                                               \l  %61 = tail call i64 asm bsf $1,$0, =r,r,~\{dirflag\},~\{fpsr\},~\{flags\}(i64\l... %30) #42, !srcloc !1638\l  %62 = trunc i64 %61 to i32\l  %63 = add i32 %62, 64\l  %64 = icmp eq i32 %62, 0\l  br i1 %64, label %72, label %65\l|{<s0>T|<s1>F}}"];
	Node0x197d4a0:s0 -> Node0x197d540;
	Node0x197d4a0:s1 -> Node0x197d4f0;
	Node0x197d4f0 [shape=record,label="{%65:\l65:                                               \l  %66 = phi i32 [ %63, %60 ], [ %58, %52 ]\l  %67 = icmp ugt i32 %66, 63\l  %68 = add i32 %66, -64\l  %69 = select i1 %67, i64 0, i64 %30\l  %70 = select i1 %67, i64 %30, i64 %31\l  %71 = select i1 %67, i32 %68, i32 %66\l  br label %72\l}"];
	Node0x197d4f0 -> Node0x197d540;
	Node0x197d540 [shape=record,label="{%72:\l72:                                               \l  %73 = phi i32 [ 0, %60 ], [ %66, %65 ]\l  %74 = phi i64 [ %30, %60 ], [ %69, %65 ]\l  %75 = phi i64 [ %31, %60 ], [ %70, %65 ]\l  %76 = phi i32 [ 0, %60 ], [ %71, %65 ]\l  %77 = zext i32 %76 to i64\l  %78 = lshr i64 %75, %77\l  %79 = sext i32 %76 to i64\l  %80 = sub nsw i64 64, %79\l  %81 = shl i64 %74, %80\l  %82 = or i64 %81, %78\l  %83 = lshr i64 %74, %77\l  %84 = add nsw i32 %73, %33\l  %85 = icmp ne i64 %82, 1\l  %86 = icmp ne i64 %83, 0\l  %87 = or i1 %86, %85\l  br i1 %87, label %88, label %109\l|{<s0>T|<s1>F}}"];
	Node0x197d540:s0 -> Node0x197d590;
	Node0x197d540:s1 -> Node0x197d720;
	Node0x197d590 [shape=record,label="{%88:\l88:                                               \l  %89 = load i8*, i8** %13, align 16, !tbaa !1636\l  %90 = sext i32 %84 to i64\l  %91 = getelementptr inbounds i64, i64* %6, i64 %90\l  %92 = load i64, i64* %91, align 8, !tbaa !1632\l  %93 = sub i64 0, %92\l  %94 = getelementptr inbounds i8, i8* %29, i64 %93\l  %95 = tail call i32 %2(i8* %94, i8* %89) #41\l  %96 = icmp slt i32 %95, 1\l  br i1 %96, label %97, label %28\l|{<s0>T|<s1>F}}"];
	Node0x197d590:s0 -> Node0x197d5e0;
	Node0x197d590:s1 -> Node0x197d360;
	Node0x197d5e0 [shape=record,label="{%97:\l97:                                               \l  %98 = trunc i64 %53 to i32\l  br label %99\l}"];
	Node0x197d5e0 -> Node0x197d630;
	Node0x197d630 [shape=record,label="{%99:\l99:                                               \l  %100 = phi i32 [ %5, %7 ], [ 0, %97 ], [ %5, %17 ]\l  %101 = phi i32 [ %4, %7 ], [ %84, %97 ], [ %4, %17 ]\l  %102 = phi i32 [ 1, %7 ], [ %98, %97 ], [ 1, %17 ]\l  %103 = phi i8* [ %0, %7 ], [ %29, %97 ], [ %0, %17 ]\l  %104 = icmp eq i32 %100, 0\l  br i1 %104, label %109, label %113\l|{<s0>T|<s1>F}}"];
	Node0x197d630:s0 -> Node0x197d720;
	Node0x197d630:s1 -> Node0x197d770;
	Node0x197d680 [shape=record,label="{%105:\l105:                                              \l  %106 = trunc i64 %36 to i32\l  br label %109\l}"];
	Node0x197d680 -> Node0x197d720;
	Node0x197d6d0 [shape=record,label="{%107:\l107:                                              \l  %108 = trunc i64 %36 to i32\l  br label %109\l}"];
	Node0x197d6d0 -> Node0x197d720;
	Node0x197d720 [shape=record,label="{%109:\l109:                                              \l  %110 = phi i32 [ %101, %99 ], [ %33, %105 ], [ %33, %107 ], [ %84, %72 ]\l  %111 = phi i32 [ %102, %99 ], [ %106, %105 ], [ %108, %107 ], [ %54, %72 ]\l  %112 = phi i8* [ %103, %99 ], [ %35, %105 ], [ %35, %107 ], [ %29, %72 ]\l  call fastcc void @cycle(i64 %1, i8** nonnull %13, i32 %111) #43\l  tail call fastcc void @sift(i8* %112, i64 %1, i32 (i8*, i8*)* %2, i32 %110,\l... i64* %6) #43\l  br label %113\l}"];
	Node0x197d720 -> Node0x197d770;
	Node0x197d770 [shape=record,label="{%113:\l113:                                              \l  call void @llvm.lifetime.end.p0i8(i64 904, i8* nonnull %9) #40\l  ret void\l}"];
}
