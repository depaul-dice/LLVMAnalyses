digraph "CFG for 'sinhl' function" {
	label="CFG for 'sinhl' function";

	Node0x1eef910 [shape=record,label="{%1:\l  %2 = bitcast x86_fp80 %0 to i80\l  %3 = lshr i80 %2, 64\l  %4 = trunc i80 %3 to i32\l  %5 = and i32 %4, 32767\l  %6 = tail call x86_fp80 @llvm.experimental.constrained.fpext.f80.f64(double\l... 5.000000e-01, metadata !fpexcept.ignore) #40\l  %7 = trunc i80 %3 to i16\l  %8 = icmp slt i16 %7, 0\l  %9 = fneg x86_fp80 %6\l  %10 = select i1 %8, x86_fp80 %9, x86_fp80 %6\l  %11 = zext i32 %5 to i80\l  %12 = shl nuw nsw i80 %11, 64\l  %13 = and i80 %2, 18446744073709551615\l  %14 = or i80 %12, %13\l  %15 = bitcast i80 %14 to x86_fp80\l  %16 = icmp ult i32 %5, 16396\l  br i1 %16, label %24, label %17\l|{<s0>T|<s1>F}}"];
	Node0x1eef910:s0 -> Node0x1eefa00;
	Node0x1eef910:s1 -> Node0x1eef960;
	Node0x1eef960 [shape=record,label="{%17:\l17:                                               \l  %18 = icmp eq i32 %5, 16396\l  %19 = trunc i80 %2 to i64\l  %20 = icmp ult i64 %19, -5660435432026931200\l  %21 = and i1 %20, %18\l  br i1 %21, label %22, label %45\l|{<s0>T|<s1>F}}"];
	Node0x1eef960:s0 -> Node0x1eef9b0;
	Node0x1eef960:s1 -> Node0x1eefb40;
	Node0x1eef9b0 [shape=record,label="{%22:\l22:                                               \l  %23 = tail call x86_fp80 @expm1l(x86_fp80 %15) #41\l  br label %38\l}"];
	Node0x1eef9b0 -> Node0x1eefaf0;
	Node0x1eefa00 [shape=record,label="{%24:\l24:                                               \l  %25 = tail call x86_fp80 @expm1l(x86_fp80 %15) #41\l  %26 = icmp ult i32 %5, 16383\l  br i1 %26, label %27, label %38\l|{<s0>T|<s1>F}}"];
	Node0x1eefa00:s0 -> Node0x1eefa50;
	Node0x1eefa00:s1 -> Node0x1eefaf0;
	Node0x1eefa50 [shape=record,label="{%27:\l27:                                               \l  %28 = icmp ult i32 %5, 16351\l  br i1 %28, label %51, label %29\l|{<s0>T|<s1>F}}"];
	Node0x1eefa50:s0 -> Node0x1eefb90;
	Node0x1eefa50:s1 -> Node0x1eefaa0;
	Node0x1eefaa0 [shape=record,label="{%29:\l29:                                               \l  %30 = tail call x86_fp80 @llvm.experimental.constrained.sitofp.f80.i32(i32\l... 2, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %31 = tail call x86_fp80 @llvm.experimental.constrained.fmul.f80(x86_fp80\l... %30, x86_fp80 %25, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %32 = tail call x86_fp80 @llvm.experimental.constrained.fmul.f80(x86_fp80\l... %25, x86_fp80 %25, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %33 = tail call x86_fp80 @llvm.experimental.constrained.sitofp.f80.i32(i32\l... 1, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %34 = tail call x86_fp80 @llvm.experimental.constrained.fadd.f80(x86_fp80\l... %33, x86_fp80 %25, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %35 = tail call x86_fp80 @llvm.experimental.constrained.fdiv.f80(x86_fp80\l... %32, x86_fp80 %34, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %36 = tail call x86_fp80 @llvm.experimental.constrained.fsub.f80(x86_fp80\l... %31, x86_fp80 %35, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %37 = tail call x86_fp80 @llvm.experimental.constrained.fmul.f80(x86_fp80\l... %10, x86_fp80 %36, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  br label %51\l}"];
	Node0x1eefaa0 -> Node0x1eefb90;
	Node0x1eefaf0 [shape=record,label="{%38:\l38:                                               \l  %39 = phi x86_fp80 [ %23, %22 ], [ %25, %24 ]\l  %40 = tail call x86_fp80 @llvm.experimental.constrained.sitofp.f80.i32(i32\l... 1, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %41 = tail call x86_fp80 @llvm.experimental.constrained.fadd.f80(x86_fp80\l... %39, x86_fp80 %40, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %42 = tail call x86_fp80 @llvm.experimental.constrained.fdiv.f80(x86_fp80\l... %39, x86_fp80 %41, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %43 = tail call x86_fp80 @llvm.experimental.constrained.fadd.f80(x86_fp80\l... %39, x86_fp80 %42, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %44 = tail call x86_fp80 @llvm.experimental.constrained.fmul.f80(x86_fp80\l... %10, x86_fp80 %43, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  br label %51\l}"];
	Node0x1eefaf0 -> Node0x1eefb90;
	Node0x1eefb40 [shape=record,label="{%45:\l45:                                               \l  %46 = tail call x86_fp80 @llvm.experimental.constrained.fpext.f80.f64(double\l... 5.000000e-01, metadata !fpexcept.ignore) #40\l  %47 = tail call x86_fp80 @llvm.experimental.constrained.fmul.f80(x86_fp80\l... %46, x86_fp80 %15, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %48 = tail call x86_fp80 @expl(x86_fp80 %47) #41\l  %49 = tail call x86_fp80 @llvm.experimental.constrained.fmul.f80(x86_fp80\l... %10, x86_fp80 %48, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %50 = tail call x86_fp80 @llvm.experimental.constrained.fmul.f80(x86_fp80\l... %49, x86_fp80 %48, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  br label %51\l}"];
	Node0x1eefb40 -> Node0x1eefb90;
	Node0x1eefb90 [shape=record,label="{%51:\l51:                                               \l  %52 = phi x86_fp80 [ %37, %29 ], [ %44, %38 ], [ %50, %45 ], [ %0, %27 ]\l  ret x86_fp80 %52\l}"];
}
