digraph "CFG for '__tan' function" {
	label="CFG for '__tan' function";

	Node0x19d6a40 [shape=record,label="{%3:\l  %4 = bitcast double %0 to i64\l  %5 = and i64 %4, 9223372002495037440\l  %6 = icmp ugt i64 %5, 4604249089280835584\l  br i1 %6, label %7, label %18\l|{<s0>T|<s1>F}}"];
	Node0x19d6a40:s0 -> Node0x19d6b50;
	Node0x19d6a40:s1 -> Node0x19d6ba0;
	Node0x19d6b50 [shape=record,label="{%7:\l7:                                                \l  %8 = lshr i64 %4, 63\l  %9 = trunc i64 %8 to i32\l  %10 = icmp slt i64 %4, 0\l  %11 = fneg double %0\l  %12 = fneg double %1\l  %13 = select i1 %10, double %12, double %1\l  %14 = select i1 %10, double %11, double %0\l  %15 = tail call double @llvm.experimental.constrained.fsub.f64(double\l... 0x3FE921FB54442D18, double %14, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  %16 = tail call double @llvm.experimental.constrained.fsub.f64(double\l... 0x3C81A62633145C07, double %13, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  %17 = tail call double @llvm.experimental.constrained.fadd.f64(double %15,\l... double %16, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  br label %18\l}"];
	Node0x19d6b50 -> Node0x19d6ba0;
	Node0x19d6ba0 [shape=record,label="{%18:\l18:                                               \l  %19 = phi i32 [ %9, %7 ], [ undef, %3 ]\l  %20 = phi double [ 0.000000e+00, %7 ], [ %1, %3 ]\l  %21 = phi double [ %17, %7 ], [ %0, %3 ]\l  %22 = tail call double @llvm.experimental.constrained.fmul.f64(double %21,\l... double %21, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %23 = tail call double @llvm.experimental.constrained.fmul.f64(double %22,\l... double %22, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %24 = tail call double @llvm.experimental.constrained.fmul.f64(double %23,\l... double 0xBEF375CBDB605373, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  %25 = tail call double @llvm.experimental.constrained.fadd.f64(double\l... 0x3F147E88A03792A6, double %24, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  %26 = tail call double @llvm.experimental.constrained.fmul.f64(double %23,\l... double %25, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %27 = tail call double @llvm.experimental.constrained.fadd.f64(double\l... 0x3F4344D8F2F26501, double %26, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  %28 = tail call double @llvm.experimental.constrained.fmul.f64(double %23,\l... double %27, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %29 = tail call double @llvm.experimental.constrained.fadd.f64(double\l... 0x3F6D6D22C9560328, double %28, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  %30 = tail call double @llvm.experimental.constrained.fmul.f64(double %23,\l... double %29, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %31 = tail call double @llvm.experimental.constrained.fadd.f64(double\l... 0x3F9664F48406D637, double %30, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  %32 = tail call double @llvm.experimental.constrained.fmul.f64(double %23,\l... double %31, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %33 = tail call double @llvm.experimental.constrained.fadd.f64(double\l... 0x3FC111111110FE7A, double %32, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  %34 = tail call double @llvm.experimental.constrained.fmul.f64(double %23,\l... double 0x3EFB2A7074BF7AD4, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  %35 = tail call double @llvm.experimental.constrained.fadd.f64(double\l... 0x3F12B80F32F0A7E9, double %34, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  %36 = tail call double @llvm.experimental.constrained.fmul.f64(double %23,\l... double %35, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %37 = tail call double @llvm.experimental.constrained.fadd.f64(double\l... 0x3F3026F71A8D1068, double %36, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  %38 = tail call double @llvm.experimental.constrained.fmul.f64(double %23,\l... double %37, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %39 = tail call double @llvm.experimental.constrained.fadd.f64(double\l... 0x3F57DBC8FEE08315, double %38, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  %40 = tail call double @llvm.experimental.constrained.fmul.f64(double %23,\l... double %39, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %41 = tail call double @llvm.experimental.constrained.fadd.f64(double\l... 0x3F8226E3E96E8493, double %40, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  %42 = tail call double @llvm.experimental.constrained.fmul.f64(double %23,\l... double %41, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %43 = tail call double @llvm.experimental.constrained.fadd.f64(double\l... 0x3FABA1BA1BB341FE, double %42, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  %44 = tail call double @llvm.experimental.constrained.fmul.f64(double %22,\l... double %43, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %45 = tail call double @llvm.experimental.constrained.fmul.f64(double %22,\l... double %21, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %46 = tail call double @llvm.experimental.constrained.fadd.f64(double %33,\l... double %44, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %47 = tail call double @llvm.experimental.constrained.fmul.f64(double %45,\l... double %46, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %48 = tail call double @llvm.experimental.constrained.fadd.f64(double %47,\l... double %20, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %49 = tail call double @llvm.experimental.constrained.fmul.f64(double %22,\l... double %48, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %50 = tail call double @llvm.experimental.constrained.fadd.f64(double %20,\l... double %49, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %51 = tail call double @llvm.experimental.constrained.fmul.f64(double %45,\l... double 0x3FD5555555555563, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  %52 = tail call double @llvm.experimental.constrained.fadd.f64(double %50,\l... double %51, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %53 = tail call double @llvm.experimental.constrained.fadd.f64(double %21,\l... double %52, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  br i1 %6, label %54, label %68\l|{<s0>T|<s1>F}}"];
	Node0x19d6ba0:s0 -> Node0x19d6bf0;
	Node0x19d6ba0:s1 -> Node0x19d6c40;
	Node0x19d6bf0 [shape=record,label="{%54:\l54:                                               \l  %55 = shl nsw i32 %2, 1\l  %56 = sub nsw i32 1, %55\l  %57 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32\l... %56, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %58 = tail call double @llvm.experimental.constrained.fmul.f64(double %53,\l... double %53, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %59 = tail call double @llvm.experimental.constrained.fadd.f64(double %53,\l... double %57, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %60 = tail call double @llvm.experimental.constrained.fdiv.f64(double %58,\l... double %59, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %61 = tail call double @llvm.experimental.constrained.fsub.f64(double %52,\l... double %60, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %62 = tail call double @llvm.experimental.constrained.fadd.f64(double %21,\l... double %61, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %63 = tail call double @llvm.experimental.constrained.fmul.f64(double\l... 2.000000e+00, double %62, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  %64 = tail call double @llvm.experimental.constrained.fsub.f64(double %57,\l... double %63, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %65 = icmp eq i32 %19, 0\l  %66 = fneg double %64\l  %67 = select i1 %65, double %64, double %66\l  br label %86\l}"];
	Node0x19d6bf0 -> Node0x19d6ce0;
	Node0x19d6c40 [shape=record,label="{%68:\l68:                                               \l  %69 = icmp eq i32 %2, 0\l  br i1 %69, label %86, label %70\l|{<s0>T|<s1>F}}"];
	Node0x19d6c40:s0 -> Node0x19d6ce0;
	Node0x19d6c40:s1 -> Node0x19d6c90;
	Node0x19d6c90 [shape=record,label="{%70:\l70:                                               \l  %71 = bitcast double %53 to i64\l  %72 = and i64 %71, -4294967296\l  %73 = bitcast i64 %72 to double\l  %74 = tail call double @llvm.experimental.constrained.fsub.f64(double %73,\l... double %21, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %75 = tail call double @llvm.experimental.constrained.fsub.f64(double %52,\l... double %74, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %76 = tail call double @llvm.experimental.constrained.fdiv.f64(double\l... -1.000000e+00, double %53, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  %77 = bitcast double %76 to i64\l  %78 = and i64 %77, -4294967296\l  %79 = bitcast i64 %78 to double\l  %80 = tail call double @llvm.experimental.constrained.fmul.f64(double %79,\l... double %73, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %81 = tail call double @llvm.experimental.constrained.fadd.f64(double\l... 1.000000e+00, double %80, metadata !round.dynamic, metadata\l... !fpexcept.ignore) #40\l  %82 = tail call double @llvm.experimental.constrained.fmul.f64(double %79,\l... double %75, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %83 = tail call double @llvm.experimental.constrained.fadd.f64(double %81,\l... double %82, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %84 = tail call double @llvm.experimental.constrained.fmul.f64(double %76,\l... double %83, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %85 = tail call double @llvm.experimental.constrained.fadd.f64(double %79,\l... double %84, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  br label %86\l}"];
	Node0x19d6c90 -> Node0x19d6ce0;
	Node0x19d6ce0 [shape=record,label="{%86:\l86:                                               \l  %87 = phi double [ %67, %54 ], [ %85, %70 ], [ %53, %68 ]\l  ret double %87\l}"];
}
