digraph "CFG for 'ftrylockfile' function" {
	label="CFG for 'ftrylockfile' function";

	Node0x1b78b00 [shape=record,label="{%1:\l  %2 = tail call %struct.__pthread* asm mov %fs:0,$0,\l... =r,~\{dirflag\},~\{fpsr\},~\{flags\}() #40, !srcloc !1632\l  %3 = getelementptr inbounds %struct.__pthread, %struct.__pthread* %2, i64 0,\l... i32 7\l  %4 = load i32, i32* %3, align 8, !tbaa !1633\l  %5 = getelementptr inbounds %struct._IO_FILE.0, %struct._IO_FILE.0* %0, i64\l... 0, i32 19\l  %6 = load volatile i32, i32* %5, align 4, !tbaa !1641\l  %7 = and i32 %6, -1073741825\l  %8 = icmp eq i32 %7, %4\l  br i1 %8, label %9, label %15\l|{<s0>T|<s1>F}}"];
	Node0x1b78b00:s0 -> Node0x1b78ff0;
	Node0x1b78b00:s1 -> Node0x1b79090;
	Node0x1b78ff0 [shape=record,label="{%9:\l9:                                                \l  %10 = getelementptr inbounds %struct._IO_FILE.0, %struct._IO_FILE.0* %0, i64\l... 0, i32 17\l  %11 = load i64, i64* %10, align 8, !tbaa !1643\l  %12 = icmp eq i64 %11, 9223372036854775807\l  br i1 %12, label %34, label %13\l|{<s0>T|<s1>F}}"];
	Node0x1b78ff0:s0 -> Node0x1b792c0;
	Node0x1b78ff0:s1 -> Node0x1b79040;
	Node0x1b79040 [shape=record,label="{%13:\l13:                                               \l  %14 = add nsw i64 %11, 1\l  store i64 %14, i64* %10, align 8, !tbaa !1643\l  br label %34\l}"];
	Node0x1b79040 -> Node0x1b792c0;
	Node0x1b79090 [shape=record,label="{%15:\l15:                                               \l  %16 = icmp slt i32 %6, 0\l  br i1 %16, label %17, label %18\l|{<s0>T|<s1>F}}"];
	Node0x1b79090:s0 -> Node0x1b790e0;
	Node0x1b79090:s1 -> Node0x1b79130;
	Node0x1b790e0 [shape=record,label="{%17:\l17:                                               \l  store volatile i32 0, i32* %5, align 4, !tbaa !1641\l  br label %20\l}"];
	Node0x1b790e0 -> Node0x1b79180;
	Node0x1b79130 [shape=record,label="{%18:\l18:                                               \l  %19 = icmp eq i32 %6, 0\l  br i1 %19, label %20, label %34\l|{<s0>T|<s1>F}}"];
	Node0x1b79130:s0 -> Node0x1b79180;
	Node0x1b79130:s1 -> Node0x1b792c0;
	Node0x1b79180 [shape=record,label="{%20:\l20:                                               \l  %21 = tail call i32 asm sideeffect lock \l  %22 = icmp eq i32 %21, 0\l  br i1 %22, label %23, label %34\l|{<s0>T|<s1>F}}"];
	Node0x1b79180:s0 -> Node0x1b791d0;
	Node0x1b79180:s1 -> Node0x1b792c0;
	Node0x1b791d0 [shape=record,label="{%23:\l23:                                               \l  %24 = getelementptr inbounds %struct._IO_FILE.0, %struct._IO_FILE.0* %0, i64\l... 0, i32 17\l  store i64 1, i64* %24, align 8, !tbaa !1643\l  %25 = getelementptr inbounds %struct._IO_FILE.0, %struct._IO_FILE.0* %0, i64\l... 0, i32 28\l  store %struct._IO_FILE.0* null, %struct._IO_FILE.0** %25, align 8, !tbaa\l... !1645\l  %26 = getelementptr inbounds %struct.__pthread, %struct.__pthread* %2, i64\l... 0, i32 27\l  %27 = bitcast i8** %26 to %struct._IO_FILE.0**\l  %28 = load %struct._IO_FILE.0*, %struct._IO_FILE.0** %27, align 8, !tbaa\l... !1646\l  %29 = getelementptr inbounds %struct._IO_FILE.0, %struct._IO_FILE.0* %0, i64\l... 0, i32 29\l  store %struct._IO_FILE.0* %28, %struct._IO_FILE.0** %29, align 8, !tbaa !1647\l  %30 = icmp eq %struct._IO_FILE.0* %28, null\l  br i1 %30, label %33, label %31\l|{<s0>T|<s1>F}}"];
	Node0x1b791d0:s0 -> Node0x1b79270;
	Node0x1b791d0:s1 -> Node0x1b79220;
	Node0x1b79220 [shape=record,label="{%31:\l31:                                               \l  %32 = getelementptr inbounds %struct._IO_FILE.0, %struct._IO_FILE.0* %28,\l... i64 0, i32 28\l  store %struct._IO_FILE.0* %0, %struct._IO_FILE.0** %32, align 8, !tbaa !1645\l  br label %33\l}"];
	Node0x1b79220 -> Node0x1b79270;
	Node0x1b79270 [shape=record,label="{%33:\l33:                                               \l  store %struct._IO_FILE.0* %0, %struct._IO_FILE.0** %27, align 8, !tbaa !1646\l  br label %34\l}"];
	Node0x1b79270 -> Node0x1b792c0;
	Node0x1b792c0 [shape=record,label="{%34:\l34:                                               \l  %35 = phi i32 [ 0, %13 ], [ 0, %33 ], [ -1, %9 ], [ -1, %20 ], [ -1, %18 ]\l  ret i32 %35\l}"];
}
