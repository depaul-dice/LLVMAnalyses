digraph "CFG for 'fmaf' function" {
	label="CFG for 'fmaf' function";

	Node0x1fb29e0 [shape=record,label="{%3:\l  %4 = alloca float, align 4\l  %5 = alloca double, align 8\l  %6 = tail call double @llvm.experimental.constrained.fpext.f64.f32(float %0,\l... metadata !fpexcept.ignore) #40\l  %7 = tail call double @llvm.experimental.constrained.fpext.f64.f32(float %1,\l... metadata !fpexcept.ignore) #40\l  %8 = tail call double @llvm.experimental.constrained.fmul.f64(double %6,\l... double %7, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %9 = tail call double @llvm.experimental.constrained.fpext.f64.f32(float %2,\l... metadata !fpexcept.ignore) #40\l  %10 = tail call double @llvm.experimental.constrained.fadd.f64(double %8,\l... double %9, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %11 = bitcast double %10 to i64\l  %12 = lshr i64 %11, 52\l  %13 = trunc i64 %12 to i32\l  %14 = and i32 %13, 2047\l  %15 = and i64 %11, 536870911\l  %16 = icmp ne i64 %15, 268435456\l  %17 = icmp eq i32 %14, 2047\l  %18 = or i1 %16, %17\l  br i1 %18, label %30, label %19\l|{<s0>T|<s1>F}}"];
	Node0x1fb29e0:s0 -> Node0x1fb3810;
	Node0x1fb29e0:s1 -> Node0x1fb3720;
	Node0x1fb3720 [shape=record,label="{%19:\l19:                                               \l  %20 = tail call double @llvm.experimental.constrained.fsub.f64(double %10,\l... double %8, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %21 = tail call double @llvm.experimental.constrained.fpext.f64.f32(float\l... %2, metadata !fpexcept.ignore) #40\l  %22 = tail call i1 @llvm.experimental.constrained.fcmp.f64(double %20,\l... double %21, metadata !oeq, metadata !fpexcept.ignore) #40\l  br i1 %22, label %23, label %27\l|{<s0>T|<s1>F}}"];
	Node0x1fb3720:s0 -> Node0x1fb3770;
	Node0x1fb3720:s1 -> Node0x1fb37c0;
	Node0x1fb3770 [shape=record,label="{%23:\l23:                                               \l  %24 = tail call double @llvm.experimental.constrained.fpext.f64.f32(float\l... %2, metadata !fpexcept.ignore) #40\l  %25 = tail call double @llvm.experimental.constrained.fsub.f64(double %10,\l... double %24, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %26 = tail call i1 @llvm.experimental.constrained.fcmp.f64(double %25,\l... double %8, metadata !oeq, metadata !fpexcept.ignore) #40\l  br i1 %26, label %30, label %27\l|{<s0>T|<s1>F}}"];
	Node0x1fb3770:s0 -> Node0x1fb3810;
	Node0x1fb3770:s1 -> Node0x1fb37c0;
	Node0x1fb37c0 [shape=record,label="{%27:\l27:                                               \l  %28 = tail call i32 @fegetround() #41\l  %29 = icmp eq i32 %28, 0\l  br i1 %29, label %49, label %30\l|{<s0>T|<s1>F}}"];
	Node0x1fb37c0:s0 -> Node0x1fb3950;
	Node0x1fb37c0:s1 -> Node0x1fb3810;
	Node0x1fb3810 [shape=record,label="{%30:\l30:                                               \l  %31 = add nsw i32 %14, -874\l  %32 = icmp ult i32 %31, 23\l  br i1 %32, label %33, label %46\l|{<s0>T|<s1>F}}"];
	Node0x1fb3810:s0 -> Node0x1fb3860;
	Node0x1fb3810:s1 -> Node0x1fb3900;
	Node0x1fb3860 [shape=record,label="{%33:\l33:                                               \l  %34 = tail call i32 @fetestexcept(i32 32) #41\l  %35 = icmp eq i32 %34, 0\l  br i1 %35, label %46, label %36\l|{<s0>T|<s1>F}}"];
	Node0x1fb3860:s0 -> Node0x1fb3900;
	Node0x1fb3860:s1 -> Node0x1fb38b0;
	Node0x1fb38b0 [shape=record,label="{%36:\l36:                                               \l  %37 = tail call i32 @feclearexcept(i32 32) #41\l  %38 = bitcast float* %4 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %38)\l  store volatile float %2, float* %4, align 4, !tbaa !1632\l  %39 = load volatile float, float* %4, align 4, !tbaa !1632\l  %40 = tail call double @llvm.experimental.constrained.fpext.f64.f32(float\l... %39, metadata !fpexcept.ignore) #40\l  %41 = tail call double @llvm.experimental.constrained.fadd.f64(double %8,\l... double %40, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %42 = tail call i32 @fetestexcept(i32 32) #41\l  %43 = icmp eq i32 %42, 0\l  %44 = select i1 %43, i32 32, i32 16\l  %45 = tail call i32 @feraiseexcept(i32 %44) #41\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %38)\l  br label %46\l}"];
	Node0x1fb38b0 -> Node0x1fb3900;
	Node0x1fb3900 [shape=record,label="{%46:\l46:                                               \l  %47 = phi double [ %41, %36 ], [ %10, %33 ], [ %10, %30 ]\l  %48 = tail call float @llvm.experimental.constrained.fptrunc.f32.f64(double\l... %47, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  br label %62\l}"];
	Node0x1fb3900 -> Node0x1fb39a0;
	Node0x1fb3950 [shape=record,label="{%49:\l49:                                               \l  %50 = tail call i32 @fesetround(i32 3072) #41\l  %51 = bitcast double* %5 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51)\l  store volatile double %8, double* %5, align 8, !tbaa !1636\l  %52 = load volatile double, double* %5, align 8, !tbaa !1636\l  %53 = tail call double @llvm.experimental.constrained.fpext.f64.f32(float\l... %2, metadata !fpexcept.ignore) #40\l  %54 = tail call double @llvm.experimental.constrained.fadd.f64(double %52,\l... double %53, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  %55 = tail call i32 @fesetround(i32 0) #41\l  %56 = tail call i1 @llvm.experimental.constrained.fcmp.f64(double %10,\l... double %54, metadata !oeq, metadata !fpexcept.ignore) #40\l  %57 = bitcast double %54 to i64\l  %58 = add i64 %57, 1\l  %59 = bitcast i64 %58 to double\l  %60 = select i1 %56, double %59, double %54\l  %61 = tail call float @llvm.experimental.constrained.fptrunc.f32.f64(double\l... %60, metadata !round.dynamic, metadata !fpexcept.ignore) #40\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51)\l  br label %62\l}"];
	Node0x1fb3950 -> Node0x1fb39a0;
	Node0x1fb39a0 [shape=record,label="{%62:\l62:                                               \l  %63 = phi float [ %48, %46 ], [ %61, %49 ]\l  ret float %63\l}"];
}
