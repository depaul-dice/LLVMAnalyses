digraph "CFG for 'nexttoward' function" {
	label="CFG for 'nexttoward' function";

	Node0x1e6f240 [shape=record,label="{%2:\l  %3 = alloca double, align 8\l  %4 = alloca double, align 8\l  %5 = bitcast double %0 to i64\l  %6 = and i64 %5, 9223372036854775807\l  %7 = icmp ugt i64 %6, 9218868437227405312\l  br i1 %7, label %11, label %8\l|{<s0>T|<s1>F}}"];
	Node0x1e6f240:s0 -> Node0x1e6f7a0;
	Node0x1e6f240:s1 -> Node0x1e6f490;
	Node0x1e6f490 [shape=record,label="{%8:\l8:                                                \l  %9 = tail call i32 @__fpclassifyl(x86_fp80 %1) #40\l  %10 = icmp eq i32 %9, 0\l  br i1 %10, label %11, label %15\l|{<s0>T|<s1>F}}"];
	Node0x1e6f490:s0 -> Node0x1e6f7a0;
	Node0x1e6f490:s1 -> Node0x1e6f7f0;
	Node0x1e6f7a0 [shape=record,label="{%11:\l11:                                               \l  %12 = tail call x86_fp80 @llvm.experimental.constrained.fpext.f80.f64(double\l... %0, metadata !fpexcept.ignore) #41\l  %13 = tail call x86_fp80 @llvm.experimental.constrained.fadd.f80(x86_fp80\l... %12, x86_fp80 %1, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %14 = tail call double\l... @llvm.experimental.constrained.fptrunc.f64.f80(x86_fp80 %13, metadata\l... !round.dynamic, metadata !fpexcept.ignore) #41\l  br label %57\l}"];
	Node0x1e6f7a0 -> Node0x1e6fca0;
	Node0x1e6f7f0 [shape=record,label="{%15:\l15:                                               \l  %16 = tail call x86_fp80 @llvm.experimental.constrained.fpext.f80.f64(double\l... %0, metadata !fpexcept.ignore) #41\l  %17 = tail call i1 @llvm.experimental.constrained.fcmp.f80(x86_fp80 %16,\l... x86_fp80 %1, metadata !oeq, metadata !fpexcept.ignore) #41\l  br i1 %17, label %18, label %20\l|{<s0>T|<s1>F}}"];
	Node0x1e6f7f0:s0 -> Node0x1e6f840;
	Node0x1e6f7f0:s1 -> Node0x1e6f890;
	Node0x1e6f840 [shape=record,label="{%18:\l18:                                               \l  %19 = tail call double\l... @llvm.experimental.constrained.fptrunc.f64.f80(x86_fp80 %1, metadata\l... !round.dynamic, metadata !fpexcept.ignore) #41\l  br label %57\l}"];
	Node0x1e6f840 -> Node0x1e6fca0;
	Node0x1e6f890 [shape=record,label="{%20:\l20:                                               \l  %21 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 0,\l... metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %22 = tail call i1 @llvm.experimental.constrained.fcmp.f64(double %0, double\l... %21, metadata !oeq, metadata !fpexcept.ignore) #41\l  br i1 %22, label %23, label %27\l|{<s0>T|<s1>F}}"];
	Node0x1e6f890:s0 -> Node0x1e6f8e0;
	Node0x1e6f890:s1 -> Node0x1e6f930;
	Node0x1e6f8e0 [shape=record,label="{%23:\l23:                                               \l  %24 = tail call i32 @__signbitl(x86_fp80 %1) #40\l  %25 = icmp eq i32 %24, 0\l  %26 = select i1 %25, i64 1, i64 -9223372036854775807\l  br label %41\l}"];
	Node0x1e6f8e0 -> Node0x1e6fb60;
	Node0x1e6f930 [shape=record,label="{%27:\l27:                                               \l  %28 = tail call x86_fp80 @llvm.experimental.constrained.fpext.f80.f64(double\l... %0, metadata !fpexcept.ignore) #41\l  %29 = tail call i1 @llvm.experimental.constrained.fcmps.f80(x86_fp80 %28,\l... x86_fp80 %1, metadata !olt, metadata !fpexcept.ignore) #41\l  %30 = icmp slt i64 %5, 0\l  br i1 %29, label %31, label %36\l|{<s0>T|<s1>F}}"];
	Node0x1e6f930:s0 -> Node0x1e6f980;
	Node0x1e6f930:s1 -> Node0x1e6fa70;
	Node0x1e6f980 [shape=record,label="{%31:\l31:                                               \l  br i1 %30, label %32, label %34\l|{<s0>T|<s1>F}}"];
	Node0x1e6f980:s0 -> Node0x1e6f9d0;
	Node0x1e6f980:s1 -> Node0x1e6fa20;
	Node0x1e6f9d0 [shape=record,label="{%32:\l32:                                               \l  %33 = add i64 %5, -1\l  br label %41\l}"];
	Node0x1e6f9d0 -> Node0x1e6fb60;
	Node0x1e6fa20 [shape=record,label="{%34:\l34:                                               \l  %35 = add nuw i64 %5, 1\l  br label %41\l}"];
	Node0x1e6fa20 -> Node0x1e6fb60;
	Node0x1e6fa70 [shape=record,label="{%36:\l36:                                               \l  br i1 %30, label %37, label %39\l|{<s0>T|<s1>F}}"];
	Node0x1e6fa70:s0 -> Node0x1e6fac0;
	Node0x1e6fa70:s1 -> Node0x1e6fb10;
	Node0x1e6fac0 [shape=record,label="{%37:\l37:                                               \l  %38 = add nsw i64 %5, 1\l  br label %41\l}"];
	Node0x1e6fac0 -> Node0x1e6fb60;
	Node0x1e6fb10 [shape=record,label="{%39:\l39:                                               \l  %40 = add nsw i64 %5, -1\l  br label %41\l}"];
	Node0x1e6fb10 -> Node0x1e6fb60;
	Node0x1e6fb60 [shape=record,label="{%41:\l41:                                               \l  %42 = phi i64 [ %33, %32 ], [ %35, %34 ], [ %38, %37 ], [ %40, %39 ], [ %26,\l... %23 ]\l  %43 = lshr i64 %42, 52\l  %44 = trunc i64 %43 to i32\l  %45 = and i32 %44, 2047\l  switch i32 %45, label %55 [\l    i32 2047, label %46\l    i32 0, label %49\l  ]\l|{<s0>def|<s1>2047|<s2>0}}"];
	Node0x1e6fb60:s0 -> Node0x1e6fc50;
	Node0x1e6fb60:s1 -> Node0x1e6fbb0;
	Node0x1e6fb60:s2 -> Node0x1e6fc00;
	Node0x1e6fbb0 [shape=record,label="{%46:\l46:                                               \l  %47 = tail call double @llvm.experimental.constrained.fadd.f64(double %0,\l... double %0, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %48 = bitcast double* %3 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48)\l  store volatile double %47, double* %3, align 8, !tbaa !1632\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48)\l  br label %55\l}"];
	Node0x1e6fbb0 -> Node0x1e6fc50;
	Node0x1e6fc00 [shape=record,label="{%49:\l49:                                               \l  %50 = tail call double @llvm.experimental.constrained.fmul.f64(double %0,\l... double %0, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %51 = bitcast i64 %42 to double\l  %52 = tail call double @llvm.experimental.constrained.fmul.f64(double %51,\l... double %51, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %53 = tail call double @llvm.experimental.constrained.fadd.f64(double %50,\l... double %52, metadata !round.dynamic, metadata !fpexcept.ignore) #41\l  %54 = bitcast double* %4 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54)\l  store volatile double %53, double* %4, align 8, !tbaa !1632\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54)\l  br label %55\l}"];
	Node0x1e6fc00 -> Node0x1e6fc50;
	Node0x1e6fc50 [shape=record,label="{%55:\l55:                                               \l  %56 = bitcast i64 %42 to double\l  br label %57\l}"];
	Node0x1e6fc50 -> Node0x1e6fca0;
	Node0x1e6fca0 [shape=record,label="{%57:\l57:                                               \l  %58 = phi double [ %14, %11 ], [ %19, %18 ], [ %56, %55 ]\l  ret double %58\l}"];
}
