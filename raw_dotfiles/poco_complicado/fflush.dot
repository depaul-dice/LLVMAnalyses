digraph "CFG for 'fflush' function" {
	label="CFG for 'fflush' function";

	Node0x1edf670 [shape=record,label="{%1:\l  %2 = icmp eq %struct._IO_FILE.5* %0, null\l  br i1 %2, label %3, label %54\l|{<s0>T|<s1>F}}"];
	Node0x1edf670:s0 -> Node0x1ee0710;
	Node0x1edf670:s1 -> Node0x1ee0b20;
	Node0x1ee0710 [shape=record,label="{%3:\l3:                                                \l  %4 = bitcast %struct._IO_FILE.16** @__stdout_used to %struct._IO_FILE.5**\l  %5 = load volatile %struct._IO_FILE.5*, %struct._IO_FILE.5** %4, align 8,\l... !tbaa !2\l  %6 = icmp eq %struct._IO_FILE.5* %5, null\l  br i1 %6, label %11, label %7\l|{<s0>T|<s1>F}}"];
	Node0x1ee0710:s0 -> Node0x1ee07b0;
	Node0x1ee0710:s1 -> Node0x1ee0760;
	Node0x1ee0760 [shape=record,label="{%7:\l7:                                                \l  %8 = bitcast %struct._IO_FILE.16** @__stdout_used to %struct._IO_FILE.5**\l  %9 = load volatile %struct._IO_FILE.5*, %struct._IO_FILE.5** %8, align 8,\l... !tbaa !2\l  %10 = tail call fastcc i32 @fflush(%struct._IO_FILE.5* %9) #18\l  br label %11\l}"];
	Node0x1ee0760 -> Node0x1ee07b0;
	Node0x1ee07b0 [shape=record,label="{%11:\l11:                                               \l  %12 = phi i32 [ %10, %7 ], [ 0, %3 ]\l  %13 = load volatile %struct._IO_FILE.5*, %struct._IO_FILE.5** @dummy.23,\l... align 8, !tbaa !2\l  %14 = icmp eq %struct._IO_FILE.5* %13, null\l  br i1 %14, label %19, label %15\l|{<s0>T|<s1>F}}"];
	Node0x1ee07b0:s0 -> Node0x1ee0850;
	Node0x1ee07b0:s1 -> Node0x1ee0800;
	Node0x1ee0800 [shape=record,label="{%15:\l15:                                               \l  %16 = load volatile %struct._IO_FILE.5*, %struct._IO_FILE.5** @dummy.23,\l... align 8, !tbaa !2\l  %17 = tail call fastcc i32 @fflush(%struct._IO_FILE.5* %16) #18\l  %18 = or i32 %17, %12\l  br label %19\l}"];
	Node0x1ee0800 -> Node0x1ee0850;
	Node0x1ee0850 [shape=record,label="{%19:\l19:                                               \l  %20 = phi i32 [ %18, %15 ], [ %12, %11 ]\l  %21 = tail call %struct._IO_FILE.5** @__ofl_lock() #19\l  %22 = load %struct._IO_FILE.5*, %struct._IO_FILE.5** %21, align 8, !tbaa !2\l  %23 = icmp eq %struct._IO_FILE.5* %22, null\l  br i1 %23, label %52, label %24\l|{<s0>T|<s1>F}}"];
	Node0x1ee0850:s0 -> Node0x1ee0ad0;
	Node0x1ee0850:s1 -> Node0x1ee08a0;
	Node0x1ee08a0 [shape=record,label="{%24:\l24:                                               \l  %25 = phi %struct._IO_FILE.5* [ %50, %48 ], [ %22, %19 ]\l  %26 = phi i32 [ %44, %48 ], [ %20, %19 ]\l  %27 = getelementptr inbounds %struct._IO_FILE.5, %struct._IO_FILE.5* %25,\l... i64 0, i32 19\l  %28 = load volatile i32, i32* %27, align 4, !tbaa !6\l  %29 = icmp sgt i32 %28, -1\l  br i1 %29, label %30, label %33\l|{<s0>T|<s1>F}}"];
	Node0x1ee08a0:s0 -> Node0x1ee08f0;
	Node0x1ee08a0:s1 -> Node0x1ee0940;
	Node0x1ee08f0 [shape=record,label="{%30:\l30:                                               \l  %31 = bitcast %struct._IO_FILE.5* %25 to %struct._IO_FILE.73*\l  %32 = tail call i32 @__lockfile(%struct._IO_FILE.73* nonnull %31) #19\l  br label %33\l}"];
	Node0x1ee08f0 -> Node0x1ee0940;
	Node0x1ee0940 [shape=record,label="{%33:\l33:                                               \l  %34 = phi i32 [ %32, %30 ], [ 0, %24 ]\l  %35 = getelementptr inbounds %struct._IO_FILE.5, %struct._IO_FILE.5* %25,\l... i64 0, i32 5\l  %36 = load i8*, i8** %35, align 8, !tbaa !10\l  %37 = getelementptr inbounds %struct._IO_FILE.5, %struct._IO_FILE.5* %25,\l... i64 0, i32 7\l  %38 = load i8*, i8** %37, align 8, !tbaa !11\l  %39 = icmp eq i8* %36, %38\l  br i1 %39, label %43, label %40\l|{<s0>T|<s1>F}}"];
	Node0x1ee0940:s0 -> Node0x1ee09e0;
	Node0x1ee0940:s1 -> Node0x1ee0990;
	Node0x1ee0990 [shape=record,label="{%40:\l40:                                               \l  %41 = tail call fastcc i32 @fflush(%struct._IO_FILE.5* nonnull %25) #18\l  %42 = or i32 %41, %26\l  br label %43\l}"];
	Node0x1ee0990 -> Node0x1ee09e0;
	Node0x1ee09e0 [shape=record,label="{%43:\l43:                                               \l  %44 = phi i32 [ %42, %40 ], [ %26, %33 ]\l  %45 = icmp eq i32 %34, 0\l  br i1 %45, label %48, label %46\l|{<s0>T|<s1>F}}"];
	Node0x1ee09e0:s0 -> Node0x1ee0a80;
	Node0x1ee09e0:s1 -> Node0x1ee0a30;
	Node0x1ee0a30 [shape=record,label="{%46:\l46:                                               \l  %47 = bitcast %struct._IO_FILE.5* %25 to %struct._IO_FILE.73*\l  tail call void @__unlockfile(%struct._IO_FILE.73* nonnull %47) #19\l  br label %48\l}"];
	Node0x1ee0a30 -> Node0x1ee0a80;
	Node0x1ee0a80 [shape=record,label="{%48:\l48:                                               \l  %49 = getelementptr inbounds %struct._IO_FILE.5, %struct._IO_FILE.5* %25,\l... i64 0, i32 14\l  %50 = load %struct._IO_FILE.5*, %struct._IO_FILE.5** %49, align 8, !tbaa !2\l  %51 = icmp eq %struct._IO_FILE.5* %50, null\l  br i1 %51, label %52, label %24\l|{<s0>T|<s1>F}}"];
	Node0x1ee0a80:s0 -> Node0x1ee0ad0;
	Node0x1ee0a80:s1 -> Node0x1ee08a0;
	Node0x1ee0ad0 [shape=record,label="{%52:\l52:                                               \l  %53 = phi i32 [ %20, %19 ], [ %44, %48 ]\l  tail call fastcc void @__ofl_unlock() #19\l  br label %111\l}"];
	Node0x1ee0ad0 -> Node0x1ee0fd0;
	Node0x1ee0b20 [shape=record,label="{%54:\l54:                                               \l  %55 = getelementptr inbounds %struct._IO_FILE.5, %struct._IO_FILE.5* %0, i64\l... 0, i32 19\l  %56 = load volatile i32, i32* %55, align 4, !tbaa !6\l  %57 = icmp sgt i32 %56, -1\l  br i1 %57, label %58, label %61\l|{<s0>T|<s1>F}}"];
	Node0x1ee0b20:s0 -> Node0x1ee0b70;
	Node0x1ee0b20:s1 -> Node0x1ee0bc0;
	Node0x1ee0b70 [shape=record,label="{%58:\l58:                                               \l  %59 = bitcast %struct._IO_FILE.5* %0 to %struct._IO_FILE.73*\l  %60 = tail call i32 @__lockfile(%struct._IO_FILE.73* nonnull %59) #19\l  br label %61\l}"];
	Node0x1ee0b70 -> Node0x1ee0bc0;
	Node0x1ee0bc0 [shape=record,label="{%61:\l61:                                               \l  %62 = phi i32 [ %60, %58 ], [ 0, %54 ]\l  %63 = getelementptr inbounds %struct._IO_FILE.5, %struct._IO_FILE.5* %0, i64\l... 0, i32 5\l  %64 = load i8*, i8** %63, align 8, !tbaa !10\l  %65 = getelementptr inbounds %struct._IO_FILE.5, %struct._IO_FILE.5* %0, i64\l... 0, i32 7\l  %66 = load i8*, i8** %65, align 8, !tbaa !11\l  %67 = icmp eq i8* %64, %66\l  br i1 %67, label %89, label %68\l|{<s0>T|<s1>F}}"];
	Node0x1ee0bc0:s0 -> Node0x1ee0e90;
	Node0x1ee0bc0:s1 -> Node0x1ee0c10;
	Node0x1ee0c10 [shape=record,label="{%68:\l68:                                               \l  %69 = getelementptr inbounds %struct._IO_FILE.5, %struct._IO_FILE.5* %0, i64\l... 0, i32 9\l  %70 = load i64 (%struct._IO_FILE.5*, i8*, i64)*, i64 (%struct._IO_FILE.5*,\l... i8*, i64)** %69, align 8, !tbaa !12\l  %71 = bitcast i64 (%struct._IO_FILE.80*, i8*, i64)* @__stdio_read to i64\l... (%struct._IO_FILE.5*, i8*, i64)*\l  %72 = icmp eq i64 (%struct._IO_FILE.5*, i8*, i64)* %70, %71\l  br i1 %72, label %if.true.direct_targ1, label %if.false.orig_indirect2\l|{<s0>T|<s1>F}}"];
	Node0x1ee0c10:s0 -> Node0x1ee0c60;
	Node0x1ee0c10:s1 -> Node0x1ee0cb0;
	Node0x1ee0c60 [shape=record,label="{if.true.direct_targ1:                             \l  %73 = bitcast %struct._IO_FILE.5* %0 to %struct._IO_FILE.80*\l  %74 = tail call i64 @__stdio_read(%struct._IO_FILE.80* nonnull %73, i8*\l... null, i64 0) #20\l  br label %if.end.icp3\l}"];
	Node0x1ee0c60 -> Node0x1ee0da0;
	Node0x1ee0cb0 [shape=record,label="{if.false.orig_indirect2:                          \l  %75 = bitcast i64 (%struct._IO_FILE.84*, i8*, i64)* @__stdio_write to i64\l... (%struct._IO_FILE.5*, i8*, i64)*\l  %76 = icmp eq i64 (%struct._IO_FILE.5*, i8*, i64)* %70, %75\l  br i1 %76, label %if.true.direct_targ4, label %if.false.orig_indirect5\l|{<s0>T|<s1>F}}"];
	Node0x1ee0cb0:s0 -> Node0x1ee0d00;
	Node0x1ee0cb0:s1 -> Node0x1ee0d50;
	Node0x1ee0d00 [shape=record,label="{if.true.direct_targ4:                             \l  %77 = bitcast %struct._IO_FILE.5* %0 to %struct._IO_FILE.84*\l  %78 = tail call i64 @__stdio_write(%struct._IO_FILE.84* nonnull %77, i8*\l... null, i64 0) #20\l  br label %if.end.icp3\l}"];
	Node0x1ee0d00 -> Node0x1ee0da0;
	Node0x1ee0d50 [shape=record,label="{if.false.orig_indirect5:                          \l  %79 = bitcast i64 (%struct._IO_FILE.84*, i8*, i64)* @__stdout_write to i64\l... (%struct._IO_FILE.5*, i8*, i64)*\l  %80 = icmp eq i64 (%struct._IO_FILE.5*, i8*, i64)* %70, %79\l  call void @llvm.assume(i1 %80)\l  %81 = bitcast %struct._IO_FILE.5* %0 to %struct._IO_FILE.84*\l  %82 = tail call i64 @__stdout_write(%struct._IO_FILE.84* nonnull %81, i8*\l... null, i64 0) #20\l  br label %if.end.icp3\l}"];
	Node0x1ee0d50 -> Node0x1ee0da0;
	Node0x1ee0da0 [shape=record,label="{if.end.icp3:                                      \l  %83 = load i8*, i8** %63, align 8, !tbaa !10\l  %84 = icmp eq i8* %83, null\l  br i1 %84, label %85, label %89\l|{<s0>T|<s1>F}}"];
	Node0x1ee0da0:s0 -> Node0x1ee0df0;
	Node0x1ee0da0:s1 -> Node0x1ee0e90;
	Node0x1ee0df0 [shape=record,label="{%85:\l85:                                               \l  %86 = icmp eq i32 %62, 0\l  br i1 %86, label %111, label %87\l|{<s0>T|<s1>F}}"];
	Node0x1ee0df0:s0 -> Node0x1ee0fd0;
	Node0x1ee0df0:s1 -> Node0x1ee0e40;
	Node0x1ee0e40 [shape=record,label="{%87:\l87:                                               \l  %88 = bitcast %struct._IO_FILE.5* %0 to %struct._IO_FILE.73*\l  tail call void @__unlockfile(%struct._IO_FILE.73* nonnull %88) #19\l  br label %111\l}"];
	Node0x1ee0e40 -> Node0x1ee0fd0;
	Node0x1ee0e90 [shape=record,label="{%89:\l89:                                               \l  %90 = getelementptr inbounds %struct._IO_FILE.5, %struct._IO_FILE.5* %0, i64\l... 0, i32 1\l  %91 = load i8*, i8** %90, align 8, !tbaa !13\l  %92 = getelementptr inbounds %struct._IO_FILE.5, %struct._IO_FILE.5* %0, i64\l... 0, i32 2\l  %93 = load i8*, i8** %92, align 8, !tbaa !14\l  %94 = icmp eq i8* %91, %93\l  br i1 %94, label %104, label %if.true.direct_targ\l|{<s0>T|<s1>F}}"];
	Node0x1ee0e90:s0 -> Node0x1ee0f30;
	Node0x1ee0e90:s1 -> Node0x1ee0ee0;
	Node0x1ee0ee0 [shape=record,label="{if.true.direct_targ:                              \l  %95 = getelementptr inbounds %struct._IO_FILE.5, %struct._IO_FILE.5* %0, i64\l... 0, i32 10\l  %96 = load i64 (%struct._IO_FILE.5*, i64, i32)*, i64 (%struct._IO_FILE.5*,\l... i64, i32)** %95, align 8, !tbaa !15\l  %97 = bitcast i64 (%struct._IO_FILE.82*, i64, i32)* @__stdio_seek to i64\l... (%struct._IO_FILE.5*, i64, i32)*\l  %98 = icmp eq i64 (%struct._IO_FILE.5*, i64, i32)* %96, %97\l  call void @llvm.assume(i1 %98)\l  %99 = ptrtoint i8* %91 to i64\l  %100 = ptrtoint i8* %93 to i64\l  %101 = sub i64 %99, %100\l  %102 = bitcast %struct._IO_FILE.5* %0 to %struct._IO_FILE.82*\l  %103 = tail call i64 @__stdio_seek(%struct._IO_FILE.82* nonnull %102, i64\l... %101, i32 1) #20\l  br label %104\l}"];
	Node0x1ee0ee0 -> Node0x1ee0f30;
	Node0x1ee0f30 [shape=record,label="{%104:\l104:                                              \l  %105 = getelementptr inbounds %struct._IO_FILE.5, %struct._IO_FILE.5* %0,\l... i64 0, i32 4\l  store i8* null, i8** %65, align 8, !tbaa !11\l  %106 = bitcast i8** %105 to \<2 x i8*\>*\l  store \<2 x i8*\> zeroinitializer, \<2 x i8*\>* %106, align 8, !tbaa !2\l  %107 = bitcast i8** %90 to \<2 x i8*\>*\l  store \<2 x i8*\> zeroinitializer, \<2 x i8*\>* %107, align 8, !tbaa !2\l  %108 = icmp eq i32 %62, 0\l  br i1 %108, label %111, label %109\l|{<s0>T|<s1>F}}"];
	Node0x1ee0f30:s0 -> Node0x1ee0fd0;
	Node0x1ee0f30:s1 -> Node0x1ee0f80;
	Node0x1ee0f80 [shape=record,label="{%109:\l109:                                              \l  %110 = bitcast %struct._IO_FILE.5* %0 to %struct._IO_FILE.73*\l  tail call void @__unlockfile(%struct._IO_FILE.73* nonnull %110) #19\l  br label %111\l}"];
	Node0x1ee0f80 -> Node0x1ee0fd0;
	Node0x1ee0fd0 [shape=record,label="{%111:\l111:                                              \l  %112 = phi i32 [ %53, %52 ], [ -1, %85 ], [ -1, %87 ], [ 0, %104 ], [ 0,\l... %109 ]\l  ret i32 %112\l}"];
}
