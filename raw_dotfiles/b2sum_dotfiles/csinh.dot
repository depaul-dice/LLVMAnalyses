digraph "CFG for 'csinh' function" {
	label="CFG for 'csinh' function";

	Node0x16ed340 [shape=record,label="{%2:\l  %3 = bitcast double %0 to i64\l  %4 = lshr i64 %3, 32\l  %5 = trunc i64 %4 to i32\l  %6 = trunc i64 %3 to i32\l  %7 = bitcast double %1 to i64\l  %8 = lshr i64 %7, 32\l  %9 = trunc i64 %8 to i32\l  %10 = trunc i64 %7 to i32\l  %11 = and i32 %5, 2147483647\l  %12 = and i32 %9, 2147483647\l  %13 = icmp ult i32 %11, 2146435072\l  %14 = icmp ult i32 %12, 2146435072\l  %15 = and i1 %13, %14\l  br i1 %15, label %16, label %58\l|{<s0>T|<s1>F}}"];
	Node0x16ed340:s0 -> Node0x16ed8a0;
	Node0x16ed340:s1 -> Node0x16edb70;
	Node0x16ed8a0 [shape=record,label="{%16:\l16:                                               \l  %17 = or i32 %12, %10\l  %18 = icmp eq i32 %17, 0\l  br i1 %18, label %19, label %21\l|{<s0>T|<s1>F}}"];
	Node0x16ed8a0:s0 -> Node0x16ed8f0;
	Node0x16ed8a0:s1 -> Node0x16ed940;
	Node0x16ed8f0 [shape=record,label="{%19:\l19:                                               \l  %20 = tail call double @sinh(double %0) #40\l  br label %110\l}"];
	Node0x16ed8f0 -> Node0x16edf80;
	Node0x16ed940 [shape=record,label="{%21:\l21:                                               \l  %22 = icmp ult i32 %11, 1077280768\l  br i1 %22, label %23, label %30\l|{<s0>T|<s1>F}}"];
	Node0x16ed940:s0 -> Node0x16ed990;
	Node0x16ed940:s1 -> Node0x16ed9e0;
	Node0x16ed990 [shape=record,label="{%23:\l23:                                               \l  %24 = tail call double @sinh(double %0) #40\l  %25 = tail call double @cos(double %1) #40\l  %26 = tail call double @llvm.experimental.constrained.fmul.f64(double %24,\l... double %25, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #41\l  %27 = tail call double @cosh(double %0) #40\l  %28 = tail call double @sin(double %1) #40\l  %29 = tail call double @llvm.experimental.constrained.fmul.f64(double %27,\l... double %28, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #41\l  br label %110\l}"];
	Node0x16ed990 -> Node0x16edf80;
	Node0x16ed9e0 [shape=record,label="{%30:\l30:                                               \l  %31 = icmp ult i32 %11, 1082535490\l  br i1 %31, label %32, label %41\l|{<s0>T|<s1>F}}"];
	Node0x16ed9e0:s0 -> Node0x16eda30;
	Node0x16ed9e0:s1 -> Node0x16eda80;
	Node0x16eda30 [shape=record,label="{%32:\l32:                                               \l  %33 = tail call double @fabs(double %0) #40\l  %34 = tail call double @exp(double %33) #40\l  %35 = tail call double @llvm.experimental.constrained.fmul.f64(double %34,\l... double 5.000000e-01, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\")\l... #41\l  %36 = tail call double @copysign(double %35, double %0) #40\l  %37 = tail call double @cos(double %1) #40\l  %38 = tail call double @llvm.experimental.constrained.fmul.f64(double %36,\l... double %37, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #41\l  %39 = tail call double @sin(double %1) #40\l  %40 = tail call double @llvm.experimental.constrained.fmul.f64(double %35,\l... double %39, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #41\l  br label %110\l}"];
	Node0x16eda30 -> Node0x16edf80;
	Node0x16eda80 [shape=record,label="{%41:\l41:                                               \l  %42 = icmp ult i32 %11, 1083620266\l  br i1 %42, label %43, label %51\l|{<s0>T|<s1>F}}"];
	Node0x16eda80:s0 -> Node0x16edad0;
	Node0x16eda80:s1 -> Node0x16edb20;
	Node0x16edad0 [shape=record,label="{%43:\l43:                                               \l  %44 = tail call double @fabs(double %0) #40\l  %45 = tail call \{ double, double \} @__ldexp_cexp(double %44, double %1, i32\l... -1) #40\l  %46 = extractvalue \{ double, double \} %45, 0\l  %47 = extractvalue \{ double, double \} %45, 1\l  %48 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 1,\l... metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #41\l  %49 = tail call double @copysign(double %48, double %0) #40\l  %50 = tail call double @llvm.experimental.constrained.fmul.f64(double %46,\l... double %49, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #41\l  br label %110\l}"];
	Node0x16edad0 -> Node0x16edf80;
	Node0x16edb20 [shape=record,label="{%51:\l51:                                               \l  %52 = tail call double @llvm.experimental.constrained.fmul.f64(double\l... 0x7FE0000000000000, double %0, metadata !\"round.dynamic\", metadata\l... !\"fpexcept.ignore\") #41\l  %53 = tail call double @cos(double %1) #40\l  %54 = tail call double @llvm.experimental.constrained.fmul.f64(double %52,\l... double %53, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #41\l  %55 = tail call double @llvm.experimental.constrained.fmul.f64(double %52,\l... double %52, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #41\l  %56 = tail call double @sin(double %1) #40\l  %57 = tail call double @llvm.experimental.constrained.fmul.f64(double %55,\l... double %56, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #41\l  br label %110\l}"];
	Node0x16edb20 -> Node0x16edf80;
	Node0x16edb70 [shape=record,label="{%58:\l58:                                               \l  %59 = or i32 %11, %6\l  %60 = icmp eq i32 %59, 0\l  %61 = icmp ugt i32 %12, 2146435071\l  %62 = and i1 %60, %61\l  br i1 %62, label %63, label %69\l|{<s0>T|<s1>F}}"];
	Node0x16edb70:s0 -> Node0x16edbc0;
	Node0x16edb70:s1 -> Node0x16edc10;
	Node0x16edbc0 [shape=record,label="{%63:\l63:                                               \l  %64 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 0,\l... metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #41\l  %65 = tail call double @llvm.experimental.constrained.fsub.f64(double %1,\l... double %1, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #41\l  %66 = tail call double @llvm.experimental.constrained.fmul.f64(double %0,\l... double %65, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #41\l  %67 = tail call double @copysign(double %64, double %66) #40\l  %68 = tail call double @llvm.experimental.constrained.fsub.f64(double %1,\l... double %1, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #41\l  br label %110\l}"];
	Node0x16edbc0 -> Node0x16edf80;
	Node0x16edc10 [shape=record,label="{%69:\l69:                                               \l  %70 = or i32 %12, %10\l  %71 = icmp eq i32 %70, 0\l  %72 = icmp ugt i32 %11, 2146435071\l  %73 = and i1 %72, %71\l  br i1 %73, label %74, label %81\l|{<s0>T|<s1>F}}"];
	Node0x16edc10:s0 -> Node0x16edc60;
	Node0x16edc10:s1 -> Node0x16edd00;
	Node0x16edc60 [shape=record,label="{%74:\l74:                                               \l  %75 = and i32 %5, 1048575\l  %76 = or i32 %75, %6\l  %77 = icmp eq i32 %76, 0\l  br i1 %77, label %110, label %78\l|{<s0>T|<s1>F}}"];
	Node0x16edc60:s0 -> Node0x16edf80;
	Node0x16edc60:s1 -> Node0x16edcb0;
	Node0x16edcb0 [shape=record,label="{%78:\l78:                                               \l  %79 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 0,\l... metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #41\l  %80 = tail call double @copysign(double %79, double %1) #40\l  br label %110\l}"];
	Node0x16edcb0 -> Node0x16edf80;
	Node0x16edd00 [shape=record,label="{%81:\l81:                                               \l  %82 = and i1 %13, %61\l  br i1 %82, label %83, label %87\l|{<s0>T|<s1>F}}"];
	Node0x16edd00:s0 -> Node0x16edd50;
	Node0x16edd00:s1 -> Node0x16edda0;
	Node0x16edd50 [shape=record,label="{%83:\l83:                                               \l  %84 = tail call double @llvm.experimental.constrained.fsub.f64(double %1,\l... double %1, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #41\l  %85 = tail call double @llvm.experimental.constrained.fsub.f64(double %1,\l... double %1, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #41\l  %86 = tail call double @llvm.experimental.constrained.fmul.f64(double %0,\l... double %85, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #41\l  br label %110\l}"];
	Node0x16edd50 -> Node0x16edf80;
	Node0x16edda0 [shape=record,label="{%87:\l87:                                               \l  br i1 %72, label %88, label %103\l|{<s0>T|<s1>F}}"];
	Node0x16edda0:s0 -> Node0x16eddf0;
	Node0x16edda0:s1 -> Node0x16edf30;
	Node0x16eddf0 [shape=record,label="{%88:\l88:                                               \l  %89 = and i32 %5, 1048575\l  %90 = or i32 %89, %6\l  %91 = icmp eq i32 %90, 0\l  br i1 %91, label %92, label %103\l|{<s0>T|<s1>F}}"];
	Node0x16eddf0:s0 -> Node0x16ede40;
	Node0x16eddf0:s1 -> Node0x16edf30;
	Node0x16ede40 [shape=record,label="{%92:\l92:                                               \l  br i1 %61, label %93, label %97\l|{<s0>T|<s1>F}}"];
	Node0x16ede40:s0 -> Node0x16ede90;
	Node0x16ede40:s1 -> Node0x16edee0;
	Node0x16ede90 [shape=record,label="{%93:\l93:                                               \l  %94 = tail call double @llvm.experimental.constrained.fmul.f64(double %0,\l... double %0, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #41\l  %95 = tail call double @llvm.experimental.constrained.fsub.f64(double %1,\l... double %1, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #41\l  %96 = tail call double @llvm.experimental.constrained.fmul.f64(double %0,\l... double %95, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #41\l  br label %110\l}"];
	Node0x16ede90 -> Node0x16edf80;
	Node0x16edee0 [shape=record,label="{%97:\l97:                                               \l  %98 = tail call double @cos(double %1) #40\l  %99 = tail call double @llvm.experimental.constrained.fmul.f64(double %0,\l... double %98, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #41\l  %100 = tail call double @llvm.experimental.constrained.fpext.f64.f32(float\l... 0x7FF0000000000000, metadata !\"fpexcept.ignore\") #41\l  %101 = tail call double @sin(double %1) #40\l  %102 = tail call double @llvm.experimental.constrained.fmul.f64(double %100,\l... double %101, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #41\l  br label %110\l}"];
	Node0x16edee0 -> Node0x16edf80;
	Node0x16edf30 [shape=record,label="{%103:\l103:                                              \l  %104 = tail call double @llvm.experimental.constrained.fmul.f64(double %0,\l... double %0, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #41\l  %105 = tail call double @llvm.experimental.constrained.fsub.f64(double %1,\l... double %1, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #41\l  %106 = tail call double @llvm.experimental.constrained.fmul.f64(double %104,\l... double %105, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #41\l  %107 = tail call double @llvm.experimental.constrained.fadd.f64(double %0,\l... double %0, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #41\l  %108 = tail call double @llvm.experimental.constrained.fsub.f64(double %1,\l... double %1, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #41\l  %109 = tail call double @llvm.experimental.constrained.fmul.f64(double %107,\l... double %108, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #41\l  br label %110\l}"];
	Node0x16edf30 -> Node0x16edf80;
	Node0x16edf80 [shape=record,label="{%110:\l110:                                              \l  %111 = phi double [ %20, %19 ], [ %26, %23 ], [ %38, %32 ], [ %50, %43 ], [\l... %54, %51 ], [ %67, %63 ], [ %0, %78 ], [ %84, %83 ], [ %94, %93 ], [ %99, %97\l... ], [ %106, %103 ], [ %0, %74 ]\l  %112 = phi double [ %1, %19 ], [ %29, %23 ], [ %40, %32 ], [ %47, %43 ], [\l... %57, %51 ], [ %68, %63 ], [ %80, %78 ], [ %86, %83 ], [ %96, %93 ], [ %102,\l... %97 ], [ %109, %103 ], [ %1, %74 ]\l  %113 = insertvalue \{ double, double \} undef, double %111, 0\l  %114 = insertvalue \{ double, double \} %113, double %112, 1\l  ret \{ double, double \} %114\l}"];
}
