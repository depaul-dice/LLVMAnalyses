digraph "CFG for 'digest_check' function" {
	label="CFG for 'digest_check' function";

	Node0x2103c50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%1:\l  %2 = alloca i1, align 1\l  %3 = alloca i8*, align 8\l  %4 = alloca %struct._IO_FILE*, align 8\l  %5 = alloca i64, align 8\l  %6 = alloca i64, align 8\l  %7 = alloca i64, align 8\l  %8 = alloca i64, align 8\l  %9 = alloca i8, align 1\l  %10 = alloca i8, align 1\l  %11 = alloca [72 x i8], align 16\l  %12 = alloca i8*, align 8\l  %13 = alloca i64, align 8\l  %14 = alloca i8*, align 8\l  %15 = alloca i64, align 8\l  %16 = alloca i8, align 1\l  %17 = alloca i8*, align 8\l  %18 = alloca i32, align 4\l  %19 = alloca i8*, align 8\l  %20 = alloca i64, align 8\l  %21 = alloca i8, align 1\l  %22 = alloca i8, align 1\l  %23 = alloca i8, align 1\l  %24 = alloca i64, align 8\l  %25 = alloca i64, align 8\l  %26 = alloca i64, align 8\l  %27 = alloca i32, align 4\l  store i8* %0, i8** %3, align 8\l  call void @llvm.dbg.declare(metadata i8** %3, metadata !792, metadata\l... !DIExpression()), !dbg !793\l  call void @llvm.dbg.declare(metadata %struct._IO_FILE** %4, metadata !794,\l... metadata !DIExpression()), !dbg !829\l  call void @llvm.dbg.declare(metadata i64* %5, metadata !830, metadata\l... !DIExpression()), !dbg !831\l  store i64 0, i64* %5, align 8, !dbg !831\l  call void @llvm.dbg.declare(metadata i64* %6, metadata !832, metadata\l... !DIExpression()), !dbg !833\l  store i64 0, i64* %6, align 8, !dbg !833\l  call void @llvm.dbg.declare(metadata i64* %7, metadata !834, metadata\l... !DIExpression()), !dbg !835\l  store i64 0, i64* %7, align 8, !dbg !835\l  call void @llvm.dbg.declare(metadata i64* %8, metadata !836, metadata\l... !DIExpression()), !dbg !837\l  store i64 0, i64* %8, align 8, !dbg !837\l  call void @llvm.dbg.declare(metadata i8* %9, metadata !838, metadata\l... !DIExpression()), !dbg !839\l  store i8 0, i8* %9, align 1, !dbg !839\l  call void @llvm.dbg.declare(metadata i8* %10, metadata !840, metadata\l... !DIExpression()), !dbg !841\l  store i8 0, i8* %10, align 1, !dbg !841\l  call void @llvm.dbg.declare(metadata [72 x i8]* %11, metadata !842, metadata\l... !DIExpression()), !dbg !846\l  call void @llvm.dbg.declare(metadata i8** %12, metadata !847, metadata\l... !DIExpression()), !dbg !848\l  %28 = getelementptr inbounds [72 x i8], [72 x i8]* %11, i64 0, i64 0, !dbg\l... !849\l  %29 = call fastcc i8* @ptr_align(i8* %28, i64 8), !dbg !850\l  store i8* %29, i8** %12, align 8, !dbg !848\l  call void @llvm.dbg.declare(metadata i64* %13, metadata !851, metadata\l... !DIExpression()), !dbg !852\l  call void @llvm.dbg.declare(metadata i8** %14, metadata !853, metadata\l... !DIExpression()), !dbg !854\l  call void @llvm.dbg.declare(metadata i64* %15, metadata !855, metadata\l... !DIExpression()), !dbg !856\l  call void @llvm.dbg.declare(metadata i8* %16, metadata !857, metadata\l... !DIExpression()), !dbg !858\l  %30 = load i8*, i8** %3, align 8, !dbg !859\l  %31 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.35, i64 0, i64 0\l  %32 = call fastcc i32 @strcmp(i8* %30, i8* %31) #27, !dbg !859\l  %33 = icmp eq i32 %32, 0, !dbg !859\l  %34 = zext i1 %33 to i8, !dbg !858\l  store i8 %34, i8* %16, align 1, !dbg !858\l  %35 = load i8, i8* %16, align 1, !dbg !860\l  %36 = trunc i8 %35 to i1, !dbg !860\l  br i1 %36, label %37, label %41, !dbg !862\l|{<s0>T|<s1>F}}"];
	Node0x2103c50:s0 -> Node0x21041e0;
	Node0x2103c50:s1 -> Node0x2104230;
	Node0x21041e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%37:\l37:                                               \l  store i1 true, i1* @have_read_stdin, align 1, !dbg !863\l  %38 = getelementptr inbounds [15 x i8], [15 x i8]* @.str.36, i64 0, i64 0\l  store i8* %38, i8** %3, align 8, !dbg !865\l  %39 = bitcast %struct._IO_FILE.706** @stdin to %struct._IO_FILE**\l  %40 = load %struct._IO_FILE*, %struct._IO_FILE** %39, align 8, !dbg !866\l  store %struct._IO_FILE* %40, %struct._IO_FILE** %4, align 8, !dbg !867\l  br label %54, !dbg !868\l}"];
	Node0x21041e0 -> Node0x2104320;
	Node0x2104230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%41:\l41:                                               \l  %42 = load i8*, i8** %3, align 8, !dbg !869\l  %43 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.68, i64 0, i64 0\l  %44 = call fastcc %struct._IO_FILE* @fopen_safer(i8* %42, i8* %43), !dbg !871\l  store %struct._IO_FILE* %44, %struct._IO_FILE** %4, align 8, !dbg !872\l  %45 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8, !dbg !873\l  %46 = icmp eq %struct._IO_FILE* %45, null, !dbg !875\l  br i1 %46, label %47, label %53, !dbg !876\l|{<s0>T|<s1>F}}"];
	Node0x2104230:s0 -> Node0x2104280;
	Node0x2104230:s1 -> Node0x21042d0;
	Node0x2104280 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%47:\l47:                                               \l  %48 = call fastcc i32* @__errno_location() #28, !dbg !877\l  %49 = load i32, i32* %48, align 4, !dbg !877\l  %50 = load i8*, i8** %3, align 8, !dbg !879\l  %51 = call fastcc i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %50), !dbg\l... !879\l  %52 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.69, i64 0, i64 0\l  call void (i32, i32, i8*, ...) @error(i32 0, i32 %49, i8* %52, i8* %51),\l... !dbg !880\l  store i1 false, i1* %2, align 1, !dbg !881\l  br label %407, !dbg !881\l}"];
	Node0x2104280 -> Node0x2105db0;
	Node0x21042d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%53:\l53:                                               \l  br label %54\l}"];
	Node0x21042d0 -> Node0x2104320;
	Node0x2104320 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%54:\l54:                                               \l  store i64 0, i64* %13, align 8, !dbg !882\l  store i8* null, i8** %14, align 8, !dbg !883\l  store i64 0, i64* %15, align 8, !dbg !884\l  br label %55, !dbg !885\l}"];
	Node0x2104320 -> Node0x2104370;
	Node0x2104370 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%55:\l55:                                               \l  call void @llvm.dbg.declare(metadata i8** %17, metadata !886, metadata\l... !DIExpression()), !dbg !888\l  call void @llvm.dbg.declare(metadata i32* %18, metadata !889, metadata\l... !DIExpression()), !dbg !890\l  call void @llvm.dbg.declare(metadata i8** %19, metadata !891, metadata\l... !DIExpression()), !dbg !892\l  call void @llvm.dbg.declare(metadata i64* %20, metadata !893, metadata\l... !DIExpression()), !dbg !897\l  %56 = load i64, i64* %13, align 8, !dbg !898\l  %57 = add i64 %56, 1, !dbg !898\l  store i64 %57, i64* %13, align 8, !dbg !898\l  %58 = load i64, i64* %13, align 8, !dbg !899\l  %59 = icmp eq i64 %58, 0, !dbg !901\l  br i1 %59, label %60, label %64, !dbg !902\l|{<s0>T|<s1>F}}"];
	Node0x2104370:s0 -> Node0x21043c0;
	Node0x2104370:s1 -> Node0x2104410;
	Node0x21043c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#5977e370",label="{%60:\l60:                                               \l  %61 = load i8*, i8** %3, align 8, !dbg !903\l  %62 = call fastcc i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %61), !dbg\l... !903\l  %63 = getelementptr inbounds [28 x i8], [28 x i8]* @.str.70, i64 0, i64 0\l  call void (i32, i32, i8*, ...) @error(i32 1, i32 0, i8* %63, i8* %62), !dbg\l... !903\l  unreachable, !dbg !903\l}"];
	Node0x2104410 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%64:\l64:                                               \l  %65 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8, !dbg !904\l  %66 = bitcast i64 (i8**, i64*, %struct._IO_FILE.3*)* @getline to i64 (i8**,\l... i64*, %struct._IO_FILE*)*\l  %67 = call i64 %66(i8** %14, i64* %15, %struct._IO_FILE* %65), !dbg !905\l  store i64 %67, i64* %20, align 8, !dbg !906\l  %68 = load i64, i64* %20, align 8, !dbg !907\l  %69 = icmp sle i64 %68, 0, !dbg !909\l  br i1 %69, label %70, label %71, !dbg !910\l|{<s0>T|<s1>F}}"];
	Node0x2104410:s0 -> Node0x2104460;
	Node0x2104410:s1 -> Node0x21044b0;
	Node0x2104460 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%70:\l70:                                               \l  br label %290, !dbg !911\l}"];
	Node0x2104460 -> Node0x2105450;
	Node0x21044b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%71:\l71:                                               \l  %72 = load i8*, i8** %14, align 8, !dbg !912\l  %73 = getelementptr inbounds i8, i8* %72, i64 0, !dbg !912\l  %74 = load i8, i8* %73, align 1, !dbg !912\l  %75 = sext i8 %74 to i32, !dbg !912\l  %76 = icmp eq i32 %75, 35, !dbg !914\l  br i1 %76, label %77, label %78, !dbg !915\l|{<s0>T|<s1>F}}"];
	Node0x21044b0:s0 -> Node0x2104500;
	Node0x21044b0:s1 -> Node0x2104550;
	Node0x2104500 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%77:\l77:                                               \l  br label %277, !dbg !916\l}"];
	Node0x2104500 -> Node0x2105360;
	Node0x2104550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%78:\l78:                                               \l  %79 = load i8*, i8** %14, align 8, !dbg !917\l  %80 = load i64, i64* %20, align 8, !dbg !918\l  %81 = sub nsw i64 %80, 1, !dbg !919\l  %82 = getelementptr inbounds i8, i8* %79, i64 %81, !dbg !917\l  %83 = load i8, i8* %82, align 1, !dbg !917\l  %84 = sext i8 %83 to i32, !dbg !917\l  %85 = icmp eq i32 %84, 10, !dbg !920\l  %86 = zext i1 %85 to i32, !dbg !920\l  %87 = sext i32 %86 to i64, !dbg !917\l  %88 = load i64, i64* %20, align 8, !dbg !921\l  %89 = sub nsw i64 %88, %87, !dbg !921\l  store i64 %89, i64* %20, align 8, !dbg !921\l  %90 = load i8*, i8** %14, align 8, !dbg !922\l  %91 = load i64, i64* %20, align 8, !dbg !923\l  %92 = load i64, i64* %20, align 8, !dbg !924\l  %93 = icmp slt i64 0, %92, !dbg !925\l  %94 = zext i1 %93 to i32, !dbg !925\l  %95 = sext i32 %94 to i64, !dbg !926\l  %96 = sub nsw i64 %91, %95, !dbg !927\l  %97 = getelementptr inbounds i8, i8* %90, i64 %96, !dbg !922\l  %98 = load i8, i8* %97, align 1, !dbg !922\l  %99 = sext i8 %98 to i32, !dbg !922\l  %100 = icmp eq i32 %99, 13, !dbg !928\l  %101 = zext i1 %100 to i32, !dbg !928\l  %102 = sext i32 %101 to i64, !dbg !922\l  %103 = load i64, i64* %20, align 8, !dbg !929\l  %104 = sub nsw i64 %103, %102, !dbg !929\l  store i64 %104, i64* %20, align 8, !dbg !929\l  %105 = load i64, i64* %20, align 8, !dbg !930\l  %106 = icmp eq i64 %105, 0, !dbg !932\l  br i1 %106, label %107, label %108, !dbg !933\l|{<s0>T|<s1>F}}"];
	Node0x2104550:s0 -> Node0x21045a0;
	Node0x2104550:s1 -> Node0x21045f0;
	Node0x21045a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%107:\l107:                                              \l  br label %277, !dbg !934\l}"];
	Node0x21045a0 -> Node0x2105360;
	Node0x21045f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%108:\l108:                                              \l  %109 = load i8*, i8** %14, align 8, !dbg !935\l  %110 = load i64, i64* %20, align 8, !dbg !936\l  %111 = getelementptr inbounds i8, i8* %109, i64 %110, !dbg !935\l  store i8 0, i8* %111, align 1, !dbg !937\l  %112 = load i8*, i8** %14, align 8, !dbg !938\l  %113 = load i64, i64* %20, align 8, !dbg !940\l  %114 = call fastcc zeroext i1 @split_3(i8* %112, i64 %113, i8** %19, i32*\l... %18, i8** %17), !dbg !941\l  br i1 %114, label %115, label %123, !dbg !942\l|{<s0>T|<s1>F}}"];
	Node0x21045f0:s0 -> Node0x2104640;
	Node0x21045f0:s1 -> Node0x21046e0;
	Node0x2104640 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%115:\l115:                                              \l  %116 = load i8, i8* %16, align 1, !dbg !943\l  %117 = trunc i8 %116 to i1, !dbg !943\l  br i1 %117, label %118, label %137, !dbg !944\l|{<s0>T|<s1>F}}"];
	Node0x2104640:s0 -> Node0x2104690;
	Node0x2104640:s1 -> Node0x21047d0;
	Node0x2104690 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%118:\l118:                                              \l  %119 = load i8*, i8** %17, align 8, !dbg !945\l  %120 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.35, i64 0, i64 0\l  %121 = call fastcc i32 @strcmp(i8* %119, i8* %120) #27, !dbg !945\l  %122 = icmp eq i32 %121, 0, !dbg !945\l  br i1 %122, label %123, label %137, !dbg !946\l|{<s0>T|<s1>F}}"];
	Node0x2104690:s0 -> Node0x21046e0;
	Node0x2104690:s1 -> Node0x21047d0;
	Node0x21046e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%123:\l123:                                              \l  %124 = load i64, i64* %5, align 8, !dbg !947\l  %125 = add i64 %124, 1, !dbg !947\l  store i64 %125, i64* %5, align 8, !dbg !947\l  %.b4 = load i1, i1* @warn.156, align 1, !dbg !949\l  %126 = zext i1 %.b4 to i8, !dbg !949\l  %127 = trunc i8 %126 to i1, !dbg !949\l  br i1 %127, label %128, label %134, !dbg !951\l|{<s0>T|<s1>F}}"];
	Node0x21046e0:s0 -> Node0x2104730;
	Node0x21046e0:s1 -> Node0x2104780;
	Node0x2104730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d8564670",label="{%128:\l128:                                              \l  %129 = load i8*, i8** %3, align 8, !dbg !952\l  %130 = call fastcc i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %129), !dbg\l... !952\l  %131 = load i64, i64* %13, align 8, !dbg !954\l  %132 = getelementptr inbounds [47 x i8], [47 x i8]* @.str.71, i64 0, i64 0\l  %133 = getelementptr inbounds [8 x i8], [8 x i8]* @.str.3, i64 0, i64 0\l  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %132, i8* %130, i64\l... %131, i8* %133), !dbg !955\l  br label %134, !dbg !956\l}"];
	Node0x2104730 -> Node0x2104780;
	Node0x2104780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70",label="{%134:\l134:                                              \l  %135 = load i64, i64* %6, align 8, !dbg !957\l  %136 = add i64 %135, 1, !dbg !957\l  store i64 %136, i64* %6, align 8, !dbg !957\l  br label %276, !dbg !958\l}"];
	Node0x2104780 -> Node0x2105310;
	Node0x21047d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%137:\l137:                                              \l  call void @llvm.dbg.declare(metadata i8* %21, metadata !959, metadata\l... !DIExpression()), !dbg !961\l  call void @llvm.dbg.declare(metadata i8* %22, metadata !962, metadata\l... !DIExpression()), !dbg !963\l  call void @llvm.dbg.declare(metadata i8* %23, metadata !964, metadata\l... !DIExpression()), !dbg !965\l  %.b3 = load i1, i1* @status_only, align 1, !dbg !966\l  %138 = zext i1 %.b3 to i8, !dbg !966\l  %139 = trunc i8 %138 to i1, !dbg !966\l  br i1 %139, label %144, label %140, !dbg !967\l|{<s0>T|<s1>F}}"];
	Node0x21047d0:s0 -> Node0x2104870;
	Node0x21047d0:s1 -> Node0x2104820;
	Node0x2104820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%140:\l140:                                              \l  %141 = load i8*, i8** %17, align 8, !dbg !968\l  %142 = call fastcc i8* @strchr(i8* %141, i32 10) #27, !dbg !969\l  %143 = icmp ne i8* %142, null, !dbg !967\l  br label %144\l}"];
	Node0x2104820 -> Node0x2104870;
	Node0x2104870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%144:\l144:                                              \l  %145 = phi i1 [ false, %137 ], [ %143, %140 ], !dbg !970\l  %146 = zext i1 %145 to i8, !dbg !965\l  store i8 %146, i8* %23, align 1, !dbg !965\l  store i8 1, i8* %9, align 1, !dbg !971\l  call void @llvm.dbg.declare(metadata i64* %24, metadata !972, metadata\l... !DIExpression()), !dbg !973\l  %147 = load i8*, i8** %17, align 8, !dbg !974\l  %148 = load i8*, i8** %12, align 8, !dbg !975\l  %149 = call fastcc zeroext i1 @digest_file(i8* %147, i32* %18, i8* %148, i8*\l... %22, i64* %24), !dbg !976\l  %150 = zext i1 %149 to i8, !dbg !977\l  store i8 %150, i8* %21, align 1, !dbg !977\l  %151 = load i8, i8* %21, align 1, !dbg !978\l  %152 = trunc i8 %151 to i1, !dbg !978\l  br i1 %152, label %171, label %153, !dbg !980\l|{<s0>T|<s1>F}}"];
	Node0x2104870:s0 -> Node0x2104a50;
	Node0x2104870:s1 -> Node0x21048c0;
	Node0x21048c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%153:\l153:                                              \l  %154 = load i64, i64* %8, align 8, !dbg !981\l  %155 = add i64 %154, 1, !dbg !981\l  store i64 %155, i64* %8, align 8, !dbg !981\l  %.b2 = load i1, i1* @status_only, align 1, !dbg !983\l  %156 = zext i1 %.b2 to i8, !dbg !983\l  %157 = trunc i8 %156 to i1, !dbg !983\l  br i1 %157, label %170, label %158, !dbg !985\l|{<s0>T|<s1>F}}"];
	Node0x21048c0:s0 -> Node0x2104a00;
	Node0x21048c0:s1 -> Node0x2104910;
	Node0x2104910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%158:\l158:                                              \l  %159 = load i8, i8* %23, align 1, !dbg !986\l  %160 = trunc i8 %159 to i1, !dbg !986\l  br i1 %160, label %161, label %163, !dbg !989\l|{<s0>T|<s1>F}}"];
	Node0x2104910:s0 -> Node0x2104960;
	Node0x2104910:s1 -> Node0x21049b0;
	Node0x2104960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%161:\l161:                                              \l  %162 = call fastcc i32 @putchar_unlocked(i32 92), !dbg !990\l  br label %163, !dbg !990\l}"];
	Node0x2104960 -> Node0x21049b0;
	Node0x21049b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%163:\l163:                                              \l  %164 = load i8*, i8** %17, align 8, !dbg !991\l  %165 = load i8, i8* %23, align 1, !dbg !992\l  %166 = trunc i8 %165 to i1, !dbg !992\l  call fastcc void @print_filename(i8* %164, i1 zeroext %166), !dbg !993\l  %167 = getelementptr inbounds [6 x i8], [6 x i8]* @.str.72, i64 0, i64 0\l  %168 = getelementptr inbounds [20 x i8], [20 x i8]* @.str.73, i64 0, i64 0\l  %169 = call i32 (i8*, ...) @printf(i8* %167, i8* %168), !dbg !994\l  br label %170, !dbg !995\l}"];
	Node0x21049b0 -> Node0x2104a00;
	Node0x2104a00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%170:\l170:                                              \l  br label %275, !dbg !996\l}"];
	Node0x2104a00 -> Node0x21052c0;
	Node0x2104a50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%171:\l171:                                              \l  %.b8 = load i1, i1* @ignore_missing, align 1, !dbg !997\l  %172 = zext i1 %.b8 to i8, !dbg !997\l  %173 = trunc i8 %172 to i1, !dbg !997\l  br i1 %173, label %174, label %178, !dbg !999\l|{<s0>T|<s1>F}}"];
	Node0x2104a50:s0 -> Node0x2104aa0;
	Node0x2104a50:s1 -> Node0x2104b40;
	Node0x2104aa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%174:\l174:                                              \l  %175 = load i8, i8* %22, align 1, !dbg !1000\l  %176 = trunc i8 %175 to i1, !dbg !1000\l  br i1 %176, label %177, label %178, !dbg !1001\l|{<s0>T|<s1>F}}"];
	Node0x2104aa0:s0 -> Node0x2104af0;
	Node0x2104aa0:s1 -> Node0x2104b40;
	Node0x2104af0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%177:\l177:                                              \l  br label %274, !dbg !1002\l}"];
	Node0x2104af0 -> Node0x2105270;
	Node0x2104b40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%178:\l178:                                              \l  call void @llvm.dbg.declare(metadata i64* %25, metadata !1004, metadata\l... !DIExpression()), !dbg !1006\l  %179 = load i64, i64* @digest_hex_bytes, align 8, !dbg !1007\l  %180 = udiv i64 %179, 2, !dbg !1008\l  store i64 %180, i64* %25, align 8, !dbg !1006\l  call void @llvm.dbg.declare(metadata i64* %26, metadata !1009, metadata\l... !DIExpression()), !dbg !1010\l  store i64 0, i64* %26, align 8, !dbg !1011\l  br label %181, !dbg !1013\l}"];
	Node0x2104b40 -> Node0x2104b90;
	Node0x2104b90 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%181:\l181:                                              \l  %182 = load i64, i64* %26, align 8, !dbg !1014\l  %183 = load i64, i64* %25, align 8, !dbg !1016\l  %184 = icmp ult i64 %182, %183, !dbg !1017\l  br i1 %184, label %185, label %229, !dbg !1018\l|{<s0>T|<s1>F}}"];
	Node0x2104b90:s0 -> Node0x2104be0;
	Node0x2104b90:s1 -> Node0x2104d70;
	Node0x2104be0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%185:\l185:                                              \l  %186 = load i8*, i8** %19, align 8, !dbg !1019\l  %187 = load i64, i64* %26, align 8, !dbg !1022\l  %188 = mul i64 2, %187, !dbg !1023\l  %189 = getelementptr inbounds i8, i8* %186, i64 %188, !dbg !1019\l  %190 = load i8, i8* %189, align 1, !dbg !1019\l  %191 = zext i8 %190 to i32, !dbg !1019\l  %192 = call fastcc i32 @tolower(i32 %191) #27, !dbg !1024\l  %193 = load i8*, i8** %12, align 8, !dbg !1025\l  %194 = load i64, i64* %26, align 8, !dbg !1026\l  %195 = getelementptr inbounds i8, i8* %193, i64 %194, !dbg !1025\l  %196 = load i8, i8* %195, align 1, !dbg !1025\l  %197 = zext i8 %196 to i32, !dbg !1025\l  %198 = ashr i32 %197, 4, !dbg !1027\l  %199 = sext i32 %198 to i64, !dbg !1028\l  %200 = getelementptr inbounds [16 x i8], [16 x i8]* @digest_check.bin2hex,\l... i64 0, i64 %199, !dbg !1028\l  %201 = load i8, i8* %200, align 1, !dbg !1028\l  %202 = sext i8 %201 to i32, !dbg !1028\l  %203 = icmp ne i32 %192, %202, !dbg !1029\l  br i1 %203, label %224, label %204, !dbg !1030\l|{<s0>T|<s1>F}}"];
	Node0x2104be0:s0 -> Node0x2104c80;
	Node0x2104be0:s1 -> Node0x2104c30;
	Node0x2104c30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%204:\l204:                                              \l  %205 = load i8*, i8** %19, align 8, !dbg !1031\l  %206 = load i64, i64* %26, align 8, !dbg !1032\l  %207 = mul i64 2, %206, !dbg !1033\l  %208 = add i64 %207, 1, !dbg !1034\l  %209 = getelementptr inbounds i8, i8* %205, i64 %208, !dbg !1031\l  %210 = load i8, i8* %209, align 1, !dbg !1031\l  %211 = zext i8 %210 to i32, !dbg !1031\l  %212 = call fastcc i32 @tolower(i32 %211) #27, !dbg !1035\l  %213 = load i8*, i8** %12, align 8, !dbg !1036\l  %214 = load i64, i64* %26, align 8, !dbg !1037\l  %215 = getelementptr inbounds i8, i8* %213, i64 %214, !dbg !1036\l  %216 = load i8, i8* %215, align 1, !dbg !1036\l  %217 = zext i8 %216 to i32, !dbg !1036\l  %218 = and i32 %217, 15, !dbg !1038\l  %219 = sext i32 %218 to i64, !dbg !1039\l  %220 = getelementptr inbounds [16 x i8], [16 x i8]* @digest_check.bin2hex,\l... i64 0, i64 %219, !dbg !1039\l  %221 = load i8, i8* %220, align 1, !dbg !1039\l  %222 = sext i8 %221 to i32, !dbg !1040\l  %223 = icmp ne i32 %212, %222, !dbg !1041\l  br i1 %223, label %224, label %225, !dbg !1042\l|{<s0>T|<s1>F}}"];
	Node0x2104c30:s0 -> Node0x2104c80;
	Node0x2104c30:s1 -> Node0x2104cd0;
	Node0x2104c80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%224:\l224:                                              \l  br label %229, !dbg !1043\l}"];
	Node0x2104c80 -> Node0x2104d70;
	Node0x2104cd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%225:\l225:                                              \l  br label %226, !dbg !1044\l}"];
	Node0x2104cd0 -> Node0x2104d20;
	Node0x2104d20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c32e3170",label="{%226:\l226:                                              \l  %227 = load i64, i64* %26, align 8, !dbg !1045\l  %228 = add i64 %227, 1, !dbg !1045\l  store i64 %228, i64* %26, align 8, !dbg !1045\l  br label %181, !dbg !1046, !llvm.loop !1047\l}"];
	Node0x2104d20 -> Node0x2104b90;
	Node0x2104d70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%229:\l229:                                              \l  %230 = load i64, i64* %26, align 8, !dbg !1049\l  %231 = load i64, i64* %25, align 8, !dbg !1051\l  %232 = icmp ne i64 %230, %231, !dbg !1052\l  br i1 %232, label %233, label %236, !dbg !1053\l|{<s0>T|<s1>F}}"];
	Node0x2104d70:s0 -> Node0x2104dc0;
	Node0x2104d70:s1 -> Node0x2104e10;
	Node0x2104dc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%233:\l233:                                              \l  %234 = load i64, i64* %7, align 8, !dbg !1054\l  %235 = add i64 %234, 1, !dbg !1054\l  store i64 %235, i64* %7, align 8, !dbg !1054\l  br label %237, !dbg !1054\l}"];
	Node0x2104dc0 -> Node0x2104e60;
	Node0x2104e10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%236:\l236:                                              \l  store i8 1, i8* %10, align 1, !dbg !1055\l  br label %237\l}"];
	Node0x2104e10 -> Node0x2104e60;
	Node0x2104e60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%237:\l237:                                              \l  %.b1 = load i1, i1* @status_only, align 1, !dbg !1056\l  %238 = zext i1 %.b1 to i8, !dbg !1056\l  %239 = trunc i8 %238 to i1, !dbg !1056\l  br i1 %239, label %273, label %240, !dbg !1058\l|{<s0>T|<s1>F}}"];
	Node0x2104e60:s0 -> Node0x2105220;
	Node0x2104e60:s1 -> Node0x2104eb0;
	Node0x2104eb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%240:\l240:                                              \l  %241 = load i64, i64* %26, align 8, !dbg !1059\l  %242 = load i64, i64* %25, align 8, !dbg !1062\l  %243 = icmp ne i64 %241, %242, !dbg !1063\l  br i1 %243, label %247, label %244, !dbg !1064\l|{<s0>T|<s1>F}}"];
	Node0x2104eb0:s0 -> Node0x2104f50;
	Node0x2104eb0:s1 -> Node0x2104f00;
	Node0x2104f00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%244:\l244:                                              \l  %.b6 = load i1, i1* @quiet, align 1, !dbg !1065\l  %245 = zext i1 %.b6 to i8, !dbg !1065\l  %246 = trunc i8 %245 to i1, !dbg !1065\l  br i1 %246, label %256, label %247, !dbg !1066\l|{<s0>T|<s1>F}}"];
	Node0x2104f00:s0 -> Node0x2105040;
	Node0x2104f00:s1 -> Node0x2104f50;
	Node0x2104f50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%247:\l247:                                              \l  %248 = load i8, i8* %23, align 1, !dbg !1067\l  %249 = trunc i8 %248 to i1, !dbg !1067\l  br i1 %249, label %250, label %252, !dbg !1070\l|{<s0>T|<s1>F}}"];
	Node0x2104f50:s0 -> Node0x2104fa0;
	Node0x2104f50:s1 -> Node0x2104ff0;
	Node0x2104fa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%250:\l250:                                              \l  %251 = call fastcc i32 @putchar_unlocked(i32 92), !dbg !1071\l  br label %252, !dbg !1071\l}"];
	Node0x2104fa0 -> Node0x2104ff0;
	Node0x2104ff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%252:\l252:                                              \l  %253 = load i8*, i8** %17, align 8, !dbg !1072\l  %254 = load i8, i8* %23, align 1, !dbg !1073\l  %255 = trunc i8 %254 to i1, !dbg !1073\l  call fastcc void @print_filename(i8* %253, i1 zeroext %255), !dbg !1074\l  br label %256, !dbg !1075\l}"];
	Node0x2104ff0 -> Node0x2105040;
	Node0x2105040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%256:\l256:                                              \l  %257 = load i64, i64* %26, align 8, !dbg !1076\l  %258 = load i64, i64* %25, align 8, !dbg !1078\l  %259 = icmp ne i64 %257, %258, !dbg !1079\l  br i1 %259, label %260, label %264, !dbg !1080\l|{<s0>T|<s1>F}}"];
	Node0x2105040:s0 -> Node0x2105090;
	Node0x2105040:s1 -> Node0x21050e0;
	Node0x2105090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%260:\l260:                                              \l  %261 = getelementptr inbounds [6 x i8], [6 x i8]* @.str.72, i64 0, i64 0\l  %262 = getelementptr inbounds [7 x i8], [7 x i8]* @.str.74, i64 0, i64 0\l  %263 = call i32 (i8*, ...) @printf(i8* %261, i8* %262), !dbg !1081\l  br label %272, !dbg !1081\l}"];
	Node0x2105090 -> Node0x21051d0;
	Node0x21050e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%264:\l264:                                              \l  %.b5 = load i1, i1* @quiet, align 1, !dbg !1082\l  %265 = zext i1 %.b5 to i8, !dbg !1082\l  %266 = trunc i8 %265 to i1, !dbg !1082\l  br i1 %266, label %271, label %267, !dbg !1084\l|{<s0>T|<s1>F}}"];
	Node0x21050e0:s0 -> Node0x2105180;
	Node0x21050e0:s1 -> Node0x2105130;
	Node0x2105130 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%267:\l267:                                              \l  %268 = getelementptr inbounds [6 x i8], [6 x i8]* @.str.72, i64 0, i64 0\l  %269 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.75, i64 0, i64 0\l  %270 = call i32 (i8*, ...) @printf(i8* %268, i8* %269), !dbg !1085\l  br label %271, !dbg !1085\l}"];
	Node0x2105130 -> Node0x2105180;
	Node0x2105180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ed836670",label="{%271:\l271:                                              \l  br label %272\l}"];
	Node0x2105180 -> Node0x21051d0;
	Node0x21051d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8765c70",label="{%272:\l272:                                              \l  br label %273, !dbg !1086\l}"];
	Node0x21051d0 -> Node0x2105220;
	Node0x2105220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{%273:\l273:                                              \l  br label %274\l}"];
	Node0x2105220 -> Node0x2105270;
	Node0x2105270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%274:\l274:                                              \l  br label %275\l}"];
	Node0x2105270 -> Node0x21052c0;
	Node0x21052c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470",label="{%275:\l275:                                              \l  br label %276\l}"];
	Node0x21052c0 -> Node0x2105310;
	Node0x2105310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ca3b3770",label="{%276:\l276:                                              \l  br label %277, !dbg !1087\l}"];
	Node0x2105310 -> Node0x2105360;
	Node0x2105360 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%277:\l277:                                              \l  %278 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8, !dbg !1088\l  %279 = bitcast i32 (%struct._IO_FILE.699*)* @feof to i32 (%struct._IO_FILE*)*\l  %280 = call i32 %279(%struct._IO_FILE* %278) #8, !dbg !1088\l  %281 = icmp ne i32 %280, 0, !dbg !1088\l  br i1 %281, label %288, label %282, !dbg !1089\l|{<s0>T|<s1>F}}"];
	Node0x2105360:s0 -> Node0x2105400;
	Node0x2105360:s1 -> Node0x21053b0;
	Node0x21053b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5333470",label="{%282:\l282:                                              \l  %283 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8, !dbg !1090\l  %284 = bitcast i32 (%struct._IO_FILE.699*)* @ferror to i32\l... (%struct._IO_FILE*)*\l  %285 = call i32 %284(%struct._IO_FILE* %283) #8, !dbg !1090\l  %286 = icmp ne i32 %285, 0, !dbg !1091\l  %287 = xor i1 %286, true, !dbg !1091\l  br label %288\l}"];
	Node0x21053b0 -> Node0x2105400;
	Node0x2105400 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%288:\l288:                                              \l  %289 = phi i1 [ false, %277 ], [ %287, %282 ], !dbg !1092\l  br i1 %289, label %55, label %290, !dbg !1087, !llvm.loop !1093\l|{<s0>T|<s1>F}}"];
	Node0x2105400:s0 -> Node0x2104370;
	Node0x2105400:s1 -> Node0x2105450;
	Node0x2105450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%290:\l290:                                              \l  %291 = load i8*, i8** %14, align 8, !dbg !1095\l  call fastcc void @rpl_free(i8* %291) #8, !dbg !1096\l  call void @llvm.dbg.declare(metadata i32* %27, metadata !1097, metadata\l... !DIExpression()), !dbg !1098\l  %292 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8, !dbg !1099\l  %293 = bitcast i32 (%struct._IO_FILE.699*)* @ferror to i32\l... (%struct._IO_FILE*)*\l  %294 = call i32 %293(%struct._IO_FILE* %292) #8, !dbg !1099\l  %295 = icmp ne i32 %294, 0, !dbg !1099\l  %296 = zext i1 %295 to i64, !dbg !1099\l  %297 = select i1 %295, i32 0, i32 -1, !dbg !1099\l  store i32 %297, i32* %27, align 4, !dbg !1098\l  %298 = load i8, i8* %16, align 1, !dbg !1100\l  %299 = trunc i8 %298 to i1, !dbg !1100\l  br i1 %299, label %300, label %303, !dbg !1102\l|{<s0>T|<s1>F}}"];
	Node0x2105450:s0 -> Node0x21054a0;
	Node0x2105450:s1 -> Node0x21054f0;
	Node0x21054a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%300:\l300:                                              \l  %301 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8, !dbg !1103\l  %302 = bitcast void (%struct._IO_FILE.3*)* @clearerr to void\l... (%struct._IO_FILE*)*\l  call void %302(%struct._IO_FILE* %301) #8, !dbg !1103\l  br label %314, !dbg !1103\l}"];
	Node0x21054a0 -> Node0x2105630;
	Node0x21054f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%303:\l303:                                              \l  %304 = load %struct._IO_FILE*, %struct._IO_FILE** %4, align 8, !dbg !1104\l  %305 = call fastcc i32 @rpl_fclose(%struct._IO_FILE* %304), !dbg !1106\l  %306 = icmp ne i32 %305, 0, !dbg !1107\l  br i1 %306, label %307, label %313, !dbg !1108\l|{<s0>T|<s1>F}}"];
	Node0x21054f0:s0 -> Node0x2105540;
	Node0x21054f0:s1 -> Node0x21055e0;
	Node0x2105540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%307:\l307:                                              \l  %308 = load i32, i32* %27, align 4, !dbg !1109\l  %309 = icmp slt i32 %308, 0, !dbg !1110\l  br i1 %309, label %310, label %313, !dbg !1111\l|{<s0>T|<s1>F}}"];
	Node0x2105540:s0 -> Node0x2105590;
	Node0x2105540:s1 -> Node0x21055e0;
	Node0x2105590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%310:\l310:                                              \l  %311 = call fastcc i32* @__errno_location() #28, !dbg !1112\l  %312 = load i32, i32* %311, align 4, !dbg !1112\l  store i32 %312, i32* %27, align 4, !dbg !1113\l  br label %313, !dbg !1114\l}"];
	Node0x2105590 -> Node0x21055e0;
	Node0x21055e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%313:\l313:                                              \l  br label %314\l}"];
	Node0x21055e0 -> Node0x2105630;
	Node0x2105630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%314:\l314:                                              \l  %315 = load i32, i32* %27, align 4, !dbg !1115\l  %316 = icmp sle i32 0, %315, !dbg !1117\l  br i1 %316, label %317, label %327, !dbg !1118\l|{<s0>T|<s1>F}}"];
	Node0x2105630:s0 -> Node0x2105680;
	Node0x2105630:s1 -> Node0x21056d0;
	Node0x2105680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%317:\l317:                                              \l  %318 = load i32, i32* %27, align 4, !dbg !1119\l  %319 = load i32, i32* %27, align 4, !dbg !1121\l  %320 = icmp ne i32 %319, 0, !dbg !1121\l  %321 = zext i1 %320 to i64, !dbg !1121\l  %322 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.69, i64 0, i64 0\l  %323 = getelementptr inbounds [15 x i8], [15 x i8]* @.str.76, i64 0, i64 0\l  %324 = select i1 %320, i8* %322, i8* %323, !dbg !1121\l  %325 = load i8*, i8** %3, align 8, !dbg !1122\l  %326 = call fastcc i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %325), !dbg\l... !1122\l  call void (i32, i32, i8*, ...) @error(i32 0, i32 %318, i8* %324, i8* %326),\l... !dbg !1123\l  store i1 false, i1* %2, align 1, !dbg !1124\l  br label %407, !dbg !1124\l}"];
	Node0x2105680 -> Node0x2105db0;
	Node0x21056d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%327:\l327:                                              \l  %328 = load i8, i8* %9, align 1, !dbg !1125\l  %329 = trunc i8 %328 to i1, !dbg !1125\l  br i1 %329, label %334, label %330, !dbg !1127\l|{<s0>T|<s1>F}}"];
	Node0x21056d0:s0 -> Node0x2105770;
	Node0x21056d0:s1 -> Node0x2105720;
	Node0x2105720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%330:\l330:                                              \l  %331 = load i8*, i8** %3, align 8, !dbg !1128\l  %332 = call fastcc i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %331), !dbg\l... !1128\l  %333 = getelementptr inbounds [47 x i8], [47 x i8]* @.str.77, i64 0, i64 0\l  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %333, i8* %332),\l... !dbg !1130\l  br label %385, !dbg !1131\l}"];
	Node0x2105720 -> Node0x2105b30;
	Node0x2105770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%334:\l334:                                              \l  %.b = load i1, i1* @status_only, align 1, !dbg !1132\l  %335 = zext i1 %.b to i8, !dbg !1132\l  %336 = trunc i8 %335 to i1, !dbg !1132\l  br i1 %336, label %384, label %337, !dbg !1135\l|{<s0>T|<s1>F}}"];
	Node0x2105770:s0 -> Node0x2105ae0;
	Node0x2105770:s1 -> Node0x21057c0;
	Node0x21057c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%337:\l337:                                              \l  %338 = load i64, i64* %5, align 8, !dbg !1136\l  %339 = icmp ne i64 %338, 0, !dbg !1139\l  br i1 %339, label %340, label %349, !dbg !1140\l|{<s0>T|<s1>F}}"];
	Node0x21057c0:s0 -> Node0x2105810;
	Node0x21057c0:s1 -> Node0x2105860;
	Node0x2105810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%340:\l340:                                              \l  %341 = load i64, i64* %5, align 8, !dbg !1141\l  %342 = call fastcc i64 @select_plural(i64 %341), !dbg !1141\l  %343 = icmp eq i64 %342, 1, !dbg !1141\l  %344 = zext i1 %343 to i64, !dbg !1141\l  %345 = getelementptr inbounds [42 x i8], [42 x i8]* @.str.79, i64 0, i64 0\l  %346 = getelementptr inbounds [44 x i8], [44 x i8]* @.str.78, i64 0, i64 0\l  %347 = select i1 %343, i8* %345, i8* %346, !dbg !1141\l  %348 = load i64, i64* %5, align 8, !dbg !1142\l  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %347, i64 %348),\l... !dbg !1143\l  br label %349, !dbg !1143\l}"];
	Node0x2105810 -> Node0x2105860;
	Node0x2105860 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%349:\l349:                                              \l  %350 = load i64, i64* %8, align 8, !dbg !1144\l  %351 = icmp ne i64 %350, 0, !dbg !1146\l  br i1 %351, label %352, label %361, !dbg !1147\l|{<s0>T|<s1>F}}"];
	Node0x2105860:s0 -> Node0x21058b0;
	Node0x2105860:s1 -> Node0x2105900;
	Node0x21058b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%352:\l352:                                              \l  %353 = load i64, i64* %8, align 8, !dbg !1148\l  %354 = call fastcc i64 @select_plural(i64 %353), !dbg !1148\l  %355 = icmp eq i64 %354, 1, !dbg !1148\l  %356 = zext i1 %355 to i64, !dbg !1148\l  %357 = getelementptr inbounds [43 x i8], [43 x i8]* @.str.81, i64 0, i64 0\l  %358 = getelementptr inbounds [44 x i8], [44 x i8]* @.str.80, i64 0, i64 0\l  %359 = select i1 %355, i8* %357, i8* %358, !dbg !1148\l  %360 = load i64, i64* %8, align 8, !dbg !1149\l  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %359, i64 %360),\l... !dbg !1150\l  br label %361, !dbg !1150\l}"];
	Node0x21058b0 -> Node0x2105900;
	Node0x2105900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%361:\l361:                                              \l  %362 = load i64, i64* %7, align 8, !dbg !1151\l  %363 = icmp ne i64 %362, 0, !dbg !1153\l  br i1 %363, label %364, label %373, !dbg !1154\l|{<s0>T|<s1>F}}"];
	Node0x2105900:s0 -> Node0x2105950;
	Node0x2105900:s1 -> Node0x21059a0;
	Node0x2105950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%364:\l364:                                              \l  %365 = load i64, i64* %7, align 8, !dbg !1155\l  %366 = call fastcc i64 @select_plural(i64 %365), !dbg !1155\l  %367 = icmp eq i64 %366, 1, !dbg !1155\l  %368 = zext i1 %367 to i64, !dbg !1155\l  %369 = getelementptr inbounds [45 x i8], [45 x i8]* @.str.83, i64 0, i64 0\l  %370 = getelementptr inbounds [46 x i8], [46 x i8]* @.str.82, i64 0, i64 0\l  %371 = select i1 %367, i8* %369, i8* %370, !dbg !1155\l  %372 = load i64, i64* %7, align 8, !dbg !1156\l  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %371, i64 %372),\l... !dbg !1157\l  br label %373, !dbg !1157\l}"];
	Node0x2105950 -> Node0x21059a0;
	Node0x21059a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%373:\l373:                                              \l  %.b7 = load i1, i1* @ignore_missing, align 1, !dbg !1158\l  %374 = zext i1 %.b7 to i8, !dbg !1158\l  %375 = trunc i8 %374 to i1, !dbg !1158\l  br i1 %375, label %376, label %383, !dbg !1160\l|{<s0>T|<s1>F}}"];
	Node0x21059a0:s0 -> Node0x21059f0;
	Node0x21059a0:s1 -> Node0x2105a90;
	Node0x21059f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{%376:\l376:                                              \l  %377 = load i8, i8* %10, align 1, !dbg !1161\l  %378 = trunc i8 %377 to i1, !dbg !1161\l  br i1 %378, label %383, label %379, !dbg !1162\l|{<s0>T|<s1>F}}"];
	Node0x21059f0:s0 -> Node0x2105a90;
	Node0x21059f0:s1 -> Node0x2105a40;
	Node0x2105a40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%379:\l379:                                              \l  %380 = load i8*, i8** %3, align 8, !dbg !1163\l  %381 = call fastcc i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %380), !dbg\l... !1163\l  %382 = getelementptr inbounds [25 x i8], [25 x i8]* @.str.84, i64 0, i64 0\l  call void (i32, i32, i8*, ...) @error(i32 0, i32 0, i8* %382, i8* %381),\l... !dbg !1164\l  br label %383, !dbg !1164\l}"];
	Node0x2105a40 -> Node0x2105a90;
	Node0x2105a90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%383:\l383:                                              \l  br label %384, !dbg !1165\l}"];
	Node0x2105a90 -> Node0x2105ae0;
	Node0x2105ae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%384:\l384:                                              \l  br label %385\l}"];
	Node0x2105ae0 -> Node0x2105b30;
	Node0x2105b30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%385:\l385:                                              \l  %386 = load i8, i8* %9, align 1, !dbg !1166\l  %387 = trunc i8 %386 to i1, !dbg !1166\l  br i1 %387, label %388, label %405, !dbg !1167\l|{<s0>T|<s1>F}}"];
	Node0x2105b30:s0 -> Node0x2105b80;
	Node0x2105b30:s1 -> Node0x2105d60;
	Node0x2105b80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ec7f6370",label="{%388:\l388:                                              \l  %389 = load i8, i8* %10, align 1, !dbg !1168\l  %390 = trunc i8 %389 to i1, !dbg !1168\l  br i1 %390, label %391, label %405, !dbg !1169\l|{<s0>T|<s1>F}}"];
	Node0x2105b80:s0 -> Node0x2105bd0;
	Node0x2105b80:s1 -> Node0x2105d60;
	Node0x2105bd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%391:\l391:                                              \l  %392 = load i64, i64* %7, align 8, !dbg !1170\l  %393 = icmp eq i64 %392, 0, !dbg !1171\l  br i1 %393, label %394, label %405, !dbg !1172\l|{<s0>T|<s1>F}}"];
	Node0x2105bd0:s0 -> Node0x2105c20;
	Node0x2105bd0:s1 -> Node0x2105d60;
	Node0x2105c20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%394:\l394:                                              \l  %395 = load i64, i64* %8, align 8, !dbg !1173\l  %396 = icmp eq i64 %395, 0, !dbg !1174\l  br i1 %396, label %397, label %405, !dbg !1175\l|{<s0>T|<s1>F}}"];
	Node0x2105c20:s0 -> Node0x2105c70;
	Node0x2105c20:s1 -> Node0x2105d60;
	Node0x2105c70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%397:\l397:                                              \l  %.b9 = load i1, i1* @strict, align 1, !dbg !1176\l  %398 = zext i1 %.b9 to i8, !dbg !1176\l  %399 = trunc i8 %398 to i1, !dbg !1176\l  br i1 %399, label %400, label %403, !dbg !1177\l|{<s0>T|<s1>F}}"];
	Node0x2105c70:s0 -> Node0x2105cc0;
	Node0x2105c70:s1 -> Node0x2105d10;
	Node0x2105cc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%400:\l400:                                              \l  %401 = load i64, i64* %6, align 8, !dbg !1178\l  %402 = icmp eq i64 %401, 0, !dbg !1179\l  br label %403, !dbg !1177\l}"];
	Node0x2105cc0 -> Node0x2105d10;
	Node0x2105d10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%403:\l403:                                              \l  %404 = phi i1 [ true, %397 ], [ %402, %400 ]\l  br label %405\l}"];
	Node0x2105d10 -> Node0x2105d60;
	Node0x2105d60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%405:\l405:                                              \l  %406 = phi i1 [ false, %394 ], [ false, %391 ], [ false, %388 ], [ false,\l... %385 ], [ %404, %403 ], !dbg !1092\l  store i1 %406, i1* %2, align 1, !dbg !1180\l  br label %407, !dbg !1180\l}"];
	Node0x2105d60 -> Node0x2105db0;
	Node0x2105db0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%407:\l407:                                              \l  %408 = load i1, i1* %2, align 1, !dbg !1181\l  ret i1 %408, !dbg !1181\l}"];
}
