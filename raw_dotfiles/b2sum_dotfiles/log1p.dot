digraph "CFG for 'log1p' function" {
	label="CFG for 'log1p' function";

	Node0x1d63d80 [shape=record,label="{%1:\l  %2 = alloca float, align 4\l  %3 = bitcast double %0 to i64\l  %4 = lshr i64 %3, 32\l  %5 = trunc i64 %4 to i32\l  %6 = icmp ult i32 %5, 1071284858\l  %7 = icmp slt i64 %3, 0\l  %8 = or i1 %7, %6\l  br i1 %8, label %9, label %31\l|{<s0>T|<s1>F}}"];
	Node0x1d63d80:s0 -> Node0x1d661f0;
	Node0x1d63d80:s1 -> Node0x1d66530;
	Node0x1d661f0 [shape=record,label="{%9:\l9:                                                \l  %10 = icmp ugt i32 %5, -1074790401\l  br i1 %10, label %11, label %19\l|{<s0>T|<s1>F}}"];
	Node0x1d661f0:s0 -> Node0x1d66300;
	Node0x1d661f0:s1 -> Node0x1d663f0;
	Node0x1d66300 [shape=record,label="{%11:\l11:                                               \l  %12 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 -1,\l... metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %13 = tail call i1 @llvm.experimental.constrained.fcmp.f64(double %0, double\l... %12, metadata !\"oeq\", metadata !\"fpexcept.ignore\") #40\l  br i1 %13, label %14, label %16\l|{<s0>T|<s1>F}}"];
	Node0x1d66300:s0 -> Node0x1d66350;
	Node0x1d66300:s1 -> Node0x1d663a0;
	Node0x1d66350 [shape=record,label="{%14:\l14:                                               \l  %15 = tail call double @llvm.experimental.constrained.fdiv.f64(double %0,\l... double 0.000000e+00, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\")\l... #40\l  br label %99\l}"];
	Node0x1d66350 -> Node0x1d66760;
	Node0x1d663a0 [shape=record,label="{%16:\l16:                                               \l  %17 = tail call double @llvm.experimental.constrained.fsub.f64(double %0,\l... double %0, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %18 = tail call double @llvm.experimental.constrained.fdiv.f64(double %17,\l... double 0.000000e+00, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\")\l... #40\l  br label %99\l}"];
	Node0x1d663a0 -> Node0x1d66760;
	Node0x1d663f0 [shape=record,label="{%19:\l19:                                               \l  %20 = shl nuw nsw i64 %4, 1\l  %21 = trunc i64 %20 to i32\l  %22 = icmp ult i32 %21, 2034237440\l  br i1 %22, label %23, label %29\l|{<s0>T|<s1>F}}"];
	Node0x1d663f0:s0 -> Node0x1d66440;
	Node0x1d663f0:s1 -> Node0x1d664e0;
	Node0x1d66440 [shape=record,label="{%23:\l23:                                               \l  %24 = and i32 %5, 2146435072\l  %25 = icmp eq i32 %24, 0\l  br i1 %25, label %26, label %99\l|{<s0>T|<s1>F}}"];
	Node0x1d66440:s0 -> Node0x1d66490;
	Node0x1d66440:s1 -> Node0x1d66760;
	Node0x1d66490 [shape=record,label="{%26:\l26:                                               \l  %27 = tail call float @llvm.experimental.constrained.fptrunc.f32.f64(double\l... %0, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %28 = bitcast float* %2 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28)\l  store volatile float %27, float* %2, align 4, !tbaa !1632\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28)\l  br label %99\l}"];
	Node0x1d66490 -> Node0x1d66760;
	Node0x1d664e0 [shape=record,label="{%29:\l29:                                               \l  %30 = icmp ult i32 %5, -1076707643\l  br i1 %30, label %33, label %35\l|{<s0>T|<s1>F}}"];
	Node0x1d664e0:s0 -> Node0x1d66580;
	Node0x1d664e0:s1 -> Node0x1d665d0;
	Node0x1d66530 [shape=record,label="{%31:\l31:                                               \l  %32 = icmp ugt i32 %5, 2146435071\l  br i1 %32, label %99, label %35\l|{<s0>T|<s1>F}}"];
	Node0x1d66530:s0 -> Node0x1d66760;
	Node0x1d66530:s1 -> Node0x1d665d0;
	Node0x1d66580 [shape=record,label="{%33:\l33:                                               \l  %34 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 0,\l... metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  br label %66\l}"];
	Node0x1d66580 -> Node0x1d66710;
	Node0x1d665d0 [shape=record,label="{%35:\l35:                                               \l  %36 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 1,\l... metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %37 = tail call double @llvm.experimental.constrained.fadd.f64(double %36,\l... double %0, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %38 = bitcast double %37 to i64\l  %39 = lshr i64 %38, 32\l  %40 = trunc i64 %39 to i32\l  %41 = add i32 %40, 614242\l  %42 = lshr i32 %41, 20\l  %43 = add nsw i32 %42, -1023\l  %44 = icmp ult i32 %41, 1129316352\l  br i1 %44, label %45, label %53\l|{<s0>T|<s1>F}}"];
	Node0x1d665d0:s0 -> Node0x1d66620;
	Node0x1d665d0:s1 -> Node0x1d66670;
	Node0x1d66620 [shape=record,label="{%45:\l45:                                               \l  %46 = icmp ugt i32 %41, 1074790399\l  %47 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 1,\l... metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %48 = select i1 %46, double %0, double %47\l  %49 = select i1 %46, double %47, double %0\l  %50 = tail call double @llvm.experimental.constrained.fsub.f64(double %37,\l... double %48, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %51 = tail call double @llvm.experimental.constrained.fsub.f64(double %49,\l... double %50, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %52 = tail call double @llvm.experimental.constrained.fdiv.f64(double %51,\l... double %37, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  br label %55\l}"];
	Node0x1d66620 -> Node0x1d666c0;
	Node0x1d66670 [shape=record,label="{%53:\l53:                                               \l  %54 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 0,\l... metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  br label %55\l}"];
	Node0x1d66670 -> Node0x1d666c0;
	Node0x1d666c0 [shape=record,label="{%55:\l55:                                               \l  %56 = phi double [ %52, %45 ], [ %54, %53 ]\l  %57 = and i32 %41, 1048575\l  %58 = add nuw nsw i32 %57, 1072079006\l  %59 = zext i32 %58 to i64\l  %60 = shl nuw nsw i64 %59, 32\l  %61 = and i64 %38, 4294967295\l  %62 = or i64 %60, %61\l  %63 = bitcast i64 %62 to double\l  %64 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 1,\l... metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %65 = tail call double @llvm.experimental.constrained.fsub.f64(double %63,\l... double %64, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  br label %66\l}"];
	Node0x1d666c0 -> Node0x1d66710;
	Node0x1d66710 [shape=record,label="{%66:\l66:                                               \l  %67 = phi double [ %56, %55 ], [ %34, %33 ]\l  %68 = phi double [ %65, %55 ], [ %0, %33 ]\l  %69 = phi i32 [ %43, %55 ], [ 0, %33 ]\l  %70 = tail call double @llvm.experimental.constrained.fmul.f64(double\l... 5.000000e-01, double %68, metadata !\"round.dynamic\", metadata\l... !\"fpexcept.ignore\") #40\l  %71 = tail call double @llvm.experimental.constrained.fmul.f64(double %70,\l... double %68, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %72 = tail call double @llvm.experimental.constrained.fadd.f64(double\l... 2.000000e+00, double %68, metadata !\"round.dynamic\", metadata\l... !\"fpexcept.ignore\") #40\l  %73 = tail call double @llvm.experimental.constrained.fdiv.f64(double %68,\l... double %72, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %74 = tail call double @llvm.experimental.constrained.fmul.f64(double %73,\l... double %73, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %75 = tail call double @llvm.experimental.constrained.fmul.f64(double %74,\l... double %74, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %76 = tail call double @llvm.experimental.constrained.fmul.f64(double %75,\l... double 0x3FC39A09D078C69F, metadata !\"round.dynamic\", metadata\l... !\"fpexcept.ignore\") #40\l  %77 = tail call double @llvm.experimental.constrained.fadd.f64(double\l... 0x3FCC71C51D8E78AF, double %76, metadata !\"round.dynamic\", metadata\l... !\"fpexcept.ignore\") #40\l  %78 = tail call double @llvm.experimental.constrained.fmul.f64(double %75,\l... double %77, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %79 = tail call double @llvm.experimental.constrained.fadd.f64(double\l... 0x3FD999999997FA04, double %78, metadata !\"round.dynamic\", metadata\l... !\"fpexcept.ignore\") #40\l  %80 = tail call double @llvm.experimental.constrained.fmul.f64(double %75,\l... double %79, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %81 = tail call double @llvm.experimental.constrained.fmul.f64(double %75,\l... double 0x3FC2F112DF3E5244, metadata !\"round.dynamic\", metadata\l... !\"fpexcept.ignore\") #40\l  %82 = tail call double @llvm.experimental.constrained.fadd.f64(double\l... 0x3FC7466496CB03DE, double %81, metadata !\"round.dynamic\", metadata\l... !\"fpexcept.ignore\") #40\l  %83 = tail call double @llvm.experimental.constrained.fmul.f64(double %75,\l... double %82, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %84 = tail call double @llvm.experimental.constrained.fadd.f64(double\l... 0x3FD2492494229359, double %83, metadata !\"round.dynamic\", metadata\l... !\"fpexcept.ignore\") #40\l  %85 = tail call double @llvm.experimental.constrained.fmul.f64(double %75,\l... double %84, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %86 = tail call double @llvm.experimental.constrained.fadd.f64(double\l... 0x3FE5555555555593, double %85, metadata !\"round.dynamic\", metadata\l... !\"fpexcept.ignore\") #40\l  %87 = tail call double @llvm.experimental.constrained.fmul.f64(double %74,\l... double %86, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %88 = tail call double @llvm.experimental.constrained.fadd.f64(double %87,\l... double %80, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %89 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32\l... %69, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %90 = tail call double @llvm.experimental.constrained.fadd.f64(double %71,\l... double %88, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %91 = tail call double @llvm.experimental.constrained.fmul.f64(double %73,\l... double %90, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %92 = tail call double @llvm.experimental.constrained.fmul.f64(double %89,\l... double 0x3DEA39EF35793C76, metadata !\"round.dynamic\", metadata\l... !\"fpexcept.ignore\") #40\l  %93 = tail call double @llvm.experimental.constrained.fadd.f64(double %92,\l... double %67, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %94 = tail call double @llvm.experimental.constrained.fadd.f64(double %91,\l... double %93, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %95 = tail call double @llvm.experimental.constrained.fsub.f64(double %94,\l... double %71, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %96 = tail call double @llvm.experimental.constrained.fadd.f64(double %95,\l... double %68, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %97 = tail call double @llvm.experimental.constrained.fmul.f64(double %89,\l... double 0x3FE62E42FEE00000, metadata !\"round.dynamic\", metadata\l... !\"fpexcept.ignore\") #40\l  %98 = tail call double @llvm.experimental.constrained.fadd.f64(double %96,\l... double %97, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  br label %99\l}"];
	Node0x1d66710 -> Node0x1d66760;
	Node0x1d66760 [shape=record,label="{%99:\l99:                                               \l  %100 = phi double [ %15, %14 ], [ %18, %16 ], [ %98, %66 ], [ %0, %26 ], [\l... %0, %23 ], [ %0, %31 ]\l  ret double %100\l}"];
}
