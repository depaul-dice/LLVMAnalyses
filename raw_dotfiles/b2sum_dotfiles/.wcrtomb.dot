digraph "CFG for 'wcrtomb' function" {
	label="CFG for 'wcrtomb' function";

	Node0x177a140 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = icmp eq i8* %0, null\l  br i1 %4, label %74, label %5\l|{<s0>T|<s1>F}}"];
	Node0x177a140:s0 -> Node0x177c3f0;
	Node0x177a140:s1 -> Node0x177bee0;
	Node0x177bee0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#d24b4070",label="{%5:\l5:                                                \l  %6 = icmp ult i32 %1, 128\l  br i1 %6, label %7, label %9\l|{<s0>T|<s1>F}}"];
	Node0x177bee0:s0 -> Node0x177c030;
	Node0x177bee0:s1 -> Node0x177c080;
	Node0x177c030 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%7:\l7:                                                \l  %8 = trunc i32 %1 to i8\l  store i8 %8, i8* %0, align 1, !tbaa !1632\l  br label %74\l}"];
	Node0x177c030 -> Node0x177c3f0;
	Node0x177c080 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%9:\l9:                                                \l  %10 = tail call %struct.__pthread* asm \"mov %fs:0,$0\",\l... \"=r,~\{dirflag\},~\{fpsr\},~\{flags\}\"() #29, !srcloc !1635\l  %11 = getelementptr inbounds %struct.__pthread, %struct.__pthread* %10, i64\l... 0, i32 24\l  %12 = load %struct.__locale_struct*, %struct.__locale_struct** %11, align 8,\l... !tbaa !1636\l  %13 = getelementptr inbounds %struct.__locale_struct,\l... %struct.__locale_struct* %12, i64 0, i32 0, i64 0\l  %14 = load %struct.__locale_map*, %struct.__locale_map** %13, align 8, !tbaa\l... !1642\l  %15 = icmp eq %struct.__locale_map* %14, null\l  br i1 %15, label %16, label %23\l|{<s0>T|<s1>F}}"];
	Node0x177c080:s0 -> Node0x177c0d0;
	Node0x177c080:s1 -> Node0x177c1c0;
	Node0x177c0d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%16:\l16:                                               \l  %17 = and i32 %1, -128\l  %18 = icmp eq i32 %17, 57216\l  br i1 %18, label %21, label %19\l|{<s0>T|<s1>F}}"];
	Node0x177c0d0:s0 -> Node0x177c170;
	Node0x177c0d0:s1 -> Node0x177c120;
	Node0x177c120 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%19:\l19:                                               \l  %20 = tail call fastcc i32* @__errno_location() #30\l  store i32 84, i32* %20, align 4, !tbaa !1643\l  br label %74\l}"];
	Node0x177c120 -> Node0x177c3f0;
	Node0x177c170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%21:\l21:                                               \l  %22 = trunc i32 %1 to i8\l  store i8 %22, i8* %0, align 1, !tbaa !1632\l  br label %74\l}"];
	Node0x177c170 -> Node0x177c3f0;
	Node0x177c1c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%23:\l23:                                               \l  %24 = icmp ult i32 %1, 2048\l  br i1 %24, label %25, label %33\l|{<s0>T|<s1>F}}"];
	Node0x177c1c0:s0 -> Node0x177c210;
	Node0x177c1c0:s1 -> Node0x177c260;
	Node0x177c210 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%25:\l25:                                               \l  %26 = lshr i32 %1, 6\l  %27 = trunc i32 %26 to i8\l  %28 = or i8 %27, -64\l  %29 = getelementptr inbounds i8, i8* %0, i64 1\l  store i8 %28, i8* %0, align 1, !tbaa !1632\l  %30 = trunc i32 %1 to i8\l  %31 = and i8 %30, 63\l  %32 = or i8 %31, -128\l  store i8 %32, i8* %29, align 1, !tbaa !1632\l  br label %74\l}"];
	Node0x177c210 -> Node0x177c3f0;
	Node0x177c260 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%33:\l33:                                               \l  %34 = icmp ult i32 %1, 55296\l  %35 = and i32 %1, -8192\l  %36 = icmp eq i32 %35, 57344\l  %37 = or i1 %34, %36\l  br i1 %37, label %38, label %51\l|{<s0>T|<s1>F}}"];
	Node0x177c260:s0 -> Node0x177c2b0;
	Node0x177c260:s1 -> Node0x177c300;
	Node0x177c2b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%38:\l38:                                               \l  %39 = lshr i32 %1, 12\l  %40 = trunc i32 %39 to i8\l  %41 = or i8 %40, -32\l  %42 = getelementptr inbounds i8, i8* %0, i64 1\l  store i8 %41, i8* %0, align 1, !tbaa !1632\l  %43 = lshr i32 %1, 6\l  %44 = trunc i32 %43 to i8\l  %45 = and i8 %44, 63\l  %46 = or i8 %45, -128\l  %47 = getelementptr inbounds i8, i8* %0, i64 2\l  store i8 %46, i8* %42, align 1, !tbaa !1632\l  %48 = trunc i32 %1 to i8\l  %49 = and i8 %48, 63\l  %50 = or i8 %49, -128\l  store i8 %50, i8* %47, align 1, !tbaa !1632\l  br label %74\l}"];
	Node0x177c2b0 -> Node0x177c3f0;
	Node0x177c300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%51:\l51:                                               \l  %52 = add i32 %1, -65536\l  %53 = icmp ult i32 %52, 1048576\l  br i1 %53, label %54, label %72\l|{<s0>T|<s1>F}}"];
	Node0x177c300:s0 -> Node0x177c350;
	Node0x177c300:s1 -> Node0x177c3a0;
	Node0x177c350 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%54:\l54:                                               \l  %55 = lshr i32 %1, 18\l  %56 = trunc i32 %55 to i8\l  %57 = or i8 %56, -16\l  %58 = getelementptr inbounds i8, i8* %0, i64 1\l  store i8 %57, i8* %0, align 1, !tbaa !1632\l  %59 = lshr i32 %1, 12\l  %60 = trunc i32 %59 to i8\l  %61 = and i8 %60, 63\l  %62 = or i8 %61, -128\l  %63 = getelementptr inbounds i8, i8* %0, i64 2\l  store i8 %62, i8* %58, align 1, !tbaa !1632\l  %64 = lshr i32 %1, 6\l  %65 = trunc i32 %64 to i8\l  %66 = and i8 %65, 63\l  %67 = or i8 %66, -128\l  %68 = getelementptr inbounds i8, i8* %0, i64 3\l  store i8 %67, i8* %63, align 1, !tbaa !1632\l  %69 = trunc i32 %1 to i8\l  %70 = and i8 %69, 63\l  %71 = or i8 %70, -128\l  store i8 %71, i8* %68, align 1, !tbaa !1632\l  br label %74\l}"];
	Node0x177c350 -> Node0x177c3f0;
	Node0x177c3a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70",label="{%72:\l72:                                               \l  %73 = tail call fastcc i32* @__errno_location() #30\l  store i32 84, i32* %73, align 4, !tbaa !1643\l  br label %74\l}"];
	Node0x177c3a0 -> Node0x177c3f0;
	Node0x177c3f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%74:\l74:                                               \l  %75 = phi i64 [ 1, %7 ], [ 1, %21 ], [ -1, %19 ], [ 2, %25 ], [ 3, %38 ], [\l... 4, %54 ], [ -1, %72 ], [ 1, %3 ]\l  ret i64 %75\l}"];
}
