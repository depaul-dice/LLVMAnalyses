digraph "CFG for 'blake2b_final' function" {
	label="CFG for 'blake2b_final' function";

	Node0x2150240 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%3:\l  %4 = alloca i32, align 4\l  %5 = alloca %struct.blake2b_state__*, align 8\l  %6 = alloca i8*, align 8\l  %7 = alloca i64, align 8\l  %8 = alloca [64 x i8], align 16\l  %9 = alloca i64, align 8\l  store %struct.blake2b_state__* %0, %struct.blake2b_state__** %5, align 8\l  call void @llvm.dbg.declare(metadata %struct.blake2b_state__** %5, metadata\l... !813, metadata !DIExpression()), !dbg !814\l  store i8* %1, i8** %6, align 8\l  call void @llvm.dbg.declare(metadata i8** %6, metadata !815, metadata\l... !DIExpression()), !dbg !816\l  store i64 %2, i64* %7, align 8\l  call void @llvm.dbg.declare(metadata i64* %7, metadata !817, metadata\l... !DIExpression()), !dbg !818\l  call void @llvm.dbg.declare(metadata [64 x i8]* %8, metadata !819, metadata\l... !DIExpression()), !dbg !823\l  %10 = bitcast [64 x i8]* %8 to i8*, !dbg !823\l  call void @llvm.memset.p0i8.i64(i8* align 16 %10, i8 0, i64 64, i1 false),\l... !dbg !823\l  call void @llvm.dbg.declare(metadata i64* %9, metadata !824, metadata\l... !DIExpression()), !dbg !825\l  %11 = load i8*, i8** %6, align 8, !dbg !826\l  %12 = icmp eq i8* %11, null, !dbg !828\l  br i1 %12, label %19, label %13, !dbg !829\l|{<s0>T|<s1>F}}"];
	Node0x2150240:s0 -> Node0x20815c0;
	Node0x2150240:s1 -> Node0x2154050;
	Node0x2154050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%13:\l13:                                               \l  %14 = load i64, i64* %7, align 8, !dbg !830\l  %15 = load %struct.blake2b_state__*, %struct.blake2b_state__** %5, align 8,\l... !dbg !831\l  %16 = getelementptr inbounds %struct.blake2b_state__,\l... %struct.blake2b_state__* %15, i32 0, i32 5, !dbg !832\l  %17 = load i64, i64* %16, align 8, !dbg !832\l  %18 = icmp ult i64 %14, %17, !dbg !833\l  br i1 %18, label %19, label %20, !dbg !834\l|{<s0>T|<s1>F}}"];
	Node0x2154050:s0 -> Node0x20815c0;
	Node0x2154050:s1 -> Node0x2081610;
	Node0x20815c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b39670",label="{%19:\l19:                                               \l  store i32 -1, i32* %4, align 4, !dbg !835\l  br label %69, !dbg !835\l}"];
	Node0x20815c0 -> Node0x2081840;
	Node0x2081610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%20:\l20:                                               \l  %21 = load %struct.blake2b_state__*, %struct.blake2b_state__** %5, align 8,\l... !dbg !836\l  %22 = call fastcc i32 @blake2b_is_lastblock(%struct.blake2b_state__* %21),\l... !dbg !838\l  %23 = icmp ne i32 %22, 0, !dbg !838\l  br i1 %23, label %24, label %25, !dbg !839\l|{<s0>T|<s1>F}}"];
	Node0x2081610:s0 -> Node0x2081660;
	Node0x2081610:s1 -> Node0x20816b0;
	Node0x2081660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%24:\l24:                                               \l  store i32 -1, i32* %4, align 4, !dbg !840\l  br label %69, !dbg !840\l}"];
	Node0x2081660 -> Node0x2081840;
	Node0x20816b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%25:\l25:                                               \l  %26 = load %struct.blake2b_state__*, %struct.blake2b_state__** %5, align 8,\l... !dbg !841\l  %27 = load %struct.blake2b_state__*, %struct.blake2b_state__** %5, align 8,\l... !dbg !842\l  %28 = getelementptr inbounds %struct.blake2b_state__,\l... %struct.blake2b_state__* %27, i32 0, i32 4, !dbg !843\l  %29 = load i64, i64* %28, align 8, !dbg !843\l  call fastcc void @blake2b_increment_counter(%struct.blake2b_state__* %26,\l... i64 %29), !dbg !844\l  %30 = load %struct.blake2b_state__*, %struct.blake2b_state__** %5, align 8,\l... !dbg !845\l  call fastcc void @blake2b_set_lastblock(%struct.blake2b_state__* %30), !dbg\l... !846\l  %31 = load %struct.blake2b_state__*, %struct.blake2b_state__** %5, align 8,\l... !dbg !847\l  %32 = getelementptr inbounds %struct.blake2b_state__,\l... %struct.blake2b_state__* %31, i32 0, i32 3, !dbg !848\l  %33 = getelementptr inbounds [128 x i8], [128 x i8]* %32, i64 0, i64 0, !dbg\l... !847\l  %34 = load %struct.blake2b_state__*, %struct.blake2b_state__** %5, align 8,\l... !dbg !849\l  %35 = getelementptr inbounds %struct.blake2b_state__,\l... %struct.blake2b_state__* %34, i32 0, i32 4, !dbg !850\l  %36 = load i64, i64* %35, align 8, !dbg !850\l  %37 = getelementptr inbounds i8, i8* %33, i64 %36, !dbg !851\l  %38 = load %struct.blake2b_state__*, %struct.blake2b_state__** %5, align 8,\l... !dbg !852\l  %39 = getelementptr inbounds %struct.blake2b_state__,\l... %struct.blake2b_state__* %38, i32 0, i32 4, !dbg !853\l  %40 = load i64, i64* %39, align 8, !dbg !853\l  %41 = sub i64 128, %40, !dbg !854\l  call void @llvm.memset.p0i8.i64(i8* align 1 %37, i8 0, i64 %41, i1 false),\l... !dbg !855\l  %42 = load %struct.blake2b_state__*, %struct.blake2b_state__** %5, align 8,\l... !dbg !856\l  %43 = load %struct.blake2b_state__*, %struct.blake2b_state__** %5, align 8,\l... !dbg !857\l  %44 = getelementptr inbounds %struct.blake2b_state__,\l... %struct.blake2b_state__* %43, i32 0, i32 3, !dbg !858\l  %45 = getelementptr inbounds [128 x i8], [128 x i8]* %44, i64 0, i64 0, !dbg\l... !857\l  call fastcc void @blake2b_compress(%struct.blake2b_state__* %42, i8* %45),\l... !dbg !859\l  store i64 0, i64* %9, align 8, !dbg !860\l  br label %46, !dbg !862\l}"];
	Node0x20816b0 -> Node0x2081700;
	Node0x2081700 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%46:\l46:                                               \l  %47 = load i64, i64* %9, align 8, !dbg !863\l  %48 = icmp ult i64 %47, 8, !dbg !865\l  br i1 %48, label %49, label %62, !dbg !866\l|{<s0>T|<s1>F}}"];
	Node0x2081700:s0 -> Node0x2081750;
	Node0x2081700:s1 -> Node0x20817f0;
	Node0x2081750 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%49:\l49:                                               \l  %50 = getelementptr inbounds [64 x i8], [64 x i8]* %8, i64 0, i64 0, !dbg\l... !867\l  %51 = load i64, i64* %9, align 8, !dbg !868\l  %52 = mul i64 8, %51, !dbg !869\l  %53 = getelementptr inbounds i8, i8* %50, i64 %52, !dbg !870\l  %54 = load %struct.blake2b_state__*, %struct.blake2b_state__** %5, align 8,\l... !dbg !871\l  %55 = getelementptr inbounds %struct.blake2b_state__,\l... %struct.blake2b_state__* %54, i32 0, i32 0, !dbg !872\l  %56 = load i64, i64* %9, align 8, !dbg !873\l  %57 = getelementptr inbounds [8 x i64], [8 x i64]* %55, i64 0, i64 %56, !dbg\l... !871\l  %58 = load i64, i64* %57, align 8, !dbg !871\l  call fastcc void @store64(i8* %53, i64 %58), !dbg !874\l  br label %59, !dbg !874\l}"];
	Node0x2081750 -> Node0x20817a0;
	Node0x20817a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{%59:\l59:                                               \l  %60 = load i64, i64* %9, align 8, !dbg !875\l  %61 = add i64 %60, 1, !dbg !875\l  store i64 %61, i64* %9, align 8, !dbg !875\l  br label %46, !dbg !876, !llvm.loop !877\l}"];
	Node0x20817a0 -> Node0x2081700;
	Node0x20817f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%62:\l62:                                               \l  %63 = load i8*, i8** %6, align 8, !dbg !879\l  %64 = getelementptr inbounds [64 x i8], [64 x i8]* %8, i64 0, i64 0, !dbg\l... !880\l  %65 = load %struct.blake2b_state__*, %struct.blake2b_state__** %5, align 8,\l... !dbg !881\l  %66 = getelementptr inbounds %struct.blake2b_state__,\l... %struct.blake2b_state__* %65, i32 0, i32 5, !dbg !882\l  %67 = load i64, i64* %66, align 8, !dbg !882\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %63, i8* align 16 %64, i64\l... %67, i1 false), !dbg !880\l  %68 = getelementptr inbounds [64 x i8], [64 x i8]* %8, i64 0, i64 0, !dbg\l... !883\l  call fastcc void @secure_zero_memory(i8* %68, i64 64), !dbg !884\l  store i32 0, i32* %4, align 4, !dbg !885\l  br label %69, !dbg !885\l}"];
	Node0x20817f0 -> Node0x2081840;
	Node0x2081840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%69:\l69:                                               \l  %70 = load i32, i32* %4, align 4, !dbg !886\l  ret i32 %70, !dbg !886\l}"];
}
