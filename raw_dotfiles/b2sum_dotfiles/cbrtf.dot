digraph "CFG for 'cbrtf' function" {
	label="CFG for 'cbrtf' function";

	Node0x1eb0110 [shape=record,label="{%1:\l  %2 = bitcast float %0 to i32\l  %3 = and i32 %2, 2147483647\l  %4 = icmp ugt i32 %3, 2139095039\l  br i1 %4, label %5, label %7\l|{<s0>T|<s1>F}}"];
	Node0x1eb0110:s0 -> Node0x1eb0460;
	Node0x1eb0110:s1 -> Node0x1eb04b0;
	Node0x1eb0460 [shape=record,label="{%5:\l5:                                                \l  %6 = tail call float @llvm.experimental.constrained.fadd.f32(float %0, float\l... %0, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  br label %48\l}"];
	Node0x1eb0460 -> Node0x1eb05f0;
	Node0x1eb04b0 [shape=record,label="{%7:\l7:                                                \l  %8 = icmp ult i32 %3, 8388608\l  br i1 %8, label %9, label %15\l|{<s0>T|<s1>F}}"];
	Node0x1eb04b0:s0 -> Node0x1eb0500;
	Node0x1eb04b0:s1 -> Node0x1eb05a0;
	Node0x1eb0500 [shape=record,label="{%9:\l9:                                                \l  %10 = icmp eq i32 %3, 0\l  br i1 %10, label %48, label %11\l|{<s0>T|<s1>F}}"];
	Node0x1eb0500:s0 -> Node0x1eb05f0;
	Node0x1eb0500:s1 -> Node0x1eb0550;
	Node0x1eb0550 [shape=record,label="{%11:\l11:                                               \l  %12 = tail call float @llvm.experimental.constrained.fmul.f32(float %0,\l... float 0x4170000000000000, metadata !\"round.dynamic\", metadata\l... !\"fpexcept.ignore\") #40\l  %13 = bitcast float %12 to i32\l  %14 = and i32 %13, 2147483647\l  br label %15\l}"];
	Node0x1eb0550 -> Node0x1eb05a0;
	Node0x1eb05a0 [shape=record,label="{%15:\l15:                                               \l  %16 = phi i32 [ %14, %11 ], [ %3, %7 ]\l  %17 = phi i32 [ 642849266, %11 ], [ 709958130, %7 ]\l  %18 = phi i32 [ %13, %11 ], [ %2, %7 ]\l  %19 = udiv i32 %16, 3\l  %20 = add nuw nsw i32 %19, %17\l  %21 = and i32 %18, -2147483648\l  %22 = or i32 %21, %20\l  %23 = bitcast i32 %22 to float\l  %24 = tail call double @llvm.experimental.constrained.fpext.f64.f32(float\l... %23, metadata !\"fpexcept.ignore\") #40\l  %25 = tail call double @llvm.experimental.constrained.fmul.f64(double %24,\l... double %24, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %26 = tail call double @llvm.experimental.constrained.fmul.f64(double %25,\l... double %24, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %27 = tail call double @llvm.experimental.constrained.fpext.f64.f32(float\l... %0, metadata !\"fpexcept.ignore\") #40\l  %28 = tail call double @llvm.experimental.constrained.fpext.f64.f32(float\l... %0, metadata !\"fpexcept.ignore\") #40\l  %29 = tail call double @llvm.experimental.constrained.fadd.f64(double %27,\l... double %28, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %30 = tail call double @llvm.experimental.constrained.fadd.f64(double %29,\l... double %26, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %31 = tail call double @llvm.experimental.constrained.fmul.f64(double %24,\l... double %30, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %32 = tail call double @llvm.experimental.constrained.fpext.f64.f32(float\l... %0, metadata !\"fpexcept.ignore\") #40\l  %33 = tail call double @llvm.experimental.constrained.fadd.f64(double %32,\l... double %26, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %34 = tail call double @llvm.experimental.constrained.fadd.f64(double %33,\l... double %26, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %35 = tail call double @llvm.experimental.constrained.fdiv.f64(double %31,\l... double %34, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %36 = tail call double @llvm.experimental.constrained.fmul.f64(double %35,\l... double %35, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %37 = tail call double @llvm.experimental.constrained.fmul.f64(double %36,\l... double %35, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %38 = tail call double @llvm.experimental.constrained.fpext.f64.f32(float\l... %0, metadata !\"fpexcept.ignore\") #40\l  %39 = tail call double @llvm.experimental.constrained.fpext.f64.f32(float\l... %0, metadata !\"fpexcept.ignore\") #40\l  %40 = tail call double @llvm.experimental.constrained.fadd.f64(double %38,\l... double %39, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %41 = tail call double @llvm.experimental.constrained.fadd.f64(double %40,\l... double %37, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %42 = tail call double @llvm.experimental.constrained.fmul.f64(double %35,\l... double %41, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %43 = tail call double @llvm.experimental.constrained.fpext.f64.f32(float\l... %0, metadata !\"fpexcept.ignore\") #40\l  %44 = tail call double @llvm.experimental.constrained.fadd.f64(double %43,\l... double %37, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %45 = tail call double @llvm.experimental.constrained.fadd.f64(double %44,\l... double %37, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %46 = tail call double @llvm.experimental.constrained.fdiv.f64(double %42,\l... double %45, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %47 = tail call float @llvm.experimental.constrained.fptrunc.f32.f64(double\l... %46, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  br label %48\l}"];
	Node0x1eb05a0 -> Node0x1eb05f0;
	Node0x1eb05f0 [shape=record,label="{%48:\l48:                                               \l  %49 = phi float [ %6, %5 ], [ %47, %15 ], [ %0, %9 ]\l  ret float %49\l}"];
}
