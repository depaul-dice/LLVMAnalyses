digraph "CFG for 'match_bracket' function" {
	label="CFG for 'match_bracket' function";

	Node0x1b249b0 [shape=record,label="{%3:\l  %4 = alloca i32, align 4\l  %5 = alloca i32, align 4\l  %6 = alloca [16 x i8], align 16\l  %7 = bitcast i32* %4 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7) #40\l  %8 = getelementptr inbounds i8, i8* %0, i64 1\l  %9 = load i8, i8* %8, align 1, !tbaa !1632\l  switch i8 %9, label %13 [\l    i8 94, label %10\l    i8 33, label %10\l  ]\l|{<s0>def|<s1>94|<s2>33}}"];
	Node0x1b249b0:s0 -> Node0x1b25b50;
	Node0x1b249b0:s1 -> Node0x1b25a80;
	Node0x1b249b0:s2 -> Node0x1b25a80;
	Node0x1b25a80 [shape=record,label="{%10:\l10:                                               \l  %11 = getelementptr inbounds i8, i8* %0, i64 2\l  %12 = load i8, i8* %11, align 1, !tbaa !1632\l  br label %13\l}"];
	Node0x1b25a80 -> Node0x1b25b50;
	Node0x1b25b50 [shape=record,label="{%13:\l13:                                               \l  %14 = phi i8 [ %9, %3 ], [ %12, %10 ]\l  %15 = phi i32 [ 0, %3 ], [ 1, %10 ]\l  %16 = phi i8* [ %8, %3 ], [ %11, %10 ]\l  switch i8 %14, label %29 [\l    i8 93, label %17\l    i8 45, label %23\l  ]\l|{<s0>def|<s1>93|<s2>45}}"];
	Node0x1b25b50:s0 -> Node0x1b25d80;
	Node0x1b25b50:s1 -> Node0x1b25ba0;
	Node0x1b25b50:s2 -> Node0x1b25c90;
	Node0x1b25ba0 [shape=record,label="{%17:\l17:                                               \l  %18 = icmp eq i32 %1, 93\l  br i1 %18, label %19, label %21\l|{<s0>T|<s1>F}}"];
	Node0x1b25ba0:s0 -> Node0x1b25bf0;
	Node0x1b25ba0:s1 -> Node0x1b25c40;
	Node0x1b25bf0 [shape=record,label="{%19:\l19:                                               \l  %20 = xor i32 %15, 1\l  br label %125\l}"];
	Node0x1b25bf0 -> Node0x1b265f0;
	Node0x1b25c40 [shape=record,label="{%21:\l21:                                               \l  %22 = getelementptr inbounds i8, i8* %16, i64 1\l  br label %29\l}"];
	Node0x1b25c40 -> Node0x1b25d80;
	Node0x1b25c90 [shape=record,label="{%23:\l23:                                               \l  %24 = icmp eq i32 %1, 45\l  br i1 %24, label %25, label %27\l|{<s0>T|<s1>F}}"];
	Node0x1b25c90:s0 -> Node0x1b25ce0;
	Node0x1b25c90:s1 -> Node0x1b25d30;
	Node0x1b25ce0 [shape=record,label="{%25:\l25:                                               \l  %26 = xor i32 %15, 1\l  br label %125\l}"];
	Node0x1b25ce0 -> Node0x1b265f0;
	Node0x1b25d30 [shape=record,label="{%27:\l27:                                               \l  %28 = getelementptr inbounds i8, i8* %16, i64 1\l  br label %29\l}"];
	Node0x1b25d30 -> Node0x1b25d80;
	Node0x1b25d80 [shape=record,label="{%29:\l29:                                               \l  %30 = phi i8* [ %22, %21 ], [ %28, %27 ], [ %16, %13 ]\l  %31 = getelementptr inbounds i8, i8* %30, i64 -1\l  %32 = load i8, i8* %31, align 1, !tbaa !1632\l  %33 = sext i8 %32 to i32\l  store i32 %33, i32* %4, align 4, !tbaa !1635\l  %34 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i64 0, i64 0\l  %35 = bitcast i32* %5 to i8*\l  br label %36\l}"];
	Node0x1b25d80 -> Node0x1b25dd0;
	Node0x1b25dd0 [shape=record,label="{%36:\l36:                                               \l  %37 = phi i8* [ %30, %29 ], [ %124, %122 ]\l  %38 = load i8, i8* %37, align 1, !tbaa !1632\l  switch i8 %38, label %102 [\l    i8 93, label %125\l    i8 45, label %39\l    i8 91, label %65\l  ]\l|{<s0>def|<s1>93|<s2>45|<s3>91}}"];
	Node0x1b25dd0:s0 -> Node0x1b263c0;
	Node0x1b25dd0:s1 -> Node0x1b265f0;
	Node0x1b25dd0:s2 -> Node0x1b25e20;
	Node0x1b25dd0:s3 -> Node0x1b26050;
	Node0x1b25e20 [shape=record,label="{%39:\l39:                                               \l  %40 = getelementptr inbounds i8, i8* %37, i64 1\l  %41 = load i8, i8* %40, align 1, !tbaa !1632\l  %42 = icmp eq i8 %41, 93\l  br i1 %42, label %104, label %43\l|{<s0>T|<s1>F}}"];
	Node0x1b25e20:s0 -> Node0x1b26410;
	Node0x1b25e20:s1 -> Node0x1b25e70;
	Node0x1b25e70 [shape=record,label="{%43:\l43:                                               \l  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %35) #40\l  %44 = call i32 @mbtowc(i32* nonnull %5, i8* nonnull %40, i64 4) #41\l  %45 = icmp slt i32 %44, 0\l  br i1 %45, label %59, label %46\l|{<s0>T|<s1>F}}"];
	Node0x1b25e70:s0 -> Node0x1b25fb0;
	Node0x1b25e70:s1 -> Node0x1b25ec0;
	Node0x1b25ec0 [shape=record,label="{%46:\l46:                                               \l  %47 = load i32, i32* %4, align 4, !tbaa !1635\l  %48 = load i32, i32* %5, align 4, !tbaa !1635\l  %49 = icmp slt i32 %48, %47\l  br i1 %49, label %61, label %50\l|{<s0>T|<s1>F}}"];
	Node0x1b25ec0:s0 -> Node0x1b26000;
	Node0x1b25ec0:s1 -> Node0x1b25f10;
	Node0x1b25f10 [shape=record,label="{%50:\l50:                                               \l  %51 = sub i32 %1, %47\l  %52 = sub nsw i32 %48, %47\l  %53 = icmp ugt i32 %51, %52\l  %54 = sub i32 %2, %47\l  %55 = icmp ugt i32 %54, %52\l  %56 = and i1 %53, %55\l  br i1 %56, label %61, label %57\l|{<s0>T|<s1>F}}"];
	Node0x1b25f10:s0 -> Node0x1b26000;
	Node0x1b25f10:s1 -> Node0x1b25f60;
	Node0x1b25f60 [shape=record,label="{%57:\l57:                                               \l  %58 = xor i32 %15, 1\l  br label %59\l}"];
	Node0x1b25f60 -> Node0x1b25fb0;
	Node0x1b25fb0 [shape=record,label="{%59:\l59:                                               \l  %60 = phi i32 [ %58, %57 ], [ 0, %43 ]\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %35) #40\l  br label %125\l}"];
	Node0x1b25fb0 -> Node0x1b265f0;
	Node0x1b26000 [shape=record,label="{%61:\l61:                                               \l  %62 = add nsw i32 %44, -1\l  %63 = sext i32 %62 to i64\l  %64 = getelementptr inbounds i8, i8* %37, i64 %63\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %35) #40\l  br label %122\l}"];
	Node0x1b26000 -> Node0x1b265a0;
	Node0x1b26050 [shape=record,label="{%65:\l65:                                               \l  %66 = getelementptr inbounds i8, i8* %37, i64 1\l  %67 = load i8, i8* %66, align 1, !tbaa !1632\l  switch i8 %67, label %104 [\l    i8 58, label %68\l    i8 46, label %68\l    i8 61, label %68\l  ]\l|{<s0>def|<s1>58|<s2>46|<s3>61}}"];
	Node0x1b26050:s0 -> Node0x1b26410;
	Node0x1b26050:s1 -> Node0x1b260a0;
	Node0x1b26050:s2 -> Node0x1b260a0;
	Node0x1b26050:s3 -> Node0x1b260a0;
	Node0x1b260a0 [shape=record,label="{%68:\l68:                                               \l  %69 = getelementptr inbounds i8, i8* %37, i64 3\l  br label %70\l}"];
	Node0x1b260a0 -> Node0x1b260f0;
	Node0x1b260f0 [shape=record,label="{%70:\l70:                                               \l  %71 = phi i8* [ %69, %68 ], [ %79, %78 ]\l  %72 = getelementptr inbounds i8, i8* %71, i64 -1\l  %73 = load i8, i8* %72, align 1, !tbaa !1632\l  %74 = icmp eq i8 %73, %67\l  br i1 %74, label %75, label %78\l|{<s0>T|<s1>F}}"];
	Node0x1b260f0:s0 -> Node0x1b26140;
	Node0x1b260f0:s1 -> Node0x1b26190;
	Node0x1b26140 [shape=record,label="{%75:\l75:                                               \l  %76 = load i8, i8* %71, align 1, !tbaa !1632\l  %77 = icmp eq i8 %76, 93\l  br i1 %77, label %80, label %78\l|{<s0>T|<s1>F}}"];
	Node0x1b26140:s0 -> Node0x1b261e0;
	Node0x1b26140:s1 -> Node0x1b26190;
	Node0x1b26190 [shape=record,label="{%78:\l78:                                               \l  %79 = getelementptr inbounds i8, i8* %71, i64 1\l  br label %70\l}"];
	Node0x1b26190 -> Node0x1b260f0;
	Node0x1b261e0 [shape=record,label="{%80:\l80:                                               \l  %81 = getelementptr inbounds i8, i8* %37, i64 2\l  %82 = icmp eq i8 %67, 58\l  br i1 %82, label %83, label %122\l|{<s0>T|<s1>F}}"];
	Node0x1b261e0:s0 -> Node0x1b26230;
	Node0x1b261e0:s1 -> Node0x1b265a0;
	Node0x1b26230 [shape=record,label="{%83:\l83:                                               \l  %84 = getelementptr inbounds i8, i8* %71, i64 -1\l  %85 = ptrtoint i8* %84 to i64\l  %86 = ptrtoint i8* %81 to i64\l  %87 = sub i64 %85, %86\l  %88 = icmp slt i64 %87, 16\l  br i1 %88, label %89, label %122\l|{<s0>T|<s1>F}}"];
	Node0x1b26230:s0 -> Node0x1b26280;
	Node0x1b26230:s1 -> Node0x1b265a0;
	Node0x1b26280 [shape=record,label="{%89:\l89:                                               \l  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %34) #40\l  %90 = call i8* @memcpy(i8* nonnull %34, i8* nonnull %81, i64 %87) #41\l  %91 = getelementptr inbounds [16 x i8], [16 x i8]* %6, i64 0, i64 %87\l  store i8 0, i8* %91, align 1, !tbaa !1632\l  %92 = call i64 @wctype(i8* nonnull %34) #41\l  %93 = call i32 @iswctype(i32 %1, i64 %92) #41\l  %94 = icmp eq i32 %93, 0\l  br i1 %94, label %95, label %100\l|{<s0>T|<s1>F}}"];
	Node0x1b26280:s0 -> Node0x1b262d0;
	Node0x1b26280:s1 -> Node0x1b26370;
	Node0x1b262d0 [shape=record,label="{%95:\l95:                                               \l  %96 = call i64 @wctype(i8* nonnull %34) #41\l  %97 = call i32 @iswctype(i32 %2, i64 %96) #41\l  %98 = icmp eq i32 %97, 0\l  br i1 %98, label %99, label %100\l|{<s0>T|<s1>F}}"];
	Node0x1b262d0:s0 -> Node0x1b26320;
	Node0x1b262d0:s1 -> Node0x1b26370;
	Node0x1b26320 [shape=record,label="{%99:\l99:                                               \l  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #40\l  br label %122\l}"];
	Node0x1b26320 -> Node0x1b265a0;
	Node0x1b26370 [shape=record,label="{%100:\l100:                                              \l  %101 = xor i32 %15, 1\l  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %34) #40\l  br label %125\l}"];
	Node0x1b26370 -> Node0x1b265f0;
	Node0x1b263c0 [shape=record,label="{%102:\l102:                                              \l  %103 = icmp sgt i8 %38, -1\l  br i1 %103, label %104, label %106\l|{<s0>T|<s1>F}}"];
	Node0x1b263c0:s0 -> Node0x1b26410;
	Node0x1b263c0:s1 -> Node0x1b26460;
	Node0x1b26410 [shape=record,label="{%104:\l104:                                              \l  %105 = zext i8 %38 to i32\l  store i32 %105, i32* %4, align 4, !tbaa !1635\l  br label %114\l}"];
	Node0x1b26410 -> Node0x1b26500;
	Node0x1b26460 [shape=record,label="{%106:\l106:                                              \l  %107 = call i32 @mbtowc(i32* nonnull %4, i8* nonnull %37, i64 4) #41\l  %108 = icmp slt i32 %107, 0\l  br i1 %108, label %125, label %109\l|{<s0>T|<s1>F}}"];
	Node0x1b26460:s0 -> Node0x1b265f0;
	Node0x1b26460:s1 -> Node0x1b264b0;
	Node0x1b264b0 [shape=record,label="{%109:\l109:                                              \l  %110 = add nsw i32 %107, -1\l  %111 = sext i32 %110 to i64\l  %112 = getelementptr inbounds i8, i8* %37, i64 %111\l  %113 = load i32, i32* %4, align 4, !tbaa !1635\l  br label %114\l}"];
	Node0x1b264b0 -> Node0x1b26500;
	Node0x1b26500 [shape=record,label="{%114:\l114:                                              \l  %115 = phi i32 [ %105, %104 ], [ %113, %109 ]\l  %116 = phi i8* [ %37, %104 ], [ %112, %109 ]\l  %117 = icmp eq i32 %115, %1\l  %118 = icmp eq i32 %115, %2\l  %119 = or i1 %117, %118\l  br i1 %119, label %120, label %122\l|{<s0>T|<s1>F}}"];
	Node0x1b26500:s0 -> Node0x1b26550;
	Node0x1b26500:s1 -> Node0x1b265a0;
	Node0x1b26550 [shape=record,label="{%120:\l120:                                              \l  %121 = xor i32 %15, 1\l  br label %125\l}"];
	Node0x1b26550 -> Node0x1b265f0;
	Node0x1b265a0 [shape=record,label="{%122:\l122:                                              \l  %123 = phi i8* [ %64, %61 ], [ %116, %114 ], [ %71, %99 ], [ %71, %83 ], [\l... %71, %80 ]\l  %124 = getelementptr inbounds i8, i8* %123, i64 1\l  br label %36\l}"];
	Node0x1b265a0 -> Node0x1b25dd0;
	Node0x1b265f0 [shape=record,label="{%125:\l125:                                              \l  %126 = phi i32 [ %20, %19 ], [ %101, %100 ], [ %121, %120 ], [ %26, %25 ], [\l... %60, %59 ], [ %15, %36 ], [ 0, %106 ]\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7) #40\l  ret i32 %126\l}"];
}
