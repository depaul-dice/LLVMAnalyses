digraph "CFG for 'log2f' function" {
	label="CFG for 'log2f' function";

	Node0x1a93ce0 [shape=record,label="{%1:\l  %2 = bitcast float %0 to i32\l  %3 = icmp eq i32 %2, 1065353216\l  br i1 %3, label %4, label %6, !prof !1632, !misexpect !1633\l|{<s0>T|<s1>F}}"];
	Node0x1a93ce0:s0 -> Node0x1a93dc0[label="W:1"];
	Node0x1a93ce0:s1 -> Node0x1a93e10[label="W:2000"];
	Node0x1a93dc0 [shape=record,label="{%4:\l4:                                                \l  %5 = tail call float @llvm.experimental.constrained.sitofp.f32.i32(i32 0,\l... metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  br label %60\l}"];
	Node0x1a93dc0 -> Node0x1a94090;
	Node0x1a93e10 [shape=record,label="{%6:\l6:                                                \l  %7 = add i32 %2, -8388608\l  %8 = icmp ugt i32 %7, 2130706431\l  br i1 %8, label %9, label %26, !prof !1632, !misexpect !1633\l|{<s0>T|<s1>F}}"];
	Node0x1a93e10:s0 -> Node0x1a93e60[label="W:1"];
	Node0x1a93e10:s1 -> Node0x1a94040[label="W:2000"];
	Node0x1a93e60 [shape=record,label="{%9:\l9:                                                \l  %10 = shl i32 %2, 1\l  %11 = icmp eq i32 %10, 0\l  br i1 %11, label %12, label %14\l|{<s0>T|<s1>F}}"];
	Node0x1a93e60:s0 -> Node0x1a93eb0;
	Node0x1a93e60:s1 -> Node0x1a93f00;
	Node0x1a93eb0 [shape=record,label="{%12:\l12:                                               \l  %13 = tail call float @__math_divzerof(i32 1) #41\l  br label %60\l}"];
	Node0x1a93eb0 -> Node0x1a94090;
	Node0x1a93f00 [shape=record,label="{%14:\l14:                                               \l  %15 = icmp eq i32 %2, 2139095040\l  br i1 %15, label %60, label %16\l|{<s0>T|<s1>F}}"];
	Node0x1a93f00:s0 -> Node0x1a94090;
	Node0x1a93f00:s1 -> Node0x1a93f50;
	Node0x1a93f50 [shape=record,label="{%16:\l16:                                               \l  %17 = icmp slt i32 %2, 0\l  %18 = icmp ugt i32 %10, -16777217\l  %19 = or i1 %17, %18\l  br i1 %19, label %20, label %22\l|{<s0>T|<s1>F}}"];
	Node0x1a93f50:s0 -> Node0x1a93fa0;
	Node0x1a93f50:s1 -> Node0x1a93ff0;
	Node0x1a93fa0 [shape=record,label="{%20:\l20:                                               \l  %21 = tail call float @__math_invalidf(float %0) #41\l  br label %60\l}"];
	Node0x1a93fa0 -> Node0x1a94090;
	Node0x1a93ff0 [shape=record,label="{%22:\l22:                                               \l  %23 = tail call float @llvm.experimental.constrained.fmul.f32(float %0,\l... float 0x4160000000000000, metadata !\"round.dynamic\", metadata\l... !\"fpexcept.ignore\") #40\l  %24 = bitcast float %23 to i32\l  %25 = add i32 %24, -192937984\l  br label %26\l}"];
	Node0x1a93ff0 -> Node0x1a94040;
	Node0x1a94040 [shape=record,label="{%26:\l26:                                               \l  %27 = phi i32 [ %25, %22 ], [ %2, %6 ]\l  %28 = add i32 %27, -1060306944\l  %29 = lshr i32 %28, 19\l  %30 = and i32 %29, 15\l  %31 = and i32 %28, -8388608\l  %32 = sub i32 %27, %31\l  %33 = ashr i32 %28, 23\l  %34 = zext i32 %30 to i64\l  %35 = getelementptr inbounds %struct.log2f_data, %struct.log2f_data*\l... @__log2f_data, i64 0, i32 0, i64 %34, i32 0\l  %36 = load double, double* %35, align 8, !tbaa !1634\l  %37 = getelementptr inbounds %struct.log2f_data, %struct.log2f_data*\l... @__log2f_data, i64 0, i32 0, i64 %34, i32 1\l  %38 = load double, double* %37, align 8, !tbaa !1639\l  %39 = bitcast i32 %32 to float\l  %40 = tail call double @llvm.experimental.constrained.fpext.f64.f32(float\l... %39, metadata !\"fpexcept.ignore\") #40\l  %41 = tail call double @llvm.experimental.constrained.fmul.f64(double %40,\l... double %36, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %42 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 1,\l... metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %43 = tail call double @llvm.experimental.constrained.fsub.f64(double %41,\l... double %42, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %44 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32\l... %33, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %45 = tail call double @llvm.experimental.constrained.fadd.f64(double %38,\l... double %44, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %46 = tail call double @llvm.experimental.constrained.fmul.f64(double %43,\l... double %43, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %47 = load double, double* getelementptr inbounds (%struct.log2f_data,\l... %struct.log2f_data* @__log2f_data, i64 0, i32 1, i64 1), align 8, !tbaa !1640\l  %48 = tail call double @llvm.experimental.constrained.fmul.f64(double %47,\l... double %43, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %49 = load double, double* getelementptr inbounds (%struct.log2f_data,\l... %struct.log2f_data* @__log2f_data, i64 0, i32 1, i64 2), align 8, !tbaa !1640\l  %50 = tail call double @llvm.experimental.constrained.fadd.f64(double %48,\l... double %49, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %51 = load double, double* getelementptr inbounds (%struct.log2f_data,\l... %struct.log2f_data* @__log2f_data, i64 0, i32 1, i64 0), align 8, !tbaa !1640\l  %52 = tail call double @llvm.experimental.constrained.fmul.f64(double %51,\l... double %46, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %53 = tail call double @llvm.experimental.constrained.fadd.f64(double %52,\l... double %50, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %54 = load double, double* getelementptr inbounds (%struct.log2f_data,\l... %struct.log2f_data* @__log2f_data, i64 0, i32 1, i64 3), align 8, !tbaa !1640\l  %55 = tail call double @llvm.experimental.constrained.fmul.f64(double %54,\l... double %43, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %56 = tail call double @llvm.experimental.constrained.fadd.f64(double %55,\l... double %45, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %57 = tail call double @llvm.experimental.constrained.fmul.f64(double %53,\l... double %46, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %58 = tail call double @llvm.experimental.constrained.fadd.f64(double %57,\l... double %56, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %59 = tail call float @llvm.experimental.constrained.fptrunc.f32.f64(double\l... %58, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  br label %60\l}"];
	Node0x1a94040 -> Node0x1a94090;
	Node0x1a94090 [shape=record,label="{%60:\l60:                                               \l  %61 = phi float [ %5, %4 ], [ %13, %12 ], [ %21, %20 ], [ %59, %26 ], [ %0,\l... %14 ]\l  ret float %61\l}"];
}
