digraph "CFG for 'exp10' function" {
	label="CFG for 'exp10' function";

	Node0x1f80ba0 [shape=record,label="{%1:\l  %2 = alloca double, align 8\l  %3 = bitcast double* %2 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3) #40\l  %4 = call double @modf(double %0, double* nonnull %2) #41\l  %5 = bitcast double* %2 to i64*\l  %6 = load i64, i64* %5, align 8, !tbaa !1632\l  %7 = and i64 %6, 9218868437227405312\l  %8 = icmp ult i64 %7, 4625196817309499392\l  %9 = bitcast i64 %6 to double\l  br i1 %8, label %10, label %28\l|{<s0>T|<s1>F}}"];
	Node0x1f80ba0:s0 -> Node0x1f80d60;
	Node0x1f80ba0:s1 -> Node0x1f80e50;
	Node0x1f80d60 [shape=record,label="{%10:\l10:                                               \l  %11 = call i1 @llvm.experimental.constrained.fcmp.f64(double %4, double\l... 0.000000e+00, metadata !\"une\", metadata !\"fpexcept.ignore\") #42\l  br i1 %11, label %18, label %12\l|{<s0>T|<s1>F}}"];
	Node0x1f80d60:s0 -> Node0x1f80e00;
	Node0x1f80d60:s1 -> Node0x1f80db0;
	Node0x1f80db0 [shape=record,label="{%12:\l12:                                               \l  %13 = call i32 @llvm.experimental.constrained.fptosi.i32.f64(double %9,\l... metadata !\"fpexcept.ignore\") #42\l  %14 = add nsw i32 %13, 15\l  %15 = sext i32 %14 to i64\l  %16 = getelementptr inbounds [31 x double], [31 x double]* @exp10.p10, i64\l... 0, i64 %15\l  %17 = load double, double* %16, align 8, !tbaa !1632\l  br label %30\l}"];
	Node0x1f80db0 -> Node0x1f80ea0;
	Node0x1f80e00 [shape=record,label="{%18:\l18:                                               \l  %19 = call double @llvm.experimental.constrained.fmul.f64(double\l... 0x400A934F0979A371, double %4, metadata !\"round.dynamic\", metadata\l... !\"fpexcept.ignore\") #42\l  %20 = call double @exp2(double %19) #41\l  %21 = load double, double* %2, align 8, !tbaa !1632\l  %22 = call i32 @llvm.experimental.constrained.fptosi.i32.f64(double %21,\l... metadata !\"fpexcept.ignore\") #42\l  %23 = add nsw i32 %22, 15\l  %24 = sext i32 %23 to i64\l  %25 = getelementptr inbounds [31 x double], [31 x double]* @exp10.p10, i64\l... 0, i64 %24\l  %26 = load double, double* %25, align 8, !tbaa !1632\l  %27 = call double @llvm.experimental.constrained.fmul.f64(double %20, double\l... %26, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #42\l  br label %30\l}"];
	Node0x1f80e00 -> Node0x1f80ea0;
	Node0x1f80e50 [shape=record,label="{%28:\l28:                                               \l  %29 = call double @pow(double 1.000000e+01, double %0) #41\l  br label %30\l}"];
	Node0x1f80e50 -> Node0x1f80ea0;
	Node0x1f80ea0 [shape=record,label="{%30:\l30:                                               \l  %31 = phi double [ %27, %18 ], [ %17, %12 ], [ %29, %28 ]\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3) #40\l  ret double %31\l}"];
}
