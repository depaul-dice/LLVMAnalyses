digraph "CFG for 'sinh' function" {
	label="CFG for 'sinh' function";

	Node0x16f2280 [shape=record,label="{%1:\l  %2 = bitcast double %0 to i64\l  %3 = icmp slt i64 %2, 0\l  %4 = select i1 %3, double -5.000000e-01, double 5.000000e-01\l  %5 = and i64 %2, 9223372036854775807\l  %6 = bitcast i64 %5 to double\l  %7 = lshr i64 %5, 32\l  %8 = trunc i64 %7 to i32\l  %9 = icmp ult i32 %8, 1082535490\l  br i1 %9, label %10, label %30\l|{<s0>T|<s1>F}}"];
	Node0x16f2280:s0 -> Node0x16f22d0;
	Node0x16f2280:s1 -> Node0x16f2410;
	Node0x16f22d0 [shape=record,label="{%10:\l10:                                               \l  %11 = tail call double @expm1(double %6) #40\l  %12 = icmp ult i32 %8, 1072693248\l  br i1 %12, label %13, label %24\l|{<s0>T|<s1>F}}"];
	Node0x16f22d0:s0 -> Node0x16f2320;
	Node0x16f22d0:s1 -> Node0x16f23c0;
	Node0x16f2320 [shape=record,label="{%13:\l13:                                               \l  %14 = icmp ult i32 %8, 1045430272\l  br i1 %14, label %35, label %15\l|{<s0>T|<s1>F}}"];
	Node0x16f2320:s0 -> Node0x16f2460;
	Node0x16f2320:s1 -> Node0x16f2370;
	Node0x16f2370 [shape=record,label="{%15:\l15:                                               \l  %16 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 2,\l... metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #41\l  %17 = tail call double @llvm.experimental.constrained.fmul.f64(double %16,\l... double %11, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #41\l  %18 = tail call double @llvm.experimental.constrained.fmul.f64(double %11,\l... double %11, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #41\l  %19 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 1,\l... metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #41\l  %20 = tail call double @llvm.experimental.constrained.fadd.f64(double %11,\l... double %19, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #41\l  %21 = tail call double @llvm.experimental.constrained.fdiv.f64(double %18,\l... double %20, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #41\l  %22 = tail call double @llvm.experimental.constrained.fsub.f64(double %17,\l... double %21, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #41\l  %23 = tail call double @llvm.experimental.constrained.fmul.f64(double %4,\l... double %22, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #41\l  br label %35\l}"];
	Node0x16f2370 -> Node0x16f2460;
	Node0x16f23c0 [shape=record,label="{%24:\l24:                                               \l  %25 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 1,\l... metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #41\l  %26 = tail call double @llvm.experimental.constrained.fadd.f64(double %11,\l... double %25, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #41\l  %27 = tail call double @llvm.experimental.constrained.fdiv.f64(double %11,\l... double %26, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #41\l  %28 = tail call double @llvm.experimental.constrained.fadd.f64(double %11,\l... double %27, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #41\l  %29 = tail call double @llvm.experimental.constrained.fmul.f64(double %4,\l... double %28, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #41\l  br label %35\l}"];
	Node0x16f23c0 -> Node0x16f2460;
	Node0x16f2410 [shape=record,label="{%30:\l30:                                               \l  %31 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 2,\l... metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #41\l  %32 = tail call double @llvm.experimental.constrained.fmul.f64(double %31,\l... double %4, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #41\l  %33 = tail call double @__expo2(double %6) #40\l  %34 = tail call double @llvm.experimental.constrained.fmul.f64(double %32,\l... double %33, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #41\l  br label %35\l}"];
	Node0x16f2410 -> Node0x16f2460;
	Node0x16f2460 [shape=record,label="{%35:\l35:                                               \l  %36 = phi double [ %23, %15 ], [ %29, %24 ], [ %34, %30 ], [ %0, %13 ]\l  ret double %36\l}"];
}
