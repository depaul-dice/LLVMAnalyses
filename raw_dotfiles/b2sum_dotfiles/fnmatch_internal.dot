digraph "CFG for 'fnmatch_internal' function" {
	label="CFG for 'fnmatch_internal' function";

	Node0x1b1b040 [shape=record,label="{%5:\l  %6 = alloca i64, align 8\l  %7 = alloca i64, align 8\l  %8 = bitcast i64* %6 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #40\l  %9 = bitcast i64* %7 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #40\l  %10 = and i32 %4, 4\l  %11 = icmp eq i32 %10, 0\l  br i1 %11, label %18, label %12\l|{<s0>T|<s1>F}}"];
	Node0x1b1b040:s0 -> Node0x1b1b3c0;
	Node0x1b1b040:s1 -> Node0x1b1b320;
	Node0x1b1b320 [shape=record,label="{%12:\l12:                                               \l  %13 = load i8, i8* %2, align 1, !tbaa !1632\l  %14 = icmp eq i8 %13, 46\l  br i1 %14, label %15, label %18\l|{<s0>T|<s1>F}}"];
	Node0x1b1b320:s0 -> Node0x1b1b370;
	Node0x1b1b320:s1 -> Node0x1b1b3c0;
	Node0x1b1b370 [shape=record,label="{%15:\l15:                                               \l  %16 = load i8, i8* %0, align 1, !tbaa !1632\l  %17 = icmp eq i8 %16, 46\l  br i1 %17, label %18, label %252\l|{<s0>T|<s1>F}}"];
	Node0x1b1b370:s0 -> Node0x1b1b3c0;
	Node0x1b1b370:s1 -> Node0x1b1c3b0;
	Node0x1b1b3c0 [shape=record,label="{%18:\l18:                                               \l  %19 = and i32 %4, 16\l  %20 = icmp eq i32 %19, 0\l  br label %21\l}"];
	Node0x1b1b3c0 -> Node0x1b1b410;
	Node0x1b1b410 [shape=record,label="{%21:\l21:                                               \l  %22 = phi i64 [ %1, %18 ], [ %63, %60 ]\l  %23 = phi i8* [ %2, %18 ], [ %44, %60 ]\l  %24 = phi i64 [ %3, %18 ], [ %45, %60 ]\l  %25 = phi i8* [ %0, %18 ], [ %62, %60 ]\l  %26 = call fastcc i32 @pat_next(i8* %25, i64 %22, i64* nonnull %6, i32 %4)\l... #41\l  switch i32 %26, label %36 [\l    i32 -2, label %252\l    i32 -5, label %27\l  ]\l|{<s0>def|<s1>-2|<s2>-5}}"];
	Node0x1b1b410:s0 -> Node0x1b1b500;
	Node0x1b1b410:s1 -> Node0x1b1c3b0;
	Node0x1b1b410:s2 -> Node0x1b1b460;
	Node0x1b1b460 [shape=record,label="{%27:\l27:                                               \l  %28 = getelementptr inbounds i8, i8* %25, i64 1\l  %29 = add i64 %22, -1\l  %30 = tail call i64 @strnlen(i8* nonnull %28, i64 %29) #42\l  %31 = add nsw i64 %30, 1\l  %32 = getelementptr inbounds i8, i8* %25, i64 %31\l  %33 = icmp sgt i64 %30, 0\l  br i1 %33, label %34, label %82\l|{<s0>T|<s1>F}}"];
	Node0x1b1b460:s0 -> Node0x1b1b4b0;
	Node0x1b1b460:s1 -> Node0x1b1b910;
	Node0x1b1b4b0 [shape=record,label="{%34:\l34:                                               \l  %35 = ptrtoint i8* %32 to i64\l  br label %64\l}"];
	Node0x1b1b4b0 -> Node0x1b1b7d0;
	Node0x1b1b500 [shape=record,label="{%36:\l36:                                               \l  %37 = call fastcc i32 @str_next(i8* %23, i64 %24, i64* nonnull %7) #41\l  %38 = icmp slt i32 %37, 1\l  br i1 %38, label %39, label %42\l|{<s0>T|<s1>F}}"];
	Node0x1b1b500:s0 -> Node0x1b1b550;
	Node0x1b1b500:s1 -> Node0x1b1b5a0;
	Node0x1b1b550 [shape=record,label="{%39:\l39:                                               \l  %40 = icmp ne i32 %26, 0\l  %41 = zext i1 %40 to i32\l  br label %252\l}"];
	Node0x1b1b550 -> Node0x1b1c3b0;
	Node0x1b1b5a0 [shape=record,label="{%42:\l42:                                               \l  %43 = load i64, i64* %7, align 8, !tbaa !1635\l  %44 = getelementptr inbounds i8, i8* %23, i64 %43\l  %45 = sub i64 %24, %43\l  br i1 %20, label %51, label %46\l|{<s0>T|<s1>F}}"];
	Node0x1b1b5a0:s0 -> Node0x1b1b690;
	Node0x1b1b5a0:s1 -> Node0x1b1b5f0;
	Node0x1b1b5f0 [shape=record,label="{%46:\l46:                                               \l  %47 = tail call i32 @towupper(i32 %37) #42\l  %48 = icmp eq i32 %47, %37\l  br i1 %48, label %49, label %51\l|{<s0>T|<s1>F}}"];
	Node0x1b1b5f0:s0 -> Node0x1b1b640;
	Node0x1b1b5f0:s1 -> Node0x1b1b690;
	Node0x1b1b640 [shape=record,label="{%49:\l49:                                               \l  %50 = tail call i32 @towlower(i32 %37) #42\l  br label %51\l}"];
	Node0x1b1b640 -> Node0x1b1b690;
	Node0x1b1b690 [shape=record,label="{%51:\l51:                                               \l  %52 = phi i32 [ %37, %42 ], [ %50, %49 ], [ %47, %46 ]\l  switch i32 %26, label %56 [\l    i32 -3, label %53\l    i32 -4, label %60\l  ]\l|{<s0>def|<s1>-3|<s2>-4}}"];
	Node0x1b1b690:s0 -> Node0x1b1b730;
	Node0x1b1b690:s1 -> Node0x1b1b6e0;
	Node0x1b1b690:s2 -> Node0x1b1b780;
	Node0x1b1b6e0 [shape=record,label="{%53:\l53:                                               \l  %54 = tail call fastcc i32 @match_bracket(i8* %25, i32 %37, i32 %52) #41\l  %55 = icmp eq i32 %54, 0\l  br i1 %55, label %252, label %60\l|{<s0>T|<s1>F}}"];
	Node0x1b1b6e0:s0 -> Node0x1b1c3b0;
	Node0x1b1b6e0:s1 -> Node0x1b1b780;
	Node0x1b1b730 [shape=record,label="{%56:\l56:                                               \l  %57 = icmp eq i32 %37, %26\l  %58 = icmp eq i32 %52, %26\l  %59 = or i1 %57, %58\l  br i1 %59, label %60, label %252\l|{<s0>T|<s1>F}}"];
	Node0x1b1b730:s0 -> Node0x1b1b780;
	Node0x1b1b730:s1 -> Node0x1b1c3b0;
	Node0x1b1b780 [shape=record,label="{%60:\l60:                                               \l  %61 = load i64, i64* %6, align 8, !tbaa !1635\l  %62 = getelementptr inbounds i8, i8* %25, i64 %61\l  %63 = sub i64 %22, %61\l  br label %21\l}"];
	Node0x1b1b780 -> Node0x1b1b410;
	Node0x1b1b7d0 [shape=record,label="{%64:\l64:                                               \l  %65 = phi i64 [ 0, %34 ], [ %78, %76 ]\l  %66 = phi i64 [ 1, %34 ], [ %77, %76 ]\l  %67 = phi i64 [ 1, %34 ], [ %80, %76 ]\l  %68 = getelementptr inbounds i8, i8* %25, i64 %67\l  %69 = ptrtoint i8* %68 to i64\l  %70 = sub i64 %35, %69\l  %71 = call fastcc i32 @pat_next(i8* %68, i64 %70, i64* nonnull %6, i32 %4)\l... #41\l  switch i32 %71, label %74 [\l    i32 -2, label %252\l    i32 -5, label %72\l  ]\l|{<s0>def|<s1>-2|<s2>-5}}"];
	Node0x1b1b7d0:s0 -> Node0x1b1b870;
	Node0x1b1b7d0:s1 -> Node0x1b1c3b0;
	Node0x1b1b7d0:s2 -> Node0x1b1b820;
	Node0x1b1b820 [shape=record,label="{%72:\l72:                                               \l  %73 = add nsw i64 %67, 1\l  br label %76\l}"];
	Node0x1b1b820 -> Node0x1b1b8c0;
	Node0x1b1b870 [shape=record,label="{%74:\l74:                                               \l  %75 = add i64 %65, 1\l  br label %76\l}"];
	Node0x1b1b870 -> Node0x1b1b8c0;
	Node0x1b1b8c0 [shape=record,label="{%76:\l76:                                               \l  %77 = phi i64 [ %66, %74 ], [ %73, %72 ]\l  %78 = phi i64 [ %75, %74 ], [ 0, %72 ]\l  %79 = load i64, i64* %6, align 8, !tbaa !1635\l  %80 = add nsw i64 %67, %79\l  %81 = icmp sgt i64 %80, %30\l  br i1 %81, label %82, label %64\l|{<s0>T|<s1>F}}"];
	Node0x1b1b8c0:s0 -> Node0x1b1b910;
	Node0x1b1b8c0:s1 -> Node0x1b1b7d0;
	Node0x1b1b910 [shape=record,label="{%82:\l82:                                               \l  %83 = phi i64 [ 1, %27 ], [ %77, %76 ]\l  %84 = phi i64 [ 0, %27 ], [ %78, %76 ]\l  %85 = getelementptr inbounds i8, i8* %25, i64 %83\l  %86 = tail call i64 @strnlen(i8* %23, i64 %24) #42\l  %87 = getelementptr inbounds i8, i8* %23, i64 %86\l  %88 = icmp ult i64 %86, %84\l  br i1 %88, label %252, label %89\l|{<s0>T|<s1>F}}"];
	Node0x1b1b910:s0 -> Node0x1b1c3b0;
	Node0x1b1b910:s1 -> Node0x1b1b960;
	Node0x1b1b960 [shape=record,label="{%89:\l89:                                               \l  %90 = icmp sgt i64 %86, 0\l  %91 = icmp ne i64 %84, 0\l  %92 = and i1 %90, %91\l  br i1 %92, label %93, label %128\l|{<s0>T|<s1>F}}"];
	Node0x1b1b960:s0 -> Node0x1b1b9b0;
	Node0x1b1b960:s1 -> Node0x1b1bb40;
	Node0x1b1b9b0 [shape=record,label="{%93:\l93:                                               \l  %94 = phi i64 [ %124, %122 ], [ %84, %89 ]\l  %95 = phi i8* [ %123, %122 ], [ %87, %89 ]\l  %96 = getelementptr inbounds i8, i8* %95, i64 -1\l  %97 = load i8, i8* %96, align 1, !tbaa !1632\l  %98 = icmp sgt i8 %97, -1\l  br i1 %98, label %122, label %99\l|{<s0>T|<s1>F}}"];
	Node0x1b1b9b0:s0 -> Node0x1b1baf0;
	Node0x1b1b9b0:s1 -> Node0x1b1ba00;
	Node0x1b1ba00 [shape=record,label="{%99:\l99:                                               \l  %100 = tail call %struct.__pthread* asm \"mov %fs:0,$0\",\l... \"=r,~\{dirflag\},~\{fpsr\},~\{flags\}\"() #43, !srcloc !1637\l  %101 = getelementptr inbounds %struct.__pthread, %struct.__pthread* %100,\l... i64 0, i32 24\l  %102 = load %struct.__locale_struct*, %struct.__locale_struct** %101, align\l... 8, !tbaa !1638\l  %103 = getelementptr inbounds %struct.__locale_struct,\l... %struct.__locale_struct* %102, i64 0, i32 0, i64 0\l  %104 = load %struct.__locale_map*, %struct.__locale_map** %103, align 8,\l... !tbaa !1643\l  %105 = icmp eq %struct.__locale_map* %104, null\l  br i1 %105, label %122, label %106\l|{<s0>T|<s1>F}}"];
	Node0x1b1ba00:s0 -> Node0x1b1baf0;
	Node0x1b1ba00:s1 -> Node0x1b1ba50;
	Node0x1b1ba50 [shape=record,label="{%106:\l106:                                              \l  %107 = getelementptr inbounds i8, i8* %95, i64 -1\l  %108 = and i8 %97, -64\l  %109 = icmp eq i8 %108, -128\l  %110 = icmp ugt i8* %107, %23\l  %111 = and i1 %110, %109\l  br i1 %111, label %112, label %122\l|{<s0>T|<s1>F}}"];
	Node0x1b1ba50:s0 -> Node0x1b1baa0;
	Node0x1b1ba50:s1 -> Node0x1b1baf0;
	Node0x1b1baa0 [shape=record,label="{%112:\l112:                                              \l  %113 = phi i8* [ %117, %112 ], [ %107, %106 ]\l  %114 = phi i8* [ %113, %112 ], [ %95, %106 ]\l  %115 = getelementptr inbounds i8, i8* %114, i64 -2\l  %116 = load i8, i8* %115, align 1, !tbaa !1632\l  %117 = getelementptr inbounds i8, i8* %113, i64 -1\l  %118 = and i8 %116, -64\l  %119 = icmp eq i8 %118, -128\l  %120 = icmp ugt i8* %117, %23\l  %121 = and i1 %120, %119\l  br i1 %121, label %112, label %122\l|{<s0>T|<s1>F}}"];
	Node0x1b1baa0:s0 -> Node0x1b1baa0;
	Node0x1b1baa0:s1 -> Node0x1b1baf0;
	Node0x1b1baf0 [shape=record,label="{%122:\l122:                                              \l  %123 = phi i8* [ %96, %99 ], [ %96, %93 ], [ %107, %106 ], [ %117, %112 ]\l  %124 = add i64 %94, -1\l  %125 = icmp ugt i8* %123, %23\l  %126 = icmp ne i64 %124, 0\l  %127 = and i1 %125, %126\l  br i1 %127, label %93, label %128\l|{<s0>T|<s1>F}}"];
	Node0x1b1baf0:s0 -> Node0x1b1b9b0;
	Node0x1b1baf0:s1 -> Node0x1b1bb40;
	Node0x1b1bb40 [shape=record,label="{%128:\l128:                                              \l  %129 = phi i8* [ %87, %89 ], [ %123, %122 ]\l  %130 = phi i1 [ %91, %89 ], [ %126, %122 ]\l  br i1 %130, label %252, label %131\l|{<s0>T|<s1>F}}"];
	Node0x1b1bb40:s0 -> Node0x1b1c3b0;
	Node0x1b1bb40:s1 -> Node0x1b1bb90;
	Node0x1b1bb90 [shape=record,label="{%131:\l131:                                              \l  %132 = ptrtoint i8* %32 to i64\l  %133 = ptrtoint i8* %85 to i64\l  %134 = sub i64 %132, %133\l  %135 = call fastcc i32 @pat_next(i8* %85, i64 %134, i64* nonnull %6, i32 %4)\l... #41\l  %136 = load i64, i64* %6, align 8, !tbaa !1635\l  %137 = ptrtoint i8* %87 to i64\l  %138 = ptrtoint i8* %129 to i64\l  %139 = sub i64 %137, %138\l  %140 = call fastcc i32 @str_next(i8* %129, i64 %139, i64* nonnull %7) #41\l  %141 = icmp slt i32 %140, 1\l  br i1 %141, label %144, label %142\l|{<s0>T|<s1>F}}"];
	Node0x1b1bb90:s0 -> Node0x1b1bc30;
	Node0x1b1bb90:s1 -> Node0x1b1bbe0;
	Node0x1b1bbe0 [shape=record,label="{%142:\l142:                                              \l  %143 = getelementptr inbounds i8, i8* %85, i64 %136\l  br label %149\l}"];
	Node0x1b1bbe0 -> Node0x1b1bcd0;
	Node0x1b1bc30 [shape=record,label="{%144:\l144:                                              \l  %145 = phi i32 [ %135, %131 ], [ %174, %171 ]\l  %146 = icmp eq i32 %145, 0\l  br i1 %146, label %147, label %252\l|{<s0>T|<s1>F}}"];
	Node0x1b1bc30:s0 -> Node0x1b1bc80;
	Node0x1b1bc30:s1 -> Node0x1b1c3b0;
	Node0x1b1bc80 [shape=record,label="{%147:\l147:                                              \l  %148 = icmp sgt i64 %83, 1\l  br i1 %148, label %185, label %252\l|{<s0>T|<s1>F}}"];
	Node0x1b1bc80:s0 -> Node0x1b1bf50;
	Node0x1b1bc80:s1 -> Node0x1b1c3b0;
	Node0x1b1bcd0 [shape=record,label="{%149:\l149:                                              \l  %150 = phi i32 [ %140, %142 ], [ %179, %171 ]\l  %151 = phi i8* [ %143, %142 ], [ %176, %171 ]\l  %152 = phi i32 [ %135, %142 ], [ %174, %171 ]\l  %153 = phi i8* [ %129, %142 ], [ %156, %171 ]\l  %154 = phi i8* [ %85, %142 ], [ %151, %171 ]\l  %155 = load i64, i64* %7, align 8, !tbaa !1635\l  %156 = getelementptr inbounds i8, i8* %153, i64 %155\l  br i1 %20, label %162, label %157\l|{<s0>T|<s1>F}}"];
	Node0x1b1bcd0:s0 -> Node0x1b1bdc0;
	Node0x1b1bcd0:s1 -> Node0x1b1bd20;
	Node0x1b1bd20 [shape=record,label="{%157:\l157:                                              \l  %158 = tail call i32 @towupper(i32 %150) #42\l  %159 = icmp eq i32 %158, %150\l  br i1 %159, label %160, label %162\l|{<s0>T|<s1>F}}"];
	Node0x1b1bd20:s0 -> Node0x1b1bd70;
	Node0x1b1bd20:s1 -> Node0x1b1bdc0;
	Node0x1b1bd70 [shape=record,label="{%160:\l160:                                              \l  %161 = tail call i32 @towlower(i32 %150) #42\l  br label %162\l}"];
	Node0x1b1bd70 -> Node0x1b1bdc0;
	Node0x1b1bdc0 [shape=record,label="{%162:\l162:                                              \l  %163 = phi i32 [ %150, %149 ], [ %161, %160 ], [ %158, %157 ]\l  switch i32 %152, label %167 [\l    i32 -3, label %164\l    i32 -4, label %171\l  ]\l|{<s0>def|<s1>-3|<s2>-4}}"];
	Node0x1b1bdc0:s0 -> Node0x1b1be60;
	Node0x1b1bdc0:s1 -> Node0x1b1be10;
	Node0x1b1bdc0:s2 -> Node0x1b1beb0;
	Node0x1b1be10 [shape=record,label="{%164:\l164:                                              \l  %165 = tail call fastcc i32 @match_bracket(i8* %154, i32 %150, i32 %163) #41\l  %166 = icmp eq i32 %165, 0\l  br i1 %166, label %252, label %171\l|{<s0>T|<s1>F}}"];
	Node0x1b1be10:s0 -> Node0x1b1c3b0;
	Node0x1b1be10:s1 -> Node0x1b1beb0;
	Node0x1b1be60 [shape=record,label="{%167:\l167:                                              \l  %168 = icmp eq i32 %150, %152\l  %169 = icmp eq i32 %163, %152\l  %170 = or i1 %168, %169\l  br i1 %170, label %171, label %252\l|{<s0>T|<s1>F}}"];
	Node0x1b1be60:s0 -> Node0x1b1beb0;
	Node0x1b1be60:s1 -> Node0x1b1c3b0;
	Node0x1b1beb0 [shape=record,label="{%171:\l171:                                              \l  %172 = ptrtoint i8* %151 to i64\l  %173 = sub i64 %132, %172\l  %174 = call fastcc i32 @pat_next(i8* %151, i64 %173, i64* nonnull %6, i32\l... %4) #41\l  %175 = load i64, i64* %6, align 8, !tbaa !1635\l  %176 = getelementptr inbounds i8, i8* %151, i64 %175\l  %177 = ptrtoint i8* %156 to i64\l  %178 = sub i64 %137, %177\l  %179 = call fastcc i32 @str_next(i8* %156, i64 %178, i64* nonnull %7) #41\l  %180 = icmp slt i32 %179, 1\l  br i1 %180, label %144, label %149\l|{<s0>T|<s1>F}}"];
	Node0x1b1beb0:s0 -> Node0x1b1bc30;
	Node0x1b1beb0:s1 -> Node0x1b1bcd0;
	Node0x1b1bf00 [shape=record,label="{%181:\l181:                                              \l  %182 = phi i8* [ %187, %185 ], [ %224, %222 ], [ %247, %246 ]\l  %183 = phi i8* [ %192, %185 ], [ %229, %222 ], [ %250, %246 ]\l  %184 = icmp ult i8* %183, %85\l  br i1 %184, label %185, label %252\l|{<s0>T|<s1>F}}"];
	Node0x1b1bf00:s0 -> Node0x1b1bf50;
	Node0x1b1bf00:s1 -> Node0x1b1c3b0;
	Node0x1b1bf50 [shape=record,label="{%185:\l185:                                              \l  %186 = phi i8* [ %183, %181 ], [ %28, %147 ]\l  %187 = phi i8* [ %182, %181 ], [ %23, %147 ]\l  %188 = ptrtoint i8* %186 to i64\l  %189 = sub i64 %133, %188\l  %190 = call fastcc i32 @pat_next(i8* %186, i64 %189, i64* nonnull %6, i32\l... %4) #41\l  %191 = load i64, i64* %6, align 8, !tbaa !1635\l  %192 = getelementptr inbounds i8, i8* %186, i64 %191\l  %193 = icmp eq i32 %190, -5\l  br i1 %193, label %181, label %194\l|{<s0>T|<s1>F}}"];
	Node0x1b1bf50:s0 -> Node0x1b1bf00;
	Node0x1b1bf50:s1 -> Node0x1b1bfa0;
	Node0x1b1bfa0 [shape=record,label="{%194:\l194:                                              \l  %195 = phi i8* [ %250, %246 ], [ %192, %185 ]\l  %196 = phi i32 [ %248, %246 ], [ %190, %185 ]\l  %197 = phi i8* [ %247, %246 ], [ %187, %185 ]\l  br label %198\l}"];
	Node0x1b1bfa0 -> Node0x1b1bff0;
	Node0x1b1bff0 [shape=record,label="{%198:\l198:                                              \l  %199 = phi i8* [ %229, %222 ], [ %195, %194 ]\l  %200 = phi i32 [ %227, %222 ], [ %196, %194 ]\l  %201 = phi i8* [ %224, %222 ], [ %197, %194 ]\l  %202 = phi i8* [ %199, %222 ], [ %186, %194 ]\l  %203 = ptrtoint i8* %201 to i64\l  %204 = sub i64 %138, %203\l  %205 = call fastcc i32 @str_next(i8* %201, i64 %204, i64* nonnull %7) #41\l  %206 = icmp eq i32 %205, 0\l  br i1 %206, label %252, label %207\l|{<s0>T|<s1>F}}"];
	Node0x1b1bff0:s0 -> Node0x1b1c3b0;
	Node0x1b1bff0:s1 -> Node0x1b1c040;
	Node0x1b1c040 [shape=record,label="{%207:\l207:                                              \l  br i1 %20, label %213, label %208\l|{<s0>T|<s1>F}}"];
	Node0x1b1c040:s0 -> Node0x1b1c130;
	Node0x1b1c040:s1 -> Node0x1b1c090;
	Node0x1b1c090 [shape=record,label="{%208:\l208:                                              \l  %209 = tail call i32 @towupper(i32 %205) #42\l  %210 = icmp eq i32 %209, %205\l  br i1 %210, label %211, label %213\l|{<s0>T|<s1>F}}"];
	Node0x1b1c090:s0 -> Node0x1b1c0e0;
	Node0x1b1c090:s1 -> Node0x1b1c130;
	Node0x1b1c0e0 [shape=record,label="{%211:\l211:                                              \l  %212 = tail call i32 @towlower(i32 %205) #42\l  br label %213\l}"];
	Node0x1b1c0e0 -> Node0x1b1c130;
	Node0x1b1c130 [shape=record,label="{%213:\l213:                                              \l  %214 = phi i32 [ %205, %207 ], [ %212, %211 ], [ %209, %208 ]\l  switch i32 %200, label %218 [\l    i32 -3, label %215\l    i32 -4, label %222\l  ]\l|{<s0>def|<s1>-3|<s2>-4}}"];
	Node0x1b1c130:s0 -> Node0x1b1c1d0;
	Node0x1b1c130:s1 -> Node0x1b1c180;
	Node0x1b1c130:s2 -> Node0x1b1c220;
	Node0x1b1c180 [shape=record,label="{%215:\l215:                                              \l  %216 = tail call fastcc i32 @match_bracket(i8* %202, i32 %205, i32 %214) #41\l  %217 = icmp eq i32 %216, 0\l  br i1 %217, label %231, label %222\l|{<s0>T|<s1>F}}"];
	Node0x1b1c180:s0 -> Node0x1b1c270;
	Node0x1b1c180:s1 -> Node0x1b1c220;
	Node0x1b1c1d0 [shape=record,label="{%218:\l218:                                              \l  %219 = icmp eq i32 %205, %200\l  %220 = icmp eq i32 %214, %200\l  %221 = or i1 %219, %220\l  br i1 %221, label %222, label %231\l|{<s0>T|<s1>F}}"];
	Node0x1b1c1d0:s0 -> Node0x1b1c220;
	Node0x1b1c1d0:s1 -> Node0x1b1c270;
	Node0x1b1c220 [shape=record,label="{%222:\l222:                                              \l  %223 = load i64, i64* %7, align 8, !tbaa !1635\l  %224 = getelementptr inbounds i8, i8* %201, i64 %223\l  %225 = ptrtoint i8* %199 to i64\l  %226 = sub i64 %133, %225\l  %227 = call fastcc i32 @pat_next(i8* %199, i64 %226, i64* nonnull %6, i32\l... %4) #41\l  %228 = load i64, i64* %6, align 8, !tbaa !1635\l  %229 = getelementptr inbounds i8, i8* %199, i64 %228\l  %230 = icmp eq i32 %227, -5\l  br i1 %230, label %181, label %198\l|{<s0>T|<s1>F}}"];
	Node0x1b1c220:s0 -> Node0x1b1bf00;
	Node0x1b1c220:s1 -> Node0x1b1bff0;
	Node0x1b1c270 [shape=record,label="{%231:\l231:                                              \l  %232 = ptrtoint i8* %197 to i64\l  %233 = sub i64 %138, %232\l  %234 = call fastcc i32 @str_next(i8* %197, i64 %233, i64* nonnull %7) #41\l  %235 = icmp sgt i32 %234, 0\l  br i1 %235, label %236, label %239\l|{<s0>T|<s1>F}}"];
	Node0x1b1c270:s0 -> Node0x1b1c2c0;
	Node0x1b1c270:s1 -> Node0x1b1c310;
	Node0x1b1c2c0 [shape=record,label="{%236:\l236:                                              \l  %237 = load i64, i64* %7, align 8, !tbaa !1635\l  %238 = getelementptr inbounds i8, i8* %197, i64 %237\l  br label %246\l}"];
	Node0x1b1c2c0 -> Node0x1b1c360;
	Node0x1b1c310 [shape=record,label="{%239:\l239:                                              \l  %240 = phi i8* [ %241, %239 ], [ %197, %231 ]\l  %241 = getelementptr inbounds i8, i8* %240, i64 1\l  %242 = ptrtoint i8* %241 to i64\l  %243 = sub i64 %138, %242\l  %244 = call fastcc i32 @str_next(i8* nonnull %241, i64 %243, i64* nonnull\l... %7) #41\l  %245 = icmp slt i32 %244, 0\l  br i1 %245, label %239, label %246\l|{<s0>T|<s1>F}}"];
	Node0x1b1c310:s0 -> Node0x1b1c310;
	Node0x1b1c310:s1 -> Node0x1b1c360;
	Node0x1b1c360 [shape=record,label="{%246:\l246:                                              \l  %247 = phi i8* [ %238, %236 ], [ %241, %239 ]\l  %248 = call fastcc i32 @pat_next(i8* %186, i64 %189, i64* nonnull %6, i32\l... %4) #41\l  %249 = load i64, i64* %6, align 8, !tbaa !1635\l  %250 = getelementptr inbounds i8, i8* %186, i64 %249\l  %251 = icmp eq i32 %248, -5\l  br i1 %251, label %181, label %194\l|{<s0>T|<s1>F}}"];
	Node0x1b1c360:s0 -> Node0x1b1bf00;
	Node0x1b1c360:s1 -> Node0x1b1bfa0;
	Node0x1b1c3b0 [shape=record,label="{%252:\l252:                                              \l  %253 = phi i32 [ %41, %39 ], [ 1, %15 ], [ 1, %82 ], [ 1, %128 ], [ 1, %144\l... ], [ 0, %147 ], [ 1, %198 ], [ 0, %181 ], [ 1, %164 ], [ 1, %167 ], [ 1, %64\l... ], [ 1, %21 ], [ 1, %53 ], [ 1, %56 ]\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #40\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #40\l  ret i32 %253\l}"];
}
