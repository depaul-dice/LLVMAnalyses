digraph "CFG for 'evalbinop' function" {
	label="CFG for 'evalbinop' function";

	Node0x18d5450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%4:\l  %5 = add nsw i32 %3, -1\l  %6 = tail call fastcc i8* @evalprim(%struct.st* %0, i8* %1, i32 %5) #29\l  %7 = load i8, i8* %6, align 1, !tbaa !1632\l  br label %8\l}"];
	Node0x18d5450 -> Node0x18d56a0;
	Node0x18d56a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%8:\l8:                                                \l  %9 = phi i64 [ 0, %4 ], [ %33, %32 ]\l  %10 = getelementptr inbounds [11 x i8], [11 x i8]* @parseop.opch, i64 0, i64\l... %9\l  %11 = load i8, i8* %10, align 1, !tbaa !1632\l  %12 = icmp eq i8 %7, %11\l  br i1 %12, label %13, label %32\l|{<s0>T|<s1>F}}"];
	Node0x18d56a0:s0 -> Node0x18d56f0;
	Node0x18d56a0:s1 -> Node0x18d5880;
	Node0x18d56f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%13:\l13:                                               \l  %14 = trunc i64 %9 to i32\l  %15 = icmp ult i32 %14, 6\l  br i1 %15, label %16, label %28\l|{<s0>T|<s1>F}}"];
	Node0x18d56f0:s0 -> Node0x18d5740;
	Node0x18d56f0:s1 -> Node0x18d5830;
	Node0x18d5740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%16:\l16:                                               \l  %17 = and i64 %9, 4294967295\l  %18 = getelementptr inbounds i8, i8* %6, i64 1\l  %19 = load i8, i8* %18, align 1, !tbaa !1632\l  %20 = getelementptr inbounds [6 x i8], [6 x i8]* @parseop.opch2, i64 0, i64\l... %17\l  %21 = load i8, i8* %20, align 1, !tbaa !1632\l  %22 = icmp eq i8 %19, %21\l  br i1 %22, label %23, label %26\l|{<s0>T|<s1>F}}"];
	Node0x18d5740:s0 -> Node0x18d5790;
	Node0x18d5740:s1 -> Node0x18d57e0;
	Node0x18d5790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%23:\l23:                                               \l  %24 = getelementptr inbounds %struct.st, %struct.st* %0, i64 0, i32 2\l  store i32 %14, i32* %24, align 8, !tbaa !1635\l  %25 = getelementptr inbounds i8, i8* %6, i64 2\l  br label %37\l}"];
	Node0x18d5790 -> Node0x18d5920;
	Node0x18d57e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%26:\l26:                                               \l  %27 = icmp ugt i32 %14, 3\l  br i1 %27, label %28, label %35\l|{<s0>T|<s1>F}}"];
	Node0x18d57e0:s0 -> Node0x18d5830;
	Node0x18d57e0:s1 -> Node0x18d58d0;
	Node0x18d5830 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%28:\l28:                                               \l  %29 = add nuw nsw i32 %14, 2\l  %30 = getelementptr inbounds %struct.st, %struct.st* %0, i64 0, i32 2\l  store i32 %29, i32* %30, align 8, !tbaa !1635\l  %31 = getelementptr inbounds i8, i8* %6, i64 1\l  br label %37\l}"];
	Node0x18d5830 -> Node0x18d5920;
	Node0x18d5880 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%32:\l32:                                               \l  %33 = add nuw nsw i64 %9, 1\l  %34 = icmp eq i64 %33, 11\l  br i1 %34, label %35, label %8\l|{<s0>T|<s1>F}}"];
	Node0x18d5880:s0 -> Node0x18d58d0;
	Node0x18d5880:s1 -> Node0x18d56a0;
	Node0x18d58d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%35:\l35:                                               \l  %36 = getelementptr inbounds %struct.st, %struct.st* %0, i64 0, i32 2\l  store i32 13, i32* %36, align 8, !tbaa !1635\l  br label %37\l}"];
	Node0x18d58d0 -> Node0x18d5920;
	Node0x18d5920 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%37:\l37:                                               \l  %38 = phi i32 [ %14, %23 ], [ %29, %28 ], [ 13, %35 ]\l  %39 = phi i8* [ %25, %23 ], [ %31, %28 ], [ %6, %35 ]\l  %40 = getelementptr inbounds %struct.st, %struct.st* %0, i64 0, i32 2\l  %41 = sext i32 %38 to i64\l  %42 = getelementptr inbounds [14 x i8], [14 x i8]* @evalbinop.prec, i64 0,\l... i64 %41\l  %43 = load i8, i8* %42, align 1, !tbaa !1632\l  %44 = sext i8 %43 to i32\l  %45 = icmp sgt i32 %44, %2\l  br i1 %45, label %46, label %NewDefault\l|{<s0>T|<s1>F}}"];
	Node0x18d5920:s0 -> Node0x18d5970;
	Node0x18d5920:s1 -> Node0x18d62d0;
	Node0x18d5970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%46:\l46:                                               \l  %47 = getelementptr inbounds %struct.st, %struct.st* %0, i64 0, i32 0\l  %48 = load i64, i64* %47, align 8, !tbaa !1639\l  br label %NodeBlock23\l}"];
	Node0x18d5970 -> Node0x18d59c0;
	Node0x18d59c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{NodeBlock23:                                      \l  %49 = phi i64 [ %48, %46 ], [ %99, %98 ]\l  %50 = phi i32 [ %44, %46 ], [ %104, %98 ]\l  %51 = phi i32 [ %38, %46 ], [ %100, %98 ]\l  %52 = phi i8* [ %39, %46 ], [ %53, %98 ]\l  %53 = tail call fastcc i8* @evalbinop(%struct.st* nonnull %0, i8* %52, i32\l... %50, i32 %5) #29\l  %54 = load i64, i64* %47, align 8, !tbaa !1639\l  %Pivot24 = icmp slt i32 %51, 6\l  br i1 %Pivot24, label %NodeBlock7, label %NodeBlock21\l|{<s0>T|<s1>F}}"];
	Node0x18d59c0:s0 -> Node0x18d5c40;
	Node0x18d59c0:s1 -> Node0x18d5a10;
	Node0x18d5a10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{NodeBlock21:                                      \l  %Pivot22 = icmp slt i32 %51, 9\l  br i1 %Pivot22, label %NodeBlock11, label %NodeBlock19\l|{<s0>T|<s1>F}}"];
	Node0x18d5a10:s0 -> Node0x18d5ba0;
	Node0x18d5a10:s1 -> Node0x18d5a60;
	Node0x18d5a60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{NodeBlock19:                                      \l  %Pivot20 = icmp slt i32 %51, 11\l  br i1 %Pivot20, label %NodeBlock13, label %NodeBlock17\l|{<s0>T|<s1>F}}"];
	Node0x18d5a60:s0 -> Node0x18d5b50;
	Node0x18d5a60:s1 -> Node0x18d5ab0;
	Node0x18d5ab0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{NodeBlock17:                                      \l  %Pivot18 = icmp slt i32 %51, 12\l  br i1 %Pivot18, label %91, label %LeafBlock15\l|{<s0>T|<s1>F}}"];
	Node0x18d5ab0:s0 -> Node0x18d6190;
	Node0x18d5ab0:s1 -> Node0x18d5b00;
	Node0x18d5b00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{LeafBlock15:                                      \l  %SwitchLeaf16 = icmp ne i32 %51, 12\l  %55 = icmp eq i64 %54, 0\l  %or.cond = or i1 %SwitchLeaf16, %55\l  %56 = getelementptr inbounds [1 x i8], [1 x i8]* @.str.490, i64 0, i64 0\l  br i1 %or.cond, label %NewDefault, label %96\l|{<s0>T|<s1>F}}"];
	Node0x18d5b00:s0 -> Node0x18d62d0;
	Node0x18d5b00:s1 -> Node0x18d6230;
	Node0x18d5b50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{NodeBlock13:                                      \l  %Pivot14 = icmp slt i32 %51, 10\l  br i1 %Pivot14, label %87, label %89\l|{<s0>T|<s1>F}}"];
	Node0x18d5b50:s0 -> Node0x18d60f0;
	Node0x18d5b50:s1 -> Node0x18d6140;
	Node0x18d5ba0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{NodeBlock11:                                      \l  %Pivot12 = icmp slt i32 %51, 7\l  br i1 %Pivot12, label %79, label %NodeBlock9\l|{<s0>T|<s1>F}}"];
	Node0x18d5ba0:s0 -> Node0x18d6000;
	Node0x18d5ba0:s1 -> Node0x18d5bf0;
	Node0x18d5bf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{NodeBlock9:                                       \l  %Pivot10 = icmp slt i32 %51, 8\l  br i1 %Pivot10, label %82, label %85\l|{<s0>T|<s1>F}}"];
	Node0x18d5bf0:s0 -> Node0x18d6050;
	Node0x18d5bf0:s1 -> Node0x18d60a0;
	Node0x18d5c40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e1675170",label="{NodeBlock7:                                       \l  %Pivot8 = icmp slt i32 %51, 3\l  br i1 %Pivot8, label %NodeBlock1, label %NodeBlock5\l|{<s0>T|<s1>F}}"];
	Node0x18d5c40:s0 -> Node0x18d5d30;
	Node0x18d5c40:s1 -> Node0x18d5c90;
	Node0x18d5c90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{NodeBlock5:                                       \l  %Pivot6 = icmp slt i32 %51, 4\l  br i1 %Pivot6, label %70, label %NodeBlock3\l|{<s0>T|<s1>F}}"];
	Node0x18d5c90:s0 -> Node0x18d5f10;
	Node0x18d5c90:s1 -> Node0x18d5ce0;
	Node0x18d5ce0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{NodeBlock3:                                       \l  %Pivot4 = icmp slt i32 %51, 5\l  br i1 %Pivot4, label %73, label %76\l|{<s0>T|<s1>F}}"];
	Node0x18d5ce0:s0 -> Node0x18d5f60;
	Node0x18d5ce0:s1 -> Node0x18d5fb0;
	Node0x18d5d30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f3947570",label="{NodeBlock1:                                       \l  %Pivot2 = icmp slt i32 %51, 1\l  br i1 %Pivot2, label %LeafBlock, label %NodeBlock\l|{<s0>T|<s1>F}}"];
	Node0x18d5d30:s0 -> Node0x18d5dd0;
	Node0x18d5d30:s1 -> Node0x18d5d80;
	Node0x18d5d80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7af9170",label="{NodeBlock:                                        \l  %Pivot = icmp slt i32 %51, 2\l  br i1 %Pivot, label %62, label %67\l|{<s0>T|<s1>F}}"];
	Node0x18d5d80:s0 -> Node0x18d5e70;
	Node0x18d5d80:s1 -> Node0x18d5ec0;
	Node0x18d5dd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{LeafBlock:                                        \l  %SwitchLeaf = icmp eq i32 %51, 0\l  %57 = getelementptr inbounds [1 x i8], [1 x i8]* @.str.490, i64 0, i64 0\l  br i1 %SwitchLeaf, label %58, label %NewDefault\l|{<s0>T|<s1>F}}"];
	Node0x18d5dd0:s0 -> Node0x18d5e20;
	Node0x18d5dd0:s1 -> Node0x18d62d0;
	Node0x18d5e20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%58:\l58:                                               \l  %59 = or i64 %54, %49\l  %60 = icmp ne i64 %59, 0\l  %61 = zext i1 %60 to i64\l  br label %98\l}"];
	Node0x18d5e20 -> Node0x18d6280;
	Node0x18d5e70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%62:\l62:                                               \l  %63 = icmp ne i64 %49, 0\l  %64 = icmp ne i64 %54, 0\l  %65 = and i1 %63, %64\l  %66 = zext i1 %65 to i64\l  br label %98\l}"];
	Node0x18d5e70 -> Node0x18d6280;
	Node0x18d5ec0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%67:\l67:                                               \l  %68 = icmp eq i64 %49, %54\l  %69 = zext i1 %68 to i64\l  br label %98\l}"];
	Node0x18d5ec0 -> Node0x18d6280;
	Node0x18d5f10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%70:\l70:                                               \l  %71 = icmp ne i64 %49, %54\l  %72 = zext i1 %71 to i64\l  br label %98\l}"];
	Node0x18d5f10 -> Node0x18d6280;
	Node0x18d5f60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%73:\l73:                                               \l  %74 = icmp uge i64 %49, %54\l  %75 = zext i1 %74 to i64\l  br label %98\l}"];
	Node0x18d5f60 -> Node0x18d6280;
	Node0x18d5fb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%76:\l76:                                               \l  %77 = icmp ule i64 %49, %54\l  %78 = zext i1 %77 to i64\l  br label %98\l}"];
	Node0x18d5fb0 -> Node0x18d6280;
	Node0x18d6000 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b99e70",label="{%79:\l79:                                               \l  %80 = icmp ugt i64 %49, %54\l  %81 = zext i1 %80 to i64\l  br label %98\l}"];
	Node0x18d6000 -> Node0x18d6280;
	Node0x18d6050 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%82:\l82:                                               \l  %83 = icmp ult i64 %49, %54\l  %84 = zext i1 %83 to i64\l  br label %98\l}"];
	Node0x18d6050 -> Node0x18d6280;
	Node0x18d60a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%85:\l85:                                               \l  %86 = add i64 %54, %49\l  br label %98\l}"];
	Node0x18d60a0 -> Node0x18d6280;
	Node0x18d60f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%87:\l87:                                               \l  %88 = sub i64 %49, %54\l  br label %98\l}"];
	Node0x18d60f0 -> Node0x18d6280;
	Node0x18d6140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%89:\l89:                                               \l  %90 = mul i64 %54, %49\l  br label %98\l}"];
	Node0x18d6140 -> Node0x18d6280;
	Node0x18d6190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%91:\l91:                                               \l  %92 = icmp eq i64 %54, 0\l  %93 = getelementptr inbounds [1 x i8], [1 x i8]* @.str.490, i64 0, i64 0\l  br i1 %92, label %NewDefault, label %94\l|{<s0>T|<s1>F}}"];
	Node0x18d6190:s0 -> Node0x18d62d0;
	Node0x18d6190:s1 -> Node0x18d61e0;
	Node0x18d61e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%94:\l94:                                               \l  %95 = urem i64 %49, %54\l  br label %98\l}"];
	Node0x18d61e0 -> Node0x18d6280;
	Node0x18d6230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ecd3c570",label="{%96:\l96:                                               \l  %97 = udiv i64 %49, %54\l  br label %98\l}"];
	Node0x18d6230 -> Node0x18d6280;
	Node0x18d6280 [shape=record,color="#b70d28ff", style=filled, fillcolor="#c32e3170",label="{%98:\l98:                                               \l  %99 = phi i64 [ %61, %58 ], [ %66, %62 ], [ %69, %67 ], [ %72, %70 ], [ %75,\l... %73 ], [ %78, %76 ], [ %81, %79 ], [ %84, %82 ], [ %86, %85 ], [ %88, %87 ],\l... [ %90, %89 ], [ %95, %94 ], [ %97, %96 ]\l  store i64 %99, i64* %47, align 8, !tbaa !1639\l  %100 = load i32, i32* %40, align 8, !tbaa !1635\l  %101 = sext i32 %100 to i64\l  %102 = getelementptr inbounds [14 x i8], [14 x i8]* @evalbinop.prec, i64 0,\l... i64 %101\l  %103 = load i8, i8* %102, align 1, !tbaa !1632\l  %104 = sext i8 %103 to i32\l  %105 = icmp sgt i32 %104, %2\l  br i1 %105, label %NodeBlock23, label %NewDefault\l|{<s0>T|<s1>F}}"];
	Node0x18d6280:s0 -> Node0x18d59c0;
	Node0x18d6280:s1 -> Node0x18d62d0;
	Node0x18d62d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{NewDefault:                                       \l  %106 = phi i8* [ %39, %37 ], [ %93, %91 ], [ %53, %98 ], [ %56, %LeafBlock15\l... ], [ %57, %LeafBlock ]\l  ret i8* %106\l}"];
}
