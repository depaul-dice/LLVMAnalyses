digraph "CFG for 'glob' function" {
	label="CFG for 'glob' function";

	Node0x1b01e30 [shape=record,label="{%4:\l  %5 = alloca %struct.match, align 8\l  %6 = alloca %struct.match*, align 8\l  %7 = alloca [4096 x i8], align 16\l  %8 = bitcast %struct.match* %5 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #40\l  %9 = bitcast %struct.match* %5 to i64*\l  store i64 0, i64* %9, align 8\l  %10 = bitcast %struct.match** %6 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #40\l  store %struct.match* %5, %struct.match** %6, align 8, !tbaa !1632\l  %11 = and i32 %1, 8\l  %12 = icmp eq i32 %11, 0\l  br i1 %12, label %16, label %13\l|{<s0>T|<s1>F}}"];
	Node0x1b01e30:s0 -> Node0x1b01ed0;
	Node0x1b01e30:s1 -> Node0x1b01e80;
	Node0x1b01e80 [shape=record,label="{%13:\l13:                                               \l  %14 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %3, i64 0, i32 2\l  %15 = load i64, i64* %14, align 8, !tbaa !1636\l  br label %16\l}"];
	Node0x1b01e80 -> Node0x1b01ed0;
	Node0x1b01ed0 [shape=record,label="{%16:\l16:                                               \l  %17 = phi i64 [ %15, %13 ], [ 0, %4 ]\l  %18 = getelementptr inbounds [4096 x i8], [4096 x i8]* %7, i64 0, i64 0\l  call void @llvm.lifetime.start.p0i8(i64 4096, i8* nonnull %18) #40\l  %19 = icmp eq i32 (i8*, i32)* %2, null\l  %20 = select i1 %19, i32 (i8*, i32)* @ignore_err, i32 (i8*, i32)* %2\l  %21 = and i32 %1, 32\l  %22 = icmp ne i32 %21, 0\l  br i1 %22, label %27, label %23\l|{<s0>T|<s1>F}}"];
	Node0x1b01ed0:s0 -> Node0x1b01f70;
	Node0x1b01ed0:s1 -> Node0x1b01f20;
	Node0x1b01f20 [shape=record,label="{%23:\l23:                                               \l  %24 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %3, i64 0, i32 2\l  store i64 %17, i64* %24, align 8, !tbaa !1636\l  %25 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %3, i64 0, i32 0\l  store i64 0, i64* %25, align 8, !tbaa !1640\l  %26 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %3, i64 0, i32 1\l  store i8** null, i8*** %26, align 8, !tbaa !1641\l  br label %27\l}"];
	Node0x1b01f20 -> Node0x1b01f70;
	Node0x1b01f70 [shape=record,label="{%27:\l27:                                               \l  %28 = load i8, i8* %0, align 1, !tbaa !1642\l  %29 = icmp eq i8 %28, 0\l  br i1 %29, label %30, label %32\l|{<s0>T|<s1>F}}"];
	Node0x1b01f70:s0 -> Node0x1b01fc0;
	Node0x1b01f70:s1 -> Node0x1b02010;
	Node0x1b01fc0 [shape=record,label="{%30:\l30:                                               \l  %31 = bitcast %struct.match** %6 to i64*\l  store i64 0, i64* %31, align 8, !tbaa !1632\l  br label %61\l}"];
	Node0x1b01fc0 -> Node0x1b02240;
	Node0x1b02010 [shape=record,label="{%32:\l32:                                               \l  %33 = call i8* @strdup(i8* nonnull %0) #41\l  %34 = icmp eq i8* %33, null\l  br i1 %34, label %160, label %35\l|{<s0>T|<s1>F}}"];
	Node0x1b02010:s0 -> Node0x1b027e0;
	Node0x1b02010:s1 -> Node0x1b02060;
	Node0x1b02060 [shape=record,label="{%35:\l35:                                               \l  store i8 0, i8* %18, align 16, !tbaa !1642\l  %36 = call fastcc i32 @do_glob(i8* nonnull %18, i64 0, i32 0, i8* nonnull\l... %33, i32 %1, i32 (i8*, i32)* %20, %struct.match** nonnull %6) #42\l  call void @free(i8* nonnull %33) #41\l  %37 = icmp eq i32 %36, 1\l  br i1 %37, label %38, label %48\l|{<s0>T|<s1>F}}"];
	Node0x1b02060:s0 -> Node0x1b020b0;
	Node0x1b02060:s1 -> Node0x1b02150;
	Node0x1b020b0 [shape=record,label="{%38:\l38:                                               \l  %39 = getelementptr inbounds %struct.match, %struct.match* %5, i64 0, i32 0\l  %40 = load %struct.match*, %struct.match** %39, align 8, !tbaa !1632\l  %41 = icmp eq %struct.match* %40, null\l  br i1 %41, label %160, label %42\l|{<s0>T|<s1>F}}"];
	Node0x1b020b0:s0 -> Node0x1b027e0;
	Node0x1b020b0:s1 -> Node0x1b02100;
	Node0x1b02100 [shape=record,label="{%42:\l42:                                               \l  %43 = phi %struct.match* [ %45, %42 ], [ %40, %38 ]\l  %44 = getelementptr inbounds %struct.match, %struct.match* %43, i64 0, i32 0\l  %45 = load %struct.match*, %struct.match** %44, align 8, !tbaa !1632\l  %46 = bitcast %struct.match* %43 to i8*\l  call void @free(i8* nonnull %46) #41\l  %47 = icmp eq %struct.match* %45, null\l  br i1 %47, label %160, label %42\l|{<s0>T|<s1>F}}"];
	Node0x1b02100:s0 -> Node0x1b027e0;
	Node0x1b02100:s1 -> Node0x1b02100;
	Node0x1b02150 [shape=record,label="{%48:\l48:                                               \l  %49 = load i64, i64* %9, align 8, !tbaa !1632\l  %50 = bitcast %struct.match** %6 to i64*\l  store i64 %49, i64* %50, align 8, !tbaa !1632\l  %51 = icmp eq i64 %49, 0\l  br i1 %51, label %61, label %52\l|{<s0>T|<s1>F}}"];
	Node0x1b02150:s0 -> Node0x1b02240;
	Node0x1b02150:s1 -> Node0x1b021a0;
	Node0x1b021a0 [shape=record,label="{%52:\l52:                                               \l  %53 = phi i64 [ %57, %52 ], [ 0, %48 ]\l  %54 = phi i64 [ %56, %52 ], [ %49, %48 ]\l  %55 = inttoptr i64 %54 to i64*\l  %56 = load i64, i64* %55, align 8, !tbaa !1632\l  store i64 %56, i64* %50, align 8, !tbaa !1632\l  %57 = add i64 %53, 1\l  %58 = icmp eq i64 %56, 0\l  br i1 %58, label %59, label %52\l|{<s0>T|<s1>F}}"];
	Node0x1b021a0:s0 -> Node0x1b021f0;
	Node0x1b021a0:s1 -> Node0x1b021a0;
	Node0x1b021f0 [shape=record,label="{%59:\l59:                                               \l  %60 = icmp eq i64 %57, 0\l  br i1 %60, label %61, label %70\l|{<s0>T|<s1>F}}"];
	Node0x1b021f0:s0 -> Node0x1b02240;
	Node0x1b021f0:s1 -> Node0x1b022e0;
	Node0x1b02240 [shape=record,label="{%61:\l61:                                               \l  %62 = phi i32 [ %36, %59 ], [ 0, %30 ], [ %36, %48 ]\l  %63 = phi i64* [ %50, %59 ], [ %31, %30 ], [ %50, %48 ]\l  %64 = and i32 %1, 16\l  %65 = icmp eq i32 %64, 0\l  br i1 %65, label %160, label %66\l|{<s0>T|<s1>F}}"];
	Node0x1b02240:s0 -> Node0x1b027e0;
	Node0x1b02240:s1 -> Node0x1b02290;
	Node0x1b02290 [shape=record,label="{%66:\l66:                                               \l  store %struct.match* %5, %struct.match** %6, align 8, !tbaa !1632\l  %67 = call i64 @strlen(i8* nonnull %0) #41\l  %68 = call fastcc i32 @append(%struct.match** nonnull %6, i8* nonnull %0,\l... i64 %67, i32 0) #42\l  %69 = icmp eq i32 %68, 0\l  br i1 %69, label %70, label %160\l|{<s0>T|<s1>F}}"];
	Node0x1b02290:s0 -> Node0x1b022e0;
	Node0x1b02290:s1 -> Node0x1b027e0;
	Node0x1b022e0 [shape=record,label="{%70:\l70:                                               \l  %71 = phi i32 [ %36, %59 ], [ %62, %66 ]\l  %72 = phi i64* [ %50, %59 ], [ %63, %66 ]\l  %73 = phi i64 [ %57, %59 ], [ 1, %66 ]\l  br i1 %22, label %74, label %98\l|{<s0>T|<s1>F}}"];
	Node0x1b022e0:s0 -> Node0x1b02330;
	Node0x1b022e0:s1 -> Node0x1b02470;
	Node0x1b02330 [shape=record,label="{%74:\l74:                                               \l  %75 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %3, i64 0, i32 1\l  %76 = bitcast i8*** %75 to i8**\l  %77 = load i8*, i8** %76, align 8, !tbaa !1641\l  %78 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %3, i64 0, i32 0\l  %79 = load i64, i64* %78, align 8, !tbaa !1640\l  %80 = add i64 %79, %17\l  %81 = add i64 %80, %73\l  %82 = shl i64 %81, 3\l  %83 = add i64 %82, 8\l  %84 = call i8* @realloc(i8* %77, i64 %83) #41\l  %85 = icmp eq i8* %84, null\l  br i1 %85, label %86, label %96\l|{<s0>T|<s1>F}}"];
	Node0x1b02330:s0 -> Node0x1b02380;
	Node0x1b02330:s1 -> Node0x1b02420;
	Node0x1b02380 [shape=record,label="{%86:\l86:                                               \l  %87 = getelementptr inbounds %struct.match, %struct.match* %5, i64 0, i32 0\l  %88 = load %struct.match*, %struct.match** %87, align 8, !tbaa !1632\l  %89 = icmp eq %struct.match* %88, null\l  br i1 %89, label %160, label %90\l|{<s0>T|<s1>F}}"];
	Node0x1b02380:s0 -> Node0x1b027e0;
	Node0x1b02380:s1 -> Node0x1b023d0;
	Node0x1b023d0 [shape=record,label="{%90:\l90:                                               \l  %91 = phi %struct.match* [ %93, %90 ], [ %88, %86 ]\l  %92 = getelementptr inbounds %struct.match, %struct.match* %91, i64 0, i32 0\l  %93 = load %struct.match*, %struct.match** %92, align 8, !tbaa !1632\l  %94 = bitcast %struct.match* %91 to i8*\l  call void @free(i8* nonnull %94) #41\l  %95 = icmp eq %struct.match* %93, null\l  br i1 %95, label %160, label %90\l|{<s0>T|<s1>F}}"];
	Node0x1b023d0:s0 -> Node0x1b027e0;
	Node0x1b023d0:s1 -> Node0x1b023d0;
	Node0x1b02420 [shape=record,label="{%96:\l96:                                               \l  store i8* %84, i8** %76, align 8, !tbaa !1641\l  %97 = bitcast i8* %84 to i8**\l  br label %124\l}"];
	Node0x1b02420 -> Node0x1b02600;
	Node0x1b02470 [shape=record,label="{%98:\l98:                                               \l  %99 = add i64 %73, %17\l  %100 = shl i64 %99, 3\l  %101 = add i64 %100, 8\l  %102 = call i8* @malloc(i64 %101) #41\l  %103 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %3, i64 0, i32\l... 1\l  %104 = bitcast i8*** %103 to i8**\l  store i8* %102, i8** %104, align 8, !tbaa !1641\l  %105 = icmp eq i8* %102, null\l  %106 = bitcast i8* %102 to i8**\l  br i1 %105, label %109, label %107\l|{<s0>T|<s1>F}}"];
	Node0x1b02470:s0 -> Node0x1b02510;
	Node0x1b02470:s1 -> Node0x1b024c0;
	Node0x1b024c0 [shape=record,label="{%107:\l107:                                              \l  %108 = icmp eq i64 %17, 0\l  br i1 %108, label %124, label %119\l|{<s0>T|<s1>F}}"];
	Node0x1b024c0:s0 -> Node0x1b02600;
	Node0x1b024c0:s1 -> Node0x1b025b0;
	Node0x1b02510 [shape=record,label="{%109:\l109:                                              \l  %110 = getelementptr inbounds %struct.match, %struct.match* %5, i64 0, i32 0\l  %111 = load %struct.match*, %struct.match** %110, align 8, !tbaa !1632\l  %112 = icmp eq %struct.match* %111, null\l  br i1 %112, label %160, label %113\l|{<s0>T|<s1>F}}"];
	Node0x1b02510:s0 -> Node0x1b027e0;
	Node0x1b02510:s1 -> Node0x1b02560;
	Node0x1b02560 [shape=record,label="{%113:\l113:                                              \l  %114 = phi %struct.match* [ %116, %113 ], [ %111, %109 ]\l  %115 = getelementptr inbounds %struct.match, %struct.match* %114, i64 0, i32\l... 0\l  %116 = load %struct.match*, %struct.match** %115, align 8, !tbaa !1632\l  %117 = bitcast %struct.match* %114 to i8*\l  call void @free(i8* nonnull %117) #41\l  %118 = icmp eq %struct.match* %116, null\l  br i1 %118, label %160, label %113\l|{<s0>T|<s1>F}}"];
	Node0x1b02560:s0 -> Node0x1b027e0;
	Node0x1b02560:s1 -> Node0x1b02560;
	Node0x1b025b0 [shape=record,label="{%119:\l119:                                              \l  %120 = phi i64 [ %122, %119 ], [ 0, %107 ]\l  %121 = getelementptr inbounds i8*, i8** %106, i64 %120\l  store i8* null, i8** %121, align 8, !tbaa !1632\l  %122 = add nuw i64 %120, 1\l  %123 = icmp eq i64 %122, %17\l  br i1 %123, label %128, label %119\l|{<s0>T|<s1>F}}"];
	Node0x1b025b0:s0 -> Node0x1b02650;
	Node0x1b025b0:s1 -> Node0x1b025b0;
	Node0x1b02600 [shape=record,label="{%124:\l124:                                              \l  %125 = phi i8** [ %106, %107 ], [ %97, %96 ]\l  %126 = phi i64 [ 0, %107 ], [ %80, %96 ]\l  %127 = load i64, i64* %9, align 8, !tbaa !1632\l  store i64 %127, i64* %72, align 8, !tbaa !1632\l  br label %131\l}"];
	Node0x1b02600 -> Node0x1b026a0;
	Node0x1b02650 [shape=record,label="{%128:\l128:                                              \l  %129 = load i64, i64* %9, align 8, !tbaa !1632\l  store i64 %129, i64* %72, align 8, !tbaa !1632\l  %130 = icmp eq i64 %73, 0\l  br i1 %130, label %146, label %131\l|{<s0>T|<s1>F}}"];
	Node0x1b02650:s0 -> Node0x1b02740;
	Node0x1b02650:s1 -> Node0x1b026a0;
	Node0x1b026a0 [shape=record,label="{%131:\l131:                                              \l  %132 = phi i64 [ %127, %124 ], [ %129, %128 ]\l  %133 = phi i64 [ %126, %124 ], [ %17, %128 ]\l  %134 = phi i8** [ %125, %124 ], [ %106, %128 ]\l  br label %135\l}"];
	Node0x1b026a0 -> Node0x1b026f0;
	Node0x1b026f0 [shape=record,label="{%135:\l135:                                              \l  %136 = phi i64 [ %132, %131 ], [ %143, %135 ]\l  %137 = phi i64 [ 0, %131 ], [ %144, %135 ]\l  %138 = inttoptr i64 %136 to %struct.match*\l  %139 = getelementptr inbounds %struct.match, %struct.match* %138, i64 0, i32\l... 1, i64 0\l  %140 = add i64 %137, %133\l  %141 = getelementptr inbounds i8*, i8** %134, i64 %140\l  store i8* %139, i8** %141, align 8, !tbaa !1632\l  %142 = inttoptr i64 %136 to i64*\l  %143 = load i64, i64* %142, align 8, !tbaa !1632\l  store i64 %143, i64* %72, align 8, !tbaa !1632\l  %144 = add nuw i64 %137, 1\l  %145 = icmp ult i64 %144, %73\l  br i1 %145, label %135, label %146\l|{<s0>T|<s1>F}}"];
	Node0x1b026f0:s0 -> Node0x1b026f0;
	Node0x1b026f0:s1 -> Node0x1b02740;
	Node0x1b02740 [shape=record,label="{%146:\l146:                                              \l  %147 = phi i64 [ %17, %128 ], [ %133, %135 ]\l  %148 = phi i8** [ %106, %128 ], [ %134, %135 ]\l  %149 = phi i64 [ 0, %128 ], [ %144, %135 ]\l  %150 = add i64 %149, %147\l  %151 = getelementptr inbounds i8*, i8** %148, i64 %150\l  store i8* null, i8** %151, align 8, !tbaa !1632\l  %152 = getelementptr inbounds %struct.glob_t, %struct.glob_t* %3, i64 0, i32\l... 0\l  %153 = load i64, i64* %152, align 8, !tbaa !1640\l  %154 = add i64 %153, %73\l  store i64 %154, i64* %152, align 8, !tbaa !1640\l  %155 = and i32 %1, 4\l  %156 = icmp eq i32 %155, 0\l  br i1 %156, label %157, label %160\l|{<s0>T|<s1>F}}"];
	Node0x1b02740:s0 -> Node0x1b02790;
	Node0x1b02740:s1 -> Node0x1b027e0;
	Node0x1b02790 [shape=record,label="{%157:\l157:                                              \l  %158 = getelementptr inbounds i8*, i8** %148, i64 %147\l  %159 = bitcast i8** %158 to i8*\l  call void @qsort(i8* %159, i64 %73, i64 8, i32 (i8*, i8*)* nonnull @sort) #41\l  br label %160\l}"];
	Node0x1b02790 -> Node0x1b027e0;
	Node0x1b027e0 [shape=record,label="{%160:\l160:                                              \l  %161 = phi i32 [ 1, %66 ], [ 3, %61 ], [ %71, %146 ], [ %71, %157 ], [ 1,\l... %32 ], [ 1, %38 ], [ 1, %109 ], [ 1, %86 ], [ 1, %90 ], [ 1, %113 ], [ 1, %42\l... ]\l  call void @llvm.lifetime.end.p0i8(i64 4096, i8* nonnull %18) #40\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #40\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #40\l  ret i32 %161\l}"];
}
