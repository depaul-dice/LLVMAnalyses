digraph "CFG for 'copy_addr' function" {
	label="CFG for 'copy_addr' function";

	Node0x1ec2140 [shape=record,label="{%6:\l  switch i32 %1, label %36 [\l    i32 2, label %7\l    i32 10, label %10\l  ]\l|{<s0>def|<s1>2|<s2>10}}"];
	Node0x1ec2140:s0 -> Node0x1ec23c0;
	Node0x1ec2140:s1 -> Node0x1ec2190;
	Node0x1ec2140:s2 -> Node0x1ec21e0;
	Node0x1ec2190 [shape=record,label="{%7:\l7:                                                \l  %8 = getelementptr inbounds %union.sockany, %union.sockany* %2, i64 0, i32\l... 0, i32 2\l  %9 = bitcast i32* %8 to i8*\l  br label %27\l}"];
	Node0x1ec2190 -> Node0x1ec2320;
	Node0x1ec21e0 [shape=record,label="{%10:\l10:                                               \l  %11 = getelementptr inbounds %union.sockany, %union.sockany* %2, i64 0, i32\l... 0, i32 3\l  %12 = bitcast i16* %11 to i8*\l  %13 = load i8, i8* %3, align 1, !tbaa !1632\l  switch i8 %13, label %27 [\l    i8 -2, label %14\l    i8 -1, label %19\l  ]\l|{<s0>def|<s1>-2|<s2>-1}}"];
	Node0x1ec21e0:s0 -> Node0x1ec2320;
	Node0x1ec21e0:s1 -> Node0x1ec2230;
	Node0x1ec21e0:s2 -> Node0x1ec2280;
	Node0x1ec2230 [shape=record,label="{%14:\l14:                                               \l  %15 = getelementptr inbounds i8, i8* %3, i64 1\l  %16 = load i8, i8* %15, align 1, !tbaa !1632\l  %17 = and i8 %16, -64\l  %18 = icmp eq i8 %17, -128\l  br i1 %18, label %24, label %27\l|{<s0>T|<s1>F}}"];
	Node0x1ec2230:s0 -> Node0x1ec22d0;
	Node0x1ec2230:s1 -> Node0x1ec2320;
	Node0x1ec2280 [shape=record,label="{%19:\l19:                                               \l  %20 = getelementptr inbounds i8, i8* %3, i64 1\l  %21 = load i8, i8* %20, align 1, !tbaa !1632\l  %22 = and i8 %21, 15\l  %23 = icmp eq i8 %22, 2\l  br i1 %23, label %24, label %27\l|{<s0>T|<s1>F}}"];
	Node0x1ec2280:s0 -> Node0x1ec22d0;
	Node0x1ec2280:s1 -> Node0x1ec2320;
	Node0x1ec22d0 [shape=record,label="{%24:\l24:                                               \l  %25 = getelementptr inbounds %union.sockany, %union.sockany* %2, i64 0, i32\l... 0, i32 6, i64 12\l  %26 = bitcast i8* %25 to i32*\l  store i32 %5, i32* %26, align 4, !tbaa !1632\l  br label %27\l}"];
	Node0x1ec22d0 -> Node0x1ec2320;
	Node0x1ec2320 [shape=record,label="{%27:\l27:                                               \l  %28 = phi i8* [ %12, %24 ], [ %12, %19 ], [ %9, %7 ], [ %12, %14 ], [ %12,\l... %10 ]\l  %29 = phi i64 [ 16, %24 ], [ 16, %19 ], [ 4, %7 ], [ 16, %14 ], [ 16, %10 ]\l  %30 = icmp ugt i64 %29, %4\l  br i1 %30, label %36, label %31\l|{<s0>T|<s1>F}}"];
	Node0x1ec2320:s0 -> Node0x1ec23c0;
	Node0x1ec2320:s1 -> Node0x1ec2370;
	Node0x1ec2370 [shape=record,label="{%31:\l31:                                               \l  %32 = trunc i32 %1 to i16\l  %33 = getelementptr %union.sockany, %union.sockany* %2, i64 0, i32 0, i32 0\l  store i16 %32, i16* %33, align 4, !tbaa !1632\l  %34 = tail call i8* @memcpy(i8* nonnull %28, i8* %3, i64 %29) #40\l  %35 = bitcast %struct.sockaddr** %0 to %union.sockany**\l  store %union.sockany* %2, %union.sockany** %35, align 8, !tbaa !1635\l  br label %36\l}"];
	Node0x1ec2370 -> Node0x1ec23c0;
	Node0x1ec23c0 [shape=record,label="{%36:\l36:                                               \l  ret void\l}"];
}
