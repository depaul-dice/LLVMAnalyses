digraph "CFG for '__do_des' function" {
	label="CFG for '__do_des' function";

	Node0x1665a20 [shape=record,label="{%7:\l  %8 = or i32 %1, %0\l  %9 = icmp eq i32 %8, 0\l  br i1 %9, label %37, label %10\l|{<s0>T|<s1>F}}"];
	Node0x1665a20:s0 -> Node0x1665be0;
	Node0x1665a20:s1 -> Node0x1665b90;
	Node0x1665b90 [shape=record,label="{%10:\l10:                                               \l  %11 = phi i64 [ %34, %10 ], [ 0, %7 ]\l  %12 = phi i32 [ %27, %10 ], [ 0, %7 ]\l  %13 = phi i32 [ %35, %10 ], [ 28, %7 ]\l  %14 = phi i32 [ %33, %10 ], [ 0, %7 ]\l  %15 = lshr i32 %0, %13\l  %16 = and i32 %15, 15\l  %17 = zext i32 %16 to i64\l  %18 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]*\l... @ip_maskl, i64 0, i64 %11, i64 %17\l  %19 = load i32, i32* %18, align 4, !tbaa !1632\l  %20 = add nuw nsw i64 %11, 8\l  %21 = lshr i32 %1, %13\l  %22 = and i32 %21, 15\l  %23 = zext i32 %22 to i64\l  %24 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]*\l... @ip_maskl, i64 0, i64 %20, i64 %23\l  %25 = load i32, i32* %24, align 4, !tbaa !1632\l  %26 = or i32 %19, %12\l  %27 = or i32 %26, %25\l  %28 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]*\l... @ip_maskr, i64 0, i64 %11, i64 %17\l  %29 = load i32, i32* %28, align 4, !tbaa !1632\l  %30 = getelementptr inbounds [16 x [16 x i32]], [16 x [16 x i32]]*\l... @ip_maskr, i64 0, i64 %20, i64 %23\l  %31 = load i32, i32* %30, align 4, !tbaa !1632\l  %32 = or i32 %29, %14\l  %33 = or i32 %32, %31\l  %34 = add nuw nsw i64 %11, 1\l  %35 = add nsw i32 %13, -4\l  %36 = icmp eq i64 %34, 8\l  br i1 %36, label %37, label %10\l|{<s0>T|<s1>F}}"];
	Node0x1665b90:s0 -> Node0x1665be0;
	Node0x1665b90:s1 -> Node0x1665b90;
	Node0x1665be0 [shape=record,label="{%37:\l37:                                               \l  %38 = phi i32 [ 0, %7 ], [ %33, %10 ]\l  %39 = phi i32 [ 0, %7 ], [ %27, %10 ]\l  %40 = icmp eq i32 %4, 0\l  br i1 %40, label %47, label %41\l|{<s0>T|<s1>F}}"];
	Node0x1665be0:s0 -> Node0x1665cd0;
	Node0x1665be0:s1 -> Node0x1665c30;
	Node0x1665c30 [shape=record,label="{%41:\l41:                                               \l  %42 = getelementptr inbounds %struct.expanded_key, %struct.expanded_key* %6,\l... i64 0, i32 0, i64 0\l  %43 = getelementptr inbounds %struct.expanded_key, %struct.expanded_key* %6,\l... i64 0, i32 1, i64 0\l  br label %50\l}"];
	Node0x1665c30 -> Node0x1665d20;
	Node0x1665c80 [shape=record,label="{%44:\l44:                                               \l  %45 = add i32 %51, -1\l  %46 = icmp eq i32 %45, 0\l  br i1 %46, label %47, label %50\l|{<s0>T|<s1>F}}"];
	Node0x1665c80:s0 -> Node0x1665cd0;
	Node0x1665c80:s1 -> Node0x1665d20;
	Node0x1665cd0 [shape=record,label="{%47:\l47:                                               \l  %48 = phi i32 [ %38, %37 ], [ %59, %44 ]\l  %49 = phi i32 [ %39, %37 ], [ %141, %44 ]\l  br label %143\l}"];
	Node0x1665cd0 -> Node0x1665dc0;
	Node0x1665d20 [shape=record,label="{%50:\l50:                                               \l  %51 = phi i32 [ %4, %41 ], [ %45, %44 ]\l  %52 = phi i32 [ %39, %41 ], [ %141, %44 ]\l  %53 = phi i32 [ %38, %41 ], [ %59, %44 ]\l  br label %54\l}"];
	Node0x1665d20 -> Node0x1665d70;
	Node0x1665d70 [shape=record,label="{%54:\l54:                                               \l  %55 = phi i32 [ %52, %50 ], [ %59, %54 ]\l  %56 = phi i32* [ %43, %50 ], [ %94, %54 ]\l  %57 = phi i32* [ %42, %50 ], [ %90, %54 ]\l  %58 = phi i32 [ 16, %50 ], [ %60, %54 ]\l  %59 = phi i32 [ %53, %50 ], [ %141, %54 ]\l  %60 = add nsw i32 %58, -1\l  %61 = shl i32 %59, 23\l  %62 = and i32 %61, 8388608\l  %63 = lshr i32 %59, 9\l  %64 = and i32 %63, 8126464\l  %65 = or i32 %62, %64\l  %66 = lshr i32 %59, 11\l  %67 = and i32 %66, 258048\l  %68 = or i32 %65, %67\l  %69 = lshr i32 %59, 13\l  %70 = and i32 %69, 4032\l  %71 = or i32 %68, %70\l  %72 = lshr i32 %59, 15\l  %73 = and i32 %72, 63\l  %74 = or i32 %71, %73\l  %75 = shl i32 %59, 7\l  %76 = and i32 %75, 16515072\l  %77 = shl i32 %59, 5\l  %78 = and i32 %77, 258048\l  %79 = shl i32 %59, 3\l  %80 = and i32 %79, 4032\l  %81 = shl i32 %59, 1\l  %82 = and i32 %81, 62\l  %83 = lshr i32 %59, 31\l  %84 = or i32 %78, %83\l  %85 = or i32 %84, %76\l  %86 = or i32 %85, %80\l  %87 = or i32 %86, %82\l  %88 = xor i32 %74, %87\l  %89 = and i32 %88, %5\l  %90 = getelementptr inbounds i32, i32* %57, i64 1\l  %91 = load i32, i32* %57, align 4, !tbaa !1632\l  %92 = xor i32 %89, %74\l  %93 = xor i32 %92, %91\l  %94 = getelementptr inbounds i32, i32* %56, i64 1\l  %95 = load i32, i32* %56, align 4, !tbaa !1632\l  %96 = xor i32 %89, %87\l  %97 = xor i32 %96, %95\l  %98 = lshr i32 %93, 18\l  %99 = zext i32 %98 to i64\l  %100 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @psbox,\l... i64 0, i64 0, i64 %99\l  %101 = load i32, i32* %100, align 4, !tbaa !1632\l  %102 = lshr i32 %93, 12\l  %103 = and i32 %102, 63\l  %104 = zext i32 %103 to i64\l  %105 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @psbox,\l... i64 0, i64 1, i64 %104\l  %106 = load i32, i32* %105, align 4, !tbaa !1632\l  %107 = or i32 %106, %101\l  %108 = lshr i32 %93, 6\l  %109 = and i32 %108, 63\l  %110 = zext i32 %109 to i64\l  %111 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @psbox,\l... i64 0, i64 2, i64 %110\l  %112 = load i32, i32* %111, align 4, !tbaa !1632\l  %113 = or i32 %107, %112\l  %114 = and i32 %93, 63\l  %115 = zext i32 %114 to i64\l  %116 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @psbox,\l... i64 0, i64 3, i64 %115\l  %117 = load i32, i32* %116, align 4, !tbaa !1632\l  %118 = or i32 %113, %117\l  %119 = lshr i32 %97, 18\l  %120 = zext i32 %119 to i64\l  %121 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @psbox,\l... i64 0, i64 4, i64 %120\l  %122 = load i32, i32* %121, align 4, !tbaa !1632\l  %123 = or i32 %118, %122\l  %124 = lshr i32 %97, 12\l  %125 = and i32 %124, 63\l  %126 = zext i32 %125 to i64\l  %127 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @psbox,\l... i64 0, i64 5, i64 %126\l  %128 = load i32, i32* %127, align 4, !tbaa !1632\l  %129 = or i32 %123, %128\l  %130 = lshr i32 %97, 6\l  %131 = and i32 %130, 63\l  %132 = zext i32 %131 to i64\l  %133 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @psbox,\l... i64 0, i64 6, i64 %132\l  %134 = load i32, i32* %133, align 4, !tbaa !1632\l  %135 = or i32 %129, %134\l  %136 = and i32 %97, 63\l  %137 = zext i32 %136 to i64\l  %138 = getelementptr inbounds [8 x [64 x i32]], [8 x [64 x i32]]* @psbox,\l... i64 0, i64 7, i64 %137\l  %139 = load i32, i32* %138, align 4, !tbaa !1632\l  %140 = or i32 %135, %139\l  %141 = xor i32 %140, %55\l  %142 = icmp eq i32 %60, 0\l  br i1 %142, label %44, label %54\l|{<s0>T|<s1>F}}"];
	Node0x1665d70:s0 -> Node0x1665c80;
	Node0x1665d70:s1 -> Node0x1665d70;
	Node0x1665dc0 [shape=record,label="{%143:\l143:                                              \l  %144 = phi i64 [ 0, %47 ], [ %174, %143 ]\l  %145 = phi i32 [ 0, %47 ], [ %160, %143 ]\l  %146 = phi i32 [ 0, %47 ], [ %173, %143 ]\l  %147 = phi i32 [ 28, %47 ], [ %175, %143 ]\l  %148 = lshr i32 %49, %147\l  %149 = and i32 %148, 15\l  %150 = zext i32 %149 to i64\l  %151 = getelementptr inbounds [8 x [16 x i32]], [8 x [16 x i32]]* @fp_maskl,\l... i64 0, i64 %144, i64 %150\l  %152 = load i32, i32* %151, align 4, !tbaa !1632\l  %153 = add nuw nsw i64 %144, 4\l  %154 = lshr i32 %48, %147\l  %155 = and i32 %154, 15\l  %156 = zext i32 %155 to i64\l  %157 = getelementptr inbounds [8 x [16 x i32]], [8 x [16 x i32]]* @fp_maskl,\l... i64 0, i64 %153, i64 %156\l  %158 = load i32, i32* %157, align 4, !tbaa !1632\l  %159 = or i32 %152, %145\l  %160 = or i32 %159, %158\l  %161 = add nsw i32 %147, -4\l  %162 = lshr i32 %49, %161\l  %163 = and i32 %162, 15\l  %164 = zext i32 %163 to i64\l  %165 = getelementptr inbounds [8 x [16 x i32]], [8 x [16 x i32]]* @fp_maskl,\l... i64 0, i64 %144, i64 %164\l  %166 = load i32, i32* %165, align 4, !tbaa !1632\l  %167 = lshr i32 %48, %161\l  %168 = and i32 %167, 15\l  %169 = zext i32 %168 to i64\l  %170 = getelementptr inbounds [8 x [16 x i32]], [8 x [16 x i32]]* @fp_maskl,\l... i64 0, i64 %153, i64 %169\l  %171 = load i32, i32* %170, align 4, !tbaa !1632\l  %172 = or i32 %166, %146\l  %173 = or i32 %172, %171\l  %174 = add nuw nsw i64 %144, 1\l  %175 = add nsw i32 %147, -8\l  %176 = icmp eq i64 %174, 4\l  br i1 %176, label %177, label %143\l|{<s0>T|<s1>F}}"];
	Node0x1665dc0:s0 -> Node0x1665e10;
	Node0x1665dc0:s1 -> Node0x1665dc0;
	Node0x1665e10 [shape=record,label="{%177:\l177:                                              \l  store i32 %173, i32* %2, align 4, !tbaa !1632\l  store i32 %160, i32* %3, align 4, !tbaa !1632\l  ret void\l}"];
}
