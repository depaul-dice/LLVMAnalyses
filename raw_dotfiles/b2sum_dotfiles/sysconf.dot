digraph "CFG for 'sysconf' function" {
	label="CFG for 'sysconf' function";

	Node0x191d7e0 [shape=record,label="{%1:\l  %2 = alloca %struct.timeval, align 8\l  %3 = alloca [128 x i8], align 16\l  %4 = alloca %struct.sysinfo, align 8\l  %5 = icmp ugt i32 %0, 248\l  br i1 %5, label %11, label %6\l|{<s0>T|<s1>F}}"];
	Node0x191d7e0:s0 -> Node0x191e3d0;
	Node0x191d7e0:s1 -> Node0x191e380;
	Node0x191e380 [shape=record,label="{%6:\l6:                                                \l  %7 = zext i32 %0 to i64\l  %8 = getelementptr inbounds [249 x i16], [249 x i16]* @sysconf.values, i64\l... 0, i64 %7\l  %9 = load i16, i16* %8, align 2, !tbaa !1632\l  %10 = icmp eq i16 %9, 0\l  br i1 %10, label %11, label %13\l|{<s0>T|<s1>F}}"];
	Node0x191e380:s0 -> Node0x191e3d0;
	Node0x191e380:s1 -> Node0x191e420;
	Node0x191e3d0 [shape=record,label="{%11:\l11:                                               \l  %12 = tail call i32* @___errno_location() #40\l  store i32 22, i32* %12, align 4, !tbaa !1636\l  br label %83\l}"];
	Node0x191e3d0 -> Node0x191eab0;
	Node0x191e420 [shape=record,label="{%13:\l13:                                               \l  %14 = icmp sgt i16 %9, -2\l  br i1 %14, label %15, label %17\l|{<s0>T|<s1>F}}"];
	Node0x191e420:s0 -> Node0x191e470;
	Node0x191e420:s1 -> Node0x191e4c0;
	Node0x191e470 [shape=record,label="{%15:\l15:                                               \l  %16 = sext i16 %9 to i64\l  br label %83\l}"];
	Node0x191e470 -> Node0x191eab0;
	Node0x191e4c0 [shape=record,label="{%17:\l17:                                               \l  switch i32 %0, label %29 [\l    i32 4, label %18\l    i32 1, label %18\l  ]\l|{<s0>def|<s1>4|<s2>1}}"];
	Node0x191e4c0:s0 -> Node0x191e560;
	Node0x191e4c0:s1 -> Node0x191e510;
	Node0x191e4c0:s2 -> Node0x191e510;
	Node0x191e510 [shape=record,label="{%18:\l18:                                               \l  %19 = bitcast %struct.timeval* %2 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #41\l  %20 = and i16 %9, 16383\l  %21 = zext i16 %20 to i32\l  %22 = call i32 @getrlimit(i32 %21, %struct.timeval* nonnull %2) #40\l  %23 = getelementptr inbounds %struct.timeval, %struct.timeval* %2, i64 0,\l... i32 0\l  %24 = load i64, i64* %23, align 8, !tbaa !1638\l  %25 = icmp eq i64 %24, -1\l  %26 = icmp ult i64 %24, 9223372036854775807\l  %27 = select i1 %26, i64 %24, i64 9223372036854775807\l  %28 = select i1 %25, i64 -1, i64 %27\l  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #41\l  br label %83\l}"];
	Node0x191e510 -> Node0x191eab0;
	Node0x191e560 [shape=record,label="{%29:\l29:                                               \l  %30 = trunc i16 %9 to i8\l  switch i8 %30, label %81 [\l    i8 1, label %83\l    i8 2, label %31\l    i8 3, label %32\l    i8 4, label %33\l    i8 5, label %34\l    i8 11, label %35\l    i8 6, label %36\l    i8 7, label %36\l    i8 8, label %60\l    i8 9, label %60\l    i8 10, label %80\l  ]\l|{<s0>def|<s1>1|<s2>2|<s3>3|<s4>4|<s5>5|<s6>11|<s7>6|<s8>7|<s9>8|<s10>9|<s11>10}}"];
	Node0x191e560:s0 -> Node0x191ea60;
	Node0x191e560:s1 -> Node0x191eab0;
	Node0x191e560:s2 -> Node0x191e5b0;
	Node0x191e560:s3 -> Node0x191e600;
	Node0x191e560:s4 -> Node0x191e650;
	Node0x191e560:s5 -> Node0x191e6a0;
	Node0x191e560:s6 -> Node0x191e6f0;
	Node0x191e560:s7 -> Node0x191e740;
	Node0x191e560:s8 -> Node0x191e740;
	Node0x191e560:s9 -> Node0x191e920;
	Node0x191e560:s10 -> Node0x191e920;
	Node0x191e560:s11 -> Node0x191ea10;
	Node0x191e5b0 [shape=record,label="{%31:\l31:                                               \l  br label %83\l}"];
	Node0x191e5b0 -> Node0x191eab0;
	Node0x191e600 [shape=record,label="{%32:\l32:                                               \l  br label %83\l}"];
	Node0x191e600 -> Node0x191eab0;
	Node0x191e650 [shape=record,label="{%33:\l33:                                               \l  br label %83\l}"];
	Node0x191e650 -> Node0x191eab0;
	Node0x191e6a0 [shape=record,label="{%34:\l34:                                               \l  br label %83\l}"];
	Node0x191e6a0 -> Node0x191eab0;
	Node0x191e6f0 [shape=record,label="{%35:\l35:                                               \l  br label %83\l}"];
	Node0x191e6f0 -> Node0x191eab0;
	Node0x191e740 [shape=record,label="{%36:\l36:                                               \l  %37 = getelementptr inbounds [128 x i8], [128 x i8]* %3, i64 0, i64 0\l  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 dereferenceable(128)\l... %37, i8 0, i64 128, i1 false)\l  store i8 1, i8* %37, align 16\l  %38 = ptrtoint [128 x i8]* %3 to i64\l  %39 = call i64 asm sideeffect \"syscall\",\l... \"=\{ax\},\{ax\},\{di\},\{si\},\{dx\},~\{rcx\},~\{r11\},~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}\l...\"(i64 204, i64 0, i64 128, i64 %38) #41, !srcloc !1641\l  br label %40\l}"];
	Node0x191e740 -> Node0x191e790;
	Node0x191e790 [shape=record,label="{%40:\l40:                                               \l  %41 = phi i64 [ 0, %36 ], [ %56, %54 ]\l  %42 = phi i32 [ 0, %36 ], [ %55, %54 ]\l  %43 = getelementptr inbounds [128 x i8], [128 x i8]* %3, i64 0, i64 %41\l  %44 = load i8, i8* %43, align 1, !tbaa !1642\l  %45 = icmp eq i8 %44, 0\l  br i1 %45, label %54, label %46\l|{<s0>T|<s1>F}}"];
	Node0x191e790:s0 -> Node0x191e880;
	Node0x191e790:s1 -> Node0x191e7e0;
	Node0x191e7e0 [shape=record,label="{%46:\l46:                                               \l  %47 = phi i8 [ %50, %46 ], [ %44, %40 ]\l  %48 = phi i32 [ %51, %46 ], [ %42, %40 ]\l  %49 = add i8 %47, -1\l  %50 = and i8 %49, %47\l  %51 = add nsw i32 %48, 1\l  %52 = icmp eq i8 %50, 0\l  br i1 %52, label %53, label %46\l|{<s0>T|<s1>F}}"];
	Node0x191e7e0:s0 -> Node0x191e830;
	Node0x191e7e0:s1 -> Node0x191e7e0;
	Node0x191e830 [shape=record,label="{%53:\l53:                                               \l  store i8 0, i8* %43, align 1, !tbaa !1642\l  br label %54\l}"];
	Node0x191e830 -> Node0x191e880;
	Node0x191e880 [shape=record,label="{%54:\l54:                                               \l  %55 = phi i32 [ %51, %53 ], [ %42, %40 ]\l  %56 = add nuw nsw i64 %41, 1\l  %57 = icmp eq i64 %56, 128\l  br i1 %57, label %58, label %40\l|{<s0>T|<s1>F}}"];
	Node0x191e880:s0 -> Node0x191e8d0;
	Node0x191e880:s1 -> Node0x191e790;
	Node0x191e8d0 [shape=record,label="{%58:\l58:                                               \l  %59 = sext i32 %55 to i64\l  br label %83\l}"];
	Node0x191e8d0 -> Node0x191eab0;
	Node0x191e920 [shape=record,label="{%60:\l60:                                               \l  %61 = call i32 @__lsysinfo(%struct.sysinfo* nonnull %4) #40\l  %62 = getelementptr inbounds %struct.sysinfo, %struct.sysinfo* %4, i64 0,\l... i32 12\l  %63 = load i32, i32* %62, align 8, !tbaa !1643\l  %64 = icmp eq i32 %63, 0\l  br i1 %64, label %65, label %66\l|{<s0>T|<s1>F}}"];
	Node0x191e920:s0 -> Node0x191e970;
	Node0x191e920:s1 -> Node0x191e9c0;
	Node0x191e970 [shape=record,label="{%65:\l65:                                               \l  store i32 1, i32* %62, align 8, !tbaa !1643\l  br label %66\l}"];
	Node0x191e970 -> Node0x191e9c0;
	Node0x191e9c0 [shape=record,label="{%66:\l66:                                               \l  %67 = phi i32 [ %63, %60 ], [ 1, %65 ]\l  %68 = icmp eq i32 %0, 85\l  %69 = getelementptr inbounds %struct.sysinfo, %struct.sysinfo* %4, i64 0,\l... i32 2\l  %70 = load i64, i64* %69, align 8\l  %71 = getelementptr inbounds %struct.sysinfo, %struct.sysinfo* %4, i64 0,\l... i32 3\l  %72 = load i64, i64* %71, align 8\l  %73 = getelementptr inbounds %struct.sysinfo, %struct.sysinfo* %4, i64 0,\l... i32 5\l  %74 = load i64, i64* %73, align 8\l  %75 = add i64 %74, %72\l  %76 = select i1 %68, i64 %70, i64 %75\l  %77 = zext i32 %67 to i64\l  %78 = mul i64 %76, %77\l  %79 = lshr i64 %78, 12\l  br label %83\l}"];
	Node0x191e9c0 -> Node0x191eab0;
	Node0x191ea10 [shape=record,label="{%80:\l80:                                               \l  br label %83\l}"];
	Node0x191ea10 -> Node0x191eab0;
	Node0x191ea60 [shape=record,label="{%81:\l81:                                               \l  %82 = sext i16 %9 to i64\l  br label %83\l}"];
	Node0x191ea60 -> Node0x191eab0;
	Node0x191eab0 [shape=record,label="{%83:\l83:                                               \l  %84 = phi i64 [ -1, %11 ], [ %16, %15 ], [ %28, %18 ], [ %82, %81 ], [ 0,\l... %80 ], [ %79, %66 ], [ %59, %58 ], [ 2147483647, %35 ], [ 2147483647, %34 ],\l... [ 4096, %33 ], [ 32768, %32 ], [ 131072, %31 ], [ 200809, %29 ]\l  ret i64 %84\l}"];
}
