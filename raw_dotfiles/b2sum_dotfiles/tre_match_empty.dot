digraph "CFG for 'tre_match_empty' function" {
	label="CFG for 'tre_match_empty' function";

	Node0x1958440 [shape=record,label="{%5:\l  %6 = getelementptr inbounds %struct.tre_stack_rec, %struct.tre_stack_rec*\l... %0, i64 0, i32 3\l  %7 = load i32, i32* %6, align 4, !tbaa !1632\l  %8 = icmp ne i32* %4, null\l  br i1 %8, label %9, label %10\l|{<s0>T|<s1>F}}"];
	Node0x1958440:s0 -> Node0x1958650;
	Node0x1958440:s1 -> Node0x19586a0;
	Node0x1958650 [shape=record,label="{%9:\l9:                                                \l  store i32 0, i32* %4, align 4, !tbaa !1638\l  br label %10\l}"];
	Node0x1958650 -> Node0x19586a0;
	Node0x19586a0 [shape=record,label="{%10:\l10:                                               \l  %11 = bitcast %struct.tre_ast_node_t* %1 to i8*\l  %12 = tail call fastcc i32 @tre_stack_push(%struct.tre_stack_rec* nonnull\l... %0, i8* %11) #40\l  %13 = icmp eq i32 %12, 0\l  br i1 %13, label %14, label %123\l|{<s0>T|<s1>F}}"];
	Node0x19586a0:s0 -> Node0x19586f0;
	Node0x19586a0:s1 -> Node0x1958e70;
	Node0x19586f0 [shape=record,label="{%14:\l14:                                               \l  %15 = getelementptr inbounds %struct.tre_stack_rec, %struct.tre_stack_rec*\l... %0, i64 0, i32 4\l  %16 = icmp eq i32* %3, null\l  %17 = icmp eq i32* %2, null\l  br label %18\l}"];
	Node0x19586f0 -> Node0x1958740;
	Node0x1958740 [shape=record,label="{%18:\l18:                                               \l  %19 = load i32, i32* %6, align 4, !tbaa !1632\l  %20 = icmp sgt i32 %19, %7\l  br i1 %20, label %21, label %123\l|{<s0>T|<s1>F}}"];
	Node0x1958740:s0 -> Node0x1958790;
	Node0x1958740:s1 -> Node0x1958e70;
	Node0x1958790 [shape=record,label="{%21:\l21:                                               \l  %22 = load %union.tre_stack_item*, %union.tre_stack_item** %15, align 8,\l... !tbaa !1639\l  %23 = add nsw i32 %19, -1\l  store i32 %23, i32* %6, align 4, !tbaa !1632\l  %24 = sext i32 %23 to i64\l  %25 = getelementptr inbounds %union.tre_stack_item, %union.tre_stack_item*\l... %22, i64 %24, i32 0\l  %26 = load i8*, i8** %25, align 8, !tbaa !1640\l  %27 = bitcast i8* %26 to i32*\l  %28 = load i32, i32* %27, align 8, !tbaa !1641\l  switch i32 %28, label %120 [\l    i32 0, label %29\l    i32 3, label %74\l    i32 1, label %95\l    i32 2, label %108\l  ]\l|{<s0>def|<s1>0|<s2>3|<s3>1|<s4>2}}"];
	Node0x1958790:s0 -> Node0x1958e20;
	Node0x1958790:s1 -> Node0x19587e0;
	Node0x1958790:s2 -> Node0x1958ba0;
	Node0x1958790:s3 -> Node0x1958ce0;
	Node0x1958790:s4 -> Node0x1958d80;
	Node0x19587e0 [shape=record,label="{%29:\l29:                                               \l  %30 = getelementptr inbounds i8, i8* %26, i64 8\l  %31 = bitcast i8* %30 to %struct.tre_literal_t**\l  %32 = load %struct.tre_literal_t*, %struct.tre_literal_t** %31, align 8,\l... !tbaa !1643\l  %33 = getelementptr inbounds %struct.tre_literal_t, %struct.tre_literal_t*\l... %32, i64 0, i32 0\l  %34 = load i64, i64* %33, align 8, !tbaa !1644\l  switch i64 %34, label %120 [\l    i64 -3, label %35\l    i64 -2, label %67\l  ]\l|{<s0>def|<s1>-3|<s2>-2}}"];
	Node0x19587e0:s0 -> Node0x1958e20;
	Node0x19587e0:s1 -> Node0x1958830;
	Node0x19587e0:s2 -> Node0x1958b00;
	Node0x1958830 [shape=record,label="{%35:\l35:                                               \l  %36 = getelementptr inbounds %struct.tre_literal_t, %struct.tre_literal_t*\l... %32, i64 0, i32 1\l  %37 = load i64, i64* %36, align 8, !tbaa !1647\l  %38 = icmp sgt i64 %37, -1\l  br i1 %38, label %39, label %120\l|{<s0>T|<s1>F}}"];
	Node0x1958830:s0 -> Node0x1958880;
	Node0x1958830:s1 -> Node0x1958e20;
	Node0x1958880 [shape=record,label="{%39:\l39:                                               \l  br i1 %17, label %63, label %40\l|{<s0>T|<s1>F}}"];
	Node0x1958880:s0 -> Node0x1958a60;
	Node0x1958880:s1 -> Node0x19588d0;
	Node0x19588d0 [shape=record,label="{%40:\l40:                                               \l  %41 = load i32, i32* %2, align 4, !tbaa !1638\l  %42 = icmp sgt i32 %41, -1\l  br i1 %42, label %43, label %56\l|{<s0>T|<s1>F}}"];
	Node0x19588d0:s0 -> Node0x1958920;
	Node0x19588d0:s1 -> Node0x1958a10;
	Node0x1958920 [shape=record,label="{%43:\l43:                                               \l  %44 = phi i64 [ %49, %48 ], [ 0, %40 ]\l  %45 = phi i32 [ %51, %48 ], [ %41, %40 ]\l  %46 = zext i32 %45 to i64\l  %47 = icmp eq i64 %37, %46\l  br i1 %47, label %63, label %48\l|{<s0>T|<s1>F}}"];
	Node0x1958920:s0 -> Node0x1958a60;
	Node0x1958920:s1 -> Node0x1958970;
	Node0x1958970 [shape=record,label="{%48:\l48:                                               \l  %49 = add nuw i64 %44, 1\l  %50 = getelementptr inbounds i32, i32* %2, i64 %49\l  %51 = load i32, i32* %50, align 4, !tbaa !1638\l  %52 = icmp sgt i32 %51, -1\l  br i1 %52, label %43, label %53\l|{<s0>T|<s1>F}}"];
	Node0x1958970:s0 -> Node0x1958920;
	Node0x1958970:s1 -> Node0x19589c0;
	Node0x19589c0 [shape=record,label="{%53:\l53:                                               \l  %54 = and i64 %49, 4294967295\l  %55 = getelementptr inbounds i32, i32* %2, i64 %54\l  br label %56\l}"];
	Node0x19589c0 -> Node0x1958a10;
	Node0x1958a10 [shape=record,label="{%56:\l56:                                               \l  %57 = phi i64 [ %49, %53 ], [ 0, %40 ]\l  %58 = phi i32* [ %55, %53 ], [ %2, %40 ]\l  %59 = trunc i64 %37 to i32\l  store i32 %59, i32* %58, align 4, !tbaa !1638\l  %60 = add i64 %57, 1\l  %61 = and i64 %60, 4294967295\l  %62 = getelementptr inbounds i32, i32* %2, i64 %61\l  store i32 -1, i32* %62, align 4, !tbaa !1638\l  br label %63\l}"];
	Node0x1958a10 -> Node0x1958a60;
	Node0x1958a60 [shape=record,label="{%63:\l63:                                               \l  br i1 %8, label %64, label %120\l|{<s0>T|<s1>F}}"];
	Node0x1958a60:s0 -> Node0x1958ab0;
	Node0x1958a60:s1 -> Node0x1958e20;
	Node0x1958ab0 [shape=record,label="{%64:\l64:                                               \l  %65 = load i32, i32* %4, align 4, !tbaa !1638\l  %66 = add nsw i32 %65, 1\l  store i32 %66, i32* %4, align 4, !tbaa !1638\l  br label %120\l}"];
	Node0x1958ab0 -> Node0x1958e20;
	Node0x1958b00 [shape=record,label="{%67:\l67:                                               \l  br i1 %16, label %120, label %68\l|{<s0>T|<s1>F}}"];
	Node0x1958b00:s0 -> Node0x1958e20;
	Node0x1958b00:s1 -> Node0x1958b50;
	Node0x1958b50 [shape=record,label="{%68:\l68:                                               \l  %69 = getelementptr inbounds %struct.tre_literal_t, %struct.tre_literal_t*\l... %32, i64 0, i32 1\l  %70 = load i64, i64* %69, align 8, !tbaa !1647\l  %71 = load i32, i32* %3, align 4, !tbaa !1638\l  %72 = trunc i64 %70 to i32\l  %73 = or i32 %71, %72\l  store i32 %73, i32* %3, align 4, !tbaa !1638\l  br label %120\l}"];
	Node0x1958b50 -> Node0x1958e20;
	Node0x1958ba0 [shape=record,label="{%74:\l74:                                               \l  %75 = getelementptr inbounds i8, i8* %26, i64 8\l  %76 = bitcast i8* %75 to %struct.tre_union_t**\l  %77 = load %struct.tre_union_t*, %struct.tre_union_t** %76, align 8, !tbaa\l... !1643\l  %78 = getelementptr inbounds %struct.tre_union_t, %struct.tre_union_t* %77,\l... i64 0, i32 0\l  %79 = load %struct.tre_ast_node_t*, %struct.tre_ast_node_t** %78, align 8,\l... !tbaa !1648\l  %80 = getelementptr inbounds %struct.tre_ast_node_t, %struct.tre_ast_node_t*\l... %79, i64 0, i32 2\l  %81 = load i32, i32* %80, align 8, !tbaa !1650\l  %82 = icmp eq i32 %81, 0\l  br i1 %82, label %86, label %83\l|{<s0>T|<s1>F}}"];
	Node0x1958ba0:s0 -> Node0x1958c40;
	Node0x1958ba0:s1 -> Node0x1958bf0;
	Node0x1958bf0 [shape=record,label="{%83:\l83:                                               \l  %84 = bitcast %struct.tre_ast_node_t* %79 to i8*\l  %85 = tail call fastcc i32 @tre_stack_push(%struct.tre_stack_rec* nonnull\l... %0, i8* %84) #40\l  br label %120\l}"];
	Node0x1958bf0 -> Node0x1958e20;
	Node0x1958c40 [shape=record,label="{%86:\l86:                                               \l  %87 = getelementptr inbounds %struct.tre_union_t, %struct.tre_union_t* %77,\l... i64 0, i32 1\l  %88 = load %struct.tre_ast_node_t*, %struct.tre_ast_node_t** %87, align 8,\l... !tbaa !1651\l  %89 = getelementptr inbounds %struct.tre_ast_node_t, %struct.tre_ast_node_t*\l... %88, i64 0, i32 2\l  %90 = load i32, i32* %89, align 8, !tbaa !1650\l  %91 = icmp eq i32 %90, 0\l  br i1 %91, label %120, label %92\l|{<s0>T|<s1>F}}"];
	Node0x1958c40:s0 -> Node0x1958e20;
	Node0x1958c40:s1 -> Node0x1958c90;
	Node0x1958c90 [shape=record,label="{%92:\l92:                                               \l  %93 = bitcast %struct.tre_ast_node_t* %88 to i8*\l  %94 = tail call fastcc i32 @tre_stack_push(%struct.tre_stack_rec* nonnull\l... %0, i8* %93) #40\l  br label %120\l}"];
	Node0x1958c90 -> Node0x1958e20;
	Node0x1958ce0 [shape=record,label="{%95:\l95:                                               \l  %96 = getelementptr inbounds i8, i8* %26, i64 8\l  %97 = bitcast i8* %96 to %struct.tre_union_t**\l  %98 = load %struct.tre_union_t*, %struct.tre_union_t** %97, align 8, !tbaa\l... !1643\l  %99 = bitcast %struct.tre_union_t* %98 to i8**\l  %100 = load i8*, i8** %99, align 8, !tbaa !1648\l  %101 = tail call fastcc i32 @tre_stack_push(%struct.tre_stack_rec* nonnull\l... %0, i8* %100) #40\l  %102 = icmp eq i32 %101, 0\l  br i1 %102, label %103, label %123\l|{<s0>T|<s1>F}}"];
	Node0x1958ce0:s0 -> Node0x1958d30;
	Node0x1958ce0:s1 -> Node0x1958e70;
	Node0x1958d30 [shape=record,label="{%103:\l103:                                              \l  %104 = getelementptr inbounds %struct.tre_union_t, %struct.tre_union_t* %98,\l... i64 0, i32 1\l  %105 = bitcast %struct.tre_ast_node_t** %104 to i8**\l  %106 = load i8*, i8** %105, align 8, !tbaa !1651\l  %107 = tail call fastcc i32 @tre_stack_push(%struct.tre_stack_rec* nonnull\l... %0, i8* %106) #40\l  br label %120\l}"];
	Node0x1958d30 -> Node0x1958e20;
	Node0x1958d80 [shape=record,label="{%108:\l108:                                              \l  %109 = getelementptr inbounds i8, i8* %26, i64 8\l  %110 = bitcast i8* %109 to %struct.tre_iteration_t**\l  %111 = load %struct.tre_iteration_t*, %struct.tre_iteration_t** %110, align\l... 8, !tbaa !1643\l  %112 = getelementptr inbounds %struct.tre_iteration_t,\l... %struct.tre_iteration_t* %111, i64 0, i32 0\l  %113 = load %struct.tre_ast_node_t*, %struct.tre_ast_node_t** %112, align 8,\l... !tbaa !1652\l  %114 = getelementptr inbounds %struct.tre_ast_node_t,\l... %struct.tre_ast_node_t* %113, i64 0, i32 2\l  %115 = load i32, i32* %114, align 8, !tbaa !1650\l  %116 = icmp eq i32 %115, 0\l  br i1 %116, label %120, label %117\l|{<s0>T|<s1>F}}"];
	Node0x1958d80:s0 -> Node0x1958e20;
	Node0x1958d80:s1 -> Node0x1958dd0;
	Node0x1958dd0 [shape=record,label="{%117:\l117:                                              \l  %118 = bitcast %struct.tre_ast_node_t* %113 to i8*\l  %119 = tail call fastcc i32 @tre_stack_push(%struct.tre_stack_rec* nonnull\l... %0, i8* %118) #40\l  br label %120\l}"];
	Node0x1958dd0 -> Node0x1958e20;
	Node0x1958e20 [shape=record,label="{%120:\l120:                                              \l  %121 = phi i32 [ 0, %21 ], [ %119, %117 ], [ 0, %108 ], [ %107, %103 ], [\l... %85, %83 ], [ %94, %92 ], [ 0, %86 ], [ 0, %29 ], [ 0, %68 ], [ 0, %67 ], [\l... 0, %64 ], [ 0, %63 ], [ 0, %35 ]\l  %122 = icmp eq i32 %121, 0\l  br i1 %122, label %18, label %123\l|{<s0>T|<s1>F}}"];
	Node0x1958e20:s0 -> Node0x1958740;
	Node0x1958e20:s1 -> Node0x1958e70;
	Node0x1958e70 [shape=record,label="{%123:\l123:                                              \l  %124 = phi i32 [ %12, %10 ], [ %101, %95 ], [ %121, %120 ], [ 0, %18 ]\l  ret i32 %124\l}"];
}
