digraph "CFG for 'log2' function" {
	label="CFG for 'log2' function";

	Node0x1d97ac0 [shape=record,label="{%1:\l  %2 = bitcast double %0 to i64\l  %3 = lshr i64 %2, 48\l  %4 = trunc i64 %3 to i32\l  %5 = tail call double @llvm.experimental.constrained.fsub.f64(double\l... 1.000000e+00, double 0x3FA5B51000000000, metadata !\"round.dynamic\", metadata\l... !\"fpexcept.ignore\") #40\l  %6 = bitcast double %5 to i64\l  %7 = sub i64 %2, %6\l  %8 = tail call double @llvm.experimental.constrained.fadd.f64(double\l... 1.000000e+00, double 0x3FA6AB2000000000, metadata !\"round.dynamic\", metadata\l... !\"fpexcept.ignore\") #40\l  %9 = bitcast double %8 to i64\l  %10 = tail call double @llvm.experimental.constrained.fsub.f64(double\l... 1.000000e+00, double 0x3FA5B51000000000, metadata !\"round.dynamic\", metadata\l... !\"fpexcept.ignore\") #40\l  %11 = bitcast double %10 to i64\l  %12 = sub i64 %9, %11\l  %13 = icmp ult i64 %7, %12\l  br i1 %13, label %14, label %66, !prof !1632, !misexpect !1633\l|{<s0>T|<s1>F}}"];
	Node0x1d97ac0:s0 -> Node0x1d98390[label="W:1"];
	Node0x1d97ac0:s1 -> Node0x1d98480[label="W:2000"];
	Node0x1d98390 [shape=record,label="{%14:\l14:                                               \l  %15 = icmp eq i64 %2, 4607182418800017408\l  br i1 %15, label %16, label %18, !prof !1632, !misexpect !1633\l|{<s0>T|<s1>F}}"];
	Node0x1d98390:s0 -> Node0x1d983e0[label="W:1"];
	Node0x1d98390:s1 -> Node0x1d98430[label="W:2000"];
	Node0x1d983e0 [shape=record,label="{%16:\l16:                                               \l  %17 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 0,\l... metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  br label %148\l}"];
	Node0x1d983e0 -> Node0x1d98700;
	Node0x1d98430 [shape=record,label="{%18:\l18:                                               \l  %19 = tail call double @llvm.experimental.constrained.fsub.f64(double %0,\l... double 1.000000e+00, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\")\l... #40\l  %20 = bitcast double %19 to i64\l  %21 = and i64 %20, -4294967296\l  %22 = bitcast i64 %21 to double\l  %23 = tail call double @llvm.experimental.constrained.fsub.f64(double %19,\l... double %22, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %24 = load double, double* getelementptr inbounds (%struct.log2_data,\l... %struct.log2_data* @__log2_data, i64 0, i32 0), align 8, !tbaa !1634\l  %25 = tail call double @llvm.experimental.constrained.fmul.f64(double %22,\l... double %24, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %26 = tail call double @llvm.experimental.constrained.fmul.f64(double %23,\l... double %24, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %27 = load double, double* getelementptr inbounds (%struct.log2_data,\l... %struct.log2_data* @__log2_data, i64 0, i32 1), align 8, !tbaa !1639\l  %28 = tail call double @llvm.experimental.constrained.fmul.f64(double %19,\l... double %27, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %29 = tail call double @llvm.experimental.constrained.fadd.f64(double %26,\l... double %28, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %30 = tail call double @llvm.experimental.constrained.fmul.f64(double %19,\l... double %19, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %31 = tail call double @llvm.experimental.constrained.fmul.f64(double %30,\l... double %30, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %32 = load double, double* getelementptr inbounds (%struct.log2_data,\l... %struct.log2_data* @__log2_data, i64 0, i32 3, i64 0), align 8, !tbaa !1640\l  %33 = load double, double* getelementptr inbounds (%struct.log2_data,\l... %struct.log2_data* @__log2_data, i64 0, i32 3, i64 1), align 8, !tbaa !1640\l  %34 = tail call double @llvm.experimental.constrained.fmul.f64(double %19,\l... double %33, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %35 = tail call double @llvm.experimental.constrained.fadd.f64(double %32,\l... double %34, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %36 = tail call double @llvm.experimental.constrained.fmul.f64(double %30,\l... double %35, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %37 = tail call double @llvm.experimental.constrained.fadd.f64(double %25,\l... double %36, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %38 = tail call double @llvm.experimental.constrained.fsub.f64(double %25,\l... double %37, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %39 = tail call double @llvm.experimental.constrained.fadd.f64(double %38,\l... double %36, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %40 = tail call double @llvm.experimental.constrained.fadd.f64(double %29,\l... double %39, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %41 = load double, double* getelementptr inbounds (%struct.log2_data,\l... %struct.log2_data* @__log2_data, i64 0, i32 3, i64 2), align 8, !tbaa !1640\l  %42 = load double, double* getelementptr inbounds (%struct.log2_data,\l... %struct.log2_data* @__log2_data, i64 0, i32 3, i64 3), align 8, !tbaa !1640\l  %43 = tail call double @llvm.experimental.constrained.fmul.f64(double %19,\l... double %42, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %44 = tail call double @llvm.experimental.constrained.fadd.f64(double %41,\l... double %43, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %45 = load double, double* getelementptr inbounds (%struct.log2_data,\l... %struct.log2_data* @__log2_data, i64 0, i32 3, i64 4), align 8, !tbaa !1640\l  %46 = load double, double* getelementptr inbounds (%struct.log2_data,\l... %struct.log2_data* @__log2_data, i64 0, i32 3, i64 5), align 8, !tbaa !1640\l  %47 = tail call double @llvm.experimental.constrained.fmul.f64(double %19,\l... double %46, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %48 = tail call double @llvm.experimental.constrained.fadd.f64(double %45,\l... double %47, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %49 = tail call double @llvm.experimental.constrained.fmul.f64(double %30,\l... double %48, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %50 = tail call double @llvm.experimental.constrained.fadd.f64(double %44,\l... double %49, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %51 = load double, double* getelementptr inbounds (%struct.log2_data,\l... %struct.log2_data* @__log2_data, i64 0, i32 3, i64 6), align 8, !tbaa !1640\l  %52 = load double, double* getelementptr inbounds (%struct.log2_data,\l... %struct.log2_data* @__log2_data, i64 0, i32 3, i64 7), align 8, !tbaa !1640\l  %53 = tail call double @llvm.experimental.constrained.fmul.f64(double %19,\l... double %52, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %54 = tail call double @llvm.experimental.constrained.fadd.f64(double %51,\l... double %53, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %55 = load double, double* getelementptr inbounds (%struct.log2_data,\l... %struct.log2_data* @__log2_data, i64 0, i32 3, i64 8), align 8, !tbaa !1640\l  %56 = load double, double* getelementptr inbounds (%struct.log2_data,\l... %struct.log2_data* @__log2_data, i64 0, i32 3, i64 9), align 8, !tbaa !1640\l  %57 = tail call double @llvm.experimental.constrained.fmul.f64(double %19,\l... double %56, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %58 = tail call double @llvm.experimental.constrained.fadd.f64(double %55,\l... double %57, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %59 = tail call double @llvm.experimental.constrained.fmul.f64(double %30,\l... double %58, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %60 = tail call double @llvm.experimental.constrained.fadd.f64(double %54,\l... double %59, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %61 = tail call double @llvm.experimental.constrained.fmul.f64(double %31,\l... double %60, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %62 = tail call double @llvm.experimental.constrained.fadd.f64(double %50,\l... double %61, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %63 = tail call double @llvm.experimental.constrained.fmul.f64(double %31,\l... double %62, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %64 = tail call double @llvm.experimental.constrained.fadd.f64(double %40,\l... double %63, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %65 = tail call double @llvm.experimental.constrained.fadd.f64(double %37,\l... double %64, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  br label %148\l}"];
	Node0x1d98430 -> Node0x1d98700;
	Node0x1d98480 [shape=record,label="{%66:\l66:                                               \l  %67 = add nsw i32 %4, -16\l  %68 = icmp ugt i32 %67, 32735\l  br i1 %68, label %69, label %90, !prof !1632, !misexpect !1633\l|{<s0>T|<s1>F}}"];
	Node0x1d98480:s0 -> Node0x1d984d0[label="W:1"];
	Node0x1d98480:s1 -> Node0x1d986b0[label="W:2000"];
	Node0x1d984d0 [shape=record,label="{%69:\l69:                                               \l  %70 = and i64 %2, 9223372036854775807\l  %71 = icmp eq i64 %70, 0\l  br i1 %71, label %72, label %74\l|{<s0>T|<s1>F}}"];
	Node0x1d984d0:s0 -> Node0x1d98520;
	Node0x1d984d0:s1 -> Node0x1d98570;
	Node0x1d98520 [shape=record,label="{%72:\l72:                                               \l  %73 = tail call double @__math_divzero(i32 1) #41\l  br label %148\l}"];
	Node0x1d98520 -> Node0x1d98700;
	Node0x1d98570 [shape=record,label="{%74:\l74:                                               \l  %75 = tail call double @llvm.experimental.constrained.fpext.f64.f32(float\l... 0x7FF0000000000000, metadata !\"fpexcept.ignore\") #40\l  %76 = bitcast double %75 to i64\l  %77 = icmp eq i64 %2, %76\l  br i1 %77, label %148, label %78\l|{<s0>T|<s1>F}}"];
	Node0x1d98570:s0 -> Node0x1d98700;
	Node0x1d98570:s1 -> Node0x1d985c0;
	Node0x1d985c0 [shape=record,label="{%78:\l78:                                               \l  %79 = trunc i64 %3 to i16\l  %80 = icmp slt i16 %79, 0\l  %81 = and i32 %4, 32752\l  %82 = icmp eq i32 %81, 32752\l  %83 = or i1 %80, %82\l  br i1 %83, label %84, label %86\l|{<s0>T|<s1>F}}"];
	Node0x1d985c0:s0 -> Node0x1d98610;
	Node0x1d985c0:s1 -> Node0x1d98660;
	Node0x1d98610 [shape=record,label="{%84:\l84:                                               \l  %85 = tail call double @__math_invalid(double %0) #41\l  br label %148\l}"];
	Node0x1d98610 -> Node0x1d98700;
	Node0x1d98660 [shape=record,label="{%86:\l86:                                               \l  %87 = tail call double @llvm.experimental.constrained.fmul.f64(double %0,\l... double 0x4330000000000000, metadata !\"round.dynamic\", metadata\l... !\"fpexcept.ignore\") #40\l  %88 = bitcast double %87 to i64\l  %89 = add i64 %88, -234187180623265792\l  br label %90\l}"];
	Node0x1d98660 -> Node0x1d986b0;
	Node0x1d986b0 [shape=record,label="{%90:\l90:                                               \l  %91 = phi i64 [ %89, %86 ], [ %2, %66 ]\l  %92 = add i64 %91, -4604367669032910848\l  %93 = lshr i64 %92, 46\l  %94 = and i64 %93, 63\l  %95 = ashr i64 %92, 52\l  %96 = trunc i64 %95 to i32\l  %97 = and i64 %92, -4503599627370496\l  %98 = sub i64 %91, %97\l  %99 = getelementptr inbounds %struct.log2_data, %struct.log2_data*\l... @__log2_data, i64 0, i32 4, i64 %94, i32 0\l  %100 = load double, double* %99, align 8, !tbaa !1641\l  %101 = getelementptr inbounds %struct.log2_data, %struct.log2_data*\l... @__log2_data, i64 0, i32 4, i64 %94, i32 1\l  %102 = load double, double* %101, align 8, !tbaa !1643\l  %103 = bitcast i64 %98 to double\l  %104 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32\l... %96, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %105 = getelementptr inbounds %struct.log2_data, %struct.log2_data*\l... @__log2_data, i64 0, i32 5, i64 %94, i32 0\l  %106 = load double, double* %105, align 8, !tbaa !1641\l  %107 = tail call double @llvm.experimental.constrained.fsub.f64(double %103,\l... double %106, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %108 = getelementptr inbounds %struct.log2_data, %struct.log2_data*\l... @__log2_data, i64 0, i32 5, i64 %94, i32 1\l  %109 = load double, double* %108, align 8, !tbaa !1643\l  %110 = tail call double @llvm.experimental.constrained.fsub.f64(double %107,\l... double %109, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %111 = tail call double @llvm.experimental.constrained.fmul.f64(double %110,\l... double %100, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %112 = bitcast double %111 to i64\l  %113 = and i64 %112, -4294967296\l  %114 = bitcast i64 %113 to double\l  %115 = tail call double @llvm.experimental.constrained.fsub.f64(double %111,\l... double %114, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %116 = load double, double* getelementptr inbounds (%struct.log2_data,\l... %struct.log2_data* @__log2_data, i64 0, i32 0), align 8, !tbaa !1634\l  %117 = tail call double @llvm.experimental.constrained.fmul.f64(double %114,\l... double %116, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %118 = tail call double @llvm.experimental.constrained.fmul.f64(double %115,\l... double %116, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %119 = load double, double* getelementptr inbounds (%struct.log2_data,\l... %struct.log2_data* @__log2_data, i64 0, i32 1), align 8, !tbaa !1639\l  %120 = tail call double @llvm.experimental.constrained.fmul.f64(double %111,\l... double %119, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %121 = tail call double @llvm.experimental.constrained.fadd.f64(double %118,\l... double %120, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %122 = tail call double @llvm.experimental.constrained.fadd.f64(double %104,\l... double %102, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %123 = tail call double @llvm.experimental.constrained.fadd.f64(double %122,\l... double %117, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %124 = tail call double @llvm.experimental.constrained.fsub.f64(double %122,\l... double %123, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %125 = tail call double @llvm.experimental.constrained.fadd.f64(double %124,\l... double %117, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %126 = tail call double @llvm.experimental.constrained.fadd.f64(double %125,\l... double %121, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %127 = tail call double @llvm.experimental.constrained.fmul.f64(double %111,\l... double %111, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %128 = tail call double @llvm.experimental.constrained.fmul.f64(double %127,\l... double %127, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %129 = load double, double* getelementptr inbounds (%struct.log2_data,\l... %struct.log2_data* @__log2_data, i64 0, i32 2, i64 0), align 8, !tbaa !1640\l  %130 = load double, double* getelementptr inbounds (%struct.log2_data,\l... %struct.log2_data* @__log2_data, i64 0, i32 2, i64 1), align 8, !tbaa !1640\l  %131 = tail call double @llvm.experimental.constrained.fmul.f64(double %111,\l... double %130, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %132 = tail call double @llvm.experimental.constrained.fadd.f64(double %129,\l... double %131, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %133 = load double, double* getelementptr inbounds (%struct.log2_data,\l... %struct.log2_data* @__log2_data, i64 0, i32 2, i64 2), align 8, !tbaa !1640\l  %134 = load double, double* getelementptr inbounds (%struct.log2_data,\l... %struct.log2_data* @__log2_data, i64 0, i32 2, i64 3), align 8, !tbaa !1640\l  %135 = tail call double @llvm.experimental.constrained.fmul.f64(double %111,\l... double %134, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %136 = tail call double @llvm.experimental.constrained.fadd.f64(double %133,\l... double %135, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %137 = tail call double @llvm.experimental.constrained.fmul.f64(double %127,\l... double %136, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %138 = tail call double @llvm.experimental.constrained.fadd.f64(double %132,\l... double %137, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %139 = load double, double* getelementptr inbounds (%struct.log2_data,\l... %struct.log2_data* @__log2_data, i64 0, i32 2, i64 4), align 8, !tbaa !1640\l  %140 = load double, double* getelementptr inbounds (%struct.log2_data,\l... %struct.log2_data* @__log2_data, i64 0, i32 2, i64 5), align 8, !tbaa !1640\l  %141 = tail call double @llvm.experimental.constrained.fmul.f64(double %111,\l... double %140, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %142 = tail call double @llvm.experimental.constrained.fadd.f64(double %139,\l... double %141, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %143 = tail call double @llvm.experimental.constrained.fmul.f64(double %128,\l... double %142, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %144 = tail call double @llvm.experimental.constrained.fadd.f64(double %138,\l... double %143, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %145 = tail call double @llvm.experimental.constrained.fmul.f64(double %127,\l... double %144, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %146 = tail call double @llvm.experimental.constrained.fadd.f64(double %126,\l... double %145, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %147 = tail call double @llvm.experimental.constrained.fadd.f64(double %146,\l... double %123, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  br label %148\l}"];
	Node0x1d986b0 -> Node0x1d98700;
	Node0x1d98700 [shape=record,label="{%148:\l148:                                              \l  %149 = phi double [ %17, %16 ], [ %65, %18 ], [ %73, %72 ], [ %85, %84 ], [\l... %147, %90 ], [ %0, %74 ]\l  ret double %149\l}"];
}
