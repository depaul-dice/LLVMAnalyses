digraph "CFG for 'asinh' function" {
	label="CFG for 'asinh' function";

	Node0x1d64110 [shape=record,label="{%1:\l  %2 = alloca double, align 8\l  %3 = bitcast double %0 to i64\l  %4 = lshr i64 %3, 52\l  %5 = trunc i64 %4 to i32\l  %6 = and i32 %5, 2047\l  %7 = and i64 %3, 9223372036854775807\l  %8 = bitcast i64 %7 to double\l  %9 = icmp ugt i32 %6, 1048\l  br i1 %9, label %10, label %13\l|{<s0>T|<s1>F}}"];
	Node0x1d64110:s0 -> Node0x1d64160;
	Node0x1d64110:s1 -> Node0x1d641b0;
	Node0x1d64160 [shape=record,label="{%10:\l10:                                               \l  %11 = tail call double @log(double %8) #40\l  %12 = tail call double @llvm.experimental.constrained.fadd.f64(double %11,\l... double 0x3FE62E42FEFA39EF, metadata !\"round.dynamic\", metadata\l... !\"fpexcept.ignore\") #41\l  br label %44\l}"];
	Node0x1d64160 -> Node0x1d64340;
	Node0x1d641b0 [shape=record,label="{%13:\l13:                                               \l  %14 = icmp ugt i32 %6, 1023\l  br i1 %14, label %15, label %27\l|{<s0>T|<s1>F}}"];
	Node0x1d641b0:s0 -> Node0x1d64200;
	Node0x1d641b0:s1 -> Node0x1d64250;
	Node0x1d64200 [shape=record,label="{%15:\l15:                                               \l  %16 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 2,\l... metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #41\l  %17 = tail call double @llvm.experimental.constrained.fmul.f64(double %16,\l... double %8, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #41\l  %18 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 1,\l... metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #41\l  %19 = tail call double @llvm.experimental.constrained.fmul.f64(double %8,\l... double %8, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #41\l  %20 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 1,\l... metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #41\l  %21 = tail call double @llvm.experimental.constrained.fadd.f64(double %19,\l... double %20, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #41\l  %22 = tail call double @sqrt(double %21) #40\l  %23 = tail call double @llvm.experimental.constrained.fadd.f64(double %22,\l... double %8, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #41\l  %24 = tail call double @llvm.experimental.constrained.fdiv.f64(double %18,\l... double %23, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #41\l  %25 = tail call double @llvm.experimental.constrained.fadd.f64(double %17,\l... double %24, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #41\l  %26 = tail call double @log(double %25) #40\l  br label %44\l}"];
	Node0x1d64200 -> Node0x1d64340;
	Node0x1d64250 [shape=record,label="{%27:\l27:                                               \l  %28 = icmp ugt i32 %6, 996\l  br i1 %28, label %29, label %40\l|{<s0>T|<s1>F}}"];
	Node0x1d64250:s0 -> Node0x1d642a0;
	Node0x1d64250:s1 -> Node0x1d642f0;
	Node0x1d642a0 [shape=record,label="{%29:\l29:                                               \l  %30 = tail call double @llvm.experimental.constrained.fmul.f64(double %8,\l... double %8, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #41\l  %31 = tail call double @llvm.experimental.constrained.fmul.f64(double %8,\l... double %8, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #41\l  %32 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 1,\l... metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #41\l  %33 = tail call double @llvm.experimental.constrained.fadd.f64(double %31,\l... double %32, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #41\l  %34 = tail call double @sqrt(double %33) #40\l  %35 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 1,\l... metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #41\l  %36 = tail call double @llvm.experimental.constrained.fadd.f64(double %34,\l... double %35, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #41\l  %37 = tail call double @llvm.experimental.constrained.fdiv.f64(double %30,\l... double %36, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #41\l  %38 = tail call double @llvm.experimental.constrained.fadd.f64(double %8,\l... double %37, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #41\l  %39 = tail call double @log1p(double %38) #40\l  br label %44\l}"];
	Node0x1d642a0 -> Node0x1d64340;
	Node0x1d642f0 [shape=record,label="{%40:\l40:                                               \l  %41 = tail call double @llvm.experimental.constrained.fpext.f64.f32(float\l... 0x4770000000000000, metadata !\"fpexcept.ignore\") #41\l  %42 = tail call double @llvm.experimental.constrained.fadd.f64(double %8,\l... double %41, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #41\l  %43 = bitcast double* %2 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43)\l  store volatile double %42, double* %2, align 8, !tbaa !1632\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43)\l  br label %44\l}"];
	Node0x1d642f0 -> Node0x1d64340;
	Node0x1d64340 [shape=record,label="{%44:\l44:                                               \l  %45 = phi double [ %12, %10 ], [ %26, %15 ], [ %39, %29 ], [ %8, %40 ]\l  %46 = icmp slt i64 %3, 0\l  %47 = fneg double %45\l  %48 = select i1 %46, double %47, double %45\l  ret double %48\l}"];
}
