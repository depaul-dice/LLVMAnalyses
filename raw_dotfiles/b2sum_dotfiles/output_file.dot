digraph "CFG for 'output_file' function" {
	label="CFG for 'output_file' function";

	Node0x2124fb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%7:\l  %8 = alloca i8*, align 8\l  %9 = alloca i32, align 4\l  %10 = alloca i8*, align 8\l  %11 = alloca i8, align 1\l  %12 = alloca i8, align 1\l  %13 = alloca i8, align 1\l  %14 = alloca i64, align 8\l  %15 = alloca i8*, align 8\l  %16 = alloca i8, align 1\l  %17 = alloca i64, align 8\l  store i8* %0, i8** %8, align 8\l  call void @llvm.dbg.declare(metadata i8** %8, metadata !797, metadata\l... !DIExpression()), !dbg !798\l  store i32 %1, i32* %9, align 4\l  call void @llvm.dbg.declare(metadata i32* %9, metadata !799, metadata\l... !DIExpression()), !dbg !800\l  store i8* %2, i8** %10, align 8\l  call void @llvm.dbg.declare(metadata i8** %10, metadata !801, metadata\l... !DIExpression()), !dbg !802\l  %18 = zext i1 %3 to i8\l  store i8 %18, i8* %11, align 1\l  call void @llvm.dbg.declare(metadata i8* %11, metadata !803, metadata\l... !DIExpression()), !dbg !804\l  store i8 %4, i8* %12, align 1\l  call void @llvm.dbg.declare(metadata i8* %12, metadata !805, metadata\l... !DIExpression()), !dbg !806\l  %19 = zext i1 %5 to i8\l  store i8 %19, i8* %13, align 1\l  call void @llvm.dbg.declare(metadata i8* %13, metadata !807, metadata\l... !DIExpression()), !dbg !808\l  store i64 %6, i64* %14, align 8\l  call void @llvm.dbg.declare(metadata i64* %14, metadata !809, metadata\l... !DIExpression()), !dbg !810\l  call void @llvm.dbg.declare(metadata i8** %15, metadata !811, metadata\l... !DIExpression()), !dbg !812\l  %20 = load i8*, i8** %10, align 8, !dbg !813\l  store i8* %20, i8** %15, align 8, !dbg !812\l  call void @llvm.dbg.declare(metadata i8* %16, metadata !814, metadata\l... !DIExpression()), !dbg !815\l  %21 = load i8, i8* %12, align 1, !dbg !816\l  %22 = zext i8 %21 to i32, !dbg !816\l  %23 = icmp eq i32 %22, 10, !dbg !817\l  br i1 %23, label %24, label %38, !dbg !818\l|{<s0>T|<s1>F}}"];
	Node0x2124fb0:s0 -> Node0x21252c0;
	Node0x2124fb0:s1 -> Node0x2125400;
	Node0x21252c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%24:\l24:                                               \l  %25 = load i8*, i8** %8, align 8, !dbg !819\l  %26 = call fastcc i8* @strchr(i8* %25, i32 92) #27, !dbg !820\l  %27 = icmp ne i8* %26, null, !dbg !820\l  br i1 %27, label %36, label %28, !dbg !821\l|{<s0>T|<s1>F}}"];
	Node0x21252c0:s0 -> Node0x21253b0;
	Node0x21252c0:s1 -> Node0x2125310;
	Node0x2125310 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%28:\l28:                                               \l  %29 = load i8*, i8** %8, align 8, !dbg !822\l  %30 = call fastcc i8* @strchr(i8* %29, i32 10) #27, !dbg !823\l  %31 = icmp ne i8* %30, null, !dbg !823\l  br i1 %31, label %36, label %32, !dbg !824\l|{<s0>T|<s1>F}}"];
	Node0x2125310:s0 -> Node0x21253b0;
	Node0x2125310:s1 -> Node0x2125360;
	Node0x2125360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%32:\l32:                                               \l  %33 = load i8*, i8** %8, align 8, !dbg !825\l  %34 = call fastcc i8* @strchr(i8* %33, i32 13) #27, !dbg !826\l  %35 = icmp ne i8* %34, null, !dbg !824\l  br label %36, !dbg !824\l}"];
	Node0x2125360 -> Node0x21253b0;
	Node0x21253b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%36:\l36:                                               \l  %37 = phi i1 [ true, %28 ], [ true, %24 ], [ %35, %32 ]\l  br label %38\l}"];
	Node0x21253b0 -> Node0x2125400;
	Node0x2125400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%38:\l38:                                               \l  %39 = phi i1 [ false, %7 ], [ %37, %36 ], !dbg !827\l  %40 = zext i1 %39 to i8, !dbg !815\l  store i8 %40, i8* %16, align 1, !dbg !815\l  %41 = load i8, i8* %16, align 1, !dbg !828\l  %42 = trunc i8 %41 to i1, !dbg !828\l  br i1 %42, label %43, label %45, !dbg !830\l|{<s0>T|<s1>F}}"];
	Node0x2125400:s0 -> Node0x2125450;
	Node0x2125400:s1 -> Node0x21254a0;
	Node0x2125450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%43:\l43:                                               \l  %44 = call fastcc i32 @putchar_unlocked(i32 92), !dbg !831\l  br label %45, !dbg !831\l}"];
	Node0x2125450 -> Node0x21254a0;
	Node0x21254a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%45:\l45:                                               \l  %46 = load i8, i8* %11, align 1, !dbg !832\l  %47 = trunc i8 %46 to i1, !dbg !832\l  br i1 %47, label %48, label %74, !dbg !834\l|{<s0>T|<s1>F}}"];
	Node0x21254a0:s0 -> Node0x21254f0;
	Node0x21254a0:s1 -> Node0x21255e0;
	Node0x21254f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%48:\l48:                                               \l  %49 = bitcast %struct._IO_FILE.706** @stdout to %struct._IO_FILE**\l  %50 = load %struct._IO_FILE*, %struct._IO_FILE** %49, align 8, !dbg !835\l  %51 = getelementptr inbounds [8 x i8], [8 x i8]* @.str.3, i64 0, i64 0\l  %52 = bitcast i32 (i8*, %struct._IO_FILE.3*)* @fputs to i32 (i8*,\l... %struct._IO_FILE*)*\l  %53 = call i32 %52(i8* %51, %struct._IO_FILE* %50), !dbg !835\l  %54 = load i64, i64* @digest_length, align 8, !dbg !837\l  %55 = icmp ult i64 %54, 512, !dbg !839\l  br i1 %55, label %56, label %60, !dbg !840\l|{<s0>T|<s1>F}}"];
	Node0x21254f0:s0 -> Node0x2125540;
	Node0x21254f0:s1 -> Node0x2125590;
	Node0x2125540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c1d4f470",label="{%56:\l56:                                               \l  %57 = load i64, i64* @digest_length, align 8, !dbg !841\l  %58 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.88, i64 0, i64 0\l  %59 = call i32 (i8*, ...) @printf(i8* %58, i64 %57), !dbg !842\l  br label %60, !dbg !842\l}"];
	Node0x2125540 -> Node0x2125590;
	Node0x2125590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%60:\l60:                                               \l  %61 = bitcast %struct._IO_FILE.706** @stdout to %struct._IO_FILE**\l  %62 = load %struct._IO_FILE*, %struct._IO_FILE** %61, align 8, !dbg !843\l  %63 = getelementptr inbounds [3 x i8], [3 x i8]* @.str.89, i64 0, i64 0\l  %64 = bitcast i32 (i8*, %struct._IO_FILE.3*)* @fputs to i32 (i8*,\l... %struct._IO_FILE*)*\l  %65 = call i32 %64(i8* %63, %struct._IO_FILE* %62), !dbg !843\l  %66 = load i8*, i8** %8, align 8, !dbg !844\l  %67 = load i8, i8* %16, align 1, !dbg !845\l  %68 = trunc i8 %67 to i1, !dbg !845\l  call fastcc void @print_filename(i8* %66, i1 zeroext %68), !dbg !846\l  %69 = bitcast %struct._IO_FILE.706** @stdout to %struct._IO_FILE**\l  %70 = load %struct._IO_FILE*, %struct._IO_FILE** %69, align 8, !dbg !847\l  %71 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.90, i64 0, i64 0\l  %72 = bitcast i32 (i8*, %struct._IO_FILE.3*)* @fputs to i32 (i8*,\l... %struct._IO_FILE*)*\l  %73 = call i32 %72(i8* %71, %struct._IO_FILE* %70), !dbg !847\l  br label %74, !dbg !848\l}"];
	Node0x2125590 -> Node0x21255e0;
	Node0x21255e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%74:\l74:                                               \l  call void @llvm.dbg.declare(metadata i64* %17, metadata !849, metadata\l... !DIExpression()), !dbg !851\l  store i64 0, i64* %17, align 8, !dbg !851\l  br label %75, !dbg !852\l}"];
	Node0x21255e0 -> Node0x2125630;
	Node0x2125630 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%75:\l75:                                               \l  %76 = load i64, i64* %17, align 8, !dbg !853\l  %77 = load i64, i64* @digest_hex_bytes, align 8, !dbg !855\l  %78 = udiv i64 %77, 2, !dbg !856\l  %79 = icmp ult i64 %76, %78, !dbg !857\l  br i1 %79, label %80, label %91, !dbg !858\l|{<s0>T|<s1>F}}"];
	Node0x2125630:s0 -> Node0x2125680;
	Node0x2125630:s1 -> Node0x2125720;
	Node0x2125680 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%80:\l80:                                               \l  %81 = load i8*, i8** %15, align 8, !dbg !859\l  %82 = load i64, i64* %17, align 8, !dbg !860\l  %83 = getelementptr inbounds i8, i8* %81, i64 %82, !dbg !859\l  %84 = load i8, i8* %83, align 1, !dbg !859\l  %85 = zext i8 %84 to i32, !dbg !859\l  %86 = getelementptr inbounds [5 x i8], [5 x i8]* @.str.91, i64 0, i64 0\l  %87 = call i32 (i8*, ...) @printf(i8* %86, i32 %85), !dbg !861\l  br label %88, !dbg !861\l}"];
	Node0x2125680 -> Node0x21256d0;
	Node0x21256d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%88:\l88:                                               \l  %89 = load i64, i64* %17, align 8, !dbg !862\l  %90 = add i64 %89, 1, !dbg !862\l  store i64 %90, i64* %17, align 8, !dbg !862\l  br label %75, !dbg !863, !llvm.loop !864\l}"];
	Node0x21256d0 -> Node0x2125630;
	Node0x2125720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%91:\l91:                                               \l  %92 = load i8, i8* %11, align 1, !dbg !866\l  %93 = trunc i8 %92 to i1, !dbg !866\l  br i1 %93, label %104, label %94, !dbg !868\l|{<s0>T|<s1>F}}"];
	Node0x2125720:s0 -> Node0x21257c0;
	Node0x2125720:s1 -> Node0x2125770;
	Node0x2125770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%94:\l94:                                               \l  %95 = call fastcc i32 @putchar_unlocked(i32 32), !dbg !869\l  %96 = load i32, i32* %9, align 4, !dbg !871\l  %97 = icmp ne i32 %96, 0, !dbg !871\l  %98 = zext i1 %97 to i64, !dbg !871\l  %99 = select i1 %97, i32 42, i32 32, !dbg !871\l  %100 = call fastcc i32 @putchar_unlocked(i32 %99), !dbg !871\l  %101 = load i8*, i8** %8, align 8, !dbg !872\l  %102 = load i8, i8* %16, align 1, !dbg !873\l  %103 = trunc i8 %102 to i1, !dbg !873\l  call fastcc void @print_filename(i8* %101, i1 zeroext %103), !dbg !874\l  br label %104, !dbg !875\l}"];
	Node0x2125770 -> Node0x21257c0;
	Node0x21257c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#eed0c070",label="{%104:\l104:                                              \l  %105 = load i8, i8* %12, align 1, !dbg !876\l  %106 = zext i8 %105 to i32, !dbg !876\l  %107 = call fastcc i32 @putchar_unlocked(i32 %106), !dbg !876\l  ret void, !dbg !877\l}"];
}
