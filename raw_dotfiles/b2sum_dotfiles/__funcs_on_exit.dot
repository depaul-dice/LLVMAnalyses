digraph "CFG for '__funcs_on_exit' function" {
	label="CFG for '__funcs_on_exit' function";

	Node0x2416ea0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%0:\l  %1 = getelementptr inbounds [1 x i32], [1 x i32]* @lock.111, i64 0, i64 0\l  tail call fastcc void @__lock(i32* %1) #27\l  %2 = load %struct.fl*, %struct.fl** @head, align 8, !tbaa !792\l  %3 = icmp eq %struct.fl* %2, null\l  br i1 %3, label %32, label %4\l|{<s0>T|<s1>F}}"];
	Node0x2416ea0:s0 -> Node0x2417300;
	Node0x2416ea0:s1 -> Node0x24171c0;
	Node0x24171c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%4:\l4:                                                \l  %5 = load i32, i32* @slot, align 4, !tbaa !796\l  br label %6\l}"];
	Node0x24171c0 -> Node0x2417210;
	Node0x2417210 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%6:\l6:                                                \l  %7 = phi %struct.fl* [ %2, %4 ], [ %31, %25 ]\l  %8 = phi i32 [ %5, %4 ], [ 32, %25 ]\l  %9 = add nsw i32 %8, -1\l  store i32 %9, i32* @slot, align 4, !tbaa !796\l  %10 = icmp sgt i32 %8, 0\l  br i1 %10, label %if.true.direct_targ, label %25\l|{<s0>T|<s1>F}}"];
	Node0x2417210:s0 -> Node0x2417260;
	Node0x2417210:s1 -> Node0x24172b0;
	Node0x2417260 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{if.true.direct_targ:                              \l  %11 = phi %struct.fl* [ %24, %if.true.direct_targ ], [ %7, %6 ]\l  %12 = phi i32 [ %22, %if.true.direct_targ ], [ %9, %6 ]\l  %13 = sext i32 %12 to i64\l  %14 = getelementptr inbounds %struct.fl, %struct.fl* %11, i64 0, i32 1, i64\l... %13\l  %15 = load void (i8*)*, void (i8*)** %14, align 8, !tbaa !792\l  %16 = getelementptr inbounds %struct.fl, %struct.fl* %11, i64 0, i32 2, i64\l... %13\l  %17 = load i8*, i8** %16, align 8, !tbaa !792\l  %18 = getelementptr inbounds [1 x i32], [1 x i32]* @lock.111, i64 0, i64 0\l  tail call fastcc void @__unlock(i32* %18) #27\l  %19 = icmp eq void (i8*)* %15, @call\l  call void @llvm.assume(i1 %19)\l  tail call void @call(i8* %17) #28\l  %20 = getelementptr inbounds [1 x i32], [1 x i32]* @lock.111, i64 0, i64 0\l  tail call fastcc void @__lock(i32* %20) #27\l  %21 = load i32, i32* @slot, align 4, !tbaa !796\l  %22 = add nsw i32 %21, -1\l  store i32 %22, i32* @slot, align 4, !tbaa !796\l  %23 = icmp sgt i32 %21, 0\l  %24 = load %struct.fl*, %struct.fl** @head, align 8, !tbaa !792\l  br i1 %23, label %if.true.direct_targ, label %25\l|{<s0>T|<s1>F}}"];
	Node0x2417260:s0 -> Node0x2417260;
	Node0x2417260:s1 -> Node0x24172b0;
	Node0x24172b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f6bfa670",label="{%25:\l25:                                               \l  %26 = phi %struct.fl* [ %7, %6 ], [ %24, %if.true.direct_targ ]\l  %27 = bitcast %struct.fl* %26 to i64*\l  %28 = load i64, i64* %27, align 8, !tbaa !798\l  %29 = bitcast %struct.fl** @head to i64*\l  store i64 %28, i64* %29, align 8, !tbaa !792\l  store i32 32, i32* @slot, align 4, !tbaa !796\l  %30 = icmp eq i64 %28, 0\l  %31 = inttoptr i64 %28 to %struct.fl*\l  br i1 %30, label %32, label %6\l|{<s0>T|<s1>F}}"];
	Node0x24172b0:s0 -> Node0x2417300;
	Node0x24172b0:s1 -> Node0x2417210;
	Node0x2417300 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%32:\l32:                                               \l  ret void\l}"];
}
