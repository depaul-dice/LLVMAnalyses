digraph "CFG for 'remquof' function" {
	label="CFG for 'remquof' function";

	Node0x1939ce0 [shape=record,label="{%3:\l  %4 = bitcast float %0 to i32\l  %5 = bitcast float %1 to i32\l  %6 = lshr i32 %4, 23\l  %7 = and i32 %6, 255\l  %8 = lshr i32 %5, 23\l  %9 = and i32 %8, 255\l  store i32 0, i32* %2, align 4, !tbaa !1632\l  %10 = and i32 %5, 2147483647\l  %11 = icmp eq i32 %10, 0\l  br i1 %11, label %16, label %12\l|{<s0>T|<s1>F}}"];
	Node0x1939ce0:s0 -> Node0x1939d80;
	Node0x1939ce0:s1 -> Node0x1939d30;
	Node0x1939d30 [shape=record,label="{%12:\l12:                                               \l  %13 = icmp ugt i32 %10, 2139095040\l  %14 = icmp eq i32 %7, 255\l  %15 = or i1 %13, %14\l  br i1 %15, label %16, label %20\l|{<s0>T|<s1>F}}"];
	Node0x1939d30:s0 -> Node0x1939d80;
	Node0x1939d30:s1 -> Node0x1939dd0;
	Node0x1939d80 [shape=record,label="{%16:\l16:                                               \l  %17 = tail call float @llvm.experimental.constrained.fmul.f32(float %0,\l... float %1, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %18 = tail call float @llvm.experimental.constrained.fmul.f32(float %0,\l... float %1, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %19 = tail call float @llvm.experimental.constrained.fdiv.f32(float %17,\l... float %18, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  br label %155\l}"];
	Node0x1939d80 -> Node0x193a640;
	Node0x1939dd0 [shape=record,label="{%20:\l20:                                               \l  %21 = and i32 %4, 2147483647\l  %22 = icmp eq i32 %21, 0\l  br i1 %22, label %155, label %23\l|{<s0>T|<s1>F}}"];
	Node0x1939dd0:s0 -> Node0x193a640;
	Node0x1939dd0:s1 -> Node0x1939e20;
	Node0x1939e20 [shape=record,label="{%23:\l23:                                               \l  %24 = icmp eq i32 %7, 0\l  br i1 %24, label %25, label %38\l|{<s0>T|<s1>F}}"];
	Node0x1939e20:s0 -> Node0x1939e70;
	Node0x1939e20:s1 -> Node0x1939f60;
	Node0x1939e70 [shape=record,label="{%25:\l25:                                               \l  %26 = shl i32 %4, 9\l  %27 = icmp sgt i32 %26, -1\l  br i1 %27, label %28, label %34\l|{<s0>T|<s1>F}}"];
	Node0x1939e70:s0 -> Node0x1939ec0;
	Node0x1939e70:s1 -> Node0x1939f10;
	Node0x1939ec0 [shape=record,label="{%28:\l28:                                               \l  %29 = phi i32 [ %32, %28 ], [ %26, %25 ]\l  %30 = phi i32 [ %31, %28 ], [ 0, %25 ]\l  %31 = add nsw i32 %30, -1\l  %32 = shl nuw i32 %29, 1\l  %33 = icmp sgt i32 %32, -1\l  br i1 %33, label %28, label %34\l|{<s0>T|<s1>F}}"];
	Node0x1939ec0:s0 -> Node0x1939ec0;
	Node0x1939ec0:s1 -> Node0x1939f10;
	Node0x1939f10 [shape=record,label="{%34:\l34:                                               \l  %35 = phi i32 [ 0, %25 ], [ %31, %28 ]\l  %36 = sub i32 1, %35\l  %37 = shl i32 %4, %36\l  br label %41\l}"];
	Node0x1939f10 -> Node0x1939fb0;
	Node0x1939f60 [shape=record,label="{%38:\l38:                                               \l  %39 = and i32 %4, 8388607\l  %40 = or i32 %39, 8388608\l  br label %41\l}"];
	Node0x1939f60 -> Node0x1939fb0;
	Node0x1939fb0 [shape=record,label="{%41:\l41:                                               \l  %42 = phi i32 [ %7, %38 ], [ %35, %34 ]\l  %43 = phi i32 [ %40, %38 ], [ %37, %34 ]\l  %44 = icmp eq i32 %9, 0\l  br i1 %44, label %45, label %58\l|{<s0>T|<s1>F}}"];
	Node0x1939fb0:s0 -> Node0x193a000;
	Node0x1939fb0:s1 -> Node0x193a0f0;
	Node0x193a000 [shape=record,label="{%45:\l45:                                               \l  %46 = shl i32 %5, 9\l  %47 = icmp sgt i32 %46, -1\l  br i1 %47, label %48, label %54\l|{<s0>T|<s1>F}}"];
	Node0x193a000:s0 -> Node0x193a050;
	Node0x193a000:s1 -> Node0x193a0a0;
	Node0x193a050 [shape=record,label="{%48:\l48:                                               \l  %49 = phi i32 [ %52, %48 ], [ %46, %45 ]\l  %50 = phi i32 [ %51, %48 ], [ 0, %45 ]\l  %51 = add nsw i32 %50, -1\l  %52 = shl nuw i32 %49, 1\l  %53 = icmp sgt i32 %52, -1\l  br i1 %53, label %48, label %54\l|{<s0>T|<s1>F}}"];
	Node0x193a050:s0 -> Node0x193a050;
	Node0x193a050:s1 -> Node0x193a0a0;
	Node0x193a0a0 [shape=record,label="{%54:\l54:                                               \l  %55 = phi i32 [ 0, %45 ], [ %51, %48 ]\l  %56 = sub i32 1, %55\l  %57 = shl i32 %5, %56\l  br label %61\l}"];
	Node0x193a0a0 -> Node0x193a140;
	Node0x193a0f0 [shape=record,label="{%58:\l58:                                               \l  %59 = and i32 %5, 8388607\l  %60 = or i32 %59, 8388608\l  br label %61\l}"];
	Node0x193a0f0 -> Node0x193a140;
	Node0x193a140 [shape=record,label="{%61:\l61:                                               \l  %62 = phi i32 [ %60, %58 ], [ %57, %54 ]\l  %63 = phi i32 [ %9, %58 ], [ %55, %54 ]\l  %64 = icmp slt i32 %42, %63\l  br i1 %64, label %72, label %65\l|{<s0>T|<s1>F}}"];
	Node0x193a140:s0 -> Node0x193a1e0;
	Node0x193a140:s1 -> Node0x193a190;
	Node0x193a190 [shape=record,label="{%65:\l65:                                               \l  %66 = icmp sgt i32 %42, %63\l  %67 = sub i32 %43, %62\l  %68 = icmp sgt i32 %67, -1\l  %69 = lshr i32 %67, 31\l  %70 = xor i32 %69, 1\l  %71 = select i1 %68, i32 %67, i32 %43\l  br i1 %66, label %75, label %89\l|{<s0>T|<s1>F}}"];
	Node0x193a190:s0 -> Node0x193a230;
	Node0x193a190:s1 -> Node0x193a280;
	Node0x193a1e0 [shape=record,label="{%72:\l72:                                               \l  %73 = add nsw i32 %42, 1\l  %74 = icmp eq i32 %73, %63\l  br i1 %74, label %102, label %155\l|{<s0>T|<s1>F}}"];
	Node0x193a1e0:s0 -> Node0x193a370;
	Node0x193a1e0:s1 -> Node0x193a640;
	Node0x193a230 [shape=record,label="{%75:\l75:                                               \l  %76 = phi i32 [ %88, %75 ], [ %71, %65 ]\l  %77 = phi i32 [ %87, %75 ], [ %70, %65 ]\l  %78 = phi i32 [ %81, %75 ], [ %42, %65 ]\l  %79 = shl i32 %76, 1\l  %80 = shl i32 %77, 1\l  %81 = add nsw i32 %78, -1\l  %82 = icmp sgt i32 %81, %63\l  %83 = sub i32 %79, %62\l  %84 = icmp sgt i32 %83, -1\l  %85 = lshr i32 %83, 31\l  %86 = or i32 %85, %80\l  %87 = xor i32 %86, 1\l  %88 = select i1 %84, i32 %83, i32 %79\l  br i1 %82, label %75, label %89\l|{<s0>T|<s1>F}}"];
	Node0x193a230:s0 -> Node0x193a230;
	Node0x193a230:s1 -> Node0x193a280;
	Node0x193a280 [shape=record,label="{%89:\l89:                                               \l  %90 = phi i32 [ %42, %65 ], [ %63, %75 ]\l  %91 = phi i32 [ %70, %65 ], [ %87, %75 ]\l  %92 = phi i32 [ %71, %65 ], [ %88, %75 ]\l  %93 = icmp eq i32 %92, 0\l  br i1 %93, label %111, label %94\l|{<s0>T|<s1>F}}"];
	Node0x193a280:s0 -> Node0x193a410;
	Node0x193a280:s1 -> Node0x193a2d0;
	Node0x193a2d0 [shape=record,label="{%94:\l94:                                               \l  %95 = icmp ult i32 %92, 8388608\l  br i1 %95, label %96, label %102\l|{<s0>T|<s1>F}}"];
	Node0x193a2d0:s0 -> Node0x193a320;
	Node0x193a2d0:s1 -> Node0x193a370;
	Node0x193a320 [shape=record,label="{%96:\l96:                                               \l  %97 = phi i32 [ %99, %96 ], [ %92, %94 ]\l  %98 = phi i32 [ %100, %96 ], [ %90, %94 ]\l  %99 = shl nuw nsw i32 %97, 1\l  %100 = add nsw i32 %98, -1\l  %101 = icmp ult i32 %97, 4194304\l  br i1 %101, label %96, label %102\l|{<s0>T|<s1>F}}"];
	Node0x193a320:s0 -> Node0x193a320;
	Node0x193a320:s1 -> Node0x193a370;
	Node0x193a370 [shape=record,label="{%102:\l102:                                              \l  %103 = phi i32 [ %42, %72 ], [ %90, %94 ], [ %100, %96 ]\l  %104 = phi i32 [ 0, %72 ], [ %91, %94 ], [ %91, %96 ]\l  %105 = phi i32 [ %43, %72 ], [ %92, %94 ], [ %99, %96 ]\l  %106 = icmp sgt i32 %103, 0\l  br i1 %106, label %107, label %111\l|{<s0>T|<s1>F}}"];
	Node0x193a370:s0 -> Node0x193a3c0;
	Node0x193a370:s1 -> Node0x193a410;
	Node0x193a3c0 [shape=record,label="{%107:\l107:                                              \l  %108 = add i32 %105, -8388608\l  %109 = shl i32 %103, 23\l  %110 = or i32 %108, %109\l  br label %117\l}"];
	Node0x193a3c0 -> Node0x193a460;
	Node0x193a410 [shape=record,label="{%111:\l111:                                              \l  %112 = phi i32 [ %105, %102 ], [ 0, %89 ]\l  %113 = phi i32 [ %104, %102 ], [ %91, %89 ]\l  %114 = phi i32 [ %103, %102 ], [ -30, %89 ]\l  %115 = sub i32 1, %114\l  %116 = lshr i32 %112, %115\l  br label %117\l}"];
	Node0x193a410 -> Node0x193a460;
	Node0x193a460 [shape=record,label="{%117:\l117:                                              \l  %118 = phi i32 [ %104, %107 ], [ %113, %111 ]\l  %119 = phi i32 [ %103, %107 ], [ %114, %111 ]\l  %120 = phi i32 [ %110, %107 ], [ %116, %111 ]\l  %121 = bitcast i32 %120 to float\l  %122 = icmp slt i32 %5, 0\l  %123 = fneg float %1\l  %124 = select i1 %122, float %123, float %1\l  %125 = icmp eq i32 %119, %63\l  br i1 %125, label %141, label %126\l|{<s0>T|<s1>F}}"];
	Node0x193a460:s0 -> Node0x193a5a0;
	Node0x193a460:s1 -> Node0x193a4b0;
	Node0x193a4b0 [shape=record,label="{%126:\l126:                                              \l  %127 = add nsw i32 %119, 1\l  %128 = icmp eq i32 %127, %63\l  br i1 %128, label %129, label %144\l|{<s0>T|<s1>F}}"];
	Node0x193a4b0:s0 -> Node0x193a500;
	Node0x193a4b0:s1 -> Node0x193a5f0;
	Node0x193a500 [shape=record,label="{%129:\l129:                                              \l  %130 = tail call float @llvm.experimental.constrained.sitofp.f32.i32(i32 2,\l... metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %131 = tail call float @llvm.experimental.constrained.fmul.f32(float %130,\l... float %121, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %132 = tail call i1 @llvm.experimental.constrained.fcmps.f32(float %131,\l... float %124, metadata !\"ogt\", metadata !\"fpexcept.ignore\") #40\l  br i1 %132, label %141, label %133\l|{<s0>T|<s1>F}}"];
	Node0x193a500:s0 -> Node0x193a5a0;
	Node0x193a500:s1 -> Node0x193a550;
	Node0x193a550 [shape=record,label="{%133:\l133:                                              \l  %134 = tail call float @llvm.experimental.constrained.sitofp.f32.i32(i32 2,\l... metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %135 = tail call float @llvm.experimental.constrained.fmul.f32(float %134,\l... float %121, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %136 = tail call i1 @llvm.experimental.constrained.fcmp.f32(float %135,\l... float %124, metadata !\"oeq\", metadata !\"fpexcept.ignore\") #40\l  %137 = xor i1 %136, true\l  %138 = and i32 %118, 1\l  %139 = icmp eq i32 %138, 0\l  %140 = or i1 %139, %137\l  br i1 %140, label %144, label %141\l|{<s0>T|<s1>F}}"];
	Node0x193a550:s0 -> Node0x193a5f0;
	Node0x193a550:s1 -> Node0x193a5a0;
	Node0x193a5a0 [shape=record,label="{%141:\l141:                                              \l  %142 = tail call float @llvm.experimental.constrained.fsub.f32(float %121,\l... float %124, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %143 = add i32 %118, 1\l  br label %144\l}"];
	Node0x193a5a0 -> Node0x193a5f0;
	Node0x193a5f0 [shape=record,label="{%144:\l144:                                              \l  %145 = phi float [ %142, %141 ], [ %121, %133 ], [ %121, %126 ]\l  %146 = phi i32 [ %143, %141 ], [ %118, %133 ], [ %118, %126 ]\l  %147 = and i32 %146, 2147483647\l  %148 = xor i32 %5, %4\l  %149 = icmp sgt i32 %148, -1\l  %150 = sub nsw i32 0, %147\l  %151 = select i1 %149, i32 %147, i32 %150\l  store i32 %151, i32* %2, align 4, !tbaa !1632\l  %152 = icmp slt i32 %4, 0\l  %153 = fneg float %145\l  %154 = select i1 %152, float %153, float %145\l  br label %155\l}"];
	Node0x193a5f0 -> Node0x193a640;
	Node0x193a640 [shape=record,label="{%155:\l155:                                              \l  %156 = phi float [ %19, %16 ], [ %154, %144 ], [ %0, %20 ], [ %0, %72 ]\l  ret float %156\l}"];
}
