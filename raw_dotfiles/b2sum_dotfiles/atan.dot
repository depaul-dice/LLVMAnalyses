digraph "CFG for 'atan' function" {
	label="CFG for 'atan' function";

	Node0x19c1100 [shape=record,label="{%1:\l  %2 = alloca float, align 4\l  %3 = bitcast double %0 to i64\l  %4 = lshr i64 %3, 32\l  %5 = trunc i64 %4 to i32\l  %6 = and i32 %5, 2147483647\l  %7 = icmp ugt i32 %6, 1141899263\l  br i1 %7, label %8, label %17\l|{<s0>T|<s1>F}}"];
	Node0x19c1100:s0 -> Node0x19c16c0;
	Node0x19c1100:s1 -> Node0x19c1760;
	Node0x19c16c0 [shape=record,label="{%8:\l8:                                                \l  %9 = and i64 %3, 9223372036854775807\l  %10 = icmp ugt i64 %9, 9218868437227405312\l  br i1 %10, label %93, label %11\l|{<s0>T|<s1>F}}"];
	Node0x19c16c0:s0 -> Node0x19c1bc0;
	Node0x19c16c0:s1 -> Node0x19c1710;
	Node0x19c1710 [shape=record,label="{%11:\l11:                                               \l  %12 = tail call double @llvm.experimental.constrained.fpext.f64.f32(float\l... 0x3870000000000000, metadata !\"fpexcept.ignore\") #40\l  %13 = tail call double @llvm.experimental.constrained.fadd.f64(double\l... 0x3FF921FB54442D18, double %12, metadata !\"round.dynamic\", metadata\l... !\"fpexcept.ignore\") #40\l  %14 = icmp slt i64 %3, 0\l  %15 = fneg double %13\l  %16 = select i1 %14, double %15, double %13\l  br label %93\l}"];
	Node0x19c1710 -> Node0x19c1bc0;
	Node0x19c1760 [shape=record,label="{%17:\l17:                                               \l  %18 = icmp ult i32 %6, 1071382528\l  br i1 %18, label %19, label %26\l|{<s0>T|<s1>F}}"];
	Node0x19c1760:s0 -> Node0x19c17b0;
	Node0x19c1760:s1 -> Node0x19c18a0;
	Node0x19c17b0 [shape=record,label="{%19:\l19:                                               \l  %20 = icmp ult i32 %6, 1044381696\l  br i1 %20, label %21, label %49\l|{<s0>T|<s1>F}}"];
	Node0x19c17b0:s0 -> Node0x19c1800;
	Node0x19c17b0:s1 -> Node0x19c1ad0;
	Node0x19c1800 [shape=record,label="{%21:\l21:                                               \l  %22 = icmp ult i32 %6, 1048576\l  br i1 %22, label %23, label %93\l|{<s0>T|<s1>F}}"];
	Node0x19c1800:s0 -> Node0x19c1850;
	Node0x19c1800:s1 -> Node0x19c1bc0;
	Node0x19c1850 [shape=record,label="{%23:\l23:                                               \l  %24 = tail call float @llvm.experimental.constrained.fptrunc.f32.f64(double\l... %0, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %25 = bitcast float* %2 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %25)\l  store volatile float %24, float* %2, align 4, !tbaa !1632\l  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25)\l  br label %93\l}"];
	Node0x19c1850 -> Node0x19c1bc0;
	Node0x19c18a0 [shape=record,label="{%26:\l26:                                               \l  %27 = tail call double @fabs(double %0) #41\l  %28 = icmp ult i32 %6, 1072889856\l  br i1 %28, label %29, label %40\l|{<s0>T|<s1>F}}"];
	Node0x19c18a0:s0 -> Node0x19c18f0;
	Node0x19c18a0:s1 -> Node0x19c19e0;
	Node0x19c18f0 [shape=record,label="{%29:\l29:                                               \l  %30 = icmp ult i32 %6, 1072037888\l  br i1 %30, label %31, label %36\l|{<s0>T|<s1>F}}"];
	Node0x19c18f0:s0 -> Node0x19c1940;
	Node0x19c18f0:s1 -> Node0x19c1990;
	Node0x19c1940 [shape=record,label="{%31:\l31:                                               \l  %32 = tail call double @llvm.experimental.constrained.fmul.f64(double\l... 2.000000e+00, double %27, metadata !\"round.dynamic\", metadata\l... !\"fpexcept.ignore\") #40\l  %33 = tail call double @llvm.experimental.constrained.fsub.f64(double %32,\l... double 1.000000e+00, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\")\l... #40\l  %34 = tail call double @llvm.experimental.constrained.fadd.f64(double\l... 2.000000e+00, double %27, metadata !\"round.dynamic\", metadata\l... !\"fpexcept.ignore\") #40\l  %35 = tail call double @llvm.experimental.constrained.fdiv.f64(double %33,\l... double %34, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  br label %49\l}"];
	Node0x19c1940 -> Node0x19c1ad0;
	Node0x19c1990 [shape=record,label="{%36:\l36:                                               \l  %37 = tail call double @llvm.experimental.constrained.fsub.f64(double %27,\l... double 1.000000e+00, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\")\l... #40\l  %38 = tail call double @llvm.experimental.constrained.fadd.f64(double %27,\l... double 1.000000e+00, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\")\l... #40\l  %39 = tail call double @llvm.experimental.constrained.fdiv.f64(double %37,\l... double %38, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  br label %49\l}"];
	Node0x19c1990 -> Node0x19c1ad0;
	Node0x19c19e0 [shape=record,label="{%40:\l40:                                               \l  %41 = icmp ult i32 %6, 1073971200\l  br i1 %41, label %42, label %47\l|{<s0>T|<s1>F}}"];
	Node0x19c19e0:s0 -> Node0x19c1a30;
	Node0x19c19e0:s1 -> Node0x19c1a80;
	Node0x19c1a30 [shape=record,label="{%42:\l42:                                               \l  %43 = tail call double @llvm.experimental.constrained.fsub.f64(double %27,\l... double 1.500000e+00, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\")\l... #40\l  %44 = tail call double @llvm.experimental.constrained.fmul.f64(double\l... 1.500000e+00, double %27, metadata !\"round.dynamic\", metadata\l... !\"fpexcept.ignore\") #40\l  %45 = tail call double @llvm.experimental.constrained.fadd.f64(double\l... 1.000000e+00, double %44, metadata !\"round.dynamic\", metadata\l... !\"fpexcept.ignore\") #40\l  %46 = tail call double @llvm.experimental.constrained.fdiv.f64(double %43,\l... double %45, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  br label %49\l}"];
	Node0x19c1a30 -> Node0x19c1ad0;
	Node0x19c1a80 [shape=record,label="{%47:\l47:                                               \l  %48 = tail call double @llvm.experimental.constrained.fdiv.f64(double\l... -1.000000e+00, double %27, metadata !\"round.dynamic\", metadata\l... !\"fpexcept.ignore\") #40\l  br label %49\l}"];
	Node0x19c1a80 -> Node0x19c1ad0;
	Node0x19c1ad0 [shape=record,label="{%49:\l49:                                               \l  %50 = phi double [ %35, %31 ], [ %39, %36 ], [ %46, %42 ], [ %48, %47 ], [\l... %0, %19 ]\l  %51 = phi i32 [ 0, %31 ], [ 1, %36 ], [ 2, %42 ], [ 3, %47 ], [ -1, %19 ]\l  %52 = tail call double @llvm.experimental.constrained.fmul.f64(double %50,\l... double %50, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %53 = tail call double @llvm.experimental.constrained.fmul.f64(double %52,\l... double %52, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %54 = tail call double @llvm.experimental.constrained.fmul.f64(double %53,\l... double 0x3F90AD3AE322DA11, metadata !\"round.dynamic\", metadata\l... !\"fpexcept.ignore\") #40\l  %55 = tail call double @llvm.experimental.constrained.fadd.f64(double\l... 0x3FA97B4B24760DEB, double %54, metadata !\"round.dynamic\", metadata\l... !\"fpexcept.ignore\") #40\l  %56 = tail call double @llvm.experimental.constrained.fmul.f64(double %53,\l... double %55, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %57 = tail call double @llvm.experimental.constrained.fadd.f64(double\l... 0x3FB10D66A0D03D51, double %56, metadata !\"round.dynamic\", metadata\l... !\"fpexcept.ignore\") #40\l  %58 = tail call double @llvm.experimental.constrained.fmul.f64(double %53,\l... double %57, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %59 = tail call double @llvm.experimental.constrained.fadd.f64(double\l... 0x3FB745CDC54C206E, double %58, metadata !\"round.dynamic\", metadata\l... !\"fpexcept.ignore\") #40\l  %60 = tail call double @llvm.experimental.constrained.fmul.f64(double %53,\l... double %59, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %61 = tail call double @llvm.experimental.constrained.fadd.f64(double\l... 0x3FC24924920083FF, double %60, metadata !\"round.dynamic\", metadata\l... !\"fpexcept.ignore\") #40\l  %62 = tail call double @llvm.experimental.constrained.fmul.f64(double %53,\l... double %61, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %63 = tail call double @llvm.experimental.constrained.fadd.f64(double\l... 0x3FD555555555550D, double %62, metadata !\"round.dynamic\", metadata\l... !\"fpexcept.ignore\") #40\l  %64 = tail call double @llvm.experimental.constrained.fmul.f64(double %52,\l... double %63, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %65 = tail call double @llvm.experimental.constrained.fmul.f64(double %53,\l... double 0xBFA2B4442C6A6C2F, metadata !\"round.dynamic\", metadata\l... !\"fpexcept.ignore\") #40\l  %66 = tail call double @llvm.experimental.constrained.fadd.f64(double\l... 0xBFADDE2D52DEFD9A, double %65, metadata !\"round.dynamic\", metadata\l... !\"fpexcept.ignore\") #40\l  %67 = tail call double @llvm.experimental.constrained.fmul.f64(double %53,\l... double %66, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %68 = tail call double @llvm.experimental.constrained.fadd.f64(double\l... 0xBFB3B0F2AF749A6D, double %67, metadata !\"round.dynamic\", metadata\l... !\"fpexcept.ignore\") #40\l  %69 = tail call double @llvm.experimental.constrained.fmul.f64(double %53,\l... double %68, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %70 = tail call double @llvm.experimental.constrained.fadd.f64(double\l... 0xBFBC71C6FE231671, double %69, metadata !\"round.dynamic\", metadata\l... !\"fpexcept.ignore\") #40\l  %71 = tail call double @llvm.experimental.constrained.fmul.f64(double %53,\l... double %70, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %72 = tail call double @llvm.experimental.constrained.fadd.f64(double\l... 0xBFC999999998EBC4, double %71, metadata !\"round.dynamic\", metadata\l... !\"fpexcept.ignore\") #40\l  %73 = tail call double @llvm.experimental.constrained.fmul.f64(double %53,\l... double %72, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %74 = icmp slt i32 %51, 0\l  br i1 %74, label %75, label %79\l|{<s0>T|<s1>F}}"];
	Node0x19c1ad0:s0 -> Node0x19c1b20;
	Node0x19c1ad0:s1 -> Node0x19c1b70;
	Node0x19c1b20 [shape=record,label="{%75:\l75:                                               \l  %76 = tail call double @llvm.experimental.constrained.fadd.f64(double %64,\l... double %73, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %77 = tail call double @llvm.experimental.constrained.fmul.f64(double %50,\l... double %76, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %78 = tail call double @llvm.experimental.constrained.fsub.f64(double %50,\l... double %77, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  br label %93\l}"];
	Node0x19c1b20 -> Node0x19c1bc0;
	Node0x19c1b70 [shape=record,label="{%79:\l79:                                               \l  %80 = zext i32 %51 to i64\l  %81 = getelementptr inbounds [4 x double], [4 x double]* @atanhi.1299, i64\l... 0, i64 %80\l  %82 = load double, double* %81, align 8, !tbaa !1636\l  %83 = tail call double @llvm.experimental.constrained.fadd.f64(double %64,\l... double %73, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %84 = tail call double @llvm.experimental.constrained.fmul.f64(double %50,\l... double %83, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %85 = getelementptr inbounds [4 x double], [4 x double]* @atanlo.1300, i64\l... 0, i64 %80\l  %86 = load double, double* %85, align 8, !tbaa !1636\l  %87 = tail call double @llvm.experimental.constrained.fsub.f64(double %84,\l... double %86, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %88 = tail call double @llvm.experimental.constrained.fsub.f64(double %87,\l... double %50, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %89 = tail call double @llvm.experimental.constrained.fsub.f64(double %82,\l... double %88, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %90 = icmp slt i64 %3, 0\l  %91 = fneg double %89\l  %92 = select i1 %90, double %91, double %89\l  br label %93\l}"];
	Node0x19c1b70 -> Node0x19c1bc0;
	Node0x19c1bc0 [shape=record,label="{%93:\l93:                                               \l  %94 = phi double [ %16, %11 ], [ %78, %75 ], [ %92, %79 ], [ %0, %8 ], [ %0,\l... %23 ], [ %0, %21 ]\l  ret double %94\l}"];
}
