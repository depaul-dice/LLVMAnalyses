digraph "CFG for 'mbsrtowcs' function" {
	label="CFG for 'mbsrtowcs' function";

	Node0x1824b80 [shape=record,label="{%4:\l  %5 = load i8*, i8** %1, align 8, !tbaa !1632\l  %6 = icmp eq %struct.FTW* %3, null\l  br i1 %6, label %14, label %7\l|{<s0>T|<s1>F}}"];
	Node0x1824b80:s0 -> Node0x1824f80;
	Node0x1824b80:s1 -> Node0x1824e90;
	Node0x1824e90 [shape=record,label="{%7:\l7:                                                \l  %8 = getelementptr %struct.FTW, %struct.FTW* %3, i64 0, i32 0\l  %9 = load i32, i32* %8, align 4, !tbaa !1636\l  %10 = icmp eq i32 %9, 0\l  br i1 %10, label %14, label %11\l|{<s0>T|<s1>F}}"];
	Node0x1824e90:s0 -> Node0x1824f80;
	Node0x1824e90:s1 -> Node0x1824ee0;
	Node0x1824ee0 [shape=record,label="{%11:\l11:                                               \l  %12 = icmp eq i32* %0, null\l  br i1 %12, label %103, label %13\l|{<s0>T|<s1>F}}"];
	Node0x1824ee0:s0 -> Node0x18255c0;
	Node0x1824ee0:s1 -> Node0x1824f30;
	Node0x1824f30 [shape=record,label="{%13:\l13:                                               \l  store i32 0, i32* %8, align 4, !tbaa !1636\l  br label %221\l}"];
	Node0x1824f30 -> Node0x1825c00;
	Node0x1824f80 [shape=record,label="{%14:\l14:                                               \l  %15 = tail call %struct.__pthread* asm \"mov %fs:0,$0\",\l... \"=r,~\{dirflag\},~\{fpsr\},~\{flags\}\"() #40, !srcloc !1638\l  %16 = getelementptr inbounds %struct.__pthread, %struct.__pthread* %15, i64\l... 0, i32 24\l  %17 = load %struct.__locale_struct*, %struct.__locale_struct** %16, align 8,\l... !tbaa !1639\l  %18 = getelementptr inbounds %struct.__locale_struct,\l... %struct.__locale_struct* %17, i64 0, i32 0, i64 0\l  %19 = load %struct.__locale_map*, %struct.__locale_map** %18, align 8, !tbaa\l... !1632\l  %20 = icmp eq %struct.__locale_map* %19, null\l  %21 = icmp ne i32* %0, null\l  br i1 %20, label %22, label %44\l|{<s0>T|<s1>F}}"];
	Node0x1824f80:s0 -> Node0x1824fd0;
	Node0x1824f80:s1 -> Node0x1825200;
	Node0x1824fd0 [shape=record,label="{%22:\l22:                                               \l  br i1 %21, label %23, label %25\l|{<s0>T|<s1>F}}"];
	Node0x1824fd0:s0 -> Node0x1825020;
	Node0x1824fd0:s1 -> Node0x1825070;
	Node0x1825020 [shape=record,label="{%23:\l23:                                               \l  %24 = icmp eq i64 %2, 0\l  br i1 %24, label %27, label %29\l|{<s0>T|<s1>F}}"];
	Node0x1825020:s0 -> Node0x18250c0;
	Node0x1825020:s1 -> Node0x1825110;
	Node0x1825070 [shape=record,label="{%25:\l25:                                               \l  %26 = tail call i64 @strlen(i8* %5) #41\l  br label %294\l}"];
	Node0x1825070 -> Node0x1826100;
	Node0x18250c0 [shape=record,label="{%27:\l27:                                               \l  %28 = phi i8* [ %5, %23 ], [ %36, %35 ]\l  store i8* %28, i8** %1, align 8, !tbaa !1632\l  br label %294\l}"];
	Node0x18250c0 -> Node0x1826100;
	Node0x1825110 [shape=record,label="{%29:\l29:                                               \l  %30 = phi i8* [ %36, %35 ], [ %5, %23 ]\l  %31 = phi i32* [ %39, %35 ], [ %0, %23 ]\l  %32 = phi i64 [ %40, %35 ], [ %2, %23 ]\l  %33 = load i8, i8* %30, align 1, !tbaa !1643\l  %34 = icmp eq i8 %33, 0\l  br i1 %34, label %42, label %35\l|{<s0>T|<s1>F}}"];
	Node0x1825110:s0 -> Node0x18251b0;
	Node0x1825110:s1 -> Node0x1825160;
	Node0x1825160 [shape=record,label="{%35:\l35:                                               \l  %36 = getelementptr inbounds i8, i8* %30, i64 1\l  %37 = sext i8 %33 to i32\l  %38 = and i32 %37, 57343\l  %39 = getelementptr inbounds i32, i32* %31, i64 1\l  store i32 %38, i32* %31, align 4, !tbaa !1636\l  %40 = add i64 %32, -1\l  %41 = icmp eq i64 %40, 0\l  br i1 %41, label %27, label %29\l|{<s0>T|<s1>F}}"];
	Node0x1825160:s0 -> Node0x18250c0;
	Node0x1825160:s1 -> Node0x1825110;
	Node0x18251b0 [shape=record,label="{%42:\l42:                                               \l  store i32 0, i32* %31, align 4, !tbaa !1636\l  store i8* null, i8** %1, align 8, !tbaa !1632\l  %43 = sub i64 %2, %32\l  br label %294\l}"];
	Node0x18251b0 -> Node0x1826100;
	Node0x1825200 [shape=record,label="{%44:\l44:                                               \l  br i1 %21, label %48, label %45\l|{<s0>T|<s1>F}}"];
	Node0x1825200:s0 -> Node0x18252a0;
	Node0x1825200:s1 -> Node0x1825250;
	Node0x1825250 [shape=record,label="{%45:\l45:                                               \l  %46 = phi i64 [ %135, %133 ], [ %2, %44 ]\l  %47 = phi i8* [ %134, %133 ], [ %5, %44 ]\l  br label %53\l}"];
	Node0x1825250 -> Node0x18252f0;
	Node0x18252a0 [shape=record,label="{%48:\l48:                                               \l  %49 = phi i64 [ %2, %44 ], [ %263, %259 ]\l  %50 = phi i32* [ %0, %44 ], [ %262, %259 ]\l  %51 = phi i8* [ %5, %44 ], [ %260, %259 ]\l  %52 = icmp eq i64 %49, 0\l  br i1 %52, label %136, label %138\l|{<s0>T|<s1>F}}"];
	Node0x18252a0:s0 -> Node0x18257f0;
	Node0x18252a0:s1 -> Node0x1825840;
	Node0x18252f0 [shape=record,label="{%53:\l53:                                               \l  %54 = phi i64 [ %94, %92 ], [ %46, %45 ]\l  %55 = phi i8* [ %93, %92 ], [ %47, %45 ]\l  %56 = load i8, i8* %55, align 1, !tbaa !1643\l  %57 = zext i8 %56 to i32\l  %58 = add nsw i32 %57, -1\l  %59 = icmp ult i32 %58, 127\l  br i1 %59, label %60, label %85\l|{<s0>T|<s1>F}}"];
	Node0x18252f0:s0 -> Node0x1825340;
	Node0x18252f0:s1 -> Node0x1825480;
	Node0x1825340 [shape=record,label="{%60:\l60:                                               \l  %61 = ptrtoint i8* %55 to i64\l  %62 = and i64 %61, 3\l  %63 = icmp eq i64 %62, 0\l  br i1 %63, label %64, label %85\l|{<s0>T|<s1>F}}"];
	Node0x1825340:s0 -> Node0x1825390;
	Node0x1825340:s1 -> Node0x1825480;
	Node0x1825390 [shape=record,label="{%64:\l64:                                               \l  %65 = bitcast i8* %55 to i32*\l  %66 = load i32, i32* %65, align 4, !tbaa !1636\l  %67 = add i32 %66, -16843009\l  %68 = or i32 %67, %66\l  %69 = and i32 %68, -2139062144\l  %70 = icmp eq i32 %69, 0\l  %71 = trunc i32 %66 to i8\l  br i1 %70, label %72, label %85\l|{<s0>T|<s1>F}}"];
	Node0x1825390:s0 -> Node0x18253e0;
	Node0x1825390:s1 -> Node0x1825480;
	Node0x18253e0 [shape=record,label="{%72:\l72:                                               \l  %73 = phi i8* [ %75, %72 ], [ %55, %64 ]\l  %74 = phi i64 [ %76, %72 ], [ %54, %64 ]\l  %75 = getelementptr inbounds i8, i8* %73, i64 4\l  %76 = add i64 %74, -4\l  %77 = bitcast i8* %75 to i32*\l  %78 = load i32, i32* %77, align 4, !tbaa !1636\l  %79 = add i32 %78, -16843009\l  %80 = or i32 %79, %78\l  %81 = and i32 %80, -2139062144\l  %82 = icmp eq i32 %81, 0\l  br i1 %82, label %72, label %83\l|{<s0>T|<s1>F}}"];
	Node0x18253e0:s0 -> Node0x18253e0;
	Node0x18253e0:s1 -> Node0x1825430;
	Node0x1825430 [shape=record,label="{%83:\l83:                                               \l  %84 = trunc i32 %78 to i8\l  br label %85\l}"];
	Node0x1825430 -> Node0x1825480;
	Node0x1825480 [shape=record,label="{%85:\l85:                                               \l  %86 = phi i8 [ %56, %60 ], [ %56, %53 ], [ %71, %64 ], [ %84, %83 ]\l  %87 = phi i64 [ %54, %60 ], [ %54, %53 ], [ %54, %64 ], [ %76, %83 ]\l  %88 = phi i8* [ %55, %60 ], [ %55, %53 ], [ %55, %64 ], [ %75, %83 ]\l  %89 = zext i8 %86 to i32\l  %90 = add nsw i32 %89, -1\l  %91 = icmp ult i32 %90, 127\l  br i1 %91, label %92, label %95\l|{<s0>T|<s1>F}}"];
	Node0x1825480:s0 -> Node0x18254d0;
	Node0x1825480:s1 -> Node0x1825520;
	Node0x18254d0 [shape=record,label="{%92:\l92:                                               \l  %93 = getelementptr inbounds i8, i8* %88, i64 1\l  %94 = add i64 %87, -1\l  br label %53\l}"];
	Node0x18254d0 -> Node0x18252f0;
	Node0x1825520 [shape=record,label="{%95:\l95:                                               \l  %96 = add nsw i32 %89, -194\l  %97 = icmp ugt i32 %96, 50\l  br i1 %97, label %276, label %98\l|{<s0>T|<s1>F}}"];
	Node0x1825520:s0 -> Node0x1825f20;
	Node0x1825520:s1 -> Node0x1825570;
	Node0x1825570 [shape=record,label="{%98:\l98:                                               \l  %99 = getelementptr inbounds i8, i8* %88, i64 1\l  %100 = zext i32 %96 to i64\l  %101 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([51 x i32]*\l... @__fsmu8 to [0 x i32]*), i64 0, i64 %100\l  %102 = load i32, i32* %101, align 4, !tbaa !1636\l  br label %103\l}"];
	Node0x1825570 -> Node0x18255c0;
	Node0x18255c0 [shape=record,label="{%103:\l103:                                              \l  %104 = phi i64 [ %2, %11 ], [ %87, %98 ]\l  %105 = phi i8* [ %5, %11 ], [ %99, %98 ]\l  %106 = phi i32 [ %9, %11 ], [ %102, %98 ]\l  %107 = load i8, i8* %105, align 1, !tbaa !1643\l  %108 = lshr i8 %107, 3\l  %109 = zext i8 %108 to i32\l  %110 = add nsw i32 %109, -16\l  %111 = ashr i32 %106, 26\l  %112 = add nsw i32 %111, %109\l  %113 = or i32 %110, %112\l  %114 = icmp ugt i32 %113, 7\l  br i1 %114, label %267, label %115\l|{<s0>T|<s1>F}}"];
	Node0x18255c0:s0 -> Node0x1825e80;
	Node0x18255c0:s1 -> Node0x1825610;
	Node0x1825610 [shape=record,label="{%115:\l115:                                              \l  %116 = getelementptr inbounds i8, i8* %105, i64 1\l  %117 = and i32 %106, 33554432\l  %118 = icmp eq i32 %117, 0\l  br i1 %118, label %133, label %119\l|{<s0>T|<s1>F}}"];
	Node0x1825610:s0 -> Node0x18257a0;
	Node0x1825610:s1 -> Node0x1825660;
	Node0x1825660 [shape=record,label="{%119:\l119:                                              \l  %120 = load i8, i8* %116, align 1, !tbaa !1643\l  %121 = and i8 %120, -64\l  %122 = icmp eq i8 %121, -128\l  br i1 %122, label %123, label %267\l|{<s0>T|<s1>F}}"];
	Node0x1825660:s0 -> Node0x18256b0;
	Node0x1825660:s1 -> Node0x1825e80;
	Node0x18256b0 [shape=record,label="{%123:\l123:                                              \l  %124 = getelementptr inbounds i8, i8* %105, i64 2\l  %125 = and i32 %106, 524288\l  %126 = icmp eq i32 %125, 0\l  br i1 %126, label %133, label %127\l|{<s0>T|<s1>F}}"];
	Node0x18256b0:s0 -> Node0x18257a0;
	Node0x18256b0:s1 -> Node0x1825700;
	Node0x1825700 [shape=record,label="{%127:\l127:                                              \l  %128 = load i8, i8* %124, align 1, !tbaa !1643\l  %129 = and i8 %128, -64\l  %130 = icmp eq i8 %129, -128\l  br i1 %130, label %131, label %267\l|{<s0>T|<s1>F}}"];
	Node0x1825700:s0 -> Node0x1825750;
	Node0x1825700:s1 -> Node0x1825e80;
	Node0x1825750 [shape=record,label="{%131:\l131:                                              \l  %132 = getelementptr inbounds i8, i8* %105, i64 3\l  br label %133\l}"];
	Node0x1825750 -> Node0x18257a0;
	Node0x18257a0 [shape=record,label="{%133:\l133:                                              \l  %134 = phi i8* [ %132, %131 ], [ %124, %123 ], [ %116, %115 ]\l  %135 = add i64 %104, -1\l  br label %45\l}"];
	Node0x18257a0 -> Node0x1825250;
	Node0x18257f0 [shape=record,label="{%136:\l136:                                              \l  %137 = phi i8* [ %51, %48 ], [ %209, %204 ]\l  store i8* %137, i8** %1, align 8, !tbaa !1632\l  br label %294\l}"];
	Node0x18257f0 -> Node0x1826100;
	Node0x1825840 [shape=record,label="{%138:\l138:                                              \l  %139 = phi i8* [ %209, %204 ], [ %51, %48 ]\l  %140 = phi i32* [ %210, %204 ], [ %50, %48 ]\l  %141 = phi i64 [ %211, %204 ], [ %49, %48 ]\l  %142 = load i8, i8* %139, align 1, !tbaa !1643\l  %143 = zext i8 %142 to i32\l  %144 = add nsw i32 %143, -1\l  %145 = icmp ult i32 %144, 127\l  br i1 %145, label %146, label %196\l|{<s0>T|<s1>F}}"];
	Node0x1825840:s0 -> Node0x1825890;
	Node0x1825840:s1 -> Node0x1825ac0;
	Node0x1825890 [shape=record,label="{%146:\l146:                                              \l  %147 = ptrtoint i8* %139 to i64\l  %148 = and i64 %147, 3\l  %149 = icmp eq i64 %148, 0\l  %150 = icmp ugt i64 %141, 4\l  %151 = and i1 %149, %150\l  br i1 %151, label %152, label %204\l|{<s0>T|<s1>F}}"];
	Node0x1825890:s0 -> Node0x18258e0;
	Node0x1825890:s1 -> Node0x1825b10;
	Node0x18258e0 [shape=record,label="{%152:\l152:                                              \l  %153 = add i64 %141, -4\l  %154 = add i64 %141, -5\l  %155 = and i64 %154, -4\l  %156 = sub i64 %153, %155\l  br label %157\l}"];
	Node0x18258e0 -> Node0x1825930;
	Node0x1825930 [shape=record,label="{%157:\l157:                                              \l  %158 = phi i8* [ %179, %167 ], [ %139, %152 ]\l  %159 = phi i32* [ %182, %167 ], [ %140, %152 ]\l  %160 = phi i64 [ %183, %167 ], [ %141, %152 ]\l  %161 = bitcast i8* %158 to i32*\l  %162 = load i32, i32* %161, align 4, !tbaa !1636\l  %163 = add i32 %162, -16843009\l  %164 = or i32 %163, %162\l  %165 = and i32 %164, -2139062144\l  %166 = icmp eq i32 %165, 0\l  br i1 %166, label %167, label %187\l|{<s0>T|<s1>F}}"];
	Node0x1825930:s0 -> Node0x1825980;
	Node0x1825930:s1 -> Node0x1825a20;
	Node0x1825980 [shape=record,label="{%167:\l167:                                              \l  %168 = getelementptr inbounds i8, i8* %158, i64 1\l  %169 = and i32 %162, 255\l  %170 = getelementptr inbounds i32, i32* %159, i64 1\l  store i32 %169, i32* %159, align 4, !tbaa !1636\l  %171 = getelementptr inbounds i8, i8* %158, i64 2\l  %172 = load i8, i8* %168, align 1, !tbaa !1643\l  %173 = zext i8 %172 to i32\l  %174 = getelementptr inbounds i32, i32* %159, i64 2\l  store i32 %173, i32* %170, align 4, !tbaa !1636\l  %175 = getelementptr inbounds i8, i8* %158, i64 3\l  %176 = load i8, i8* %171, align 1, !tbaa !1643\l  %177 = zext i8 %176 to i32\l  %178 = getelementptr inbounds i32, i32* %159, i64 3\l  store i32 %177, i32* %174, align 4, !tbaa !1636\l  %179 = getelementptr inbounds i8, i8* %158, i64 4\l  %180 = load i8, i8* %175, align 1, !tbaa !1643\l  %181 = zext i8 %180 to i32\l  %182 = getelementptr inbounds i32, i32* %159, i64 4\l  store i32 %181, i32* %178, align 4, !tbaa !1636\l  %183 = add i64 %160, -4\l  %184 = icmp ugt i64 %183, 4\l  br i1 %184, label %157, label %185\l|{<s0>T|<s1>F}}"];
	Node0x1825980:s0 -> Node0x1825930;
	Node0x1825980:s1 -> Node0x18259d0;
	Node0x18259d0 [shape=record,label="{%185:\l185:                                              \l  %186 = load i8, i8* %179, align 1, !tbaa !1643\l  br label %189\l}"];
	Node0x18259d0 -> Node0x1825a70;
	Node0x1825a20 [shape=record,label="{%187:\l187:                                              \l  %188 = trunc i32 %162 to i8\l  br label %189\l}"];
	Node0x1825a20 -> Node0x1825a70;
	Node0x1825a70 [shape=record,label="{%189:\l189:                                              \l  %190 = phi i8 [ %186, %185 ], [ %188, %187 ]\l  %191 = phi i64 [ %156, %185 ], [ %160, %187 ]\l  %192 = phi i32* [ %182, %185 ], [ %159, %187 ]\l  %193 = phi i8* [ %179, %185 ], [ %158, %187 ]\l  %194 = zext i8 %190 to i32\l  %195 = add nsw i32 %194, -1\l  br label %196\l}"];
	Node0x1825a70 -> Node0x1825ac0;
	Node0x1825ac0 [shape=record,label="{%196:\l196:                                              \l  %197 = phi i32 [ %195, %189 ], [ %144, %138 ]\l  %198 = phi i32 [ %194, %189 ], [ %143, %138 ]\l  %199 = phi i8 [ %190, %189 ], [ %142, %138 ]\l  %200 = phi i64 [ %191, %189 ], [ %141, %138 ]\l  %201 = phi i32* [ %192, %189 ], [ %140, %138 ]\l  %202 = phi i8* [ %193, %189 ], [ %139, %138 ]\l  %203 = icmp ult i32 %197, 127\l  br i1 %203, label %204, label %213\l|{<s0>T|<s1>F}}"];
	Node0x1825ac0:s0 -> Node0x1825b10;
	Node0x1825ac0:s1 -> Node0x1825b60;
	Node0x1825b10 [shape=record,label="{%204:\l204:                                              \l  %205 = phi i8* [ %202, %196 ], [ %139, %146 ]\l  %206 = phi i32* [ %201, %196 ], [ %140, %146 ]\l  %207 = phi i64 [ %200, %196 ], [ %141, %146 ]\l  %208 = phi i32 [ %198, %196 ], [ %143, %146 ]\l  %209 = getelementptr inbounds i8, i8* %205, i64 1\l  %210 = getelementptr inbounds i32, i32* %206, i64 1\l  store i32 %208, i32* %206, align 4, !tbaa !1636\l  %211 = add i64 %207, -1\l  %212 = icmp eq i64 %211, 0\l  br i1 %212, label %136, label %138\l|{<s0>T|<s1>F}}"];
	Node0x1825b10:s0 -> Node0x18257f0;
	Node0x1825b10:s1 -> Node0x1825840;
	Node0x1825b60 [shape=record,label="{%213:\l213:                                              \l  %214 = add nsw i32 %198, -194\l  %215 = icmp ugt i32 %214, 50\l  br i1 %215, label %276, label %216\l|{<s0>T|<s1>F}}"];
	Node0x1825b60:s0 -> Node0x1825f20;
	Node0x1825b60:s1 -> Node0x1825bb0;
	Node0x1825bb0 [shape=record,label="{%216:\l216:                                              \l  %217 = getelementptr inbounds i8, i8* %202, i64 1\l  %218 = zext i32 %214 to i64\l  %219 = getelementptr inbounds [0 x i32], [0 x i32]* bitcast ([51 x i32]*\l... @__fsmu8 to [0 x i32]*), i64 0, i64 %218\l  %220 = load i32, i32* %219, align 4, !tbaa !1636\l  br label %221\l}"];
	Node0x1825bb0 -> Node0x1825c00;
	Node0x1825c00 [shape=record,label="{%221:\l221:                                              \l  %222 = phi i64 [ %2, %13 ], [ %200, %216 ]\l  %223 = phi i32* [ %0, %13 ], [ %201, %216 ]\l  %224 = phi i8* [ %5, %13 ], [ %217, %216 ]\l  %225 = phi i32 [ %9, %13 ], [ %220, %216 ]\l  %226 = load i8, i8* %224, align 1, !tbaa !1643\l  %227 = zext i8 %226 to i32\l  %228 = lshr i32 %227, 3\l  %229 = add nsw i32 %228, -16\l  %230 = ashr i32 %225, 26\l  %231 = add nsw i32 %228, %230\l  %232 = or i32 %229, %231\l  %233 = icmp ugt i32 %232, 7\l  br i1 %233, label %267, label %234\l|{<s0>T|<s1>F}}"];
	Node0x1825c00:s0 -> Node0x1825e80;
	Node0x1825c00:s1 -> Node0x1825c50;
	Node0x1825c50 [shape=record,label="{%234:\l234:                                              \l  %235 = shl i32 %225, 6\l  %236 = getelementptr inbounds i8, i8* %224, i64 1\l  %237 = add nsw i32 %227, -128\l  %238 = or i32 %237, %235\l  %239 = icmp slt i32 %238, 0\l  br i1 %239, label %240, label %259\l|{<s0>T|<s1>F}}"];
	Node0x1825c50:s0 -> Node0x1825ca0;
	Node0x1825c50:s1 -> Node0x1825de0;
	Node0x1825ca0 [shape=record,label="{%240:\l240:                                              \l  %241 = load i8, i8* %236, align 1, !tbaa !1643\l  %242 = zext i8 %241 to i32\l  %243 = add nsw i32 %242, -128\l  %244 = icmp ugt i32 %243, 63\l  br i1 %244, label %264, label %245\l|{<s0>T|<s1>F}}"];
	Node0x1825ca0:s0 -> Node0x1825e30;
	Node0x1825ca0:s1 -> Node0x1825cf0;
	Node0x1825cf0 [shape=record,label="{%245:\l245:                                              \l  %246 = shl i32 %238, 6\l  %247 = getelementptr inbounds i8, i8* %224, i64 2\l  %248 = or i32 %243, %246\l  %249 = icmp slt i32 %248, 0\l  br i1 %249, label %250, label %259\l|{<s0>T|<s1>F}}"];
	Node0x1825cf0:s0 -> Node0x1825d40;
	Node0x1825cf0:s1 -> Node0x1825de0;
	Node0x1825d40 [shape=record,label="{%250:\l250:                                              \l  %251 = load i8, i8* %247, align 1, !tbaa !1643\l  %252 = zext i8 %251 to i32\l  %253 = add nsw i32 %252, -128\l  %254 = icmp ugt i32 %253, 63\l  br i1 %254, label %264, label %255\l|{<s0>T|<s1>F}}"];
	Node0x1825d40:s0 -> Node0x1825e30;
	Node0x1825d40:s1 -> Node0x1825d90;
	Node0x1825d90 [shape=record,label="{%255:\l255:                                              \l  %256 = shl i32 %248, 6\l  %257 = getelementptr inbounds i8, i8* %224, i64 3\l  %258 = or i32 %253, %256\l  br label %259\l}"];
	Node0x1825d90 -> Node0x1825de0;
	Node0x1825de0 [shape=record,label="{%259:\l259:                                              \l  %260 = phi i8* [ %257, %255 ], [ %247, %245 ], [ %236, %234 ]\l  %261 = phi i32 [ %258, %255 ], [ %248, %245 ], [ %238, %234 ]\l  %262 = getelementptr inbounds i32, i32* %223, i64 1\l  store i32 %261, i32* %223, align 4, !tbaa !1636\l  %263 = add i64 %222, -1\l  br label %48\l}"];
	Node0x1825de0 -> Node0x18252a0;
	Node0x1825e30 [shape=record,label="{%264:\l264:                                              \l  %265 = getelementptr inbounds i8, i8* %224, i64 -1\l  %266 = tail call i32* @___errno_location() #41\l  store i32 84, i32* %266, align 4, !tbaa !1636\l  br label %292\l}"];
	Node0x1825e30 -> Node0x18260b0;
	Node0x1825e80 [shape=record,label="{%267:\l267:                                              \l  %268 = phi i8* [ %105, %103 ], [ %105, %119 ], [ %105, %127 ], [ %224, %221 ]\l  %269 = phi i64 [ %104, %103 ], [ %104, %119 ], [ %104, %127 ], [ %222, %221 ]\l  %270 = phi i32* [ %0, %103 ], [ %0, %119 ], [ %0, %127 ], [ %223, %221 ]\l  %271 = phi i32 [ %106, %103 ], [ %106, %119 ], [ %106, %127 ], [ %225, %221 ]\l  %272 = getelementptr inbounds i8, i8* %268, i64 -1\l  %273 = icmp eq i32 %271, 0\l  br i1 %273, label %274, label %287\l|{<s0>T|<s1>F}}"];
	Node0x1825e80:s0 -> Node0x1825ed0;
	Node0x1825e80:s1 -> Node0x1826060;
	Node0x1825ed0 [shape=record,label="{%274:\l274:                                              \l  %275 = load i8, i8* %272, align 1, !tbaa !1643\l  br label %276\l}"];
	Node0x1825ed0 -> Node0x1825f20;
	Node0x1825f20 [shape=record,label="{%276:\l276:                                              \l  %277 = phi i8 [ %275, %274 ], [ %86, %95 ], [ %199, %213 ]\l  %278 = phi i8* [ %272, %274 ], [ %88, %95 ], [ %202, %213 ]\l  %279 = phi i32* [ %270, %274 ], [ %0, %95 ], [ %201, %213 ]\l  %280 = phi i64 [ %269, %274 ], [ %87, %95 ], [ %200, %213 ]\l  %281 = icmp eq i8 %277, 0\l  br i1 %281, label %282, label %287\l|{<s0>T|<s1>F}}"];
	Node0x1825f20:s0 -> Node0x1825f70;
	Node0x1825f20:s1 -> Node0x1826060;
	Node0x1825f70 [shape=record,label="{%282:\l282:                                              \l  %283 = icmp eq i32* %279, null\l  br i1 %283, label %285, label %284\l|{<s0>T|<s1>F}}"];
	Node0x1825f70:s0 -> Node0x1826010;
	Node0x1825f70:s1 -> Node0x1825fc0;
	Node0x1825fc0 [shape=record,label="{%284:\l284:                                              \l  store i32 0, i32* %279, align 4, !tbaa !1636\l  store i8* null, i8** %1, align 8, !tbaa !1632\l  br label %285\l}"];
	Node0x1825fc0 -> Node0x1826010;
	Node0x1826010 [shape=record,label="{%285:\l285:                                              \l  %286 = sub i64 %2, %280\l  br label %294\l}"];
	Node0x1826010 -> Node0x1826100;
	Node0x1826060 [shape=record,label="{%287:\l287:                                              \l  %288 = phi i8* [ %278, %276 ], [ %272, %267 ]\l  %289 = phi i32* [ %279, %276 ], [ %270, %267 ]\l  %290 = tail call i32* @___errno_location() #41\l  store i32 84, i32* %290, align 4, !tbaa !1636\l  %291 = icmp eq i32* %289, null\l  br i1 %291, label %294, label %292\l|{<s0>T|<s1>F}}"];
	Node0x1826060:s0 -> Node0x1826100;
	Node0x1826060:s1 -> Node0x18260b0;
	Node0x18260b0 [shape=record,label="{%292:\l292:                                              \l  %293 = phi i8* [ %265, %264 ], [ %288, %287 ]\l  store i8* %293, i8** %1, align 8, !tbaa !1632\l  br label %294\l}"];
	Node0x18260b0 -> Node0x1826100;
	Node0x1826100 [shape=record,label="{%294:\l294:                                              \l  %295 = phi i64 [ %286, %285 ], [ %2, %136 ], [ %43, %42 ], [ %2, %27 ], [\l... %26, %25 ], [ -1, %287 ], [ -1, %292 ]\l  ret i64 %295\l}"];
}
