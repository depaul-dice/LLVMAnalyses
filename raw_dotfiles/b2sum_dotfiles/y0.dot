digraph "CFG for 'y0' function" {
	label="CFG for 'y0' function";

	Node0x1bd8c90 [shape=record,label="{%1:\l  %2 = bitcast double %0 to i64\l  %3 = lshr i64 %2, 32\l  %4 = trunc i64 %3 to i32\l  %5 = shl nuw nsw i64 %3, 1\l  %6 = or i64 %5, %2\l  %7 = trunc i64 %6 to i32\l  %8 = icmp eq i32 %7, 0\l  br i1 %8, label %9, label %12\l|{<s0>T|<s1>F}}"];
	Node0x1bd8c90:s0 -> Node0x1bd8ce0;
	Node0x1bd8c90:s1 -> Node0x1bd8d30;
	Node0x1bd8ce0 [shape=record,label="{%9:\l9:                                                \l  %10 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 -1,\l... metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %11 = tail call double @llvm.experimental.constrained.fdiv.f64(double %10,\l... double 0.000000e+00, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\")\l... #40\l  br label %60\l}"];
	Node0x1bd8ce0 -> Node0x1bd9000;
	Node0x1bd8d30 [shape=record,label="{%12:\l12:                                               \l  %13 = icmp slt i64 %2, 0\l  br i1 %13, label %14, label %17\l|{<s0>T|<s1>F}}"];
	Node0x1bd8d30:s0 -> Node0x1bd8d80;
	Node0x1bd8d30:s1 -> Node0x1bd8dd0;
	Node0x1bd8d80 [shape=record,label="{%14:\l14:                                               \l  %15 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 0,\l... metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %16 = tail call double @llvm.experimental.constrained.fdiv.f64(double %15,\l... double 0.000000e+00, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\")\l... #40\l  br label %60\l}"];
	Node0x1bd8d80 -> Node0x1bd9000;
	Node0x1bd8dd0 [shape=record,label="{%17:\l17:                                               \l  %18 = icmp ugt i32 %4, 2146435071\l  br i1 %18, label %19, label %22\l|{<s0>T|<s1>F}}"];
	Node0x1bd8dd0:s0 -> Node0x1bd8e20;
	Node0x1bd8dd0:s1 -> Node0x1bd8e70;
	Node0x1bd8e20 [shape=record,label="{%19:\l19:                                               \l  %20 = tail call double @llvm.experimental.constrained.sitofp.f64.i32(i32 1,\l... metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %21 = tail call double @llvm.experimental.constrained.fdiv.f64(double %20,\l... double %0, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  br label %60\l}"];
	Node0x1bd8e20 -> Node0x1bd9000;
	Node0x1bd8e70 [shape=record,label="{%22:\l22:                                               \l  %23 = icmp ugt i32 %4, 1073741823\l  br i1 %23, label %24, label %26\l|{<s0>T|<s1>F}}"];
	Node0x1bd8e70:s0 -> Node0x1bd8ec0;
	Node0x1bd8e70:s1 -> Node0x1bd8f10;
	Node0x1bd8ec0 [shape=record,label="{%24:\l24:                                               \l  %25 = tail call fastcc double @common(i32 %4, double %0, i32 1) #41\l  br label %60\l}"];
	Node0x1bd8ec0 -> Node0x1bd9000;
	Node0x1bd8f10 [shape=record,label="{%26:\l26:                                               \l  %27 = icmp ugt i32 %4, 1044381695\l  br i1 %27, label %28, label %56\l|{<s0>T|<s1>F}}"];
	Node0x1bd8f10:s0 -> Node0x1bd8f60;
	Node0x1bd8f10:s1 -> Node0x1bd8fb0;
	Node0x1bd8f60 [shape=record,label="{%28:\l28:                                               \l  %29 = tail call double @llvm.experimental.constrained.fmul.f64(double %0,\l... double %0, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %30 = tail call double @llvm.experimental.constrained.fmul.f64(double %29,\l... double 0xBDC5E43D693FB3C8, metadata !\"round.dynamic\", metadata\l... !\"fpexcept.ignore\") #40\l  %31 = tail call double @llvm.experimental.constrained.fadd.f64(double\l... 0x3E5500573B4EABD4, double %30, metadata !\"round.dynamic\", metadata\l... !\"fpexcept.ignore\") #40\l  %32 = tail call double @llvm.experimental.constrained.fmul.f64(double %29,\l... double %31, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %33 = tail call double @llvm.experimental.constrained.fadd.f64(double\l... 0xBECFFEA773D25CAD, double %32, metadata !\"round.dynamic\", metadata\l... !\"fpexcept.ignore\") #40\l  %34 = tail call double @llvm.experimental.constrained.fmul.f64(double %29,\l... double %33, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %35 = tail call double @llvm.experimental.constrained.fadd.f64(double\l... 0x3F36C54D20B29B6B, double %34, metadata !\"round.dynamic\", metadata\l... !\"fpexcept.ignore\") #40\l  %36 = tail call double @llvm.experimental.constrained.fmul.f64(double %29,\l... double %35, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %37 = tail call double @llvm.experimental.constrained.fadd.f64(double\l... 0xBF8C4CE8B16CFA97, double %36, metadata !\"round.dynamic\", metadata\l... !\"fpexcept.ignore\") #40\l  %38 = tail call double @llvm.experimental.constrained.fmul.f64(double %29,\l... double %37, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %39 = tail call double @llvm.experimental.constrained.fadd.f64(double\l... 0x3FC69D019DE9E3FC, double %38, metadata !\"round.dynamic\", metadata\l... !\"fpexcept.ignore\") #40\l  %40 = tail call double @llvm.experimental.constrained.fmul.f64(double %29,\l... double %39, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %41 = tail call double @llvm.experimental.constrained.fadd.f64(double\l... 0xBFB2E4D699CBD01F, double %40, metadata !\"round.dynamic\", metadata\l... !\"fpexcept.ignore\") #40\l  %42 = tail call double @llvm.experimental.constrained.fmul.f64(double %29,\l... double 0x3DFE50183BD6D9EF, metadata !\"round.dynamic\", metadata\l... !\"fpexcept.ignore\") #40\l  %43 = tail call double @llvm.experimental.constrained.fadd.f64(double\l... 0x3E91642D7FF202FD, double %42, metadata !\"round.dynamic\", metadata\l... !\"fpexcept.ignore\") #40\l  %44 = tail call double @llvm.experimental.constrained.fmul.f64(double %29,\l... double %43, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %45 = tail call double @llvm.experimental.constrained.fadd.f64(double\l... 0x3F13ECBBF578C6C1, double %44, metadata !\"round.dynamic\", metadata\l... !\"fpexcept.ignore\") #40\l  %46 = tail call double @llvm.experimental.constrained.fmul.f64(double %29,\l... double %45, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %47 = tail call double @llvm.experimental.constrained.fadd.f64(double\l... 0x3F8A127091C9C71A, double %46, metadata !\"round.dynamic\", metadata\l... !\"fpexcept.ignore\") #40\l  %48 = tail call double @llvm.experimental.constrained.fmul.f64(double %29,\l... double %47, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %49 = tail call double @llvm.experimental.constrained.fadd.f64(double\l... 1.000000e+00, double %48, metadata !\"round.dynamic\", metadata\l... !\"fpexcept.ignore\") #40\l  %50 = tail call double @llvm.experimental.constrained.fdiv.f64(double %41,\l... double %49, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %51 = tail call double @j0(double %0) #41\l  %52 = tail call double @log(double %0) #42\l  %53 = tail call double @llvm.experimental.constrained.fmul.f64(double %51,\l... double %52, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  %54 = tail call double @llvm.experimental.constrained.fmul.f64(double\l... 0x3FE45F306DC9C883, double %53, metadata !\"round.dynamic\", metadata\l... !\"fpexcept.ignore\") #40\l  %55 = tail call double @llvm.experimental.constrained.fadd.f64(double %50,\l... double %54, metadata !\"round.dynamic\", metadata !\"fpexcept.ignore\") #40\l  br label %60\l}"];
	Node0x1bd8f60 -> Node0x1bd9000;
	Node0x1bd8fb0 [shape=record,label="{%56:\l56:                                               \l  %57 = tail call double @log(double %0) #42\l  %58 = tail call double @llvm.experimental.constrained.fmul.f64(double\l... 0x3FE45F306DC9C883, double %57, metadata !\"round.dynamic\", metadata\l... !\"fpexcept.ignore\") #40\l  %59 = tail call double @llvm.experimental.constrained.fadd.f64(double\l... 0xBFB2E4D699CBD01F, double %58, metadata !\"round.dynamic\", metadata\l... !\"fpexcept.ignore\") #40\l  br label %60\l}"];
	Node0x1bd8fb0 -> Node0x1bd9000;
	Node0x1bd9000 [shape=record,label="{%60:\l60:                                               \l  %61 = phi double [ %11, %9 ], [ %16, %14 ], [ %21, %19 ], [ %25, %24 ], [\l... %55, %28 ], [ %59, %56 ]\l  ret double %61\l}"];
}
