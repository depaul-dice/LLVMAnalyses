digraph "CFG for '__fwritex' function" {
	label="CFG for '__fwritex' function";

	Node0x28893f0 [shape=record,label="{%3:\l  %4 = getelementptr inbounds %struct._IO_FILE.48, %struct._IO_FILE.48* %2,\l... i64 0, i32 4\l  %5 = load i8*, i8** %4, align 8, !tbaa !2\l  %6 = icmp eq i8* %5, null\l  br i1 %6, label %9, label %7\l|{<s0>T|<s1>F}}"];
	Node0x28893f0:s0 -> Node0x2889740;
	Node0x28893f0:s1 -> Node0x28896f0;
	Node0x28896f0 [shape=record,label="{%7:\l7:                                                \l  %8 = ptrtoint i8* %5 to i64\l  br label %16\l}"];
	Node0x28896f0 -> Node0x28897e0;
	Node0x2889740 [shape=record,label="{%9:\l9:                                                \l  %10 = bitcast %struct._IO_FILE.48* %2 to %struct._IO_FILE.136*\l  %11 = tail call i32 @__towrite(%struct._IO_FILE.136* nonnull %10) #19\l  %12 = icmp eq i32 %11, 0\l  br i1 %12, label %13, label %if.end.icp9\l|{<s0>T|<s1>F}}"];
	Node0x2889740:s0 -> Node0x2889790;
	Node0x2889740:s1 -> Node0x2889d30;
	Node0x2889790 [shape=record,label="{%13:\l13:                                               \l  %14 = bitcast i8** %4 to i64*\l  %15 = load i64, i64* %14, align 8, !tbaa !2\l  br label %16\l}"];
	Node0x2889790 -> Node0x28897e0;
	Node0x28897e0 [shape=record,label="{%16:\l16:                                               \l  %17 = phi i64 [ %15, %13 ], [ %8, %7 ]\l  %18 = getelementptr inbounds %struct._IO_FILE.48, %struct._IO_FILE.48* %2,\l... i64 0, i32 5\l  %19 = bitcast i8** %18 to i64*\l  %20 = load i64, i64* %19, align 8, !tbaa !9\l  %21 = sub i64 %17, %20\l  %22 = icmp ult i64 %21, %1\l  %23 = inttoptr i64 %20 to i8*\l  br i1 %22, label %24, label %39\l|{<s0>T|<s1>F}}"];
	Node0x28897e0:s0 -> Node0x2889830;
	Node0x28897e0:s1 -> Node0x28899c0;
	Node0x2889830 [shape=record,label="{%24:\l24:                                               \l  %25 = getelementptr inbounds %struct._IO_FILE.48, %struct._IO_FILE.48* %2,\l... i64 0, i32 9\l  %26 = load i64 (%struct._IO_FILE.48*, i8*, i64)*, i64 (%struct._IO_FILE.48*,\l... i8*, i64)** %25, align 8, !tbaa !10\l  %27 = bitcast i64 (%struct._IO_FILE.124*, i8*, i64)* @__stdio_read to i64\l... (%struct._IO_FILE.48*, i8*, i64)*\l  %28 = icmp eq i64 (%struct._IO_FILE.48*, i8*, i64)* %26, %27\l  br i1 %28, label %if.true.direct_targ7, label %if.false.orig_indirect8\l|{<s0>T|<s1>F}}"];
	Node0x2889830:s0 -> Node0x2889880;
	Node0x2889830:s1 -> Node0x28898d0;
	Node0x2889880 [shape=record,label="{if.true.direct_targ7:                             \l  %29 = bitcast %struct._IO_FILE.48* %2 to %struct._IO_FILE.124*\l  %30 = tail call i64 @__stdio_read(%struct._IO_FILE.124* nonnull %29, i8* %0,\l... i64 %1) #20\l  br label %if.end.icp9\l}"];
	Node0x2889880 -> Node0x2889d30;
	Node0x28898d0 [shape=record,label="{if.false.orig_indirect8:                          \l  %31 = bitcast i64 (%struct._IO_FILE.128*, i8*, i64)* @__stdio_write to i64\l... (%struct._IO_FILE.48*, i8*, i64)*\l  %32 = icmp eq i64 (%struct._IO_FILE.48*, i8*, i64)* %26, %31\l  br i1 %32, label %if.true.direct_targ10, label %if.false.orig_indirect11\l|{<s0>T|<s1>F}}"];
	Node0x28898d0:s0 -> Node0x2889920;
	Node0x28898d0:s1 -> Node0x2889970;
	Node0x2889920 [shape=record,label="{if.true.direct_targ10:                            \l  %33 = bitcast %struct._IO_FILE.48* %2 to %struct._IO_FILE.128*\l  %34 = tail call i64 @__stdio_write(%struct._IO_FILE.128* nonnull %33, i8*\l... %0, i64 %1) #20\l  br label %if.end.icp9\l}"];
	Node0x2889920 -> Node0x2889d30;
	Node0x2889970 [shape=record,label="{if.false.orig_indirect11:                         \l  %35 = bitcast i64 (%struct._IO_FILE.128*, i8*, i64)* @__stdout_write to i64\l... (%struct._IO_FILE.48*, i8*, i64)*\l  %36 = icmp eq i64 (%struct._IO_FILE.48*, i8*, i64)* %26, %35\l  call void @llvm.assume(i1 %36)\l  %37 = bitcast %struct._IO_FILE.48* %2 to %struct._IO_FILE.128*\l  %38 = tail call i64 @__stdout_write(%struct._IO_FILE.128* nonnull %37, i8*\l... %0, i64 %1) #20\l  br label %if.end.icp9\l}"];
	Node0x2889970 -> Node0x2889d30;
	Node0x28899c0 [shape=record,label="{%39:\l39:                                               \l  %40 = getelementptr inbounds %struct._IO_FILE.48, %struct._IO_FILE.48* %2,\l... i64 0, i32 20\l  %41 = load i32, i32* %40, align 8, !tbaa !11\l  %42 = icmp sgt i32 %41, -1\l  br i1 %42, label %43, label %72\l|{<s0>T|<s1>F}}"];
	Node0x28899c0:s0 -> Node0x2889a10;
	Node0x28899c0:s1 -> Node0x2889ce0;
	Node0x2889a10 [shape=record,label="{%43:\l43:                                               \l  %44 = phi i64 [ %47, %46 ], [ %1, %39 ]\l  %45 = icmp eq i64 %44, 0\l  br i1 %45, label %72, label %46\l|{<s0>T|<s1>F}}"];
	Node0x2889a10:s0 -> Node0x2889ce0;
	Node0x2889a10:s1 -> Node0x2889a60;
	Node0x2889a60 [shape=record,label="{%46:\l46:                                               \l  %47 = add i64 %44, -1\l  %48 = getelementptr inbounds i8, i8* %0, i64 %47\l  %49 = load i8, i8* %48, align 1, !tbaa !12\l  %50 = icmp eq i8 %49, 10\l  br i1 %50, label %51, label %43\l|{<s0>T|<s1>F}}"];
	Node0x2889a60:s0 -> Node0x2889ab0;
	Node0x2889a60:s1 -> Node0x2889a10;
	Node0x2889ab0 [shape=record,label="{%51:\l51:                                               \l  %52 = getelementptr inbounds %struct._IO_FILE.48, %struct._IO_FILE.48* %2,\l... i64 0, i32 9\l  %53 = load i64 (%struct._IO_FILE.48*, i8*, i64)*, i64 (%struct._IO_FILE.48*,\l... i8*, i64)** %52, align 8, !tbaa !10\l  %54 = bitcast i64 (%struct._IO_FILE.124*, i8*, i64)* @__stdio_read to i64\l... (%struct._IO_FILE.48*, i8*, i64)*\l  %55 = icmp eq i64 (%struct._IO_FILE.48*, i8*, i64)* %53, %54\l  br i1 %55, label %if.true.direct_targ, label %if.false.orig_indirect\l|{<s0>T|<s1>F}}"];
	Node0x2889ab0:s0 -> Node0x2889b00;
	Node0x2889ab0:s1 -> Node0x2889b50;
	Node0x2889b00 [shape=record,label="{if.true.direct_targ:                              \l  %56 = bitcast %struct._IO_FILE.48* %2 to %struct._IO_FILE.124*\l  %57 = tail call i64 @__stdio_read(%struct._IO_FILE.124* %56, i8* nonnull %0,\l... i64 %44) #20\l  br label %if.end.icp\l}"];
	Node0x2889b00 -> Node0x2889c40;
	Node0x2889b50 [shape=record,label="{if.false.orig_indirect:                           \l  %58 = bitcast i64 (%struct._IO_FILE.128*, i8*, i64)* @__stdio_write to i64\l... (%struct._IO_FILE.48*, i8*, i64)*\l  %59 = icmp eq i64 (%struct._IO_FILE.48*, i8*, i64)* %53, %58\l  br i1 %59, label %if.true.direct_targ1, label %if.false.orig_indirect2\l|{<s0>T|<s1>F}}"];
	Node0x2889b50:s0 -> Node0x2889ba0;
	Node0x2889b50:s1 -> Node0x2889bf0;
	Node0x2889ba0 [shape=record,label="{if.true.direct_targ1:                             \l  %60 = bitcast %struct._IO_FILE.48* %2 to %struct._IO_FILE.128*\l  %61 = tail call i64 @__stdio_write(%struct._IO_FILE.128* %60, i8* nonnull\l... %0, i64 %44) #20\l  br label %if.end.icp\l}"];
	Node0x2889ba0 -> Node0x2889c40;
	Node0x2889bf0 [shape=record,label="{if.false.orig_indirect2:                          \l  %62 = bitcast i64 (%struct._IO_FILE.128*, i8*, i64)* @__stdout_write to i64\l... (%struct._IO_FILE.48*, i8*, i64)*\l  %63 = icmp eq i64 (%struct._IO_FILE.48*, i8*, i64)* %53, %62\l  call void @llvm.assume(i1 %63)\l  %64 = bitcast %struct._IO_FILE.48* %2 to %struct._IO_FILE.128*\l  %65 = tail call i64 @__stdout_write(%struct._IO_FILE.128* %64, i8* nonnull\l... %0, i64 %44) #20\l  br label %if.end.icp\l}"];
	Node0x2889bf0 -> Node0x2889c40;
	Node0x2889c40 [shape=record,label="{if.end.icp:                                       \l  %66 = phi i64 [ %57, %if.true.direct_targ ], [ %65, %if.false.orig_indirect2\l... ], [ %61, %if.true.direct_targ1 ]\l  %67 = icmp ult i64 %66, %44\l  br i1 %67, label %if.end.icp9, label %68\l|{<s0>T|<s1>F}}"];
	Node0x2889c40:s0 -> Node0x2889d30;
	Node0x2889c40:s1 -> Node0x2889c90;
	Node0x2889c90 [shape=record,label="{%68:\l68:                                               \l  %69 = getelementptr inbounds i8, i8* %0, i64 %44\l  %70 = sub i64 %1, %44\l  %71 = load i8*, i8** %18, align 8, !tbaa !9\l  br label %72\l}"];
	Node0x2889c90 -> Node0x2889ce0;
	Node0x2889ce0 [shape=record,label="{%72:\l72:                                               \l  %73 = phi i8* [ %71, %68 ], [ %23, %39 ], [ %23, %43 ]\l  %74 = phi i64 [ %70, %68 ], [ %1, %39 ], [ %1, %43 ]\l  %75 = phi i8* [ %69, %68 ], [ %0, %39 ], [ %0, %43 ]\l  %76 = phi i64 [ %44, %68 ], [ 0, %39 ], [ 0, %43 ]\l  %77 = tail call fastcc i8* @memcpy(i8* %73, i8* %75, i64 %74) #19\l  %78 = load i8*, i8** %18, align 8, !tbaa !9\l  %79 = getelementptr inbounds i8, i8* %78, i64 %74\l  store i8* %79, i8** %18, align 8, !tbaa !9\l  %80 = add i64 %76, %74\l  br label %if.end.icp9\l}"];
	Node0x2889ce0 -> Node0x2889d30;
	Node0x2889d30 [shape=record,label="{if.end.icp9:                                      \l  %81 = phi i64 [ %80, %72 ], [ %66, %if.end.icp ], [ 0, %9 ], [ %30,\l... %if.true.direct_targ7 ], [ %38, %if.false.orig_indirect11 ], [ %34,\l... %if.true.direct_targ10 ]\l  ret i64 %81\l}"];
}
