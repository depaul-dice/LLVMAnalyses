digraph "CFG for '__bin_chunk' function" {
	label="CFG for '__bin_chunk' function";

	Node0x12fe450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%1:\l  %2 = bitcast %struct.chunk* %0 to i8*\l  %3 = getelementptr inbounds %struct.chunk, %struct.chunk* %0, i64 0, i32 1\l  %4 = load i64, i64* %3, align 8, !tbaa !2\l  %5 = and i64 %4, -2\l  %6 = getelementptr inbounds i8, i8* %2, i64 %5\l  %7 = bitcast i8* %6 to i64*\l  %8 = load i64, i64* %7, align 8, !tbaa !8\l  %9 = icmp eq i64 %8, %4\l  br i1 %9, label %11, label %10\l|{<s0>T|<s1>F}}"];
	Node0x12fe450:s0 -> Node0x12fe730;
	Node0x12fe450:s1 -> Node0x12fe6e0;
	Node0x12fe6e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8caffe70",label="{%10:\l10:                                               \l  tail call void asm sideeffect \"hlt\",\l... \"~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}\"() #17, !srcloc !9\l  br label %11\l}"];
	Node0x12fe6e0 -> Node0x12fe730;
	Node0x12fe730 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%11:\l11:                                               \l  br label %12\l}"];
	Node0x12fe730 -> Node0x12fe780;
	Node0x12fe780 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%12:\l12:                                               \l  %13 = phi i32 [ 0, %11 ], [ %277, %268 ]\l  %14 = phi i64 [ %5, %11 ], [ %271, %268 ]\l  %15 = phi i8* [ %6, %11 ], [ %278, %268 ]\l  %16 = phi %struct.chunk* [ %0, %11 ], [ %151, %268 ]\l  %17 = getelementptr inbounds i8, i8* %15, i64 8\l  %18 = bitcast i8* %17 to i64*\l  %19 = bitcast i8* %15 to i64*\l  %.pre = load i64, i64* %18, align 8, !tbaa !2\l  br label %20\l}"];
	Node0x12fe780 -> Node0x12fe7d0;
	Node0x12fe7d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%20:\l20:                                               \l  %21 = phi i64 [ %.pre, %12 ], [ %156, %155 ]\l  %22 = phi i32 [ %13, %12 ], [ %149, %155 ]\l  %23 = phi i64 [ %14, %12 ], [ %150, %155 ]\l  %24 = phi %struct.chunk* [ %16, %12 ], [ %151, %155 ]\l  %25 = getelementptr inbounds %struct.chunk, %struct.chunk* %24, i64 0, i32 0\l  %26 = load i64, i64* %25, align 8, !tbaa !8\l  %27 = and i64 %26, 1\l  %28 = and i64 %27, %21\l  %29 = icmp eq i64 %28, 0\l  br i1 %29, label %127, label %30\l|{<s0>T|<s1>F}}"];
	Node0x12fe7d0:s0 -> Node0x12fef50;
	Node0x12fe7d0:s1 -> Node0x12fe820;
	Node0x12fe820 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%30:\l30:                                               \l  %31 = or i64 %23, 1\l  %32 = getelementptr inbounds %struct.chunk, %struct.chunk* %24, i64 0, i32 1\l  store i64 %31, i64* %32, align 8, !tbaa !2\l  store i64 %31, i64* %19, align 8, !tbaa !8\l  %33 = lshr i64 %23, 5\l  %34 = add nsw i64 %33, -1\l  %35 = icmp ult i64 %34, 33\l  br i1 %35, label %53, label %36\l|{<s0>T|<s1>F}}"];
	Node0x12fe820:s0 -> Node0x12fe9b0;
	Node0x12fe820:s1 -> Node0x12fe870;
	Node0x12fe870 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e3d9d370",label="{%36:\l36:                                               \l  %37 = icmp ult i64 %34, 512\l  br i1 %37, label %38, label %44\l|{<s0>T|<s1>F}}"];
	Node0x12fe870:s0 -> Node0x12fe8c0;
	Node0x12fe870:s1 -> Node0x12fe910;
	Node0x12fe8c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%38:\l38:                                               \l  %39 = lshr i64 %34, 3\l  %40 = add nsw i64 %39, -4\l  %41 = getelementptr inbounds [60 x i8], [60 x i8]* @bin_tab, i64 0, i64 %40\l  %42 = load i8, i8* %41, align 1, !tbaa !10\l  %43 = zext i8 %42 to i64\l  br label %53\l}"];
	Node0x12fe8c0 -> Node0x12fe9b0;
	Node0x12fe910 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%44:\l44:                                               \l  %45 = icmp ugt i64 %34, 7168\l  br i1 %45, label %53, label %46\l|{<s0>T|<s1>F}}"];
	Node0x12fe910:s0 -> Node0x12fe9b0;
	Node0x12fe910:s1 -> Node0x12fe960;
	Node0x12fe960 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c5d6f270",label="{%46:\l46:                                               \l  %47 = lshr i64 %34, 7\l  %48 = add nsw i64 %47, -4\l  %49 = getelementptr inbounds [60 x i8], [60 x i8]* @bin_tab, i64 0, i64 %48\l  %50 = load i8, i8* %49, align 1, !tbaa !10\l  %51 = zext i8 %50 to i64\l  %52 = add nuw nsw i64 %51, 16\l  br label %53\l}"];
	Node0x12fe960 -> Node0x12fe9b0;
	Node0x12fe9b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%53:\l53:                                               \l  %54 = phi i64 [ %43, %38 ], [ %52, %46 ], [ 63, %44 ], [ %34, %30 ]\l  %55 = getelementptr inbounds %struct.anon.39, %struct.anon.39* @mal, i64 0,\l... i32 1, i64 %54, i32 0, i64 0\l  %56 = getelementptr inbounds %struct.__libc, %struct.__libc* @__libc, i64 0,\l... i32 3\l  %57 = load volatile i32, i32* %56, align 4, !tbaa !11\l  %58 = icmp eq i32 %57, 0\l  br i1 %58, label %67, label %59\l|{<s0>T|<s1>F}}"];
	Node0x12fe9b0:s0 -> Node0x12feaf0;
	Node0x12fe9b0:s1 -> Node0x12fea00;
	Node0x12fea00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%59:\l59:                                               \l  %60 = tail call i32 asm sideeffect \"xchg $0, $1\",\l... \"=r,=*m,0,~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}\"(i32* nonnull %55, i32 1)\l... #17, !srcloc !15\l  %61 = icmp eq i32 %60, 0\l  br i1 %61, label %67, label %62\l|{<s0>T|<s1>F}}"];
	Node0x12fea00:s0 -> Node0x12feaf0;
	Node0x12fea00:s1 -> Node0x12fea50;
	Node0x12fea50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%62:\l62:                                               \l  %63 = getelementptr inbounds %struct.anon.39, %struct.anon.39* @mal, i64 0,\l... i32 1, i64 %54, i32 0, i64 1\l  br label %64\l}"];
	Node0x12fea50 -> Node0x12feaa0;
	Node0x12feaa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%64:\l64:                                               \l  tail call fastcc void @__wait(i32* nonnull %55, i32* nonnull %63, i32 1, i32\l... 1) #18\l  %65 = tail call i32 asm sideeffect \"xchg $0, $1\",\l... \"=r,=*m,0,~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}\"(i32* nonnull %55, i32 1)\l... #17, !srcloc !15\l  %66 = icmp eq i32 %65, 0\l  br i1 %66, label %67, label %64\l|{<s0>T|<s1>F}}"];
	Node0x12feaa0:s0 -> Node0x12feaf0;
	Node0x12feaa0:s1 -> Node0x12feaa0;
	Node0x12feaf0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%67:\l67:                                               \l  %68 = getelementptr inbounds %struct.anon.39, %struct.anon.39* @mal, i64 0,\l... i32 1, i64 %54, i32 1\l  %69 = load %struct.chunk*, %struct.chunk** %68, align 8, !tbaa !16\l  %70 = icmp eq %struct.chunk* %69, null\l  br i1 %70, label %71, label %76\l|{<s0>T|<s1>F}}"];
	Node0x12feaf0:s0 -> Node0x12feb40;
	Node0x12feaf0:s1 -> Node0x12feb90;
	Node0x12feb40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%71:\l71:                                               \l  %72 = getelementptr inbounds %struct.chunk*, %struct.chunk** %68, i64 -2\l  %73 = getelementptr inbounds %struct.anon.39, %struct.anon.39* @mal, i64 0,\l... i32 1, i64 %54, i32 2\l  %74 = bitcast %struct.chunk** %73 to %struct.chunk***\l  store %struct.chunk** %72, %struct.chunk*** %74, align 8, !tbaa !18\l  %75 = bitcast %struct.chunk** %68 to %struct.chunk***\l  store %struct.chunk** %72, %struct.chunk*** %75, align 8, !tbaa !16\l  br label %76\l}"];
	Node0x12feb40 -> Node0x12feb90;
	Node0x12feb90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%76:\l76:                                               \l  %77 = getelementptr inbounds %struct.__libc, %struct.__libc* @__libc, i64 0,\l... i32 3\l  %78 = load volatile i32, i32* %77, align 4, !tbaa !11\l  %79 = icmp eq i32 %78, 0\l  br i1 %79, label %90, label %80\l|{<s0>T|<s1>F}}"];
	Node0x12feb90:s0 -> Node0x12fec80;
	Node0x12feb90:s1 -> Node0x12febe0;
	Node0x12febe0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%80:\l80:                                               \l  %81 = getelementptr inbounds %struct.anon.39, %struct.anon.39* @mal, i64 0,\l... i32 2, i64 0\l  %82 = tail call i32 asm sideeffect \"xchg $0, $1\",\l... \"=r,=*m,0,~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}\"(i32* %81, i32 1) #17,\l... !srcloc !15\l  %83 = icmp eq i32 %82, 0\l  br i1 %83, label %90, label %84\l|{<s0>T|<s1>F}}"];
	Node0x12febe0:s0 -> Node0x12fec80;
	Node0x12febe0:s1 -> Node0x12fec30;
	Node0x12fec30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%84:\l84:                                               \l  %85 = getelementptr inbounds %struct.anon.39, %struct.anon.39* @mal, i64 0,\l... i32 2, i64 0\l  %86 = getelementptr inbounds %struct.anon.39, %struct.anon.39* @mal, i64 0,\l... i32 2, i64 1\l  tail call fastcc void @__wait(i32* %85, i32* nonnull %86, i32 1, i32 1) #18\l  %87 = getelementptr inbounds %struct.anon.39, %struct.anon.39* @mal, i64 0,\l... i32 2, i64 0\l  %88 = tail call i32 asm sideeffect \"xchg $0, $1\",\l... \"=r,=*m,0,~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}\"(i32* %87, i32 1) #17,\l... !srcloc !15\l  %89 = icmp eq i32 %88, 0\l  br i1 %89, label %90, label %84\l|{<s0>T|<s1>F}}"];
	Node0x12fec30:s0 -> Node0x12fec80;
	Node0x12fec30:s1 -> Node0x12fec30;
	Node0x12fec80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%90:\l90:                                               \l  %91 = load i64, i64* %25, align 8, !tbaa !8\l  %92 = load i64, i64* %18, align 8, !tbaa !2\l  %93 = and i64 %91, 1\l  %94 = and i64 %93, %92\l  %95 = icmp eq i64 %94, 0\l  br i1 %95, label %96, label %279\l|{<s0>T|<s1>F}}"];
	Node0x12fec80:s0 -> Node0x12fecd0;
	Node0x12fec80:s1 -> Node0x12ff860;
	Node0x12fecd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%96:\l96:                                               \l  %97 = getelementptr inbounds %struct.anon.39, %struct.anon.39* @mal, i64 0,\l... i32 2, i64 0\l  %98 = load volatile i32, i32* %97, align 8, !tbaa !19\l  %99 = icmp eq i32 %98, 0\l  br i1 %99, label %114, label %100\l|{<s0>T|<s1>F}}"];
	Node0x12fecd0:s0 -> Node0x12fee10;
	Node0x12fecd0:s1 -> Node0x12fed20;
	Node0x12fed20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%100:\l100:                                              \l  %101 = getelementptr inbounds %struct.anon.39, %struct.anon.39* @mal, i64 0,\l... i32 2, i64 0\l  tail call void asm sideeffect \"mov $1, $0 \l  %102 = getelementptr inbounds %struct.anon.39, %struct.anon.39* @mal, i64 0,\l... i32 2, i64 1\l  %103 = load volatile i32, i32* %102, align 4, !tbaa !19\l  %104 = icmp eq i32 %103, 0\l  br i1 %104, label %114, label %105\l|{<s0>T|<s1>F}}"];
	Node0x12fed20:s0 -> Node0x12fee10;
	Node0x12fed20:s1 -> Node0x12fed70;
	Node0x12fed70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%105:\l105:                                              \l  %106 = getelementptr inbounds %struct.anon.39, %struct.anon.39* @mal, i64 0,\l... i32 2, i64 0\l  %107 = ptrtoint i32* %106 to i64\l  %108 = tail call i64 asm sideeffect \"syscall\",\l... \"=\{ax\},\{ax\},\{di\},\{si\},\{dx\},~\{rcx\},~\{r11\},~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}\l...\"(i64 202, i64 %107, i64 129, i64 1) #17, !srcloc !21\l  %109 = icmp eq i64 %108, -38\l  br i1 %109, label %110, label %114\l|{<s0>T|<s1>F}}"];
	Node0x12fed70:s0 -> Node0x12fedc0;
	Node0x12fed70:s1 -> Node0x12fee10;
	Node0x12fedc0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%110:\l110:                                              \l  %111 = getelementptr inbounds %struct.anon.39, %struct.anon.39* @mal, i64 0,\l... i32 2, i64 0\l  %112 = ptrtoint i32* %111 to i64\l  %113 = tail call i64 asm sideeffect \"syscall\",\l... \"=\{ax\},\{ax\},\{di\},\{si\},\{dx\},~\{rcx\},~\{r11\},~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}\l...\"(i64 202, i64 %112, i64 1, i64 1) #17, !srcloc !21\l  br label %114\l}"];
	Node0x12fedc0 -> Node0x12fee10;
	Node0x12fee10 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%114:\l114:                                              \l  %115 = load volatile i32, i32* %55, align 8, !tbaa !19\l  %116 = icmp eq i32 %115, 0\l  br i1 %116, label %127, label %117\l|{<s0>T|<s1>F}}"];
	Node0x12fee10:s0 -> Node0x12fef50;
	Node0x12fee10:s1 -> Node0x12fee60;
	Node0x12fee60 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e8d6cc70",label="{%117:\l117:                                              \l  tail call void asm sideeffect \"mov $1, $0 \l  %118 = getelementptr inbounds %struct.anon.39, %struct.anon.39* @mal, i64 0,\l... i32 1, i64 %54, i32 0, i64 1\l  %119 = load volatile i32, i32* %118, align 4, !tbaa !19\l  %120 = icmp eq i32 %119, 0\l  br i1 %120, label %127, label %121\l|{<s0>T|<s1>F}}"];
	Node0x12fee60:s0 -> Node0x12fef50;
	Node0x12fee60:s1 -> Node0x12feeb0;
	Node0x12feeb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dedcdb70",label="{%121:\l121:                                              \l  %122 = ptrtoint i32* %55 to i64\l  %123 = tail call i64 asm sideeffect \"syscall\",\l... \"=\{ax\},\{ax\},\{di\},\{si\},\{dx\},~\{rcx\},~\{r11\},~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}\l...\"(i64 202, i64 %122, i64 129, i64 1) #17, !srcloc !21\l  %124 = icmp eq i64 %123, -38\l  br i1 %124, label %125, label %127\l|{<s0>T|<s1>F}}"];
	Node0x12feeb0:s0 -> Node0x12fef00;
	Node0x12feeb0:s1 -> Node0x12fef50;
	Node0x12fef00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d1dae970",label="{%125:\l125:                                              \l  %126 = tail call i64 asm sideeffect \"syscall\",\l... \"=\{ax\},\{ax\},\{di\},\{si\},\{dx\},~\{rcx\},~\{r11\},~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}\l...\"(i64 202, i64 %122, i64 1, i64 1) #17, !srcloc !21\l  br label %127\l}"];
	Node0x12fef00 -> Node0x12fef50;
	Node0x12fef50 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%127:\l127:                                              \l  %128 = tail call fastcc i32 @alloc_rev(%struct.chunk* %24) #19\l  %129 = icmp eq i32 %128, 0\l  br i1 %129, label %148, label %130\l|{<s0>T|<s1>F}}"];
	Node0x12fef50:s0 -> Node0x12feff0;
	Node0x12fef50:s1 -> Node0x12fefa0;
	Node0x12fefa0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#efcebd70",label="{%130:\l130:                                              \l  %131 = bitcast %struct.chunk* %24 to i8*\l  %132 = load i64, i64* %25, align 8, !tbaa !8\l  %133 = and i64 %132, -2\l  %134 = sub i64 0, %133\l  %135 = getelementptr inbounds i8, i8* %131, i64 %134\l  %136 = bitcast i8* %135 to %struct.chunk*\l  %137 = getelementptr inbounds i8, i8* %135, i64 8\l  %138 = bitcast i8* %137 to i64*\l  %139 = load i64, i64* %138, align 8, !tbaa !2\l  %140 = and i64 %139, -2\l  %141 = add i64 %140, %23\l  %142 = add i64 %140, %5\l  %143 = icmp ugt i64 %142, 163840\l  %144 = xor i64 %142, %140\l  %145 = icmp ugt i64 %144, %140\l  %146 = and i1 %143, %145\l  %147 = select i1 %146, i32 1, i32 %22\l  br label %148\l}"];
	Node0x12fefa0 -> Node0x12feff0;
	Node0x12feff0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%148:\l148:                                              \l  %149 = phi i32 [ %22, %127 ], [ %147, %130 ]\l  %150 = phi i64 [ %23, %127 ], [ %141, %130 ]\l  %151 = phi %struct.chunk* [ %24, %127 ], [ %136, %130 ]\l  %152 = load i64, i64* %18, align 8, !tbaa !2\l  %153 = and i64 %152, 1\l  %154 = icmp eq i64 %153, 0\l  br i1 %154, label %157, label %155\l|{<s0>T|<s1>F}}"];
	Node0x12feff0:s0 -> Node0x12ff090;
	Node0x12feff0:s1 -> Node0x12ff040;
	Node0x12ff040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f1ccb870",label="{%155:\l155:                                              \l  %156 = phi i64 [ %265, %264 ], [ %152, %148 ]\l  br label %20\l}"];
	Node0x12ff040 -> Node0x12fe7d0;
	Node0x12ff090 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%157:\l157:                                              \l  %158 = phi i64 [ %265, %264 ], [ %152, %148 ]\l  %159 = lshr i64 %158, 5\l  %160 = add nsw i64 %159, -1\l  %161 = icmp ult i64 %160, 33\l  br i1 %161, label %179, label %162\l|{<s0>T|<s1>F}}"];
	Node0x12ff090:s0 -> Node0x12ff220;
	Node0x12ff090:s1 -> Node0x12ff0e0;
	Node0x12ff0e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5a08170",label="{%162:\l162:                                              \l  %163 = icmp ult i64 %160, 512\l  br i1 %163, label %164, label %170\l|{<s0>T|<s1>F}}"];
	Node0x12ff0e0:s0 -> Node0x12ff130;
	Node0x12ff0e0:s1 -> Node0x12ff180;
	Node0x12ff130 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%164:\l164:                                              \l  %165 = lshr i64 %160, 3\l  %166 = add nsw i64 %165, -4\l  %167 = getelementptr inbounds [60 x i8], [60 x i8]* @bin_tab, i64 0, i64 %166\l  %168 = load i8, i8* %167, align 1, !tbaa !10\l  %169 = zext i8 %168 to i64\l  br label %179\l}"];
	Node0x12ff130 -> Node0x12ff220;
	Node0x12ff180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7b59970",label="{%170:\l170:                                              \l  %171 = icmp ugt i64 %160, 7168\l  br i1 %171, label %179, label %172\l|{<s0>T|<s1>F}}"];
	Node0x12ff180:s0 -> Node0x12ff220;
	Node0x12ff180:s1 -> Node0x12ff1d0;
	Node0x12ff1d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%172:\l172:                                              \l  %173 = lshr i64 %160, 7\l  %174 = add nsw i64 %173, -4\l  %175 = getelementptr inbounds [60 x i8], [60 x i8]* @bin_tab, i64 0, i64 %174\l  %176 = load i8, i8* %175, align 1, !tbaa !10\l  %177 = zext i8 %176 to i64\l  %178 = add nuw nsw i64 %177, 16\l  br label %179\l}"];
	Node0x12ff1d0 -> Node0x12ff220;
	Node0x12ff220 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%179:\l179:                                              \l  %180 = phi i64 [ %169, %164 ], [ %178, %172 ], [ 63, %170 ], [ %160, %157 ]\l  %181 = getelementptr inbounds %struct.anon.39, %struct.anon.39* @mal, i64 0,\l... i32 1, i64 %180, i32 0, i64 0\l  %182 = getelementptr inbounds %struct.__libc, %struct.__libc* @__libc, i64\l... 0, i32 3\l  %183 = load volatile i32, i32* %182, align 4, !tbaa !11\l  %184 = icmp eq i32 %183, 0\l  br i1 %184, label %193, label %185\l|{<s0>T|<s1>F}}"];
	Node0x12ff220:s0 -> Node0x12ff360;
	Node0x12ff220:s1 -> Node0x12ff270;
	Node0x12ff270 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%185:\l185:                                              \l  %186 = tail call i32 asm sideeffect \"xchg $0, $1\",\l... \"=r,=*m,0,~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}\"(i32* nonnull %181, i32 1)\l... #17, !srcloc !15\l  %187 = icmp eq i32 %186, 0\l  br i1 %187, label %193, label %188\l|{<s0>T|<s1>F}}"];
	Node0x12ff270:s0 -> Node0x12ff360;
	Node0x12ff270:s1 -> Node0x12ff2c0;
	Node0x12ff2c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%188:\l188:                                              \l  %189 = getelementptr inbounds %struct.anon.39, %struct.anon.39* @mal, i64 0,\l... i32 1, i64 %180, i32 0, i64 1\l  br label %190\l}"];
	Node0x12ff2c0 -> Node0x12ff310;
	Node0x12ff310 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%190:\l190:                                              \l  tail call fastcc void @__wait(i32* nonnull %181, i32* nonnull %189, i32 1,\l... i32 1) #18\l  %191 = tail call i32 asm sideeffect \"xchg $0, $1\",\l... \"=r,=*m,0,~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}\"(i32* nonnull %181, i32 1)\l... #17, !srcloc !15\l  %192 = icmp eq i32 %191, 0\l  br i1 %192, label %193, label %190\l|{<s0>T|<s1>F}}"];
	Node0x12ff310:s0 -> Node0x12ff360;
	Node0x12ff310:s1 -> Node0x12ff310;
	Node0x12ff360 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%193:\l193:                                              \l  %194 = getelementptr inbounds %struct.anon.39, %struct.anon.39* @mal, i64 0,\l... i32 1, i64 %180, i32 1\l  %195 = load %struct.chunk*, %struct.chunk** %194, align 8, !tbaa !16\l  %196 = icmp eq %struct.chunk* %195, null\l  br i1 %196, label %197, label %202\l|{<s0>T|<s1>F}}"];
	Node0x12ff360:s0 -> Node0x12ff3b0;
	Node0x12ff360:s1 -> Node0x12ff400;
	Node0x12ff3b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%197:\l197:                                              \l  %198 = getelementptr inbounds %struct.chunk*, %struct.chunk** %194, i64 -2\l  %199 = getelementptr inbounds %struct.anon.39, %struct.anon.39* @mal, i64 0,\l... i32 1, i64 %180, i32 2\l  %200 = bitcast %struct.chunk** %199 to %struct.chunk***\l  store %struct.chunk** %198, %struct.chunk*** %200, align 8, !tbaa !18\l  %201 = bitcast %struct.chunk** %194 to %struct.chunk***\l  store %struct.chunk** %198, %struct.chunk*** %201, align 8, !tbaa !16\l  br label %202\l}"];
	Node0x12ff3b0 -> Node0x12ff400;
	Node0x12ff400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#ef886b70",label="{%202:\l202:                                              \l  %203 = load i64, i64* %18, align 8, !tbaa !2\l  %204 = icmp eq i64 %203, %158\l  br i1 %204, label %205, label %251\l|{<s0>T|<s1>F}}"];
	Node0x12ff400:s0 -> Node0x12ff450;
	Node0x12ff400:s1 -> Node0x12ff680;
	Node0x12ff450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%205:\l205:                                              \l  %206 = getelementptr inbounds i8, i8* %15, i64 24\l  %207 = bitcast i8* %206 to %struct.chunk**\l  %208 = load %struct.chunk*, %struct.chunk** %207, align 8, !tbaa !22\l  %209 = getelementptr inbounds i8, i8* %15, i64 16\l  %210 = bitcast i8* %209 to %struct.chunk**\l  %211 = load %struct.chunk*, %struct.chunk** %210, align 8, !tbaa !23\l  %212 = icmp eq %struct.chunk* %208, %211\l  br i1 %212, label %215, label %213\l|{<s0>T|<s1>F}}"];
	Node0x12ff450:s0 -> Node0x12ff4f0;
	Node0x12ff450:s1 -> Node0x12ff4a0;
	Node0x12ff4a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%213:\l213:                                              \l  %214 = ptrtoint %struct.chunk* %211 to i64\l  br label %223\l}"];
	Node0x12ff4a0 -> Node0x12ff540;
	Node0x12ff4f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%215:\l215:                                              \l  %216 = shl nuw i64 1, %180\l  %217 = xor i64 %216, -1\l  %218 = getelementptr inbounds %struct.anon.39, %struct.anon.39* @mal, i64 0,\l... i32 0\l  tail call void asm sideeffect \"lock \l  %219 = bitcast i8* %209 to i64*\l  %220 = load i64, i64* %219, align 8, !tbaa !23\l  %221 = load %struct.chunk*, %struct.chunk** %207, align 8, !tbaa !22\l  %222 = load i64, i64* %18, align 8, !tbaa !2\l  br label %223\l}"];
	Node0x12ff4f0 -> Node0x12ff540;
	Node0x12ff540 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%223:\l223:                                              \l  %224 = phi i64 [ %222, %215 ], [ %158, %213 ]\l  %225 = phi %struct.chunk* [ %221, %215 ], [ %208, %213 ]\l  %226 = phi i64 [ %220, %215 ], [ %214, %213 ]\l  %227 = ptrtoint %struct.chunk* %225 to i64\l  %228 = getelementptr inbounds %struct.chunk, %struct.chunk* %225, i64 0, i32\l... 2\l  %229 = bitcast %struct.chunk** %228 to i64*\l  store i64 %226, i64* %229, align 8, !tbaa !23\l  %230 = load %struct.chunk*, %struct.chunk** %210, align 8, !tbaa !23\l  %231 = getelementptr inbounds %struct.chunk, %struct.chunk* %230, i64 0, i32\l... 3\l  %232 = bitcast %struct.chunk** %231 to i64*\l  store i64 %227, i64* %232, align 8, !tbaa !22\l  %233 = or i64 %224, 1\l  store i64 %233, i64* %18, align 8, !tbaa !2\l  %234 = and i64 %224, -2\l  %235 = getelementptr inbounds i8, i8* %15, i64 %234\l  %236 = bitcast i8* %235 to i64*\l  %237 = load i64, i64* %236, align 8, !tbaa !8\l  %238 = or i64 %237, 1\l  store i64 %238, i64* %236, align 8, !tbaa !8\l  %239 = load volatile i32, i32* %181, align 8, !tbaa !19\l  %240 = icmp eq i32 %239, 0\l  br i1 %240, label %268, label %241\l|{<s0>T|<s1>F}}"];
	Node0x12ff540:s0 -> Node0x12ff810;
	Node0x12ff540:s1 -> Node0x12ff590;
	Node0x12ff590 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%241:\l241:                                              \l  tail call void asm sideeffect \"mov $1, $0 \l  %242 = getelementptr inbounds %struct.anon.39, %struct.anon.39* @mal, i64 0,\l... i32 1, i64 %180, i32 0, i64 1\l  %243 = load volatile i32, i32* %242, align 4, !tbaa !19\l  %244 = icmp eq i32 %243, 0\l  br i1 %244, label %268, label %245\l|{<s0>T|<s1>F}}"];
	Node0x12ff590:s0 -> Node0x12ff810;
	Node0x12ff590:s1 -> Node0x12ff5e0;
	Node0x12ff5e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#cbd8ee70",label="{%245:\l245:                                              \l  %246 = ptrtoint i32* %181 to i64\l  %247 = tail call i64 asm sideeffect \"syscall\",\l... \"=\{ax\},\{ax\},\{di\},\{si\},\{dx\},~\{rcx\},~\{r11\},~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}\l...\"(i64 202, i64 %246, i64 129, i64 1) #17, !srcloc !21\l  %248 = icmp eq i64 %247, -38\l  br i1 %248, label %249, label %268\l|{<s0>T|<s1>F}}"];
	Node0x12ff5e0:s0 -> Node0x12ff630;
	Node0x12ff5e0:s1 -> Node0x12ff810;
	Node0x12ff630 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%249:\l249:                                              \l  %250 = tail call i64 asm sideeffect \"syscall\",\l... \"=\{ax\},\{ax\},\{di\},\{si\},\{dx\},~\{rcx\},~\{r11\},~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}\l...\"(i64 202, i64 %246, i64 1, i64 1) #17, !srcloc !21\l  br label %268\l}"];
	Node0x12ff630 -> Node0x12ff810;
	Node0x12ff680 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%251:\l251:                                              \l  %252 = load volatile i32, i32* %181, align 8, !tbaa !19\l  %253 = icmp eq i32 %252, 0\l  br i1 %253, label %264, label %254\l|{<s0>T|<s1>F}}"];
	Node0x12ff680:s0 -> Node0x12ff7c0;
	Node0x12ff680:s1 -> Node0x12ff6d0;
	Node0x12ff6d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4987a70",label="{%254:\l254:                                              \l  tail call void asm sideeffect \"mov $1, $0 \l  %255 = getelementptr inbounds %struct.anon.39, %struct.anon.39* @mal, i64 0,\l... i32 1, i64 %180, i32 0, i64 1\l  %256 = load volatile i32, i32* %255, align 4, !tbaa !19\l  %257 = icmp eq i32 %256, 0\l  br i1 %257, label %264, label %258\l|{<s0>T|<s1>F}}"];
	Node0x12ff6d0:s0 -> Node0x12ff7c0;
	Node0x12ff6d0:s1 -> Node0x12ff720;
	Node0x12ff720 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7a88970",label="{%258:\l258:                                              \l  %259 = ptrtoint i32* %181 to i64\l  %260 = tail call i64 asm sideeffect \"syscall\",\l... \"=\{ax\},\{ax\},\{di\},\{si\},\{dx\},~\{rcx\},~\{r11\},~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}\l...\"(i64 202, i64 %259, i64 129, i64 1) #17, !srcloc !21\l  %261 = icmp eq i64 %260, -38\l  br i1 %261, label %262, label %264\l|{<s0>T|<s1>F}}"];
	Node0x12ff720:s0 -> Node0x12ff770;
	Node0x12ff720:s1 -> Node0x12ff7c0;
	Node0x12ff770 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7bca170",label="{%262:\l262:                                              \l  %263 = tail call i64 asm sideeffect \"syscall\",\l... \"=\{ax\},\{ax\},\{di\},\{si\},\{dx\},~\{rcx\},~\{r11\},~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}\l...\"(i64 202, i64 %259, i64 1, i64 1) #17, !srcloc !21\l  br label %264\l}"];
	Node0x12ff770 -> Node0x12ff7c0;
	Node0x12ff7c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f08b6e70",label="{%264:\l264:                                              \l  %265 = load i64, i64* %18, align 8, !tbaa !2\l  %266 = and i64 %265, 1\l  %267 = icmp eq i64 %266, 0\l  br i1 %267, label %157, label %155\l|{<s0>T|<s1>F}}"];
	Node0x12ff7c0:s0 -> Node0x12ff090;
	Node0x12ff7c0:s1 -> Node0x12ff040;
	Node0x12ff810 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e0dbd870",label="{%268:\l268:                                              \l  %269 = load i64, i64* %18, align 8, !tbaa !2\l  %270 = and i64 %269, -2\l  %271 = add i64 %270, %150\l  %272 = add i64 %270, %5\l  %273 = icmp ugt i64 %272, 163840\l  %274 = xor i64 %272, %270\l  %275 = icmp ugt i64 %274, %270\l  %276 = and i1 %273, %275\l  %277 = select i1 %276, i32 1, i32 %149\l  %278 = getelementptr inbounds i8, i8* %15, i64 %270\l  br label %12\l}"];
	Node0x12ff810 -> Node0x12fe780;
	Node0x12ff860 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%279:\l279:                                              \l  %280 = getelementptr inbounds %struct.anon.39, %struct.anon.39* @mal, i64 0,\l... i32 0\l  %281 = load volatile i64, i64* %280, align 8, !tbaa !25\l  %282 = shl nuw i64 1, %54\l  %283 = and i64 %281, %282\l  %284 = icmp eq i64 %283, 0\l  br i1 %284, label %285, label %287\l|{<s0>T|<s1>F}}"];
	Node0x12ff860:s0 -> Node0x12ff8b0;
	Node0x12ff860:s1 -> Node0x12ff900;
	Node0x12ff8b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#85a8fc70",label="{%285:\l285:                                              \l  %286 = getelementptr inbounds %struct.anon.39, %struct.anon.39* @mal, i64 0,\l... i32 0\l  tail call void asm sideeffect \"lock \l  br label %287\l}"];
	Node0x12ff8b0 -> Node0x12ff900;
	Node0x12ff900 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%287:\l287:                                              \l  store i64 %23, i64* %32, align 8, !tbaa !2\l  store i64 %23, i64* %19, align 8, !tbaa !8\l  %288 = getelementptr inbounds %struct.anon.39, %struct.anon.39* @mal, i64 0,\l... i32 2, i64 0\l  %289 = load volatile i32, i32* %288, align 8, !tbaa !19\l  %290 = icmp eq i32 %289, 0\l  br i1 %290, label %305, label %291\l|{<s0>T|<s1>F}}"];
	Node0x12ff900:s0 -> Node0x12ffa40;
	Node0x12ff900:s1 -> Node0x12ff950;
	Node0x12ff950 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%291:\l291:                                              \l  %292 = getelementptr inbounds %struct.anon.39, %struct.anon.39* @mal, i64 0,\l... i32 2, i64 0\l  tail call void asm sideeffect \"mov $1, $0 \l  %293 = getelementptr inbounds %struct.anon.39, %struct.anon.39* @mal, i64 0,\l... i32 2, i64 1\l  %294 = load volatile i32, i32* %293, align 4, !tbaa !19\l  %295 = icmp eq i32 %294, 0\l  br i1 %295, label %305, label %296\l|{<s0>T|<s1>F}}"];
	Node0x12ff950:s0 -> Node0x12ffa40;
	Node0x12ff950:s1 -> Node0x12ff9a0;
	Node0x12ff9a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#85a8fc70",label="{%296:\l296:                                              \l  %297 = getelementptr inbounds %struct.anon.39, %struct.anon.39* @mal, i64 0,\l... i32 2, i64 0\l  %298 = ptrtoint i32* %297 to i64\l  %299 = tail call i64 asm sideeffect \"syscall\",\l... \"=\{ax\},\{ax\},\{di\},\{si\},\{dx\},~\{rcx\},~\{r11\},~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}\l...\"(i64 202, i64 %298, i64 129, i64 1) #17, !srcloc !21\l  %300 = icmp eq i64 %299, -38\l  br i1 %300, label %301, label %305\l|{<s0>T|<s1>F}}"];
	Node0x12ff9a0:s0 -> Node0x12ff9f0;
	Node0x12ff9a0:s1 -> Node0x12ffa40;
	Node0x12ff9f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{%301:\l301:                                              \l  %302 = getelementptr inbounds %struct.anon.39, %struct.anon.39* @mal, i64 0,\l... i32 2, i64 0\l  %303 = ptrtoint i32* %302 to i64\l  %304 = tail call i64 asm sideeffect \"syscall\",\l... \"=\{ax\},\{ax\},\{di\},\{si\},\{dx\},~\{rcx\},~\{r11\},~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}\l...\"(i64 202, i64 %303, i64 1, i64 1) #17, !srcloc !21\l  br label %305\l}"];
	Node0x12ff9f0 -> Node0x12ffa40;
	Node0x12ffa40 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%305:\l305:                                              \l  %306 = getelementptr inbounds %struct.chunk*, %struct.chunk** %68, i64 -2\l  %307 = getelementptr inbounds %struct.chunk, %struct.chunk* %24, i64 0, i32 2\l  %308 = bitcast %struct.chunk** %307 to %struct.chunk***\l  store %struct.chunk** %306, %struct.chunk*** %308, align 8, !tbaa !23\l  %309 = getelementptr inbounds %struct.anon.39, %struct.anon.39* @mal, i64 0,\l... i32 1, i64 %54, i32 2\l  %310 = bitcast %struct.chunk** %309 to i64*\l  %311 = load i64, i64* %310, align 8, !tbaa !18\l  %312 = getelementptr inbounds %struct.chunk, %struct.chunk* %24, i64 0, i32 3\l  %313 = bitcast %struct.chunk** %312 to i64*\l  store i64 %311, i64* %313, align 8, !tbaa !22\l  %314 = getelementptr inbounds %struct.chunk*, %struct.chunk** %68, i64 1\l  store %struct.chunk* %24, %struct.chunk** %314, align 8, !tbaa !22\l  %315 = load %struct.chunk*, %struct.chunk** %312, align 8, !tbaa !22\l  %316 = getelementptr inbounds %struct.chunk, %struct.chunk* %315, i64 0, i32\l... 2\l  store %struct.chunk* %24, %struct.chunk** %316, align 8, !tbaa !23\l  %317 = icmp eq i32 %22, 0\l  br i1 %317, label %328, label %318\l|{<s0>T|<s1>F}}"];
	Node0x12ffa40:s0 -> Node0x12ffae0;
	Node0x12ffa40:s1 -> Node0x12ffa90;
	Node0x12ffa90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%318:\l318:                                              \l  %319 = ptrtoint %struct.chunk* %24 to i64\l  %320 = add i64 %319, 4127\l  %321 = and i64 %320, -4096\l  %322 = ptrtoint i8* %15 to i64\l  %323 = add i64 %322, -32\l  %324 = and i64 %323, -4096\l  %325 = inttoptr i64 %321 to i8*\l  %326 = sub i64 %324, %321\l  %327 = tail call fastcc i32 @__madvise(i8* %325, i64 %326, i32 4) #18\l  br label %328\l}"];
	Node0x12ffa90 -> Node0x12ffae0;
	Node0x12ffae0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%328:\l328:                                              \l  %329 = load volatile i32, i32* %55, align 8, !tbaa !19\l  %330 = icmp eq i32 %329, 0\l  br i1 %330, label %341, label %331\l|{<s0>T|<s1>F}}"];
	Node0x12ffae0:s0 -> Node0x12ffc20;
	Node0x12ffae0:s1 -> Node0x12ffb30;
	Node0x12ffb30 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#93b5fe70",label="{%331:\l331:                                              \l  tail call void asm sideeffect \"mov $1, $0 \l  %332 = getelementptr inbounds %struct.anon.39, %struct.anon.39* @mal, i64 0,\l... i32 1, i64 %54, i32 0, i64 1\l  %333 = load volatile i32, i32* %332, align 4, !tbaa !19\l  %334 = icmp eq i32 %333, 0\l  br i1 %334, label %341, label %335\l|{<s0>T|<s1>F}}"];
	Node0x12ffb30:s0 -> Node0x12ffc20;
	Node0x12ffb30:s1 -> Node0x12ffb80;
	Node0x12ffb80 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#85a8fc70",label="{%335:\l335:                                              \l  %336 = ptrtoint i32* %55 to i64\l  %337 = tail call i64 asm sideeffect \"syscall\",\l... \"=\{ax\},\{ax\},\{di\},\{si\},\{dx\},~\{rcx\},~\{r11\},~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}\l...\"(i64 202, i64 %336, i64 129, i64 1) #17, !srcloc !21\l  %338 = icmp eq i64 %337, -38\l  br i1 %338, label %339, label %341\l|{<s0>T|<s1>F}}"];
	Node0x12ffb80:s0 -> Node0x12ffbd0;
	Node0x12ffb80:s1 -> Node0x12ffc20;
	Node0x12ffbd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#7396f570",label="{%339:\l339:                                              \l  %340 = tail call i64 asm sideeffect \"syscall\",\l... \"=\{ax\},\{ax\},\{di\},\{si\},\{dx\},~\{rcx\},~\{r11\},~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}\l...\"(i64 202, i64 %336, i64 1, i64 1) #17, !srcloc !21\l  br label %341\l}"];
	Node0x12ffbd0 -> Node0x12ffc20;
	Node0x12ffc20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#a1c0ff70",label="{%341:\l341:                                              \l  ret void\l}"];
}
