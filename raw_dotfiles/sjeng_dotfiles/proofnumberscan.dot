digraph "CFG for 'proofnumberscan' function" {
	label="CFG for 'proofnumberscan' function";

	Node0x2690030 [shape=record,label="{%0:\l  %1 = alloca [512 x %struct.move_s], align 16\l  %2 = alloca [512 x i32], align 16\l  %3 = alloca [512 x i32], align 16\l  %4 = alloca i32, align 4\l  %5 = alloca i32, align 4\l  %6 = alloca i32, align 4\l  %7 = alloca i32, align 4\l  %8 = alloca i64, align 8\l  %9 = alloca %struct.node*, align 8\l  %10 = alloca %struct.node*, align 8\l  %11 = alloca %struct.node*, align 8\l  %12 = alloca i32, align 4\l  %13 = alloca i32, align 4\l  %14 = alloca i32, align 4\l  %15 = alloca i32, align 4\l  %16 = alloca i32, align 4\l  %17 = alloca i32, align 4\l  %18 = alloca i32, align 4\l  %19 = alloca [8 x i8], align 1\l  %20 = alloca i32, align 4\l  %21 = alloca float, align 4\l  %22 = alloca i32, align 4\l  %23 = alloca %struct.move_s, align 8\l  store i32 0, i32* %13, align 4\l  store i32 0, i32* %14, align 4\l  %24 = call fastcc i64 @rtime()\l  store i64 %24, i64* %8, align 8\l  %.b2 = load i1, i1* @PBSize, align 1\l  %25 = select i1 %.b2, i32 200000, i32 0\l  %26 = sext i32 %25 to i64\l  %27 = call fastcc noalias i8* @calloc(i64 %26, i64 56) #8\l  store i8* %27, i8** @membuff, align 8\l  %28 = call fastcc noalias i8* @calloc(i64 1, i64 56) #8\l  %29 = bitcast i8* %28 to %struct.node*\l  store %struct.node* %29, %struct.node** %9, align 8\l  %30 = getelementptr inbounds [512 x %struct.move_s], [512 x %struct.move_s]*\l... %1, i64 0, i64 0\l  call fastcc void @gen(%struct.move_s* %30)\l  %31 = load i32, i32* @numb_moves, align 4\l  store i32 %31, i32* %7, align 4\l  store i1 false, i1* @alllosers, align 1\l  %32 = bitcast [300 x i32]* @rootlosers to i8*\l  call void @llvm.memset.p0i8.i64(i8* align 16 %32, i8 0, i64 1200, i1 false)\l  %33 = getelementptr inbounds [512 x i32], [512 x i32]* %3, i64 0, i64 0\l  %34 = bitcast i32* %33 to i8*\l  call void @llvm.memset.p0i8.i64(i8* align 16 %34, i8 0, i64 2048, i1 false)\l  %35 = bitcast %struct.move_s* @pn_move to i8*\l  %36 = bitcast %struct.move_s* @dummy to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %35, i8* align 4 %36, i64\l... 24, i1 false)\l  store i32 0, i32* %6, align 4\l  %37 = call fastcc i32 @in_check()\l  store i32 %37, i32* %20, align 4\l  store i32 0, i32* %4, align 4\l  br label %38\l}"];
	Node0x2690030 -> Node0x2696820;
	Node0x2696820 [shape=record,label="{%38:\l38:                                               \l  %39 = load i32, i32* %4, align 4\l  %40 = load i32, i32* %7, align 4\l  %41 = icmp slt i32 %39, %40\l  br i1 %41, label %42, label %66\l|{<s0>T|<s1>F}}"];
	Node0x2696820:s0 -> Node0x2697ea0;
	Node0x2696820:s1 -> Node0x2698030;
	Node0x2697ea0 [shape=record,label="{%42:\l42:                                               \l  %43 = getelementptr inbounds [512 x %struct.move_s], [512 x %struct.move_s]*\l... %1, i64 0, i64 0\l  %44 = load i32, i32* %4, align 4\l  call fastcc void @make(%struct.move_s* %43, i32 %44)\l  %45 = getelementptr inbounds [512 x %struct.move_s], [512 x %struct.move_s]*\l... %1, i64 0, i64 0\l  %46 = load i32, i32* %4, align 4\l  %47 = load i32, i32* %20, align 4\l  %48 = call fastcc i32 @check_legal(%struct.move_s* %45, i32 %46, i32 %47)\l  %49 = icmp ne i32 %48, 0\l  br i1 %49, label %50, label %56\l|{<s0>T|<s1>F}}"];
	Node0x2697ea0:s0 -> Node0x2697ef0;
	Node0x2697ea0:s1 -> Node0x2697f40;
	Node0x2697ef0 [shape=record,label="{%50:\l50:                                               \l  %51 = load i32, i32* %6, align 4\l  %52 = add nsw i32 %51, 1\l  store i32 %52, i32* %6, align 4\l  %53 = load i32, i32* %4, align 4\l  %54 = sext i32 %53 to i64\l  %55 = getelementptr inbounds [512 x i32], [512 x i32]* %2, i64 0, i64 %54\l  store i32 1, i32* %55, align 4\l  br label %60\l}"];
	Node0x2697ef0 -> Node0x2697f90;
	Node0x2697f40 [shape=record,label="{%56:\l56:                                               \l  %57 = load i32, i32* %4, align 4\l  %58 = sext i32 %57 to i64\l  %59 = getelementptr inbounds [512 x i32], [512 x i32]* %2, i64 0, i64 %58\l  store i32 0, i32* %59, align 4\l  br label %60\l}"];
	Node0x2697f40 -> Node0x2697f90;
	Node0x2697f90 [shape=record,label="{%60:\l60:                                               \l  %61 = getelementptr inbounds [512 x %struct.move_s], [512 x %struct.move_s]*\l... %1, i64 0, i64 0\l  %62 = load i32, i32* %4, align 4\l  call fastcc void @unmake(%struct.move_s* %61, i32 %62)\l  br label %63\l}"];
	Node0x2697f90 -> Node0x2697fe0;
	Node0x2697fe0 [shape=record,label="{%63:\l63:                                               \l  %64 = load i32, i32* %4, align 4\l  %65 = add nsw i32 %64, 1\l  store i32 %65, i32* %4, align 4\l  br label %38\l}"];
	Node0x2697fe0 -> Node0x2696820;
	Node0x2698030 [shape=record,label="{%66:\l66:                                               \l  %67 = load i32, i32* %6, align 4\l  %68 = icmp eq i32 %67, 0\l  br i1 %68, label %69, label %73\l|{<s0>T|<s1>F}}"];
	Node0x2698030:s0 -> Node0x2698080;
	Node0x2698030:s1 -> Node0x26980d0;
	Node0x2698080 [shape=record,label="{%69:\l69:                                               \l  call fastcc void @Xfree()\l  %70 = load i8*, i8** @membuff, align 8\l  call fastcc void @free(i8* %70) #8\l  %71 = load %struct.node*, %struct.node** %9, align 8\l  %72 = bitcast %struct.node* %71 to i8*\l  call fastcc void @free(i8* %72) #8\l  br label %559\l}"];
	Node0x2698080 -> Node0x2699930;
	Node0x26980d0 [shape=record,label="{%73:\l73:                                               \l  store i32 0, i32* %15, align 4\l  store i32 1, i32* @nodecount, align 4\l  store i32 0, i32* @iters, align 4\l  store i32 0, i32* @maxply, align 4\l  store i32 0, i32* @forwards, align 4\l  store i32 0, i32* %17, align 4\l  store i32 0, i32* %18, align 4\l  %74 = load i32, i32* @hash, align 4\l  %75 = load i32, i32* @move_number, align 4\l  %76 = load i32, i32* @ply, align 4\l  %77 = add nsw i32 %75, %76\l  %78 = sub nsw i32 %77, 1\l  %79 = sext i32 %78 to i64\l  %80 = getelementptr inbounds [600 x i32], [600 x i32]* @hash_history, i64 0,\l... i64 %79\l  store i32 %74, i32* %80, align 4\l  %81 = load i32, i32* @white_to_move, align 4\l  %82 = icmp ne i32 %81, 0\l  %83 = zext i1 %82 to i64\l  %84 = select i1 %82, i32 0, i32 1\l  store i32 %84, i32* @root_to_move, align 4\l  %85 = load %struct.node*, %struct.node** %9, align 8\l  call fastcc void @pn_eval(%struct.node* %85)\l  %86 = load %struct.node*, %struct.node** %9, align 8\l  %87 = getelementptr inbounds %struct.node, %struct.node* %86, i32 0, i32 0\l  %88 = load i8, i8* %87, align 8\l  %89 = zext i8 %88 to i32\l  %90 = icmp eq i32 %89, 1\l  br i1 %90, label %97, label %91\l|{<s0>T|<s1>F}}"];
	Node0x26980d0:s0 -> Node0x2698170;
	Node0x26980d0:s1 -> Node0x2698120;
	Node0x2698120 [shape=record,label="{%91:\l91:                                               \l  %92 = load %struct.node*, %struct.node** %9, align 8\l  %93 = getelementptr inbounds %struct.node, %struct.node* %92, i32 0, i32 0\l  %94 = load i8, i8* %93, align 8\l  %95 = zext i8 %94 to i32\l  %96 = icmp eq i32 %95, 0\l  br i1 %96, label %97, label %103\l|{<s0>T|<s1>F}}"];
	Node0x2698120:s0 -> Node0x2698170;
	Node0x2698120:s1 -> Node0x26981c0;
	Node0x2698170 [shape=record,label="{%97:\l97:                                               \l  call fastcc void @Xfree()\l  %98 = load i8*, i8** @membuff, align 8\l  call fastcc void @free(i8* %98) #8\l  %99 = load %struct.node*, %struct.node** %9, align 8\l  %100 = bitcast %struct.node* %99 to i8*\l  call fastcc void @free(i8* %100) #8\l  %101 = bitcast %struct.move_s* @pn_move to i8*\l  %102 = bitcast %struct.move_s* @dummy to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %101, i8* align 4 %102, i64\l... 24, i1 false)\l  br label %559\l}"];
	Node0x2698170 -> Node0x2699930;
	Node0x26981c0 [shape=record,label="{%103:\l103:                                              \l  %104 = load %struct.node*, %struct.node** %9, align 8\l  call fastcc void @set_proof_and_disproof_numbers(%struct.node* %104)\l  br label %105\l}"];
	Node0x26981c0 -> Node0x2698210;
	Node0x2698210 [shape=record,label="{%105:\l105:                                              \l  %106 = call fastcc i64 @rtime()\l  %107 = load i64, i64* %8, align 8\l  %108 = call fastcc i32 @rdifftime(i64 %106, i64 %107)\l  %109 = load i32, i32* @pn_time, align 4\l  %110 = icmp slt i32 %108, %109\l  br i1 %110, label %111, label %132\l|{<s0>T|<s1>F}}"];
	Node0x2698210:s0 -> Node0x2698260;
	Node0x2698210:s1 -> Node0x26983a0;
	Node0x2698260 [shape=record,label="{%111:\l111:                                              \l  %112 = call fastcc i32 @interrupt()\l  %113 = icmp ne i32 %112, 0\l  br i1 %113, label %132, label %114\l|{<s0>T|<s1>F}}"];
	Node0x2698260:s0 -> Node0x26983a0;
	Node0x2698260:s1 -> Node0x26982b0;
	Node0x26982b0 [shape=record,label="{%114:\l114:                                              \l  %115 = load i32, i32* @bufftop, align 4\l  %116 = zext i32 %115 to i64\l  %.b3 = load i1, i1* @PBSize, align 1\l  %117 = select i1 %.b3, i32 200000, i32 0\l  %118 = sub nsw i32 %117, 10000\l  %119 = sext i32 %118 to i64\l  %120 = mul i64 %119, 56\l  %121 = icmp ult i64 %116, %120\l  br i1 %121, label %122, label %132\l|{<s0>T|<s1>F}}"];
	Node0x26982b0:s0 -> Node0x2698300;
	Node0x26982b0:s1 -> Node0x26983a0;
	Node0x2698300 [shape=record,label="{%122:\l122:                                              \l  %123 = load %struct.node*, %struct.node** %9, align 8\l  %124 = getelementptr inbounds %struct.node, %struct.node* %123, i32 0, i32 4\l  %125 = load i32, i32* %124, align 4\l  %126 = icmp ne i32 %125, 0\l  br i1 %126, label %127, label %132\l|{<s0>T|<s1>F}}"];
	Node0x2698300:s0 -> Node0x2698350;
	Node0x2698300:s1 -> Node0x26983a0;
	Node0x2698350 [shape=record,label="{%127:\l127:                                              \l  %128 = load %struct.node*, %struct.node** %9, align 8\l  %129 = getelementptr inbounds %struct.node, %struct.node* %128, i32 0, i32 5\l  %130 = load i32, i32* %129, align 8\l  %131 = icmp ne i32 %130, 0\l  br label %132\l}"];
	Node0x2698350 -> Node0x26983a0;
	Node0x26983a0 [shape=record,label="{%132:\l132:                                              \l  %133 = phi i1 [ false, %122 ], [ false, %114 ], [ false, %111 ], [ false,\l... %105 ], [ %131, %127 ]\l  br i1 %133, label %134, label %361\l|{<s0>T|<s1>F}}"];
	Node0x26983a0:s0 -> Node0x26983f0;
	Node0x26983a0:s1 -> Node0x2698f80;
	Node0x26983f0 [shape=record,label="{%134:\l134:                                              \l  %135 = load i32, i32* @iters, align 4\l  %136 = add nsw i32 %135, 1\l  store i32 %136, i32* @iters, align 4\l  %137 = load i32, i32* @nodecount, align 4\l  store i32 %137, i32* %16, align 4\l  %138 = load i32, i32* @nodecount, align 4\l  %139 = srem i32 %138, 100\l  %140 = icmp slt i32 %139, 66\l  br i1 %140, label %141, label %218\l|{<s0>T|<s1>F}}"];
	Node0x26983f0:s0 -> Node0x2698440;
	Node0x26983f0:s1 -> Node0x2698850;
	Node0x2698440 [shape=record,label="{%141:\l141:                                              \l  %142 = load i32, i32* %17, align 4\l  %143 = add nsw i32 %142, 1\l  store i32 %143, i32* %17, align 4\l  %144 = load %struct.node*, %struct.node** %9, align 8\l  store %struct.node* %144, %struct.node** %11, align 8\l  %145 = load %struct.node*, %struct.node** %11, align 8\l  %146 = call fastcc %struct.node* @select_most_proving(%struct.node* %145)\l  store %struct.node* %146, %struct.node** %10, align 8\l  %147 = load %struct.node*, %struct.node** %10, align 8\l  call fastcc void @develop_node(%struct.node* %147)\l  %148 = load %struct.node*, %struct.node** %10, align 8\l  call fastcc void @update_ancestors(%struct.node* %148)\l  store i32 0, i32* %4, align 4\l  br label %149\l}"];
	Node0x2698440 -> Node0x2698490;
	Node0x2698490 [shape=record,label="{%149:\l149:                                              \l  %150 = load %struct.node*, %struct.node** %9, align 8\l  %151 = getelementptr inbounds %struct.node, %struct.node* %150, i32 0, i32 6\l  %152 = load %struct.node**, %struct.node*** %151, align 8\l  %153 = load i32, i32* %4, align 4\l  %154 = sext i32 %153 to i64\l  %155 = getelementptr inbounds %struct.node*, %struct.node** %152, i64 %154\l  %156 = load %struct.node*, %struct.node** %155, align 8\l  %157 = getelementptr inbounds %struct.node, %struct.node* %156, i32 0, i32 4\l  %158 = load i32, i32* %157, align 4\l  %159 = load %struct.node*, %struct.node** %9, align 8\l  %160 = getelementptr inbounds %struct.node, %struct.node* %159, i32 0, i32 4\l  %161 = load i32, i32* %160, align 4\l  %162 = icmp ne i32 %158, %161\l  br i1 %162, label %163, label %166\l|{<s0>T|<s1>F}}"];
	Node0x2698490:s0 -> Node0x26984e0;
	Node0x2698490:s1 -> Node0x2698530;
	Node0x26984e0 [shape=record,label="{%163:\l163:                                              \l  %164 = load i32, i32* %4, align 4\l  %165 = add nsw i32 %164, 1\l  store i32 %165, i32* %4, align 4\l  br label %149\l}"];
	Node0x26984e0 -> Node0x2698490;
	Node0x2698530 [shape=record,label="{%166:\l166:                                              \l  %167 = load i32, i32* @nodecount, align 4\l  %168 = load i32, i32* %16, align 4\l  %169 = sub nsw i32 %167, %168\l  %170 = load i32, i32* %4, align 4\l  %171 = sext i32 %170 to i64\l  %172 = getelementptr inbounds [512 x i32], [512 x i32]* %3, i64 0, i64 %171\l  %173 = load i32, i32* %172, align 4\l  %174 = add nsw i32 %173, %169\l  store i32 %174, i32* %172, align 4\l  %175 = load %struct.node*, %struct.node** %9, align 8\l  %176 = getelementptr inbounds %struct.node, %struct.node* %175, i32 0, i32 4\l  %177 = load i32, i32* %176, align 4\l  %178 = icmp eq i32 %177, 0\l  br i1 %178, label %179, label %201\l|{<s0>T|<s1>F}}"];
	Node0x2698530:s0 -> Node0x2698580;
	Node0x2698530:s1 -> Node0x26986c0;
	Node0x2698580 [shape=record,label="{%179:\l179:                                              \l  %180 = load %struct.node*, %struct.node** %9, align 8\l  %181 = getelementptr inbounds %struct.node, %struct.node* %180, i32 0, i32 5\l  %182 = load i32, i32* %181, align 8\l  %183 = icmp eq i32 %182, 100000000\l  br i1 %183, label %184, label %201\l|{<s0>T|<s1>F}}"];
	Node0x2698580:s0 -> Node0x26985d0;
	Node0x2698580:s1 -> Node0x26986c0;
	Node0x26985d0 [shape=record,label="{%184:\l184:                                              \l  store i1 true, i1* @forcedwin, align 1\l  %.b1 = load i1, i1* @kibitzed, align 1\l  %185 = zext i1 %.b1 to i32\l  %186 = icmp ne i32 %185, 0\l  br i1 %186, label %190, label %187\l|{<s0>T|<s1>F}}"];
	Node0x26985d0:s0 -> Node0x2698670;
	Node0x26985d0:s1 -> Node0x2698620;
	Node0x2698620 [shape=record,label="{%187:\l187:                                              \l  store i1 true, i1* @kibitzed, align 1\l  %188 = getelementptr inbounds [28 x i8], [28 x i8]* @.str.88, i64 0, i64 0\l  %189 = call i32 (i8*, ...) @printf(i8* %188)\l  br label %190\l}"];
	Node0x2698620 -> Node0x2698670;
	Node0x2698670 [shape=record,label="{%190:\l190:                                              \l  %191 = load %struct.node*, %struct.node** %9, align 8\l  %192 = getelementptr inbounds %struct.node, %struct.node* %191, i32 0, i32 6\l  %193 = load %struct.node**, %struct.node*** %192, align 8\l  %194 = load i32, i32* %4, align 4\l  %195 = sext i32 %194 to i64\l  %196 = getelementptr inbounds %struct.node*, %struct.node** %193, i64 %195\l  %197 = load %struct.node*, %struct.node** %196, align 8\l  %198 = getelementptr inbounds %struct.node, %struct.node* %197, i32 0, i32 8\l  %199 = bitcast %struct.move_s* %198 to i8*\l  %200 = bitcast %struct.move_s* @pn_move to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %200, i8* align 8 %199, i64\l... 24, i1 false)\l  br label %217\l}"];
	Node0x2698670 -> Node0x2698800;
	Node0x26986c0 [shape=record,label="{%201:\l201:                                              \l  %202 = load %struct.node*, %struct.node** %9, align 8\l  %203 = getelementptr inbounds %struct.node, %struct.node* %202, i32 0, i32 5\l  %204 = load i32, i32* %203, align 8\l  %205 = icmp eq i32 %204, 0\l  br i1 %205, label %206, label %216\l|{<s0>T|<s1>F}}"];
	Node0x26986c0:s0 -> Node0x2698710;
	Node0x26986c0:s1 -> Node0x26987b0;
	Node0x2698710 [shape=record,label="{%206:\l206:                                              \l  %207 = load %struct.node*, %struct.node** %9, align 8\l  %208 = getelementptr inbounds %struct.node, %struct.node* %207, i32 0, i32 4\l  %209 = load i32, i32* %208, align 4\l  %210 = icmp eq i32 %209, 100000000\l  br i1 %210, label %211, label %216\l|{<s0>T|<s1>F}}"];
	Node0x2698710:s0 -> Node0x2698760;
	Node0x2698710:s1 -> Node0x26987b0;
	Node0x2698760 [shape=record,label="{%211:\l211:                                              \l  %212 = bitcast %struct.move_s* @pn_move to i8*\l  %213 = bitcast %struct.move_s* @dummy to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %212, i8* align 4 %213, i64\l... 24, i1 false)\l  %214 = load i32, i32* %15, align 4\l  %215 = add nsw i32 %214, 1\l  store i32 %215, i32* %15, align 4\l  br label %216\l}"];
	Node0x2698760 -> Node0x26987b0;
	Node0x26987b0 [shape=record,label="{%216:\l216:                                              \l  br label %217\l}"];
	Node0x26987b0 -> Node0x2698800;
	Node0x2698800 [shape=record,label="{%217:\l217:                                              \l  br label %360\l}"];
	Node0x2698800 -> Node0x2698f30;
	Node0x2698850 [shape=record,label="{%218:\l218:                                              \l  %219 = load i32, i32* %18, align 4\l  %220 = add nsw i32 %219, 1\l  store i32 %220, i32* %18, align 4\l  store i32 100000000, i32* %12, align 4\l  store i32 0, i32* %5, align 4\l  store i32 0, i32* %4, align 4\l  br label %221\l}"];
	Node0x2698850 -> Node0x26988a0;
	Node0x26988a0 [shape=record,label="{%221:\l221:                                              \l  %222 = load i32, i32* %4, align 4\l  %223 = load i32, i32* %7, align 4\l  %224 = icmp slt i32 %222, %223\l  br i1 %224, label %225, label %264\l|{<s0>T|<s1>F}}"];
	Node0x26988a0:s0 -> Node0x26988f0;
	Node0x26988a0:s1 -> Node0x2698b70;
	Node0x26988f0 [shape=record,label="{%225:\l225:                                              \l  %226 = load i32, i32* %4, align 4\l  %227 = sext i32 %226 to i64\l  %228 = getelementptr inbounds [512 x i32], [512 x i32]* %3, i64 0, i64 %227\l  %229 = load i32, i32* %228, align 4\l  %230 = load i32, i32* %12, align 4\l  %231 = icmp slt i32 %229, %230\l  br i1 %231, label %232, label %251\l|{<s0>T|<s1>F}}"];
	Node0x26988f0:s0 -> Node0x2698940;
	Node0x26988f0:s1 -> Node0x2698a30;
	Node0x2698940 [shape=record,label="{%232:\l232:                                              \l  %233 = load i32, i32* %4, align 4\l  %234 = sext i32 %233 to i64\l  %235 = getelementptr inbounds [512 x i32], [512 x i32]* %2, i64 0, i64 %234\l  %236 = load i32, i32* %235, align 4\l  %237 = icmp ne i32 %236, 0\l  br i1 %237, label %238, label %251\l|{<s0>T|<s1>F}}"];
	Node0x2698940:s0 -> Node0x2698990;
	Node0x2698940:s1 -> Node0x2698a30;
	Node0x2698990 [shape=record,label="{%238:\l238:                                              \l  %239 = load i32, i32* %4, align 4\l  %240 = sext i32 %239 to i64\l  %241 = getelementptr inbounds [300 x i32], [300 x i32]* @rootlosers, i64 0,\l... i64 %240\l  %242 = load i32, i32* %241, align 4\l  %243 = icmp ne i32 %242, 0\l  br i1 %243, label %251, label %244\l|{<s0>T|<s1>F}}"];
	Node0x2698990:s0 -> Node0x2698a30;
	Node0x2698990:s1 -> Node0x26989e0;
	Node0x26989e0 [shape=record,label="{%244:\l244:                                              \l  %245 = load i32, i32* %4, align 4\l  %246 = sext i32 %245 to i64\l  %247 = getelementptr inbounds [512 x i32], [512 x i32]* %3, i64 0, i64 %246\l  %248 = load i32, i32* %247, align 4\l  store i32 %248, i32* %12, align 4\l  %249 = load i32, i32* %4, align 4\l  store i32 %249, i32* %14, align 4\l  %250 = load i32, i32* %5, align 4\l  store i32 %250, i32* %13, align 4\l  br label %251\l}"];
	Node0x26989e0 -> Node0x2698a30;
	Node0x2698a30 [shape=record,label="{%251:\l251:                                              \l  %252 = load i32, i32* %4, align 4\l  %253 = sext i32 %252 to i64\l  %254 = getelementptr inbounds [512 x i32], [512 x i32]* %2, i64 0, i64 %253\l  %255 = load i32, i32* %254, align 4\l  %256 = icmp ne i32 %255, 0\l  br i1 %256, label %257, label %260\l|{<s0>T|<s1>F}}"];
	Node0x2698a30:s0 -> Node0x2698a80;
	Node0x2698a30:s1 -> Node0x2698ad0;
	Node0x2698a80 [shape=record,label="{%257:\l257:                                              \l  %258 = load i32, i32* %5, align 4\l  %259 = add nsw i32 %258, 1\l  store i32 %259, i32* %5, align 4\l  br label %260\l}"];
	Node0x2698a80 -> Node0x2698ad0;
	Node0x2698ad0 [shape=record,label="{%260:\l260:                                              \l  br label %261\l}"];
	Node0x2698ad0 -> Node0x2698b20;
	Node0x2698b20 [shape=record,label="{%261:\l261:                                              \l  %262 = load i32, i32* %4, align 4\l  %263 = add nsw i32 %262, 1\l  store i32 %263, i32* %4, align 4\l  br label %221\l}"];
	Node0x2698b20 -> Node0x26988a0;
	Node0x2698b70 [shape=record,label="{%264:\l264:                                              \l  %265 = load i32, i32* %12, align 4\l  %266 = icmp eq i32 %265, 100000000\l  br i1 %266, label %267, label %270\l|{<s0>T|<s1>F}}"];
	Node0x2698b70:s0 -> Node0x2698bc0;
	Node0x2698b70:s1 -> Node0x2698c10;
	Node0x2698bc0 [shape=record,label="{%267:\l267:                                              \l  %268 = load i32, i32* @nodecount, align 4\l  %269 = add nsw i32 %268, 30\l  store i32 %269, i32* @nodecount, align 4\l  br label %105\l}"];
	Node0x2698bc0 -> Node0x2698210;
	Node0x2698c10 [shape=record,label="{%270:\l270:                                              \l  %271 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %1, i64 0, i64 0\l  %272 = load i32, i32* %14, align 4\l  call fastcc void @make(%struct.move_s* %271, i32 %272)\l  %273 = load %struct.node*, %struct.node** %9, align 8\l  %274 = getelementptr inbounds %struct.node, %struct.node* %273, i32 0, i32 6\l  %275 = load %struct.node**, %struct.node*** %274, align 8\l  %276 = load i32, i32* %13, align 4\l  %277 = sext i32 %276 to i64\l  %278 = getelementptr inbounds %struct.node*, %struct.node** %275, i64 %277\l  %279 = load %struct.node*, %struct.node** %278, align 8\l  store %struct.node* %279, %struct.node** %11, align 8\l  %280 = load %struct.node*, %struct.node** %11, align 8\l  %281 = call fastcc %struct.node* @select_most_proving(%struct.node* %280)\l  store %struct.node* %281, %struct.node** %10, align 8\l  %282 = load %struct.node*, %struct.node** %10, align 8\l  call fastcc void @develop_node(%struct.node* %282)\l  %283 = load %struct.node*, %struct.node** %10, align 8\l  call fastcc void @update_ancestors(%struct.node* %283)\l  %284 = load i32, i32* @nodecount, align 4\l  %285 = load i32, i32* %16, align 4\l  %286 = sub nsw i32 %284, %285\l  %287 = load i32, i32* %14, align 4\l  %288 = sext i32 %287 to i64\l  %289 = getelementptr inbounds [512 x i32], [512 x i32]* %3, i64 0, i64 %288\l  %290 = load i32, i32* %289, align 4\l  %291 = add nsw i32 %290, %286\l  store i32 %291, i32* %289, align 4\l  %292 = load %struct.node*, %struct.node** %9, align 8\l  %293 = getelementptr inbounds %struct.node, %struct.node* %292, i32 0, i32 6\l  %294 = load %struct.node**, %struct.node*** %293, align 8\l  %295 = load i32, i32* %13, align 4\l  %296 = sext i32 %295 to i64\l  %297 = getelementptr inbounds %struct.node*, %struct.node** %294, i64 %296\l  %298 = load %struct.node*, %struct.node** %297, align 8\l  %299 = getelementptr inbounds %struct.node, %struct.node* %298, i32 0, i32 4\l  %300 = load i32, i32* %299, align 4\l  %301 = icmp eq i32 %300, 0\l  br i1 %301, label %302, label %330\l|{<s0>T|<s1>F}}"];
	Node0x2698c10:s0 -> Node0x2698c60;
	Node0x2698c10:s1 -> Node0x2698da0;
	Node0x2698c60 [shape=record,label="{%302:\l302:                                              \l  %303 = load %struct.node*, %struct.node** %9, align 8\l  %304 = getelementptr inbounds %struct.node, %struct.node* %303, i32 0, i32 6\l  %305 = load %struct.node**, %struct.node*** %304, align 8\l  %306 = load i32, i32* %13, align 4\l  %307 = sext i32 %306 to i64\l  %308 = getelementptr inbounds %struct.node*, %struct.node** %305, i64 %307\l  %309 = load %struct.node*, %struct.node** %308, align 8\l  %310 = getelementptr inbounds %struct.node, %struct.node* %309, i32 0, i32 5\l  %311 = load i32, i32* %310, align 8\l  %312 = icmp eq i32 %311, 100000000\l  br i1 %312, label %313, label %330\l|{<s0>T|<s1>F}}"];
	Node0x2698c60:s0 -> Node0x2698cb0;
	Node0x2698c60:s1 -> Node0x2698da0;
	Node0x2698cb0 [shape=record,label="{%313:\l313:                                              \l  store i1 true, i1* @forcedwin, align 1\l  %.b = load i1, i1* @kibitzed, align 1\l  %314 = zext i1 %.b to i32\l  %315 = icmp ne i32 %314, 0\l  br i1 %315, label %319, label %316\l|{<s0>T|<s1>F}}"];
	Node0x2698cb0:s0 -> Node0x2698d50;
	Node0x2698cb0:s1 -> Node0x2698d00;
	Node0x2698d00 [shape=record,label="{%316:\l316:                                              \l  store i1 true, i1* @kibitzed, align 1\l  %317 = getelementptr inbounds [34 x i8], [34 x i8]* @.str.1.89, i64 0, i64 0\l  %318 = call i32 (i8*, ...) @printf(i8* %317)\l  br label %319\l}"];
	Node0x2698d00 -> Node0x2698d50;
	Node0x2698d50 [shape=record,label="{%319:\l319:                                              \l  %320 = load %struct.node*, %struct.node** %9, align 8\l  %321 = getelementptr inbounds %struct.node, %struct.node* %320, i32 0, i32 6\l  %322 = load %struct.node**, %struct.node*** %321, align 8\l  %323 = load i32, i32* %13, align 4\l  %324 = sext i32 %323 to i64\l  %325 = getelementptr inbounds %struct.node*, %struct.node** %322, i64 %324\l  %326 = load %struct.node*, %struct.node** %325, align 8\l  %327 = getelementptr inbounds %struct.node, %struct.node* %326, i32 0, i32 8\l  %328 = bitcast %struct.move_s* %327 to i8*\l  %329 = bitcast %struct.move_s* @pn_move to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %329, i8* align 8 %328, i64\l... 24, i1 false)\l  br label %359\l}"];
	Node0x2698d50 -> Node0x2698ee0;
	Node0x2698da0 [shape=record,label="{%330:\l330:                                              \l  %331 = load %struct.node*, %struct.node** %9, align 8\l  %332 = getelementptr inbounds %struct.node, %struct.node* %331, i32 0, i32 6\l  %333 = load %struct.node**, %struct.node*** %332, align 8\l  %334 = load i32, i32* %13, align 4\l  %335 = sext i32 %334 to i64\l  %336 = getelementptr inbounds %struct.node*, %struct.node** %333, i64 %335\l  %337 = load %struct.node*, %struct.node** %336, align 8\l  %338 = getelementptr inbounds %struct.node, %struct.node* %337, i32 0, i32 5\l  %339 = load i32, i32* %338, align 8\l  %340 = icmp eq i32 %339, 0\l  br i1 %340, label %341, label %358\l|{<s0>T|<s1>F}}"];
	Node0x2698da0:s0 -> Node0x2698df0;
	Node0x2698da0:s1 -> Node0x2698e90;
	Node0x2698df0 [shape=record,label="{%341:\l341:                                              \l  %342 = load %struct.node*, %struct.node** %9, align 8\l  %343 = getelementptr inbounds %struct.node, %struct.node* %342, i32 0, i32 6\l  %344 = load %struct.node**, %struct.node*** %343, align 8\l  %345 = load i32, i32* %13, align 4\l  %346 = sext i32 %345 to i64\l  %347 = getelementptr inbounds %struct.node*, %struct.node** %344, i64 %346\l  %348 = load %struct.node*, %struct.node** %347, align 8\l  %349 = getelementptr inbounds %struct.node, %struct.node* %348, i32 0, i32 4\l  %350 = load i32, i32* %349, align 4\l  %351 = icmp eq i32 %350, 100000000\l  br i1 %351, label %352, label %358\l|{<s0>T|<s1>F}}"];
	Node0x2698df0:s0 -> Node0x2698e40;
	Node0x2698df0:s1 -> Node0x2698e90;
	Node0x2698e40 [shape=record,label="{%352:\l352:                                              \l  %353 = load i32, i32* %14, align 4\l  %354 = sext i32 %353 to i64\l  %355 = getelementptr inbounds [300 x i32], [300 x i32]* @rootlosers, i64 0,\l... i64 %354\l  store i32 1, i32* %355, align 4\l  %356 = load i32, i32* %15, align 4\l  %357 = add nsw i32 %356, 1\l  store i32 %357, i32* %15, align 4\l  br label %358\l}"];
	Node0x2698e40 -> Node0x2698e90;
	Node0x2698e90 [shape=record,label="{%358:\l358:                                              \l  br label %359\l}"];
	Node0x2698e90 -> Node0x2698ee0;
	Node0x2698ee0 [shape=record,label="{%359:\l359:                                              \l  br label %360\l}"];
	Node0x2698ee0 -> Node0x2698f30;
	Node0x2698f30 [shape=record,label="{%360:\l360:                                              \l  br label %105\l}"];
	Node0x2698f30 -> Node0x2698210;
	Node0x2698f80 [shape=record,label="{%361:\l361:                                              \l  store i32 0, i32* %5, align 4\l  store float -1.000000e+00, float* %21, align 4\l  store i32 0, i32* %22, align 4\l  %362 = load %struct.node*, %struct.node** %9, align 8\l  %363 = getelementptr inbounds %struct.node, %struct.node* %362, i32 0, i32 2\l  %364 = load i8, i8* %363, align 2\l  %365 = icmp ne i8 %364, 0\l  br i1 %365, label %366, label %493\l|{<s0>T|<s1>F}}"];
	Node0x2698f80:s0 -> Node0x2698fd0;
	Node0x2698f80:s1 -> Node0x2699480;
	Node0x2698fd0 [shape=record,label="{%366:\l366:                                              \l  store i32 0, i32* %4, align 4\l  br label %367\l}"];
	Node0x2698fd0 -> Node0x2699020;
	Node0x2699020 [shape=record,label="{%367:\l367:                                              \l  %368 = load i32, i32* %4, align 4\l  %369 = load i32, i32* %7, align 4\l  %370 = icmp slt i32 %368, %369\l  br i1 %370, label %371, label %492\l|{<s0>T|<s1>F}}"];
	Node0x2699020:s0 -> Node0x2699070;
	Node0x2699020:s1 -> Node0x2699430;
	Node0x2699070 [shape=record,label="{%371:\l371:                                              \l  %372 = load i32, i32* %4, align 4\l  %373 = sext i32 %372 to i64\l  %374 = getelementptr inbounds [512 x i32], [512 x i32]* %2, i64 0, i64 %373\l  %375 = load i32, i32* %374, align 4\l  %376 = icmp ne i32 %375, 0\l  br i1 %376, label %377, label %488\l|{<s0>T|<s1>F}}"];
	Node0x2699070:s0 -> Node0x26990c0;
	Node0x2699070:s1 -> Node0x2699390;
	Node0x26990c0 [shape=record,label="{%377:\l377:                                              \l  %378 = load i32, i32* %4, align 4\l  %379 = sext i32 %378 to i64\l  %380 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %1, i64 0, i64 %379\l  %381 = getelementptr inbounds [8 x i8], [8 x i8]* %19, i64 0, i64 0\l  call fastcc void @comp_to_san(%struct.move_s* byval(%struct.move_s) align 8\l... %380, i8* %381)\l  %382 = load %struct.node*, %struct.node** %9, align 8\l  %383 = getelementptr inbounds %struct.node, %struct.node* %382, i32 0, i32 6\l  %384 = load %struct.node**, %struct.node*** %383, align 8\l  %385 = load i32, i32* %5, align 4\l  %386 = sext i32 %385 to i64\l  %387 = getelementptr inbounds %struct.node*, %struct.node** %384, i64 %386\l  %388 = load %struct.node*, %struct.node** %387, align 8\l  %389 = getelementptr inbounds %struct.node, %struct.node* %388, i32 0, i32 4\l  %390 = load i32, i32* %389, align 4\l  %391 = icmp ne i32 %390, 0\l  br i1 %391, label %392, label %474\l|{<s0>T|<s1>F}}"];
	Node0x26990c0:s0 -> Node0x2699110;
	Node0x26990c0:s1 -> Node0x26992f0;
	Node0x2699110 [shape=record,label="{%392:\l392:                                              \l  %393 = load %struct.node*, %struct.node** %9, align 8\l  %394 = getelementptr inbounds %struct.node, %struct.node* %393, i32 0, i32 6\l  %395 = load %struct.node**, %struct.node*** %394, align 8\l  %396 = load i32, i32* %5, align 4\l  %397 = sext i32 %396 to i64\l  %398 = getelementptr inbounds %struct.node*, %struct.node** %395, i64 %397\l  %399 = load %struct.node*, %struct.node** %398, align 8\l  %400 = getelementptr inbounds %struct.node, %struct.node* %399, i32 0, i32 5\l  %401 = load i32, i32* %400, align 8\l  %402 = sitofp i32 %401 to float\l  %403 = load %struct.node*, %struct.node** %9, align 8\l  %404 = getelementptr inbounds %struct.node, %struct.node* %403, i32 0, i32 6\l  %405 = load %struct.node**, %struct.node*** %404, align 8\l  %406 = load i32, i32* %5, align 4\l  %407 = sext i32 %406 to i64\l  %408 = getelementptr inbounds %struct.node*, %struct.node** %405, i64 %407\l  %409 = load %struct.node*, %struct.node** %408, align 8\l  %410 = getelementptr inbounds %struct.node, %struct.node* %409, i32 0, i32 4\l  %411 = load i32, i32* %410, align 4\l  %412 = sitofp i32 %411 to float\l  %413 = fdiv float %402, %412\l  %414 = load float, float* %21, align 4\l  %415 = fcmp ogt float %413, %414\l  br i1 %415, label %416, label %448\l|{<s0>T|<s1>F}}"];
	Node0x2699110:s0 -> Node0x2699160;
	Node0x2699110:s1 -> Node0x26991b0;
	Node0x2699160 [shape=record,label="{%416:\l416:                                              \l  %417 = load %struct.node*, %struct.node** %9, align 8\l  %418 = getelementptr inbounds %struct.node, %struct.node* %417, i32 0, i32 6\l  %419 = load %struct.node**, %struct.node*** %418, align 8\l  %420 = load i32, i32* %5, align 4\l  %421 = sext i32 %420 to i64\l  %422 = getelementptr inbounds %struct.node*, %struct.node** %419, i64 %421\l  %423 = load %struct.node*, %struct.node** %422, align 8\l  %424 = getelementptr inbounds %struct.node, %struct.node* %423, i32 0, i32 5\l  %425 = load i32, i32* %424, align 8\l  %426 = sitofp i32 %425 to float\l  %427 = load %struct.node*, %struct.node** %9, align 8\l  %428 = getelementptr inbounds %struct.node, %struct.node* %427, i32 0, i32 6\l  %429 = load %struct.node**, %struct.node*** %428, align 8\l  %430 = load i32, i32* %5, align 4\l  %431 = sext i32 %430 to i64\l  %432 = getelementptr inbounds %struct.node*, %struct.node** %429, i64 %431\l  %433 = load %struct.node*, %struct.node** %432, align 8\l  %434 = getelementptr inbounds %struct.node, %struct.node* %433, i32 0, i32 4\l  %435 = load i32, i32* %434, align 4\l  %436 = sitofp i32 %435 to float\l  %437 = fdiv float %426, %436\l  store float %437, float* %21, align 4\l  %438 = load %struct.node*, %struct.node** %9, align 8\l  %439 = getelementptr inbounds %struct.node, %struct.node* %438, i32 0, i32 6\l  %440 = load %struct.node**, %struct.node*** %439, align 8\l  %441 = load i32, i32* %5, align 4\l  %442 = sext i32 %441 to i64\l  %443 = getelementptr inbounds %struct.node*, %struct.node** %440, i64 %442\l  %444 = load %struct.node*, %struct.node** %443, align 8\l  %445 = getelementptr inbounds %struct.node, %struct.node* %444, i32 0, i32 8\l  %446 = bitcast %struct.move_s* %445 to i8*\l  %447 = bitcast %struct.move_s* @pn_move to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %447, i8* align 8 %446, i64\l... 24, i1 false)\l  br label %448\l}"];
	Node0x2699160 -> Node0x26991b0;
	Node0x26991b0 [shape=record,label="{%448:\l448:                                              \l  %449 = load %struct.node*, %struct.node** %9, align 8\l  %450 = getelementptr inbounds %struct.node, %struct.node* %449, i32 0, i32 6\l  %451 = load %struct.node**, %struct.node*** %450, align 8\l  %452 = load i32, i32* %5, align 4\l  %453 = sext i32 %452 to i64\l  %454 = getelementptr inbounds %struct.node*, %struct.node** %451, i64 %453\l  %455 = load %struct.node*, %struct.node** %454, align 8\l  %456 = getelementptr inbounds %struct.node, %struct.node* %455, i32 0, i32 5\l  %457 = load i32, i32* %456, align 8\l  %458 = icmp eq i32 %457, 0\l  br i1 %458, label %459, label %473\l|{<s0>T|<s1>F}}"];
	Node0x26991b0:s0 -> Node0x2699200;
	Node0x26991b0:s1 -> Node0x26992a0;
	Node0x2699200 [shape=record,label="{%459:\l459:                                              \l  %460 = load %struct.node*, %struct.node** %9, align 8\l  %461 = getelementptr inbounds %struct.node, %struct.node* %460, i32 0, i32 6\l  %462 = load %struct.node**, %struct.node*** %461, align 8\l  %463 = load i32, i32* %5, align 4\l  %464 = sext i32 %463 to i64\l  %465 = getelementptr inbounds %struct.node*, %struct.node** %462, i64 %464\l  %466 = load %struct.node*, %struct.node** %465, align 8\l  %467 = getelementptr inbounds %struct.node, %struct.node* %466, i32 0, i32 4\l  %468 = load i32, i32* %467, align 4\l  %469 = icmp eq i32 %468, 100000000\l  br i1 %469, label %470, label %473\l|{<s0>T|<s1>F}}"];
	Node0x2699200:s0 -> Node0x2699250;
	Node0x2699200:s1 -> Node0x26992a0;
	Node0x2699250 [shape=record,label="{%470:\l470:                                              \l  %471 = load i32, i32* %22, align 4\l  %472 = add nsw i32 %471, 1\l  store i32 %472, i32* %22, align 4\l  br label %473\l}"];
	Node0x2699250 -> Node0x26992a0;
	Node0x26992a0 [shape=record,label="{%473:\l473:                                              \l  br label %485\l}"];
	Node0x26992a0 -> Node0x2699340;
	Node0x26992f0 [shape=record,label="{%474:\l474:                                              \l  store i1 true, i1* @forcedwin, align 1\l  %475 = load %struct.node*, %struct.node** %9, align 8\l  %476 = getelementptr inbounds %struct.node, %struct.node* %475, i32 0, i32 6\l  %477 = load %struct.node**, %struct.node*** %476, align 8\l  %478 = load i32, i32* %5, align 4\l  %479 = sext i32 %478 to i64\l  %480 = getelementptr inbounds %struct.node*, %struct.node** %477, i64 %479\l  %481 = load %struct.node*, %struct.node** %480, align 8\l  %482 = getelementptr inbounds %struct.node, %struct.node* %481, i32 0, i32 8\l  %483 = bitcast %struct.move_s* %482 to i8*\l  %484 = bitcast %struct.move_s* @pn_move to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %484, i8* align 8 %483, i64\l... 24, i1 false)\l  store float 1.000000e+08, float* %21, align 4\l  br label %485\l}"];
	Node0x26992f0 -> Node0x2699340;
	Node0x2699340 [shape=record,label="{%485:\l485:                                              \l  %486 = load i32, i32* %5, align 4\l  %487 = add nsw i32 %486, 1\l  store i32 %487, i32* %5, align 4\l  br label %488\l}"];
	Node0x2699340 -> Node0x2699390;
	Node0x2699390 [shape=record,label="{%488:\l488:                                              \l  br label %489\l}"];
	Node0x2699390 -> Node0x26993e0;
	Node0x26993e0 [shape=record,label="{%489:\l489:                                              \l  %490 = load i32, i32* %4, align 4\l  %491 = add nsw i32 %490, 1\l  store i32 %491, i32* %4, align 4\l  br label %367\l}"];
	Node0x26993e0 -> Node0x2699020;
	Node0x2699430 [shape=record,label="{%492:\l492:                                              \l  br label %493\l}"];
	Node0x2699430 -> Node0x2699480;
	Node0x2699480 [shape=record,label="{%493:\l493:                                              \l  %494 = getelementptr inbounds [8 x i8], [8 x i8]* %19, i64 0, i64 0\l  %495 = bitcast %struct.move_s* %23 to i8*\l  %496 = bitcast %struct.move_s* @pn_move to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %495, i8* align 4 %496, i64\l... 24, i1 false)\l  call fastcc void @comp_to_san(%struct.move_s* byval(%struct.move_s) align 8\l... %23, i8* %494)\l  %497 = load i32, i32* @xb_mode, align 4\l  %498 = icmp ne i32 %497, 0\l  br i1 %498, label %499, label %515\l|{<s0>T|<s1>F}}"];
	Node0x2699480:s0 -> Node0x26994d0;
	Node0x2699480:s1 -> Node0x2699570;
	Node0x26994d0 [shape=record,label="{%499:\l499:                                              \l  %500 = load i32, i32* @post, align 4\l  %501 = icmp ne i32 %500, 0\l  br i1 %501, label %502, label %515\l|{<s0>T|<s1>F}}"];
	Node0x26994d0:s0 -> Node0x2699520;
	Node0x26994d0:s1 -> Node0x2699570;
	Node0x2699520 [shape=record,label="{%502:\l502:                                              \l  %503 = load %struct.node*, %struct.node** %9, align 8\l  %504 = getelementptr inbounds %struct.node, %struct.node* %503, i32 0, i32 4\l  %505 = load i32, i32* %504, align 4\l  %506 = load %struct.node*, %struct.node** %9, align 8\l  %507 = getelementptr inbounds %struct.node, %struct.node* %506, i32 0, i32 5\l  %508 = load i32, i32* %507, align 8\l  %509 = load i32, i32* %22, align 4\l  %510 = load i32, i32* @maxply, align 4\l  %511 = load i32, i32* %17, align 4\l  %512 = load i32, i32* %18, align 4\l  %513 = getelementptr inbounds [94 x i8], [94 x i8]* @.str.2.90, i64 0, i64 0\l  %514 = call i32 (i8*, ...) @printf(i8* %513, i32 %505, i32 %508, i32 %509,\l... i32 %510, i32 %511, i32 %512)\l  br label %515\l}"];
	Node0x2699520 -> Node0x2699570;
	Node0x2699570 [shape=record,label="{%515:\l515:                                              \l  %516 = load i32, i32* %22, align 4\l  %517 = load i32, i32* %6, align 4\l  %518 = sub nsw i32 %517, 1\l  %519 = icmp eq i32 %516, %518\l  br i1 %519, label %520, label %550\l|{<s0>T|<s1>F}}"];
	Node0x2699570:s0 -> Node0x26995c0;
	Node0x2699570:s1 -> Node0x2699840;
	Node0x26995c0 [shape=record,label="{%520:\l520:                                              \l  %521 = getelementptr inbounds [30 x i8], [30 x i8]* @.str.3.91, i64 0, i64 0\l  %522 = call i32 (i8*, ...) @printf(i8* %521)\l  store i32 0, i32* %4, align 4\l  br label %523\l}"];
	Node0x26995c0 -> Node0x2699610;
	Node0x2699610 [shape=record,label="{%523:\l523:                                              \l  %524 = load i32, i32* %4, align 4\l  %525 = load i32, i32* %7, align 4\l  %526 = icmp slt i32 %524, %525\l  br i1 %526, label %527, label %549\l|{<s0>T|<s1>F}}"];
	Node0x2699610:s0 -> Node0x2699660;
	Node0x2699610:s1 -> Node0x26997f0;
	Node0x2699660 [shape=record,label="{%527:\l527:                                              \l  %528 = load i32, i32* %4, align 4\l  %529 = sext i32 %528 to i64\l  %530 = getelementptr inbounds [300 x i32], [300 x i32]* @rootlosers, i64 0,\l... i64 %529\l  %531 = load i32, i32* %530, align 4\l  %532 = icmp ne i32 %531, 0\l  br i1 %532, label %545, label %533\l|{<s0>T|<s1>F}}"];
	Node0x2699660:s0 -> Node0x2699750;
	Node0x2699660:s1 -> Node0x26996b0;
	Node0x26996b0 [shape=record,label="{%533:\l533:                                              \l  %534 = load i32, i32* %4, align 4\l  %535 = sext i32 %534 to i64\l  %536 = getelementptr inbounds [512 x i32], [512 x i32]* %2, i64 0, i64 %535\l  %537 = load i32, i32* %536, align 4\l  %538 = icmp ne i32 %537, 0\l  br i1 %538, label %539, label %545\l|{<s0>T|<s1>F}}"];
	Node0x26996b0:s0 -> Node0x2699700;
	Node0x26996b0:s1 -> Node0x2699750;
	Node0x2699700 [shape=record,label="{%539:\l539:                                              \l  store i1 true, i1* @forcedwin, align 1\l  %540 = load i32, i32* %4, align 4\l  %541 = sext i32 %540 to i64\l  %542 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %1, i64 0, i64 %541\l  %543 = bitcast %struct.move_s* %542 to i8*\l  %544 = bitcast %struct.move_s* @pn_move to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %544, i8* align 8 %543, i64\l... 24, i1 false)\l  br label %549\l}"];
	Node0x2699700 -> Node0x26997f0;
	Node0x2699750 [shape=record,label="{%545:\l545:                                              \l  br label %546\l}"];
	Node0x2699750 -> Node0x26997a0;
	Node0x26997a0 [shape=record,label="{%546:\l546:                                              \l  %547 = load i32, i32* %4, align 4\l  %548 = add nsw i32 %547, 1\l  store i32 %548, i32* %4, align 4\l  br label %523\l}"];
	Node0x26997a0 -> Node0x2699610;
	Node0x26997f0 [shape=record,label="{%549:\l549:                                              \l  br label %550\l}"];
	Node0x26997f0 -> Node0x2699840;
	Node0x2699840 [shape=record,label="{%550:\l550:                                              \l  %551 = load i32, i32* %22, align 4\l  %552 = load i32, i32* %6, align 4\l  %553 = icmp eq i32 %551, %552\l  br i1 %553, label %554, label %555\l|{<s0>T|<s1>F}}"];
	Node0x2699840:s0 -> Node0x2699890;
	Node0x2699840:s1 -> Node0x26998e0;
	Node0x2699890 [shape=record,label="{%554:\l554:                                              \l  store i1 true, i1* @alllosers, align 1\l  br label %555\l}"];
	Node0x2699890 -> Node0x26998e0;
	Node0x26998e0 [shape=record,label="{%555:\l555:                                              \l  call fastcc void @Xfree()\l  %556 = load i8*, i8** @membuff, align 8\l  call fastcc void @free(i8* %556) #8\l  %557 = load %struct.node*, %struct.node** %9, align 8\l  %558 = bitcast %struct.node* %557 to i8*\l  call fastcc void @free(i8* %558) #8\l  br label %559\l}"];
	Node0x26998e0 -> Node0x2699930;
	Node0x2699930 [shape=record,label="{%559:\l559:                                              \l  ret void\l}"];
}
