digraph "CFG for 'proofnumbercheck' function" {
	label="CFG for 'proofnumbercheck' function";

	Node0x26bb680 [shape=record,label="{%2:\l  %3 = alloca %struct.node*, align 8\l  %4 = alloca %struct.node*, align 8\l  %5 = alloca %struct.node*, align 8\l  %6 = alloca i64, align 8\l  %7 = alloca %struct.move_s, align 4\l  %8 = load i32, i32* @piece_count, align 4\l  %9 = icmp sle i32 %8, 3\l  br i1 %9, label %10, label %16\l|{<s0>T|<s1>F}}"];
	Node0x26bb680:s0 -> Node0x26bb940;
	Node0x26bb680:s1 -> Node0x26bb9e0;
	Node0x26bb940 [shape=record,label="{%10:\l10:                                               \l  %11 = load i32, i32* @Variant, align 4\l  %12 = icmp eq i32 %11, 3\l  br i1 %12, label %13, label %16\l|{<s0>T|<s1>F}}"];
	Node0x26bb940:s0 -> Node0x26bb990;
	Node0x26bb940:s1 -> Node0x26bb9e0;
	Node0x26bb990 [shape=record,label="{%13:\l13:                                               \l  %14 = bitcast %struct.move_s* %0 to i8*\l  %15 = bitcast %struct.move_s* %1 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %14, i8* align 8 %15, i64\l... 24, i1 false)\l  br label %136\l}"];
	Node0x26bb990 -> Node0x26bc020;
	Node0x26bb9e0 [shape=record,label="{%16:\l16:                                               \l  store i32 0, i32* @nodecount, align 4\l  store i32 0, i32* @iters, align 4\l  store i32 0, i32* @frees, align 4\l  store i32 1, i32* @ply, align 4\l  store i32 0, i32* @maxply, align 4\l  call fastcc void @make(%struct.move_s* %1, i32 0)\l  %17 = load i32, i32* @hash, align 4\l  %18 = load i32, i32* @move_number, align 4\l  %19 = load i32, i32* @ply, align 4\l  %20 = add nsw i32 %18, %19\l  %21 = sub nsw i32 %20, 1\l  %22 = sext i32 %21 to i64\l  %23 = getelementptr inbounds [600 x i32], [600 x i32]* @hash_history, i64 0,\l... i64 %22\l  store i32 %17, i32* %23, align 4\l  %24 = load i32, i32* @white_to_move, align 4\l  %25 = icmp ne i32 %24, 0\l  %26 = zext i1 %25 to i64\l  %27 = select i1 %25, i32 0, i32 1\l  store i32 %27, i32* @root_to_move, align 4\l  %28 = call fastcc i64 @rtime()\l  store i64 %28, i64* %6, align 8\l  %29 = call fastcc noalias i8* @calloc(i64 1, i64 56) #8\l  %30 = bitcast i8* %29 to %struct.node*\l  store %struct.node* %30, %struct.node** %3, align 8\l  %.b = load i1, i1* @PBSize, align 1\l  %31 = select i1 %.b, i32 200000, i32 0\l  %32 = sext i32 %31 to i64\l  %33 = call fastcc noalias i8* @calloc(i64 %32, i64 56) #8\l  store i8* %33, i8** @membuff, align 8\l  %34 = load %struct.node*, %struct.node** %3, align 8\l  call fastcc void @pn_eval(%struct.node* %34)\l  %35 = load %struct.node*, %struct.node** %3, align 8\l  call fastcc void @set_proof_and_disproof_numbers(%struct.node* %35)\l  %36 = load %struct.node*, %struct.node** %3, align 8\l  store %struct.node* %36, %struct.node** %5, align 8\l  br label %37\l}"];
	Node0x26bb9e0 -> Node0x26bba30;
	Node0x26bba30 [shape=record,label="{%37:\l37:                                               \l  %38 = load %struct.node*, %struct.node** %3, align 8\l  %39 = getelementptr inbounds %struct.node, %struct.node* %38, i32 0, i32 4\l  %40 = load i32, i32* %39, align 4\l  %41 = icmp ne i32 %40, 0\l  br i1 %41, label %42, label %55\l|{<s0>T|<s1>F}}"];
	Node0x26bba30:s0 -> Node0x26bba80;
	Node0x26bba30:s1 -> Node0x26bbb20;
	Node0x26bba80 [shape=record,label="{%42:\l42:                                               \l  %43 = load %struct.node*, %struct.node** %3, align 8\l  %44 = getelementptr inbounds %struct.node, %struct.node* %43, i32 0, i32 5\l  %45 = load i32, i32* %44, align 8\l  %46 = icmp ne i32 %45, 0\l  br i1 %46, label %47, label %55\l|{<s0>T|<s1>F}}"];
	Node0x26bba80:s0 -> Node0x26bbad0;
	Node0x26bba80:s1 -> Node0x26bbb20;
	Node0x26bbad0 [shape=record,label="{%47:\l47:                                               \l  %48 = load i32, i32* @bufftop, align 4\l  %49 = zext i32 %48 to i64\l  %.b1 = load i1, i1* @PBSize, align 1\l  %50 = select i1 %.b1, i32 200000, i32 0\l  %51 = sub nsw i32 %50, 10000\l  %52 = sext i32 %51 to i64\l  %53 = mul i64 %52, 56\l  %54 = icmp ult i64 %49, %53\l  br label %55\l}"];
	Node0x26bbad0 -> Node0x26bbb20;
	Node0x26bbb20 [shape=record,label="{%55:\l55:                                               \l  %56 = phi i1 [ false, %42 ], [ false, %37 ], [ %54, %47 ]\l  br i1 %56, label %57, label %76\l|{<s0>T|<s1>F}}"];
	Node0x26bbb20:s0 -> Node0x26bbb70;
	Node0x26bbb20:s1 -> Node0x26bbd00;
	Node0x26bbb70 [shape=record,label="{%57:\l57:                                               \l  %58 = load %struct.node*, %struct.node** %5, align 8\l  %59 = call fastcc %struct.node* @select_most_proving(%struct.node* %58)\l  store %struct.node* %59, %struct.node** %4, align 8\l  %60 = load %struct.node*, %struct.node** %4, align 8\l  call fastcc void @develop_node(%struct.node* %60)\l  %61 = load %struct.node*, %struct.node** %4, align 8\l  call fastcc void @update_ancestors(%struct.node* %61)\l  %62 = load i32, i32* @iters, align 4\l  %63 = add nsw i32 %62, 1\l  store i32 %63, i32* @iters, align 4\l  %64 = load i32, i32* @iters, align 4\l  %65 = srem i32 %64, 32\l  %66 = icmp eq i32 %65, 0\l  br i1 %66, label %67, label %75\l|{<s0>T|<s1>F}}"];
	Node0x26bbb70:s0 -> Node0x26bbbc0;
	Node0x26bbb70:s1 -> Node0x26bbcb0;
	Node0x26bbbc0 [shape=record,label="{%67:\l67:                                               \l  %68 = call fastcc i64 @rtime()\l  %69 = load i64, i64* %6, align 8\l  %70 = call fastcc i32 @rdifftime(i64 %68, i64 %69)\l  %71 = load i32, i32* @pn_time, align 4\l  %72 = icmp sgt i32 %70, %71\l  br i1 %72, label %73, label %74\l|{<s0>T|<s1>F}}"];
	Node0x26bbbc0:s0 -> Node0x26bbc10;
	Node0x26bbbc0:s1 -> Node0x26bbc60;
	Node0x26bbc10 [shape=record,label="{%73:\l73:                                               \l  br label %76\l}"];
	Node0x26bbc10 -> Node0x26bbd00;
	Node0x26bbc60 [shape=record,label="{%74:\l74:                                               \l  br label %75\l}"];
	Node0x26bbc60 -> Node0x26bbcb0;
	Node0x26bbcb0 [shape=record,label="{%75:\l75:                                               \l  br label %37\l}"];
	Node0x26bbcb0 -> Node0x26bba30;
	Node0x26bbd00 [shape=record,label="{%76:\l76:                                               \l  %77 = load %struct.node*, %struct.node** %3, align 8\l  %78 = getelementptr inbounds %struct.node, %struct.node* %77, i32 0, i32 4\l  %79 = load i32, i32* %78, align 4\l  %80 = load %struct.node*, %struct.node** %3, align 8\l  %81 = getelementptr inbounds %struct.node, %struct.node* %80, i32 0, i32 5\l  %82 = load i32, i32* %81, align 8\l  %83 = load i32, i32* @nodecount, align 4\l  %84 = load i32, i32* @frees, align 4\l  %85 = load i32, i32* @nodecount, align 4\l  %86 = sext i32 %85 to i64\l  %87 = mul i64 %86, 56\l  %88 = uitofp i64 %87 to float\l  %89 = fdiv float %88, 0x4130000000000000\l  %90 = fpext float %89 to double\l  %91 = load i32, i32* @iters, align 4\l  %92 = getelementptr inbounds [47 x i8], [47 x i8]* @.str.17.105, i64 0, i64 0\l  %93 = call i32 (i8*, ...) @printf(i8* %92, i32 %79, i32 %82, i32 %83, i32\l... %84, double %90, i32 %91)\l  br label %94\l}"];
	Node0x26bbd00 -> Node0x26bbd50;
	Node0x26bbd50 [shape=record,label="{%94:\l94:                                               \l  %95 = load %struct.node*, %struct.node** %5, align 8\l  %96 = load %struct.node*, %struct.node** %3, align 8\l  %97 = icmp ne %struct.node* %95, %96\l  br i1 %97, label %98, label %104\l|{<s0>T|<s1>F}}"];
	Node0x26bbd50:s0 -> Node0x26bbda0;
	Node0x26bbd50:s1 -> Node0x26bbdf0;
	Node0x26bbda0 [shape=record,label="{%98:\l98:                                               \l  %99 = load %struct.node*, %struct.node** %5, align 8\l  %100 = getelementptr inbounds %struct.node, %struct.node* %99, i32 0, i32 8\l  call fastcc void @unmake(%struct.move_s* %100, i32 0)\l  %101 = load %struct.node*, %struct.node** %5, align 8\l  %102 = getelementptr inbounds %struct.node, %struct.node* %101, i32 0, i32 7\l  %103 = load %struct.node*, %struct.node** %102, align 8\l  store %struct.node* %103, %struct.node** %5, align 8\l  br label %94\l}"];
	Node0x26bbda0 -> Node0x26bbd50;
	Node0x26bbdf0 [shape=record,label="{%104:\l104:                                              \l  call fastcc void @unmake(%struct.move_s* %1, i32 0)\l  %105 = load %struct.node*, %struct.node** %3, align 8\l  %106 = getelementptr inbounds %struct.node, %struct.node* %105, i32 0, i32 4\l  %107 = load i32, i32* %106, align 4\l  %108 = icmp eq i32 %107, 0\l  br i1 %108, label %109, label %114\l|{<s0>T|<s1>F}}"];
	Node0x26bbdf0:s0 -> Node0x26bbe40;
	Node0x26bbdf0:s1 -> Node0x26bbe90;
	Node0x26bbe40 [shape=record,label="{%109:\l109:                                              \l  %110 = load %struct.node*, %struct.node** %3, align 8\l  %111 = getelementptr inbounds %struct.node, %struct.node* %110, i32 0, i32 0\l  store i8 1, i8* %111, align 8\l  %112 = bitcast %struct.move_s* %7 to i8*\l  %113 = bitcast %struct.move_s* @pn_move to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %112, i8* align 4 %113, i64\l... 24, i1 false)\l  store i1 true, i1* @s_threat, align 1\l  br label %130\l}"];
	Node0x26bbe40 -> Node0x26bbfd0;
	Node0x26bbe90 [shape=record,label="{%114:\l114:                                              \l  %115 = load %struct.node*, %struct.node** %3, align 8\l  %116 = getelementptr inbounds %struct.node, %struct.node* %115, i32 0, i32 5\l  %117 = load i32, i32* %116, align 8\l  %118 = icmp eq i32 %117, 0\l  br i1 %118, label %119, label %124\l|{<s0>T|<s1>F}}"];
	Node0x26bbe90:s0 -> Node0x26bbee0;
	Node0x26bbe90:s1 -> Node0x26bbf30;
	Node0x26bbee0 [shape=record,label="{%119:\l119:                                              \l  %120 = load %struct.node*, %struct.node** %3, align 8\l  %121 = getelementptr inbounds %struct.node, %struct.node* %120, i32 0, i32 0\l  store i8 0, i8* %121, align 8\l  %122 = bitcast %struct.move_s* %7 to i8*\l  %123 = bitcast %struct.move_s* %1 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %122, i8* align 8 %123, i64\l... 24, i1 false)\l  br label %129\l}"];
	Node0x26bbee0 -> Node0x26bbf80;
	Node0x26bbf30 [shape=record,label="{%124:\l124:                                              \l  %125 = load %struct.node*, %struct.node** %3, align 8\l  %126 = getelementptr inbounds %struct.node, %struct.node* %125, i32 0, i32 0\l  store i8 2, i8* %126, align 8\l  %127 = bitcast %struct.move_s* %7 to i8*\l  %128 = bitcast %struct.move_s* %1 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %127, i8* align 8 %128, i64\l... 24, i1 false)\l  br label %129\l}"];
	Node0x26bbf30 -> Node0x26bbf80;
	Node0x26bbf80 [shape=record,label="{%129:\l129:                                              \l  br label %130\l}"];
	Node0x26bbf80 -> Node0x26bbfd0;
	Node0x26bbfd0 [shape=record,label="{%130:\l130:                                              \l  call fastcc void @Xfree()\l  %131 = load %struct.node*, %struct.node** %3, align 8\l  %132 = bitcast %struct.node* %131 to i8*\l  call fastcc void @free(i8* %132) #8\l  %133 = load i8*, i8** @membuff, align 8\l  call fastcc void @free(i8* %133) #8\l  %134 = bitcast %struct.move_s* %0 to i8*\l  %135 = bitcast %struct.move_s* %7 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %134, i8* align 4 %135, i64\l... 24, i1 false)\l  br label %136\l}"];
	Node0x26bbfd0 -> Node0x26bc020;
	Node0x26bc020 [shape=record,label="{%136:\l136:                                              \l  ret void\l}"];
}
