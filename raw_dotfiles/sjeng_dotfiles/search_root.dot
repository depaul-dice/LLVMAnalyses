digraph "CFG for 'search_root' function" {
	label="CFG for 'search_root' function";

	Node0x27574f0 [shape=record,label="{%4:\l  %5 = alloca i32, align 4\l  %6 = alloca i32, align 4\l  %7 = alloca i32, align 4\l  %8 = alloca [512 x %struct.move_s], align 16\l  %9 = alloca %struct.move_s, align 4\l  %10 = alloca i32, align 4\l  %11 = alloca i32, align 4\l  %12 = alloca i32, align 4\l  %13 = alloca i32, align 4\l  %14 = alloca [512 x i32], align 16\l  %15 = alloca [512 x i32], align 16\l  %16 = alloca i32, align 4\l  %17 = alloca i32, align 4\l  %18 = alloca i32, align 4\l  %19 = alloca i32, align 4\l  %20 = alloca i32, align 4\l  %21 = alloca %struct.move_s, align 4\l  %22 = alloca i32, align 4\l  %23 = alloca i32, align 4\l  %24 = alloca i32, align 4\l  %25 = alloca i32, align 4\l  store i32 %1, i32* %5, align 4\l  store i32 %2, i32* %6, align 4\l  store i32 %3, i32* %7, align 4\l  %26 = bitcast %struct.move_s* %9 to i8*\l  %27 = bitcast %struct.move_s* @dummy to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %26, i8* align 4 %27, i64\l... 24, i1 false)\l  store i32 -1000000, i32* %13, align 4\l  store i32 0, i32* %24, align 4\l  %28 = load i32, i32* %5, align 4\l  store i32 %28, i32* %19, align 4\l  %29 = load i32, i32* %6, align 4\l  store i32 %29, i32* %20, align 4\l  store i32 0, i32* %10, align 4\l  store i32 1, i32* %16, align 4\l  store i32 1, i32* @ply, align 4\l  store i1 true, i1* @searching_pv, align 1\l  store i1 false, i1* @time_exit, align 1\l  store i1 false, i1* @time_failure, align 1\l  store i32 1, i32* %18, align 4\l  store i32 -1000000, i32* @cur_score, align 4\l  %30 = load i32, i32* @nodes, align 4\l  %31 = add nsw i32 %30, 1\l  store i32 %31, i32* @nodes, align 4\l  %32 = call fastcc i32 @is_draw()\l  %33 = icmp ne i32 %32, 0\l  br i1 %33, label %34, label %40\l|{<s0>T|<s1>F}}"];
	Node0x27574f0:s0 -> Node0x2724490;
	Node0x27574f0:s1 -> Node0x27244e0;
	Node0x2724490 [shape=record,label="{%34:\l34:                                               \l  store i32 5, i32* @result, align 4\l  store i32 0, i32* @cur_score, align 4\l  %35 = load i32, i32* @ply, align 4\l  %36 = sext i32 %35 to i64\l  %37 = getelementptr inbounds [300 x i32], [300 x i32]* @pv_length, i64 0,\l... i64 %36\l  store i32 0, i32* %37, align 4\l  %38 = bitcast %struct.move_s* %0 to i8*\l  %39 = bitcast %struct.move_s* @dummy to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %38, i8* align 4 %39, i64\l... 24, i1 false)\l  br label %858\l}"];
	Node0x2724490 -> Node0x275a210;
	Node0x27244e0 [shape=record,label="{%40:\l40:                                               \l  %41 = load i32, i32* @ply, align 4\l  %42 = load i32, i32* @ply, align 4\l  %43 = sext i32 %42 to i64\l  %44 = getelementptr inbounds [300 x i32], [300 x i32]* @pv_length, i64 0,\l... i64 %43\l  store i32 %41, i32* %44, align 4\l  %45 = load i32, i32* @hash, align 4\l  %46 = load i32, i32* @move_number, align 4\l  %47 = load i32, i32* @ply, align 4\l  %48 = add nsw i32 %46, %47\l  %49 = sub nsw i32 %48, 1\l  %50 = sext i32 %49 to i64\l  %51 = getelementptr inbounds [600 x i32], [600 x i32]* @hash_history, i64 0,\l... i64 %50\l  store i32 %45, i32* %51, align 4\l  %52 = call fastcc i32 @in_check()\l  store i32 %52, i32* %23, align 4\l  %53 = load i32, i32* %23, align 4\l  %54 = icmp ne i32 %53, 0\l  br i1 %54, label %55, label %60\l|{<s0>T|<s1>F}}"];
	Node0x27244e0:s0 -> Node0x2724530;
	Node0x27244e0:s1 -> Node0x2724580;
	Node0x2724530 [shape=record,label="{%55:\l55:                                               \l  %56 = load i32, i32* @ext_check, align 4\l  %57 = add i32 %56, 1\l  store i32 %57, i32* @ext_check, align 4\l  %58 = load i32, i32* %7, align 4\l  %59 = add nsw i32 %58, 1\l  store i32 %59, i32* %7, align 4\l  br label %60\l}"];
	Node0x2724530 -> Node0x2724580;
	Node0x2724580 [shape=record,label="{%60:\l60:                                               \l  %61 = load i32, i32* %23, align 4\l  %62 = load i32, i32* @ply, align 4\l  %63 = sext i32 %62 to i64\l  %64 = getelementptr inbounds [300 x i32], [300 x i32]* @checks, i64 0, i64\l... %63\l  store i32 %61, i32* %64, align 4\l  %65 = load i32, i32* @ply, align 4\l  %66 = sext i32 %65 to i64\l  %67 = getelementptr inbounds [300 x i32], [300 x i32]* @recaps, i64 0, i64\l... %66\l  store i32 0, i32* %67, align 4\l  %68 = load i32, i32* @ply, align 4\l  %69 = sext i32 %68 to i64\l  %70 = getelementptr inbounds [300 x i32], [300 x i32]* @singular, i64 0, i64\l... %69\l  store i32 0, i32* %70, align 4\l  %71 = load i32, i32* @Variant, align 4\l  %72 = icmp eq i32 %71, 4\l  br i1 %72, label %73, label %130\l|{<s0>T|<s1>F}}"];
	Node0x2724580:s0 -> Node0x27245d0;
	Node0x2724580:s1 -> Node0x2757e20;
	Node0x27245d0 [shape=record,label="{%73:\l73:                                               \l  store i32 0, i32* @legals, align 4\l  store i1 true, i1* @captures, align 1\l  %74 = getelementptr inbounds [512 x %struct.move_s], [512 x %struct.move_s]*\l... %8, i64 0, i64 0\l  call fastcc void @gen(%struct.move_s* %74)\l  %75 = load i32, i32* @numb_moves, align 4\l  store i32 %75, i32* %10, align 4\l  store i1 false, i1* @captures, align 1\l  %76 = load i32, i32* %10, align 4\l  %77 = icmp ne i32 %76, 0\l  br i1 %77, label %78, label %101\l|{<s0>T|<s1>F}}"];
	Node0x27245d0:s0 -> Node0x2724620;
	Node0x27245d0:s1 -> Node0x2757b50;
	Node0x2724620 [shape=record,label="{%78:\l78:                                               \l  store i32 0, i32* %11, align 4\l  br label %79\l}"];
	Node0x2724620 -> Node0x2724670;
	Node0x2724670 [shape=record,label="{%79:\l79:                                               \l  %80 = load i32, i32* %11, align 4\l  %81 = load i32, i32* %10, align 4\l  %82 = icmp slt i32 %80, %81\l  br i1 %82, label %83, label %100\l|{<s0>T|<s1>F}}"];
	Node0x2724670:s0 -> Node0x27246c0;
	Node0x2724670:s1 -> Node0x2724800;
	Node0x27246c0 [shape=record,label="{%83:\l83:                                               \l  %84 = getelementptr inbounds [512 x %struct.move_s], [512 x %struct.move_s]*\l... %8, i64 0, i64 0\l  %85 = load i32, i32* %11, align 4\l  call fastcc void @make(%struct.move_s* %84, i32 %85)\l  %86 = getelementptr inbounds [512 x %struct.move_s], [512 x %struct.move_s]*\l... %8, i64 0, i64 0\l  %87 = load i32, i32* %11, align 4\l  %88 = load i32, i32* %23, align 4\l  %89 = call fastcc i32 @check_legal(%struct.move_s* %86, i32 %87, i32 %88)\l  %90 = icmp ne i32 %89, 0\l  br i1 %90, label %91, label %94\l|{<s0>T|<s1>F}}"];
	Node0x27246c0:s0 -> Node0x2724710;
	Node0x27246c0:s1 -> Node0x2724760;
	Node0x2724710 [shape=record,label="{%91:\l91:                                               \l  %92 = load i32, i32* @legals, align 4\l  %93 = add nsw i32 %92, 1\l  store i32 %93, i32* @legals, align 4\l  br label %94\l}"];
	Node0x2724710 -> Node0x2724760;
	Node0x2724760 [shape=record,label="{%94:\l94:                                               \l  %95 = getelementptr inbounds [512 x %struct.move_s], [512 x %struct.move_s]*\l... %8, i64 0, i64 0\l  %96 = load i32, i32* %11, align 4\l  call fastcc void @unmake(%struct.move_s* %95, i32 %96)\l  br label %97\l}"];
	Node0x2724760 -> Node0x27247b0;
	Node0x27247b0 [shape=record,label="{%97:\l97:                                               \l  %98 = load i32, i32* %11, align 4\l  %99 = add nsw i32 %98, 1\l  store i32 %99, i32* %11, align 4\l  br label %79\l}"];
	Node0x27247b0 -> Node0x2724670;
	Node0x2724800 [shape=record,label="{%100:\l100:                                              \l  br label %101\l}"];
	Node0x2724800 -> Node0x2757b50;
	Node0x2757b50 [shape=record,label="{%101:\l101:                                              \l  %102 = load i32, i32* @legals, align 4\l  %103 = icmp ne i32 %102, 0\l  br i1 %103, label %129, label %104\l|{<s0>T|<s1>F}}"];
	Node0x2757b50:s0 -> Node0x2757dd0;
	Node0x2757b50:s1 -> Node0x2757ba0;
	Node0x2757ba0 [shape=record,label="{%104:\l104:                                              \l  store i1 false, i1* @captures, align 1\l  %105 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %8, i64 0, i64 0\l  call fastcc void @gen(%struct.move_s* %105)\l  %106 = load i32, i32* @numb_moves, align 4\l  store i32 %106, i32* %10, align 4\l  store i32 0, i32* %11, align 4\l  br label %107\l}"];
	Node0x2757ba0 -> Node0x2757bf0;
	Node0x2757bf0 [shape=record,label="{%107:\l107:                                              \l  %108 = load i32, i32* %11, align 4\l  %109 = load i32, i32* %10, align 4\l  %110 = icmp slt i32 %108, %109\l  br i1 %110, label %111, label %128\l|{<s0>T|<s1>F}}"];
	Node0x2757bf0:s0 -> Node0x2757c40;
	Node0x2757bf0:s1 -> Node0x2757d80;
	Node0x2757c40 [shape=record,label="{%111:\l111:                                              \l  %112 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %8, i64 0, i64 0\l  %113 = load i32, i32* %11, align 4\l  call fastcc void @make(%struct.move_s* %112, i32 %113)\l  %114 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %8, i64 0, i64 0\l  %115 = load i32, i32* %11, align 4\l  %116 = load i32, i32* %23, align 4\l  %117 = call fastcc i32 @check_legal(%struct.move_s* %114, i32 %115, i32 %116)\l  %118 = icmp ne i32 %117, 0\l  br i1 %118, label %119, label %122\l|{<s0>T|<s1>F}}"];
	Node0x2757c40:s0 -> Node0x2757c90;
	Node0x2757c40:s1 -> Node0x2757ce0;
	Node0x2757c90 [shape=record,label="{%119:\l119:                                              \l  %120 = load i32, i32* @legals, align 4\l  %121 = add nsw i32 %120, 1\l  store i32 %121, i32* @legals, align 4\l  br label %122\l}"];
	Node0x2757c90 -> Node0x2757ce0;
	Node0x2757ce0 [shape=record,label="{%122:\l122:                                              \l  %123 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %8, i64 0, i64 0\l  %124 = load i32, i32* %11, align 4\l  call fastcc void @unmake(%struct.move_s* %123, i32 %124)\l  br label %125\l}"];
	Node0x2757ce0 -> Node0x2757d30;
	Node0x2757d30 [shape=record,label="{%125:\l125:                                              \l  %126 = load i32, i32* %11, align 4\l  %127 = add nsw i32 %126, 1\l  store i32 %127, i32* %11, align 4\l  br label %107\l}"];
	Node0x2757d30 -> Node0x2757bf0;
	Node0x2757d80 [shape=record,label="{%128:\l128:                                              \l  br label %129\l}"];
	Node0x2757d80 -> Node0x2757dd0;
	Node0x2757dd0 [shape=record,label="{%129:\l129:                                              \l  br label %133\l}"];
	Node0x2757dd0 -> Node0x2757e70;
	Node0x2757e20 [shape=record,label="{%130:\l130:                                              \l  %131 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %8, i64 0, i64 0\l  call fastcc void @gen(%struct.move_s* %131)\l  %132 = load i32, i32* @numb_moves, align 4\l  store i32 %132, i32* %10, align 4\l  br label %133\l}"];
	Node0x2757e20 -> Node0x2757e70;
	Node0x2757e70 [shape=record,label="{%133:\l133:                                              \l  %134 = load i32, i32* @legals, align 4\l  store i32 %134, i32* @movetotal, align 4\l  %135 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %8, i64 0, i64 0\l  %136 = getelementptr inbounds [512 x i32], [512 x i32]* %14, i64 0, i64 0\l  %137 = getelementptr inbounds [512 x i32], [512 x i32]* %15, i64 0, i64 0\l  %138 = load i32, i32* %10, align 4\l  call fastcc void @order_moves(%struct.move_s* %135, i32* %136, i32* %137,\l... i32 %138, i32 -1)\l  br label %139\l}"];
	Node0x2757e70 -> Node0x2757ec0;
	Node0x2757ec0 [shape=record,label="{%139:\l139:                                              \l  %140 = getelementptr inbounds [512 x i32], [512 x i32]* %14, i64 0, i64 0\l  %141 = load i32, i32* %10, align 4\l  %142 = call fastcc i32 @remove_one(i32* %11, i32* %140, i32 %141)\l  %143 = icmp ne i32 %142, 0\l  br i1 %143, label %144, label %811\l|{<s0>T|<s1>F}}"];
	Node0x2757ec0:s0 -> Node0x2757f10;
	Node0x2757ec0:s1 -> Node0x2759b30;
	Node0x2757f10 [shape=record,label="{%144:\l144:                                              \l  %.b = load i1, i1* @alllosers, align 1\l  %145 = zext i1 %.b to i32\l  %146 = icmp ne i32 %145, 0\l  br i1 %146, label %160, label %147\l|{<s0>T|<s1>F}}"];
	Node0x2757f10:s0 -> Node0x27580a0;
	Node0x2757f10:s1 -> Node0x2757f60;
	Node0x2757f60 [shape=record,label="{%147:\l147:                                              \l  %148 = load i32, i32* %11, align 4\l  %149 = sext i32 %148 to i64\l  %150 = getelementptr inbounds [300 x i32], [300 x i32]* @rootlosers, i64 0,\l... i64 %149\l  %151 = load i32, i32* %150, align 4\l  %152 = icmp ne i32 %151, 0\l  br i1 %152, label %153, label %160\l|{<s0>T|<s1>F}}"];
	Node0x2757f60:s0 -> Node0x2757fb0;
	Node0x2757f60:s1 -> Node0x27580a0;
	Node0x2757fb0 [shape=record,label="{%153:\l153:                                              \l  %154 = load i32, i32* @Variant, align 4\l  %155 = icmp eq i32 %154, 4\l  br i1 %155, label %159, label %156\l|{<s0>T|<s1>F}}"];
	Node0x2757fb0:s0 -> Node0x2758050;
	Node0x2757fb0:s1 -> Node0x2758000;
	Node0x2758000 [shape=record,label="{%156:\l156:                                              \l  %157 = load i32, i32* @Variant, align 4\l  %158 = icmp eq i32 %157, 3\l  br i1 %158, label %159, label %160\l|{<s0>T|<s1>F}}"];
	Node0x2758000:s0 -> Node0x2758050;
	Node0x2758000:s1 -> Node0x27580a0;
	Node0x2758050 [shape=record,label="{%159:\l159:                                              \l  br label %139\l}"];
	Node0x2758050 -> Node0x2757ec0;
	Node0x27580a0 [shape=record,label="{%160:\l160:                                              \l  %161 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %8, i64 0, i64 0\l  %162 = load i32, i32* %11, align 4\l  call fastcc void @make(%struct.move_s* %161, i32 %162)\l  store i32 0, i32* %17, align 4\l  %163 = load i32, i32* @hash, align 4\l  %164 = load i32, i32* @move_number, align 4\l  %165 = load i32, i32* @ply, align 4\l  %166 = add nsw i32 %164, %165\l  %167 = sub nsw i32 %166, 1\l  %168 = sext i32 %167 to i64\l  %169 = getelementptr inbounds [600 x i32], [600 x i32]* @hash_history, i64\l... 0, i64 %168\l  store i32 %163, i32* %169, align 4\l  %170 = load i32, i32* @ply, align 4\l  %171 = sub nsw i32 %170, 1\l  %172 = sext i32 %171 to i64\l  %173 = getelementptr inbounds [300 x %struct.move_s], [300 x\l... %struct.move_s]* @path, i64 0, i64 %172\l  %174 = load i32, i32* %11, align 4\l  %175 = sext i32 %174 to i64\l  %176 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %8, i64 0, i64 %175\l  %177 = bitcast %struct.move_s* %173 to i8*\l  %178 = bitcast %struct.move_s* %176 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %177, i8* align 8 %178, i64\l... 24, i1 false)\l  %179 = load i32, i32* @nodes, align 4\l  store i32 %179, i32* %25, align 4\l  %180 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %8, i64 0, i64 0\l  %181 = load i32, i32* %11, align 4\l  %182 = load i32, i32* %23, align 4\l  %183 = call fastcc i32 @check_legal(%struct.move_s* %180, i32 %181, i32 %182)\l  %184 = icmp ne i32 %183, 0\l  br i1 %184, label %185, label %468\l|{<s0>T|<s1>F}}"];
	Node0x27580a0:s0 -> Node0x27580f0;
	Node0x27580a0:s1 -> Node0x2758ff0;
	Node0x27580f0 [shape=record,label="{%185:\l185:                                              \l  %186 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %8, i64 0, i64 0\l  %187 = load i32, i32* %11, align 4\l  call fastcc void @unmake(%struct.move_s* %186, i32 %187)\l  %188 = load i32, i32* %24, align 4\l  %189 = add nsw i32 %188, 1\l  store i32 %189, i32* %24, align 4\l  %190 = load i32, i32* @movetotal, align 4\l  %191 = load i32, i32* %24, align 4\l  %192 = sub nsw i32 %190, %191\l  %193 = load i32, i32* %11, align 4\l  %194 = sext i32 %193 to i64\l  %195 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %8, i64 0, i64 %194\l  %196 = getelementptr inbounds [20 x i8], [20 x i8]* @searching_move, i64 0,\l... i64 0\l  call fastcc void @comp_to_san(%struct.move_s* byval(%struct.move_s) align 8\l... %195, i8* %196)\l  %197 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %8, i64 0, i64 0\l  %198 = load i32, i32* %11, align 4\l  call fastcc void @make(%struct.move_s* %197, i32 %198)\l  %199 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %8, i64 0, i64 0\l  %200 = load i32, i32* %11, align 4\l  %201 = call fastcc i32 @f_in_check(%struct.move_s* %199, i32 %200)\l  %202 = load i32, i32* @ply, align 4\l  %203 = sext i32 %202 to i64\l  %204 = getelementptr inbounds [300 x i32], [300 x i32]* @checks, i64 0, i64\l... %203\l  store i32 %201, i32* %204, align 4\l  %205 = load i32, i32* @ply, align 4\l  %206 = sext i32 %205 to i64\l  %207 = getelementptr inbounds [300 x i32], [300 x i32]* @recaps, i64 0, i64\l... %206\l  store i32 0, i32* %207, align 4\l  %208 = load i32, i32* @ply, align 4\l  %209 = sext i32 %208 to i64\l  %210 = getelementptr inbounds [300 x i32], [300 x i32]* @singular, i64 0,\l... i64 %209\l  store i32 0, i32* %210, align 4\l  %211 = load i32, i32* %18, align 4\l  %212 = icmp eq i32 %211, 1\l  br i1 %212, label %216, label %213\l|{<s0>T|<s1>F}}"];
	Node0x27580f0:s0 -> Node0x2758190;
	Node0x27580f0:s1 -> Node0x2758140;
	Node0x2758140 [shape=record,label="{%213:\l213:                                              \l  %214 = load i32, i32* @i_depth, align 4\l  %215 = icmp slt i32 %214, 2\l  br i1 %215, label %216, label %323\l|{<s0>T|<s1>F}}"];
	Node0x2758140:s0 -> Node0x2758190;
	Node0x2758140:s1 -> Node0x2758780;
	Node0x2758190 [shape=record,label="{%216:\l216:                                              \l  %217 = load i32, i32* %20, align 4\l  %218 = sub nsw i32 0, %217\l  %219 = load i32, i32* %19, align 4\l  %220 = sub nsw i32 0, %219\l  %221 = load i32, i32* %7, align 4\l  %222 = sub nsw i32 %221, 1\l  %223 = call fastcc i32 @search(i32 %218, i32 %220, i32 %222, i32 0)\l  %224 = sub nsw i32 0, %223\l  store i32 %224, i32* %13, align 4\l  %.b10 = load i1, i1* @time_exit, align 1\l  %225 = zext i1 %.b10 to i32\l  %226 = icmp ne i32 %225, 0\l  br i1 %226, label %322, label %227\l|{<s0>T|<s1>F}}"];
	Node0x2758190:s0 -> Node0x2758730;
	Node0x2758190:s1 -> Node0x27581e0;
	Node0x27581e0 [shape=record,label="{%227:\l227:                                              \l  %228 = load i32, i32* @post, align 4\l  %229 = icmp ne i32 %228, 0\l  br i1 %229, label %233, label %230\l|{<s0>T|<s1>F}}"];
	Node0x27581e0:s0 -> Node0x2758280;
	Node0x27581e0:s1 -> Node0x2758230;
	Node0x2758230 [shape=record,label="{%230:\l230:                                              \l  %231 = load i32, i32* @xb_mode, align 4\l  %232 = icmp ne i32 %231, 0\l  br i1 %232, label %322, label %233\l|{<s0>T|<s1>F}}"];
	Node0x2758230:s0 -> Node0x2758730;
	Node0x2758230:s1 -> Node0x2758280;
	Node0x2758280 [shape=record,label="{%233:\l233:                                              \l  %234 = load i32, i32* @i_depth, align 4\l  %235 = icmp sge i32 %234, 2\l  br i1 %235, label %236, label %322\l|{<s0>T|<s1>F}}"];
	Node0x2758280:s0 -> Node0x27582d0;
	Node0x2758280:s1 -> Node0x2758730;
	Node0x27582d0 [shape=record,label="{%236:\l236:                                              \l  %237 = load i32, i32* %13, align 4\l  %238 = load i32, i32* %20, align 4\l  %239 = icmp sge i32 %237, %238\l  br i1 %239, label %240, label %245\l|{<s0>T|<s1>F}}"];
	Node0x27582d0:s0 -> Node0x2758320;
	Node0x27582d0:s1 -> Node0x2758370;
	Node0x2758320 [shape=record,label="{%240:\l240:                                              \l  %241 = load i32, i32* %13, align 4\l  %242 = load i32, i32* %11, align 4\l  %243 = sext i32 %242 to i64\l  %244 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %8, i64 0, i64 %243\l  call fastcc void @post_fh_thinking(i32 %241, %struct.move_s* %244)\l  br label %306\l}"];
	Node0x2758320 -> Node0x27585f0;
	Node0x2758370 [shape=record,label="{%245:\l245:                                              \l  %246 = load i32, i32* %13, align 4\l  %247 = load i32, i32* %19, align 4\l  %248 = icmp sle i32 %246, %247\l  br i1 %248, label %249, label %254\l|{<s0>T|<s1>F}}"];
	Node0x2758370:s0 -> Node0x27583c0;
	Node0x2758370:s1 -> Node0x2758410;
	Node0x27583c0 [shape=record,label="{%249:\l249:                                              \l  store i1 true, i1* @failed, align 1\l  %250 = load i32, i32* %13, align 4\l  %251 = load i32, i32* %11, align 4\l  %252 = sext i32 %251 to i64\l  %253 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %8, i64 0, i64 %252\l  call fastcc void @post_fl_thinking(i32 %250, %struct.move_s* %253)\l  br label %305\l}"];
	Node0x27583c0 -> Node0x27585a0;
	Node0x2758410 [shape=record,label="{%254:\l254:                                              \l  %255 = load i32, i32* @ply, align 4\l  %256 = sub nsw i32 %255, 1\l  %257 = sext i32 %256 to i64\l  %258 = getelementptr inbounds [300 x [300 x %struct.move_s]], [300 x [300 x\l... %struct.move_s]]* @pv, i64 0, i64 %257\l  %259 = load i32, i32* @ply, align 4\l  %260 = sub nsw i32 %259, 1\l  %261 = sext i32 %260 to i64\l  %262 = getelementptr inbounds [300 x %struct.move_s], [300 x\l... %struct.move_s]* %258, i64 0, i64 %261\l  %263 = load i32, i32* %11, align 4\l  %264 = sext i32 %263 to i64\l  %265 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %8, i64 0, i64 %264\l  %266 = bitcast %struct.move_s* %262 to i8*\l  %267 = bitcast %struct.move_s* %265 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %266, i8* align 8 %267, i64\l... 24, i1 false)\l  %268 = load i32, i32* @ply, align 4\l  store i32 %268, i32* %12, align 4\l  br label %269\l}"];
	Node0x2758410 -> Node0x2758460;
	Node0x2758460 [shape=record,label="{%269:\l269:                                              \l  %270 = load i32, i32* %12, align 4\l  %271 = load i32, i32* @ply, align 4\l  %272 = sext i32 %271 to i64\l  %273 = getelementptr inbounds [300 x i32], [300 x i32]* @pv_length, i64 0,\l... i64 %272\l  %274 = load i32, i32* %273, align 4\l  %275 = icmp slt i32 %270, %274\l  br i1 %275, label %276, label %295\l|{<s0>T|<s1>F}}"];
	Node0x2758460:s0 -> Node0x27584b0;
	Node0x2758460:s1 -> Node0x2758550;
	Node0x27584b0 [shape=record,label="{%276:\l276:                                              \l  %277 = load i32, i32* @ply, align 4\l  %278 = sub nsw i32 %277, 1\l  %279 = sext i32 %278 to i64\l  %280 = getelementptr inbounds [300 x [300 x %struct.move_s]], [300 x [300 x\l... %struct.move_s]]* @pv, i64 0, i64 %279\l  %281 = load i32, i32* %12, align 4\l  %282 = sext i32 %281 to i64\l  %283 = getelementptr inbounds [300 x %struct.move_s], [300 x\l... %struct.move_s]* %280, i64 0, i64 %282\l  %284 = load i32, i32* @ply, align 4\l  %285 = sext i32 %284 to i64\l  %286 = getelementptr inbounds [300 x [300 x %struct.move_s]], [300 x [300 x\l... %struct.move_s]]* @pv, i64 0, i64 %285\l  %287 = load i32, i32* %12, align 4\l  %288 = sext i32 %287 to i64\l  %289 = getelementptr inbounds [300 x %struct.move_s], [300 x\l... %struct.move_s]* %286, i64 0, i64 %288\l  %290 = bitcast %struct.move_s* %283 to i8*\l  %291 = bitcast %struct.move_s* %289 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %290, i8* align 8 %291, i64\l... 24, i1 false)\l  br label %292\l}"];
	Node0x27584b0 -> Node0x2758500;
	Node0x2758500 [shape=record,label="{%292:\l292:                                              \l  %293 = load i32, i32* %12, align 4\l  %294 = add nsw i32 %293, 1\l  store i32 %294, i32* %12, align 4\l  br label %269\l}"];
	Node0x2758500 -> Node0x2758460;
	Node0x2758550 [shape=record,label="{%295:\l295:                                              \l  %296 = load i32, i32* @ply, align 4\l  %297 = sext i32 %296 to i64\l  %298 = getelementptr inbounds [300 x i32], [300 x i32]* @pv_length, i64 0,\l... i64 %297\l  %299 = load i32, i32* %298, align 4\l  %300 = load i32, i32* @ply, align 4\l  %301 = sub nsw i32 %300, 1\l  %302 = sext i32 %301 to i64\l  %303 = getelementptr inbounds [300 x i32], [300 x i32]* @pv_length, i64 0,\l... i64 %302\l  store i32 %299, i32* %303, align 4\l  %304 = load i32, i32* %13, align 4\l  call fastcc void @post_thinking(i32 %304)\l  br label %305\l}"];
	Node0x2758550 -> Node0x27585a0;
	Node0x27585a0 [shape=record,label="{%305:\l305:                                              \l  br label %306\l}"];
	Node0x27585a0 -> Node0x27585f0;
	Node0x27585f0 [shape=record,label="{%306:\l306:                                              \l  %307 = load i32, i32* %13, align 4\l  %308 = load i32, i32* @cur_score, align 4\l  %309 = icmp sgt i32 %307, %308\l  br i1 %309, label %310, label %321\l|{<s0>T|<s1>F}}"];
	Node0x27585f0:s0 -> Node0x2758640;
	Node0x27585f0:s1 -> Node0x27586e0;
	Node0x2758640 [shape=record,label="{%310:\l310:                                              \l  %.b9 = load i1, i1* @time_exit, align 1\l  %311 = zext i1 %.b9 to i32\l  %312 = icmp ne i32 %311, 0\l  br i1 %312, label %321, label %313\l|{<s0>T|<s1>F}}"];
	Node0x2758640:s0 -> Node0x27586e0;
	Node0x2758640:s1 -> Node0x2758690;
	Node0x2758690 [shape=record,label="{%313:\l313:                                              \l  %314 = load i32, i32* %13, align 4\l  store i32 %314, i32* @cur_score, align 4\l  %315 = load i32, i32* %11, align 4\l  store i32 %315, i32* @bestmovenum, align 4\l  %316 = load i32, i32* %11, align 4\l  %317 = sext i32 %316 to i64\l  %318 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %8, i64 0, i64 %317\l  %319 = bitcast %struct.move_s* %9 to i8*\l  %320 = bitcast %struct.move_s* %318 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %319, i8* align 8 %320, i64\l... 24, i1 false)\l  br label %321\l}"];
	Node0x2758690 -> Node0x27586e0;
	Node0x27586e0 [shape=record,label="{%321:\l321:                                              \l  br label %322\l}"];
	Node0x27586e0 -> Node0x2758730;
	Node0x2758730 [shape=record,label="{%322:\l322:                                              \l  br label %441\l}"];
	Node0x2758730 -> Node0x2758d20;
	Node0x2758780 [shape=record,label="{%323:\l323:                                              \l  %324 = load i32, i32* %19, align 4\l  %325 = sub nsw i32 0, %324\l  %326 = sub nsw i32 %325, 1\l  %327 = load i32, i32* %19, align 4\l  %328 = sub nsw i32 0, %327\l  %329 = load i32, i32* %7, align 4\l  %330 = sub nsw i32 %329, 1\l  %331 = call fastcc i32 @search(i32 %326, i32 %328, i32 %330, i32 0)\l  %332 = sub nsw i32 0, %331\l  store i32 %332, i32* %13, align 4\l  %333 = load i32, i32* %13, align 4\l  %334 = load i32, i32* %19, align 4\l  %335 = icmp sgt i32 %333, %334\l  br i1 %335, label %336, label %428\l|{<s0>T|<s1>F}}"];
	Node0x2758780:s0 -> Node0x27587d0;
	Node0x2758780:s1 -> Node0x2758be0;
	Node0x27587d0 [shape=record,label="{%336:\l336:                                              \l  %337 = load i32, i32* %13, align 4\l  %338 = load i32, i32* %20, align 4\l  %339 = icmp slt i32 %337, %338\l  br i1 %339, label %340, label %428\l|{<s0>T|<s1>F}}"];
	Node0x27587d0:s0 -> Node0x2758820;
	Node0x27587d0:s1 -> Node0x2758be0;
	Node0x2758820 [shape=record,label="{%340:\l340:                                              \l  %.b8 = load i1, i1* @time_exit, align 1\l  %341 = zext i1 %.b8 to i32\l  %342 = icmp ne i32 %341, 0\l  br i1 %342, label %428, label %343\l|{<s0>T|<s1>F}}"];
	Node0x2758820:s0 -> Node0x2758be0;
	Node0x2758820:s1 -> Node0x2758870;
	Node0x2758870 [shape=record,label="{%343:\l343:                                              \l  %344 = load i32, i32* %13, align 4\l  %345 = load i32, i32* %11, align 4\l  %346 = sext i32 %345 to i64\l  %347 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %8, i64 0, i64 %346\l  call fastcc void @post_fail_thinking(i32 %344, %struct.move_s* %347)\l  %348 = load i32, i32* %20, align 4\l  %349 = sub nsw i32 0, %348\l  %350 = load i32, i32* %19, align 4\l  %351 = sub nsw i32 0, %350\l  %352 = load i32, i32* %7, align 4\l  %353 = sub nsw i32 %352, 1\l  %354 = call fastcc i32 @search(i32 %349, i32 %351, i32 %353, i32 0)\l  %355 = sub nsw i32 0, %354\l  store i32 %355, i32* %13, align 4\l  %356 = load i32, i32* %13, align 4\l  %357 = load i32, i32* %19, align 4\l  %358 = icmp sgt i32 %356, %357\l  br i1 %358, label %359, label %427\l|{<s0>T|<s1>F}}"];
	Node0x2758870:s0 -> Node0x27588c0;
	Node0x2758870:s1 -> Node0x2758b90;
	Node0x27588c0 [shape=record,label="{%359:\l359:                                              \l  %.b7 = load i1, i1* @time_exit, align 1\l  %360 = zext i1 %.b7 to i32\l  %361 = icmp ne i32 %360, 0\l  br i1 %361, label %427, label %362\l|{<s0>T|<s1>F}}"];
	Node0x27588c0:s0 -> Node0x2758b90;
	Node0x27588c0:s1 -> Node0x2758910;
	Node0x2758910 [shape=record,label="{%362:\l362:                                              \l  store i1 false, i1* @failed, align 1\l  %363 = load i32, i32* %13, align 4\l  store i32 %363, i32* @cur_score, align 4\l  %364 = load i32, i32* %11, align 4\l  store i32 %364, i32* @bestmovenum, align 4\l  %365 = load i32, i32* %11, align 4\l  %366 = sext i32 %365 to i64\l  %367 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %8, i64 0, i64 %366\l  %368 = bitcast %struct.move_s* %9 to i8*\l  %369 = bitcast %struct.move_s* %367 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %368, i8* align 8 %369, i64\l... 24, i1 false)\l  %370 = load i32, i32* %13, align 4\l  %371 = load i32, i32* %20, align 4\l  %372 = icmp slt i32 %370, %371\l  br i1 %372, label %373, label %426\l|{<s0>T|<s1>F}}"];
	Node0x2758910:s0 -> Node0x2758960;
	Node0x2758910:s1 -> Node0x2758b40;
	Node0x2758960 [shape=record,label="{%373:\l373:                                              \l  %374 = load i32, i32* @i_depth, align 4\l  %375 = icmp sge i32 %374, 2\l  br i1 %375, label %376, label %426\l|{<s0>T|<s1>F}}"];
	Node0x2758960:s0 -> Node0x27589b0;
	Node0x2758960:s1 -> Node0x2758b40;
	Node0x27589b0 [shape=record,label="{%376:\l376:                                              \l  %377 = load i32, i32* @ply, align 4\l  %378 = sub nsw i32 %377, 1\l  %379 = sext i32 %378 to i64\l  %380 = getelementptr inbounds [300 x [300 x %struct.move_s]], [300 x [300 x\l... %struct.move_s]]* @pv, i64 0, i64 %379\l  %381 = load i32, i32* @ply, align 4\l  %382 = sub nsw i32 %381, 1\l  %383 = sext i32 %382 to i64\l  %384 = getelementptr inbounds [300 x %struct.move_s], [300 x\l... %struct.move_s]* %380, i64 0, i64 %383\l  %385 = load i32, i32* %11, align 4\l  %386 = sext i32 %385 to i64\l  %387 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %8, i64 0, i64 %386\l  %388 = bitcast %struct.move_s* %384 to i8*\l  %389 = bitcast %struct.move_s* %387 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %388, i8* align 8 %389, i64\l... 24, i1 false)\l  %390 = load i32, i32* @ply, align 4\l  store i32 %390, i32* %12, align 4\l  br label %391\l}"];
	Node0x27589b0 -> Node0x2758a00;
	Node0x2758a00 [shape=record,label="{%391:\l391:                                              \l  %392 = load i32, i32* %12, align 4\l  %393 = load i32, i32* @ply, align 4\l  %394 = sext i32 %393 to i64\l  %395 = getelementptr inbounds [300 x i32], [300 x i32]* @pv_length, i64 0,\l... i64 %394\l  %396 = load i32, i32* %395, align 4\l  %397 = icmp slt i32 %392, %396\l  br i1 %397, label %398, label %417\l|{<s0>T|<s1>F}}"];
	Node0x2758a00:s0 -> Node0x2758a50;
	Node0x2758a00:s1 -> Node0x2758af0;
	Node0x2758a50 [shape=record,label="{%398:\l398:                                              \l  %399 = load i32, i32* @ply, align 4\l  %400 = sub nsw i32 %399, 1\l  %401 = sext i32 %400 to i64\l  %402 = getelementptr inbounds [300 x [300 x %struct.move_s]], [300 x [300 x\l... %struct.move_s]]* @pv, i64 0, i64 %401\l  %403 = load i32, i32* %12, align 4\l  %404 = sext i32 %403 to i64\l  %405 = getelementptr inbounds [300 x %struct.move_s], [300 x\l... %struct.move_s]* %402, i64 0, i64 %404\l  %406 = load i32, i32* @ply, align 4\l  %407 = sext i32 %406 to i64\l  %408 = getelementptr inbounds [300 x [300 x %struct.move_s]], [300 x [300 x\l... %struct.move_s]]* @pv, i64 0, i64 %407\l  %409 = load i32, i32* %12, align 4\l  %410 = sext i32 %409 to i64\l  %411 = getelementptr inbounds [300 x %struct.move_s], [300 x\l... %struct.move_s]* %408, i64 0, i64 %410\l  %412 = bitcast %struct.move_s* %405 to i8*\l  %413 = bitcast %struct.move_s* %411 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %412, i8* align 8 %413, i64\l... 24, i1 false)\l  br label %414\l}"];
	Node0x2758a50 -> Node0x2758aa0;
	Node0x2758aa0 [shape=record,label="{%414:\l414:                                              \l  %415 = load i32, i32* %12, align 4\l  %416 = add nsw i32 %415, 1\l  store i32 %416, i32* %12, align 4\l  br label %391\l}"];
	Node0x2758aa0 -> Node0x2758a00;
	Node0x2758af0 [shape=record,label="{%417:\l417:                                              \l  %418 = load i32, i32* @ply, align 4\l  %419 = sext i32 %418 to i64\l  %420 = getelementptr inbounds [300 x i32], [300 x i32]* @pv_length, i64 0,\l... i64 %419\l  %421 = load i32, i32* %420, align 4\l  %422 = load i32, i32* @ply, align 4\l  %423 = sub nsw i32 %422, 1\l  %424 = sext i32 %423 to i64\l  %425 = getelementptr inbounds [300 x i32], [300 x i32]* @pv_length, i64 0,\l... i64 %424\l  store i32 %421, i32* %425, align 4\l  br label %426\l}"];
	Node0x2758af0 -> Node0x2758b40;
	Node0x2758b40 [shape=record,label="{%426:\l426:                                              \l  br label %427\l}"];
	Node0x2758b40 -> Node0x2758b90;
	Node0x2758b90 [shape=record,label="{%427:\l427:                                              \l  br label %428\l}"];
	Node0x2758b90 -> Node0x2758be0;
	Node0x2758be0 [shape=record,label="{%428:\l428:                                              \l  %429 = load i32, i32* %13, align 4\l  %430 = load i32, i32* %20, align 4\l  %431 = icmp sge i32 %429, %430\l  br i1 %431, label %432, label %440\l|{<s0>T|<s1>F}}"];
	Node0x2758be0:s0 -> Node0x2758c30;
	Node0x2758be0:s1 -> Node0x2758cd0;
	Node0x2758c30 [shape=record,label="{%432:\l432:                                              \l  %.b6 = load i1, i1* @time_exit, align 1\l  %433 = zext i1 %.b6 to i32\l  %434 = icmp ne i32 %433, 0\l  br i1 %434, label %440, label %435\l|{<s0>T|<s1>F}}"];
	Node0x2758c30:s0 -> Node0x2758cd0;
	Node0x2758c30:s1 -> Node0x2758c80;
	Node0x2758c80 [shape=record,label="{%435:\l435:                                              \l  %436 = load i32, i32* %13, align 4\l  %437 = load i32, i32* %11, align 4\l  %438 = sext i32 %437 to i64\l  %439 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %8, i64 0, i64 %438\l  call fastcc void @post_fh_thinking(i32 %436, %struct.move_s* %439)\l  br label %440\l}"];
	Node0x2758c80 -> Node0x2758cd0;
	Node0x2758cd0 [shape=record,label="{%440:\l440:                                              \l  br label %441\l}"];
	Node0x2758cd0 -> Node0x2758d20;
	Node0x2758d20 [shape=record,label="{%441:\l441:                                              \l  %442 = load i32, i32* %13, align 4\l  %443 = load i32, i32* @cur_score, align 4\l  %444 = icmp sgt i32 %442, %443\l  br i1 %444, label %445, label %456\l|{<s0>T|<s1>F}}"];
	Node0x2758d20:s0 -> Node0x2758d70;
	Node0x2758d20:s1 -> Node0x2758e10;
	Node0x2758d70 [shape=record,label="{%445:\l445:                                              \l  %.b5 = load i1, i1* @time_exit, align 1\l  %446 = zext i1 %.b5 to i32\l  %447 = icmp ne i32 %446, 0\l  br i1 %447, label %456, label %448\l|{<s0>T|<s1>F}}"];
	Node0x2758d70:s0 -> Node0x2758e10;
	Node0x2758d70:s1 -> Node0x2758dc0;
	Node0x2758dc0 [shape=record,label="{%448:\l448:                                              \l  %449 = load i32, i32* %13, align 4\l  store i32 %449, i32* @cur_score, align 4\l  %450 = load i32, i32* %11, align 4\l  store i32 %450, i32* @bestmovenum, align 4\l  %451 = load i32, i32* %11, align 4\l  %452 = sext i32 %451 to i64\l  %453 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %8, i64 0, i64 %452\l  %454 = bitcast %struct.move_s* %9 to i8*\l  %455 = bitcast %struct.move_s* %453 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %454, i8* align 8 %455, i64\l... 24, i1 false)\l  br label %456\l}"];
	Node0x2758dc0 -> Node0x2758e10;
	Node0x2758e10 [shape=record,label="{%456:\l456:                                              \l  %.b4 = load i1, i1* @time_exit, align 1\l  %457 = zext i1 %.b4 to i32\l  %458 = icmp ne i32 %457, 0\l  br i1 %458, label %459, label %467\l|{<s0>T|<s1>F}}"];
	Node0x2758e10:s0 -> Node0x2758e60;
	Node0x2758e10:s1 -> Node0x2758fa0;
	Node0x2758e60 [shape=record,label="{%459:\l459:                                              \l  %460 = load i32, i32* @cur_score, align 4\l  %461 = icmp eq i32 %460, -1000000\l  br i1 %461, label %462, label %467\l|{<s0>T|<s1>F}}"];
	Node0x2758e60:s0 -> Node0x2758eb0;
	Node0x2758e60:s1 -> Node0x2758fa0;
	Node0x2758eb0 [shape=record,label="{%462:\l462:                                              \l  %463 = load i32, i32* %16, align 4\l  %464 = icmp ne i32 %463, 0\l  br i1 %464, label %465, label %466\l|{<s0>T|<s1>F}}"];
	Node0x2758eb0:s0 -> Node0x2758f00;
	Node0x2758eb0:s1 -> Node0x2758f50;
	Node0x2758f00 [shape=record,label="{%465:\l465:                                              \l  store i1 true, i1* @time_failure, align 1\l  br label %466\l}"];
	Node0x2758f00 -> Node0x2758f50;
	Node0x2758f50 [shape=record,label="{%466:\l466:                                              \l  br label %467\l}"];
	Node0x2758f50 -> Node0x2758fa0;
	Node0x2758fa0 [shape=record,label="{%467:\l467:                                              \l  store i32 0, i32* %16, align 4\l  store i32 1, i32* %17, align 4\l  br label %468\l}"];
	Node0x2758fa0 -> Node0x2758ff0;
	Node0x2758ff0 [shape=record,label="{%468:\l468:                                              \l  %469 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %8, i64 0, i64 0\l  %470 = load i32, i32* %11, align 4\l  call fastcc void @unmake(%struct.move_s* %469, i32 %470)\l  %.b3 = load i1, i1* @time_exit, align 1\l  %471 = zext i1 %.b3 to i32\l  %472 = icmp ne i32 %471, 0\l  br i1 %472, label %473, label %476\l|{<s0>T|<s1>F}}"];
	Node0x2758ff0:s0 -> Node0x2759040;
	Node0x2758ff0:s1 -> Node0x2759090;
	Node0x2759040 [shape=record,label="{%473:\l473:                                              \l  %474 = bitcast %struct.move_s* %0 to i8*\l  %475 = bitcast %struct.move_s* %9 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %474, i8* align 4 %475, i64\l... 24, i1 false)\l  br label %858\l}"];
	Node0x2759040 -> Node0x275a210;
	Node0x2759090 [shape=record,label="{%476:\l476:                                              \l  %477 = load i32, i32* %13, align 4\l  %478 = load i32, i32* %19, align 4\l  %479 = icmp sgt i32 %477, %478\l  br i1 %479, label %480, label %800\l|{<s0>T|<s1>F}}"];
	Node0x2759090:s0 -> Node0x27590e0;
	Node0x2759090:s1 -> Node0x2759a40;
	Node0x27590e0 [shape=record,label="{%480:\l480:                                              \l  %481 = load i32, i32* %17, align 4\l  %482 = icmp ne i32 %481, 0\l  br i1 %482, label %483, label %800\l|{<s0>T|<s1>F}}"];
	Node0x27590e0:s0 -> Node0x2759130;
	Node0x27590e0:s1 -> Node0x2759a40;
	Node0x2759130 [shape=record,label="{%483:\l483:                                              \l  %484 = load i32, i32* %11, align 4\l  %485 = sext i32 %484 to i64\l  %486 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %8, i64 0, i64 %485\l  %487 = getelementptr inbounds %struct.move_s, %struct.move_s* %486, i32 0,\l... i32 0\l  %488 = load i32, i32* %487, align 8\l  %489 = load i32, i32* @ply, align 4\l  %490 = sext i32 %489 to i64\l  %491 = getelementptr inbounds [300 x %struct.move_s], [300 x\l... %struct.move_s]* @killer1, i64 0, i64 %490\l  %492 = getelementptr inbounds %struct.move_s, %struct.move_s* %491, i32 0,\l... i32 0\l  %493 = load i32, i32* %492, align 8\l  %494 = icmp eq i32 %488, %493\l  br i1 %494, label %495, label %525\l|{<s0>T|<s1>F}}"];
	Node0x2759130:s0 -> Node0x2759180;
	Node0x2759130:s1 -> Node0x2759270;
	Node0x2759180 [shape=record,label="{%495:\l495:                                              \l  %496 = load i32, i32* %11, align 4\l  %497 = sext i32 %496 to i64\l  %498 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %8, i64 0, i64 %497\l  %499 = getelementptr inbounds %struct.move_s, %struct.move_s* %498, i32 0,\l... i32 1\l  %500 = load i32, i32* %499, align 4\l  %501 = load i32, i32* @ply, align 4\l  %502 = sext i32 %501 to i64\l  %503 = getelementptr inbounds [300 x %struct.move_s], [300 x\l... %struct.move_s]* @killer1, i64 0, i64 %502\l  %504 = getelementptr inbounds %struct.move_s, %struct.move_s* %503, i32 0,\l... i32 1\l  %505 = load i32, i32* %504, align 4\l  %506 = icmp eq i32 %500, %505\l  br i1 %506, label %507, label %525\l|{<s0>T|<s1>F}}"];
	Node0x2759180:s0 -> Node0x27591d0;
	Node0x2759180:s1 -> Node0x2759270;
	Node0x27591d0 [shape=record,label="{%507:\l507:                                              \l  %508 = load i32, i32* %11, align 4\l  %509 = sext i32 %508 to i64\l  %510 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %8, i64 0, i64 %509\l  %511 = getelementptr inbounds %struct.move_s, %struct.move_s* %510, i32 0,\l... i32 3\l  %512 = load i32, i32* %511, align 4\l  %513 = load i32, i32* @ply, align 4\l  %514 = sext i32 %513 to i64\l  %515 = getelementptr inbounds [300 x %struct.move_s], [300 x\l... %struct.move_s]* @killer1, i64 0, i64 %514\l  %516 = getelementptr inbounds %struct.move_s, %struct.move_s* %515, i32 0,\l... i32 3\l  %517 = load i32, i32* %516, align 4\l  %518 = icmp eq i32 %512, %517\l  br i1 %518, label %519, label %525\l|{<s0>T|<s1>F}}"];
	Node0x27591d0:s0 -> Node0x2759220;
	Node0x27591d0:s1 -> Node0x2759270;
	Node0x2759220 [shape=record,label="{%519:\l519:                                              \l  %520 = load i32, i32* @ply, align 4\l  %521 = sext i32 %520 to i64\l  %522 = getelementptr inbounds [300 x i32], [300 x i32]* @killer_scores, i64\l... 0, i64 %521\l  %523 = load i32, i32* %522, align 4\l  %524 = add nsw i32 %523, 1\l  store i32 %524, i32* %522, align 4\l  br label %711\l}"];
	Node0x2759220 -> Node0x2759720;
	Node0x2759270 [shape=record,label="{%525:\l525:                                              \l  %526 = load i32, i32* %11, align 4\l  %527 = sext i32 %526 to i64\l  %528 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %8, i64 0, i64 %527\l  %529 = getelementptr inbounds %struct.move_s, %struct.move_s* %528, i32 0,\l... i32 0\l  %530 = load i32, i32* %529, align 8\l  %531 = load i32, i32* @ply, align 4\l  %532 = sext i32 %531 to i64\l  %533 = getelementptr inbounds [300 x %struct.move_s], [300 x\l... %struct.move_s]* @killer2, i64 0, i64 %532\l  %534 = getelementptr inbounds %struct.move_s, %struct.move_s* %533, i32 0,\l... i32 0\l  %535 = load i32, i32* %534, align 8\l  %536 = icmp eq i32 %530, %535\l  br i1 %536, label %537, label %611\l|{<s0>T|<s1>F}}"];
	Node0x2759270:s0 -> Node0x27592c0;
	Node0x2759270:s1 -> Node0x2759450;
	Node0x27592c0 [shape=record,label="{%537:\l537:                                              \l  %538 = load i32, i32* %11, align 4\l  %539 = sext i32 %538 to i64\l  %540 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %8, i64 0, i64 %539\l  %541 = getelementptr inbounds %struct.move_s, %struct.move_s* %540, i32 0,\l... i32 1\l  %542 = load i32, i32* %541, align 4\l  %543 = load i32, i32* @ply, align 4\l  %544 = sext i32 %543 to i64\l  %545 = getelementptr inbounds [300 x %struct.move_s], [300 x\l... %struct.move_s]* @killer2, i64 0, i64 %544\l  %546 = getelementptr inbounds %struct.move_s, %struct.move_s* %545, i32 0,\l... i32 1\l  %547 = load i32, i32* %546, align 4\l  %548 = icmp eq i32 %542, %547\l  br i1 %548, label %549, label %611\l|{<s0>T|<s1>F}}"];
	Node0x27592c0:s0 -> Node0x2759310;
	Node0x27592c0:s1 -> Node0x2759450;
	Node0x2759310 [shape=record,label="{%549:\l549:                                              \l  %550 = load i32, i32* %11, align 4\l  %551 = sext i32 %550 to i64\l  %552 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %8, i64 0, i64 %551\l  %553 = getelementptr inbounds %struct.move_s, %struct.move_s* %552, i32 0,\l... i32 3\l  %554 = load i32, i32* %553, align 4\l  %555 = load i32, i32* @ply, align 4\l  %556 = sext i32 %555 to i64\l  %557 = getelementptr inbounds [300 x %struct.move_s], [300 x\l... %struct.move_s]* @killer2, i64 0, i64 %556\l  %558 = getelementptr inbounds %struct.move_s, %struct.move_s* %557, i32 0,\l... i32 3\l  %559 = load i32, i32* %558, align 4\l  %560 = icmp eq i32 %554, %559\l  br i1 %560, label %561, label %611\l|{<s0>T|<s1>F}}"];
	Node0x2759310:s0 -> Node0x2759360;
	Node0x2759310:s1 -> Node0x2759450;
	Node0x2759360 [shape=record,label="{%561:\l561:                                              \l  %562 = load i32, i32* @ply, align 4\l  %563 = sext i32 %562 to i64\l  %564 = getelementptr inbounds [300 x i32], [300 x i32]* @killer_scores2, i64\l... 0, i64 %563\l  %565 = load i32, i32* %564, align 4\l  %566 = add nsw i32 %565, 1\l  store i32 %566, i32* %564, align 4\l  %567 = load i32, i32* @ply, align 4\l  %568 = sext i32 %567 to i64\l  %569 = getelementptr inbounds [300 x i32], [300 x i32]* @killer_scores2, i64\l... 0, i64 %568\l  %570 = load i32, i32* %569, align 4\l  %571 = load i32, i32* @ply, align 4\l  %572 = sext i32 %571 to i64\l  %573 = getelementptr inbounds [300 x i32], [300 x i32]* @killer_scores, i64\l... 0, i64 %572\l  %574 = load i32, i32* %573, align 4\l  %575 = icmp sgt i32 %570, %574\l  br i1 %575, label %576, label %610\l|{<s0>T|<s1>F}}"];
	Node0x2759360:s0 -> Node0x27593b0;
	Node0x2759360:s1 -> Node0x2759400;
	Node0x27593b0 [shape=record,label="{%576:\l576:                                              \l  %577 = load i32, i32* @ply, align 4\l  %578 = sext i32 %577 to i64\l  %579 = getelementptr inbounds [300 x %struct.move_s], [300 x\l... %struct.move_s]* @killer1, i64 0, i64 %578\l  %580 = bitcast %struct.move_s* %21 to i8*\l  %581 = bitcast %struct.move_s* %579 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %580, i8* align 8 %581, i64\l... 24, i1 false)\l  %582 = load i32, i32* @ply, align 4\l  %583 = sext i32 %582 to i64\l  %584 = getelementptr inbounds [300 x %struct.move_s], [300 x\l... %struct.move_s]* @killer1, i64 0, i64 %583\l  %585 = load i32, i32* @ply, align 4\l  %586 = sext i32 %585 to i64\l  %587 = getelementptr inbounds [300 x %struct.move_s], [300 x\l... %struct.move_s]* @killer2, i64 0, i64 %586\l  %588 = bitcast %struct.move_s* %584 to i8*\l  %589 = bitcast %struct.move_s* %587 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %588, i8* align 8 %589, i64\l... 24, i1 false)\l  %590 = load i32, i32* @ply, align 4\l  %591 = sext i32 %590 to i64\l  %592 = getelementptr inbounds [300 x %struct.move_s], [300 x\l... %struct.move_s]* @killer2, i64 0, i64 %591\l  %593 = bitcast %struct.move_s* %592 to i8*\l  %594 = bitcast %struct.move_s* %21 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %593, i8* align 4 %594, i64\l... 24, i1 false)\l  %595 = load i32, i32* @ply, align 4\l  %596 = sext i32 %595 to i64\l  %597 = getelementptr inbounds [300 x i32], [300 x i32]* @killer_scores, i64\l... 0, i64 %596\l  %598 = load i32, i32* %597, align 4\l  store i32 %598, i32* %22, align 4\l  %599 = load i32, i32* @ply, align 4\l  %600 = sext i32 %599 to i64\l  %601 = getelementptr inbounds [300 x i32], [300 x i32]* @killer_scores2, i64\l... 0, i64 %600\l  %602 = load i32, i32* %601, align 4\l  %603 = load i32, i32* @ply, align 4\l  %604 = sext i32 %603 to i64\l  %605 = getelementptr inbounds [300 x i32], [300 x i32]* @killer_scores, i64\l... 0, i64 %604\l  store i32 %602, i32* %605, align 4\l  %606 = load i32, i32* %22, align 4\l  %607 = load i32, i32* @ply, align 4\l  %608 = sext i32 %607 to i64\l  %609 = getelementptr inbounds [300 x i32], [300 x i32]* @killer_scores2, i64\l... 0, i64 %608\l  store i32 %606, i32* %609, align 4\l  br label %610\l}"];
	Node0x27593b0 -> Node0x2759400;
	Node0x2759400 [shape=record,label="{%610:\l610:                                              \l  br label %710\l}"];
	Node0x2759400 -> Node0x27596d0;
	Node0x2759450 [shape=record,label="{%611:\l611:                                              \l  %612 = load i32, i32* %11, align 4\l  %613 = sext i32 %612 to i64\l  %614 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %8, i64 0, i64 %613\l  %615 = getelementptr inbounds %struct.move_s, %struct.move_s* %614, i32 0,\l... i32 0\l  %616 = load i32, i32* %615, align 8\l  %617 = load i32, i32* @ply, align 4\l  %618 = sext i32 %617 to i64\l  %619 = getelementptr inbounds [300 x %struct.move_s], [300 x\l... %struct.move_s]* @killer3, i64 0, i64 %618\l  %620 = getelementptr inbounds %struct.move_s, %struct.move_s* %619, i32 0,\l... i32 0\l  %621 = load i32, i32* %620, align 8\l  %622 = icmp eq i32 %616, %621\l  br i1 %622, label %623, label %697\l|{<s0>T|<s1>F}}"];
	Node0x2759450:s0 -> Node0x27594a0;
	Node0x2759450:s1 -> Node0x2759630;
	Node0x27594a0 [shape=record,label="{%623:\l623:                                              \l  %624 = load i32, i32* %11, align 4\l  %625 = sext i32 %624 to i64\l  %626 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %8, i64 0, i64 %625\l  %627 = getelementptr inbounds %struct.move_s, %struct.move_s* %626, i32 0,\l... i32 1\l  %628 = load i32, i32* %627, align 4\l  %629 = load i32, i32* @ply, align 4\l  %630 = sext i32 %629 to i64\l  %631 = getelementptr inbounds [300 x %struct.move_s], [300 x\l... %struct.move_s]* @killer3, i64 0, i64 %630\l  %632 = getelementptr inbounds %struct.move_s, %struct.move_s* %631, i32 0,\l... i32 1\l  %633 = load i32, i32* %632, align 4\l  %634 = icmp eq i32 %628, %633\l  br i1 %634, label %635, label %697\l|{<s0>T|<s1>F}}"];
	Node0x27594a0:s0 -> Node0x27594f0;
	Node0x27594a0:s1 -> Node0x2759630;
	Node0x27594f0 [shape=record,label="{%635:\l635:                                              \l  %636 = load i32, i32* %11, align 4\l  %637 = sext i32 %636 to i64\l  %638 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %8, i64 0, i64 %637\l  %639 = getelementptr inbounds %struct.move_s, %struct.move_s* %638, i32 0,\l... i32 3\l  %640 = load i32, i32* %639, align 4\l  %641 = load i32, i32* @ply, align 4\l  %642 = sext i32 %641 to i64\l  %643 = getelementptr inbounds [300 x %struct.move_s], [300 x\l... %struct.move_s]* @killer3, i64 0, i64 %642\l  %644 = getelementptr inbounds %struct.move_s, %struct.move_s* %643, i32 0,\l... i32 3\l  %645 = load i32, i32* %644, align 4\l  %646 = icmp eq i32 %640, %645\l  br i1 %646, label %647, label %697\l|{<s0>T|<s1>F}}"];
	Node0x27594f0:s0 -> Node0x2759540;
	Node0x27594f0:s1 -> Node0x2759630;
	Node0x2759540 [shape=record,label="{%647:\l647:                                              \l  %648 = load i32, i32* @ply, align 4\l  %649 = sext i32 %648 to i64\l  %650 = getelementptr inbounds [300 x i32], [300 x i32]* @killer_scores3, i64\l... 0, i64 %649\l  %651 = load i32, i32* %650, align 4\l  %652 = add nsw i32 %651, 1\l  store i32 %652, i32* %650, align 4\l  %653 = load i32, i32* @ply, align 4\l  %654 = sext i32 %653 to i64\l  %655 = getelementptr inbounds [300 x i32], [300 x i32]* @killer_scores3, i64\l... 0, i64 %654\l  %656 = load i32, i32* %655, align 4\l  %657 = load i32, i32* @ply, align 4\l  %658 = sext i32 %657 to i64\l  %659 = getelementptr inbounds [300 x i32], [300 x i32]* @killer_scores2, i64\l... 0, i64 %658\l  %660 = load i32, i32* %659, align 4\l  %661 = icmp sgt i32 %656, %660\l  br i1 %661, label %662, label %696\l|{<s0>T|<s1>F}}"];
	Node0x2759540:s0 -> Node0x2759590;
	Node0x2759540:s1 -> Node0x27595e0;
	Node0x2759590 [shape=record,label="{%662:\l662:                                              \l  %663 = load i32, i32* @ply, align 4\l  %664 = sext i32 %663 to i64\l  %665 = getelementptr inbounds [300 x %struct.move_s], [300 x\l... %struct.move_s]* @killer2, i64 0, i64 %664\l  %666 = bitcast %struct.move_s* %21 to i8*\l  %667 = bitcast %struct.move_s* %665 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %666, i8* align 8 %667, i64\l... 24, i1 false)\l  %668 = load i32, i32* @ply, align 4\l  %669 = sext i32 %668 to i64\l  %670 = getelementptr inbounds [300 x %struct.move_s], [300 x\l... %struct.move_s]* @killer2, i64 0, i64 %669\l  %671 = load i32, i32* @ply, align 4\l  %672 = sext i32 %671 to i64\l  %673 = getelementptr inbounds [300 x %struct.move_s], [300 x\l... %struct.move_s]* @killer3, i64 0, i64 %672\l  %674 = bitcast %struct.move_s* %670 to i8*\l  %675 = bitcast %struct.move_s* %673 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %674, i8* align 8 %675, i64\l... 24, i1 false)\l  %676 = load i32, i32* @ply, align 4\l  %677 = sext i32 %676 to i64\l  %678 = getelementptr inbounds [300 x %struct.move_s], [300 x\l... %struct.move_s]* @killer3, i64 0, i64 %677\l  %679 = bitcast %struct.move_s* %678 to i8*\l  %680 = bitcast %struct.move_s* %21 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %679, i8* align 4 %680, i64\l... 24, i1 false)\l  %681 = load i32, i32* @ply, align 4\l  %682 = sext i32 %681 to i64\l  %683 = getelementptr inbounds [300 x i32], [300 x i32]* @killer_scores2, i64\l... 0, i64 %682\l  %684 = load i32, i32* %683, align 4\l  store i32 %684, i32* %22, align 4\l  %685 = load i32, i32* @ply, align 4\l  %686 = sext i32 %685 to i64\l  %687 = getelementptr inbounds [300 x i32], [300 x i32]* @killer_scores3, i64\l... 0, i64 %686\l  %688 = load i32, i32* %687, align 4\l  %689 = load i32, i32* @ply, align 4\l  %690 = sext i32 %689 to i64\l  %691 = getelementptr inbounds [300 x i32], [300 x i32]* @killer_scores2, i64\l... 0, i64 %690\l  store i32 %688, i32* %691, align 4\l  %692 = load i32, i32* %22, align 4\l  %693 = load i32, i32* @ply, align 4\l  %694 = sext i32 %693 to i64\l  %695 = getelementptr inbounds [300 x i32], [300 x i32]* @killer_scores3, i64\l... 0, i64 %694\l  store i32 %692, i32* %695, align 4\l  br label %696\l}"];
	Node0x2759590 -> Node0x27595e0;
	Node0x27595e0 [shape=record,label="{%696:\l696:                                              \l  br label %709\l}"];
	Node0x27595e0 -> Node0x2759680;
	Node0x2759630 [shape=record,label="{%697:\l697:                                              \l  %698 = load i32, i32* @ply, align 4\l  %699 = sext i32 %698 to i64\l  %700 = getelementptr inbounds [300 x i32], [300 x i32]* @killer_scores3, i64\l... 0, i64 %699\l  store i32 1, i32* %700, align 4\l  %701 = load i32, i32* @ply, align 4\l  %702 = sext i32 %701 to i64\l  %703 = getelementptr inbounds [300 x %struct.move_s], [300 x\l... %struct.move_s]* @killer3, i64 0, i64 %702\l  %704 = load i32, i32* %11, align 4\l  %705 = sext i32 %704 to i64\l  %706 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %8, i64 0, i64 %705\l  %707 = bitcast %struct.move_s* %703 to i8*\l  %708 = bitcast %struct.move_s* %706 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %707, i8* align 8 %708, i64\l... 24, i1 false)\l  br label %709\l}"];
	Node0x2759630 -> Node0x2759680;
	Node0x2759680 [shape=record,label="{%709:\l709:                                              \l  br label %710\l}"];
	Node0x2759680 -> Node0x27596d0;
	Node0x27596d0 [shape=record,label="{%710:\l710:                                              \l  br label %711\l}"];
	Node0x27596d0 -> Node0x2759720;
	Node0x2759720 [shape=record,label="{%711:\l711:                                              \l  %712 = load i32, i32* %11, align 4\l  %713 = sext i32 %712 to i64\l  %714 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %8, i64 0, i64 %713\l  %715 = getelementptr inbounds %struct.move_s, %struct.move_s* %714, i32 0,\l... i32 0\l  %716 = load i32, i32* %715, align 8\l  %717 = sext i32 %716 to i64\l  %718 = getelementptr inbounds [144 x [144 x i32]], [144 x [144 x i32]]*\l... @history_h, i64 0, i64 %717\l  %719 = load i32, i32* %11, align 4\l  %720 = sext i32 %719 to i64\l  %721 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %8, i64 0, i64 %720\l  %722 = getelementptr inbounds %struct.move_s, %struct.move_s* %721, i32 0,\l... i32 1\l  %723 = load i32, i32* %722, align 4\l  %724 = sext i32 %723 to i64\l  %725 = getelementptr inbounds [144 x i32], [144 x i32]* %718, i64 0, i64 %724\l  %726 = load i32, i32* %725, align 4\l  %727 = add i32 %726, 1\l  store i32 %727, i32* %725, align 4\l  %728 = load i32, i32* %13, align 4\l  store i32 %728, i32* %19, align 4\l  %729 = load i32, i32* %11, align 4\l  %730 = sext i32 %729 to i64\l  %731 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %8, i64 0, i64 %730\l  %732 = bitcast %struct.move_s* %9 to i8*\l  %733 = bitcast %struct.move_s* %731 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %732, i8* align 8 %733, i64\l... 24, i1 false)\l  %734 = load i32, i32* %11, align 4\l  store i32 %734, i32* @bestmovenum, align 4\l  %735 = load i32, i32* %19, align 4\l  store i32 %735, i32* @cur_score, align 4\l  %736 = load i32, i32* @ply, align 4\l  %737 = sext i32 %736 to i64\l  %738 = getelementptr inbounds [300 x [300 x %struct.move_s]], [300 x [300 x\l... %struct.move_s]]* @pv, i64 0, i64 %737\l  %739 = load i32, i32* @ply, align 4\l  %740 = sext i32 %739 to i64\l  %741 = getelementptr inbounds [300 x %struct.move_s], [300 x\l... %struct.move_s]* %738, i64 0, i64 %740\l  %742 = load i32, i32* %11, align 4\l  %743 = sext i32 %742 to i64\l  %744 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %8, i64 0, i64 %743\l  %745 = bitcast %struct.move_s* %741 to i8*\l  %746 = bitcast %struct.move_s* %744 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %745, i8* align 8 %746, i64\l... 24, i1 false)\l  %747 = load i32, i32* @ply, align 4\l  %748 = add nsw i32 %747, 1\l  store i32 %748, i32* %12, align 4\l  br label %749\l}"];
	Node0x2759720 -> Node0x2759770;
	Node0x2759770 [shape=record,label="{%749:\l749:                                              \l  %750 = load i32, i32* %12, align 4\l  %751 = load i32, i32* @ply, align 4\l  %752 = add nsw i32 %751, 1\l  %753 = sext i32 %752 to i64\l  %754 = getelementptr inbounds [300 x i32], [300 x i32]* @pv_length, i64 0,\l... i64 %753\l  %755 = load i32, i32* %754, align 4\l  %756 = icmp slt i32 %750, %755\l  br i1 %756, label %757, label %776\l|{<s0>T|<s1>F}}"];
	Node0x2759770:s0 -> Node0x27597c0;
	Node0x2759770:s1 -> Node0x2759860;
	Node0x27597c0 [shape=record,label="{%757:\l757:                                              \l  %758 = load i32, i32* @ply, align 4\l  %759 = sext i32 %758 to i64\l  %760 = getelementptr inbounds [300 x [300 x %struct.move_s]], [300 x [300 x\l... %struct.move_s]]* @pv, i64 0, i64 %759\l  %761 = load i32, i32* %12, align 4\l  %762 = sext i32 %761 to i64\l  %763 = getelementptr inbounds [300 x %struct.move_s], [300 x\l... %struct.move_s]* %760, i64 0, i64 %762\l  %764 = load i32, i32* @ply, align 4\l  %765 = add nsw i32 %764, 1\l  %766 = sext i32 %765 to i64\l  %767 = getelementptr inbounds [300 x [300 x %struct.move_s]], [300 x [300 x\l... %struct.move_s]]* @pv, i64 0, i64 %766\l  %768 = load i32, i32* %12, align 4\l  %769 = sext i32 %768 to i64\l  %770 = getelementptr inbounds [300 x %struct.move_s], [300 x\l... %struct.move_s]* %767, i64 0, i64 %769\l  %771 = bitcast %struct.move_s* %763 to i8*\l  %772 = bitcast %struct.move_s* %770 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %771, i8* align 8 %772, i64\l... 24, i1 false)\l  br label %773\l}"];
	Node0x27597c0 -> Node0x2759810;
	Node0x2759810 [shape=record,label="{%773:\l773:                                              \l  %774 = load i32, i32* %12, align 4\l  %775 = add nsw i32 %774, 1\l  store i32 %775, i32* %12, align 4\l  br label %749\l}"];
	Node0x2759810 -> Node0x2759770;
	Node0x2759860 [shape=record,label="{%776:\l776:                                              \l  %777 = load i32, i32* @ply, align 4\l  %778 = add nsw i32 %777, 1\l  %779 = sext i32 %778 to i64\l  %780 = getelementptr inbounds [300 x i32], [300 x i32]* @pv_length, i64 0,\l... i64 %779\l  %781 = load i32, i32* %780, align 4\l  %782 = load i32, i32* @ply, align 4\l  %783 = sext i32 %782 to i64\l  %784 = getelementptr inbounds [300 x i32], [300 x i32]* @pv_length, i64 0,\l... i64 %783\l  store i32 %781, i32* %784, align 4\l  %785 = load i32, i32* @cur_score, align 4\l  %786 = load i32, i32* %20, align 4\l  %787 = icmp sge i32 %785, %786\l  br i1 %787, label %788, label %791\l|{<s0>T|<s1>F}}"];
	Node0x2759860:s0 -> Node0x27598b0;
	Node0x2759860:s1 -> Node0x2759900;
	Node0x27598b0 [shape=record,label="{%788:\l788:                                              \l  %789 = bitcast %struct.move_s* %0 to i8*\l  %790 = bitcast %struct.move_s* %9 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %789, i8* align 4 %790, i64\l... 24, i1 false)\l  br label %858\l}"];
	Node0x27598b0 -> Node0x275a210;
	Node0x2759900 [shape=record,label="{%791:\l791:                                              \l  %792 = load i32, i32* @post, align 4\l  %793 = icmp ne i32 %792, 0\l  br i1 %793, label %794, label %799\l|{<s0>T|<s1>F}}"];
	Node0x2759900:s0 -> Node0x2759950;
	Node0x2759900:s1 -> Node0x27599f0;
	Node0x2759950 [shape=record,label="{%794:\l794:                                              \l  %795 = load i32, i32* @i_depth, align 4\l  %796 = icmp sge i32 %795, 2\l  br i1 %796, label %797, label %799\l|{<s0>T|<s1>F}}"];
	Node0x2759950:s0 -> Node0x27599a0;
	Node0x2759950:s1 -> Node0x27599f0;
	Node0x27599a0 [shape=record,label="{%797:\l797:                                              \l  %798 = load i32, i32* %19, align 4\l  call fastcc void @post_thinking(i32 %798)\l  br label %799\l}"];
	Node0x27599a0 -> Node0x27599f0;
	Node0x27599f0 [shape=record,label="{%799:\l799:                                              \l  br label %800\l}"];
	Node0x27599f0 -> Node0x2759a40;
	Node0x2759a40 [shape=record,label="{%800:\l800:                                              \l  %801 = load i32, i32* %17, align 4\l  %802 = icmp ne i32 %801, 0\l  br i1 %802, label %803, label %804\l|{<s0>T|<s1>F}}"];
	Node0x2759a40:s0 -> Node0x2759a90;
	Node0x2759a40:s1 -> Node0x2759ae0;
	Node0x2759a90 [shape=record,label="{%803:\l803:                                              \l  store i32 0, i32* %18, align 4\l  br label %804\l}"];
	Node0x2759a90 -> Node0x2759ae0;
	Node0x2759ae0 [shape=record,label="{%804:\l804:                                              \l  %805 = load i32, i32* @nodes, align 4\l  %806 = load i32, i32* %25, align 4\l  %807 = sub nsw i32 %805, %806\l  %808 = load i32, i32* %11, align 4\l  %809 = sext i32 %808 to i64\l  %810 = getelementptr inbounds [512 x i32], [512 x i32]* @rootnodecount, i64\l... 0, i64 %809\l  store i32 %807, i32* %810, align 4\l  br label %139\l}"];
	Node0x2759ae0 -> Node0x2757ec0;
	Node0x2759b30 [shape=record,label="{%811:\l811:                                              \l  %812 = load i32, i32* %16, align 4\l  %813 = icmp ne i32 %812, 0\l  br i1 %813, label %814, label %841\l|{<s0>T|<s1>F}}"];
	Node0x2759b30:s0 -> Node0x2759b80;
	Node0x2759b30:s1 -> Node0x275a030;
	Node0x2759b80 [shape=record,label="{%814:\l814:                                              \l  %.b2 = load i1, i1* @is_pondering, align 1\l  %815 = zext i1 %.b2 to i32\l  %816 = icmp ne i32 %815, 0\l  br i1 %816, label %841, label %817\l|{<s0>T|<s1>F}}"];
	Node0x2759b80:s0 -> Node0x275a030;
	Node0x2759b80:s1 -> Node0x2759bd0;
	Node0x2759bd0 [shape=record,label="{%817:\l817:                                              \l  %818 = load i32, i32* @Variant, align 4\l  %819 = icmp ne i32 %818, 3\l  br i1 %819, label %820, label %834\l|{<s0>T|<s1>F}}"];
	Node0x2759bd0:s0 -> Node0x2759c20;
	Node0x2759bd0:s1 -> Node0x2759ea0;
	Node0x2759c20 [shape=record,label="{%820:\l820:                                              \l  %821 = load i32, i32* @Variant, align 4\l  %822 = icmp ne i32 %821, 4\l  br i1 %822, label %823, label %834\l|{<s0>T|<s1>F}}"];
	Node0x2759c20:s0 -> Node0x2759c70;
	Node0x2759c20:s1 -> Node0x2759ea0;
	Node0x2759c70 [shape=record,label="{%823:\l823:                                              \l  %824 = call fastcc i32 @in_check()\l  %825 = icmp ne i32 %824, 0\l  br i1 %825, label %826, label %832\l|{<s0>T|<s1>F}}"];
	Node0x2759c70:s0 -> Node0x2759cc0;
	Node0x2759c70:s1 -> Node0x2759e00;
	Node0x2759cc0 [shape=record,label="{%826:\l826:                                              \l  %827 = load i32, i32* @white_to_move, align 4\l  %828 = icmp eq i32 %827, 1\l  br i1 %828, label %829, label %830\l|{<s0>T|<s1>F}}"];
	Node0x2759cc0:s0 -> Node0x2759d10;
	Node0x2759cc0:s1 -> Node0x2759d60;
	Node0x2759d10 [shape=record,label="{%829:\l829:                                              \l  store i32 2, i32* @result, align 4\l  br label %831\l}"];
	Node0x2759d10 -> Node0x2759db0;
	Node0x2759d60 [shape=record,label="{%830:\l830:                                              \l  store i32 3, i32* @result, align 4\l  br label %831\l}"];
	Node0x2759d60 -> Node0x2759db0;
	Node0x2759db0 [shape=record,label="{%831:\l831:                                              \l  br label %833\l}"];
	Node0x2759db0 -> Node0x2759e50;
	Node0x2759e00 [shape=record,label="{%832:\l832:                                              \l  store i32 1, i32* @result, align 4\l  br label %833\l}"];
	Node0x2759e00 -> Node0x2759e50;
	Node0x2759e50 [shape=record,label="{%833:\l833:                                              \l  br label %840\l}"];
	Node0x2759e50 -> Node0x2759fe0;
	Node0x2759ea0 [shape=record,label="{%834:\l834:                                              \l  %835 = load i32, i32* @white_to_move, align 4\l  %836 = icmp eq i32 %835, 1\l  br i1 %836, label %837, label %838\l|{<s0>T|<s1>F}}"];
	Node0x2759ea0:s0 -> Node0x2759ef0;
	Node0x2759ea0:s1 -> Node0x2759f40;
	Node0x2759ef0 [shape=record,label="{%837:\l837:                                              \l  store i32 3, i32* @result, align 4\l  br label %839\l}"];
	Node0x2759ef0 -> Node0x2759f90;
	Node0x2759f40 [shape=record,label="{%838:\l838:                                              \l  store i32 2, i32* @result, align 4\l  br label %839\l}"];
	Node0x2759f40 -> Node0x2759f90;
	Node0x2759f90 [shape=record,label="{%839:\l839:                                              \l  br label %840\l}"];
	Node0x2759f90 -> Node0x2759fe0;
	Node0x2759fe0 [shape=record,label="{%840:\l840:                                              \l  br label %855\l}"];
	Node0x2759fe0 -> Node0x275a1c0;
	Node0x275a030 [shape=record,label="{%841:\l841:                                              \l  %.b1 = load i1, i1* @is_pondering, align 1\l  %842 = zext i1 %.b1 to i32\l  %843 = icmp ne i32 %842, 0\l  br i1 %843, label %854, label %844\l|{<s0>T|<s1>F}}"];
	Node0x275a030:s0 -> Node0x275a170;
	Node0x275a030:s1 -> Node0x275a080;
	Node0x275a080 [shape=record,label="{%844:\l844:                                              \l  %845 = load i32, i32* @fifty, align 4\l  %846 = icmp sgt i32 %845, 100\l  br i1 %846, label %847, label %853\l|{<s0>T|<s1>F}}"];
	Node0x275a080:s0 -> Node0x275a0d0;
	Node0x275a080:s1 -> Node0x275a120;
	Node0x275a0d0 [shape=record,label="{%847:\l847:                                              \l  store i32 4, i32* @result, align 4\l  store i32 0, i32* @cur_score, align 4\l  %848 = load i32, i32* @ply, align 4\l  %849 = sext i32 %848 to i64\l  %850 = getelementptr inbounds [300 x i32], [300 x i32]* @pv_length, i64 0,\l... i64 %849\l  store i32 0, i32* %850, align 4\l  %851 = bitcast %struct.move_s* %0 to i8*\l  %852 = bitcast %struct.move_s* @dummy to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %851, i8* align 4 %852, i64\l... 24, i1 false)\l  br label %858\l}"];
	Node0x275a0d0 -> Node0x275a210;
	Node0x275a120 [shape=record,label="{%853:\l853:                                              \l  br label %854\l}"];
	Node0x275a120 -> Node0x275a170;
	Node0x275a170 [shape=record,label="{%854:\l854:                                              \l  br label %855\l}"];
	Node0x275a170 -> Node0x275a1c0;
	Node0x275a1c0 [shape=record,label="{%855:\l855:                                              \l  %856 = bitcast %struct.move_s* %0 to i8*\l  %857 = bitcast %struct.move_s* %9 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %856, i8* align 4 %857, i64\l... 24, i1 false)\l  br label %858\l}"];
	Node0x275a1c0 -> Node0x275a210;
	Node0x275a210 [shape=record,label="{%858:\l858:                                              \l  ret void\l}"];
}
