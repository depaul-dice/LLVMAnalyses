digraph "CFG for 'run_epd_testsuite' function" {
	label="CFG for 'run_epd_testsuite' function";

	Node0x2622dd0 [shape=record,label="{%0:\l  %1 = alloca %struct._IO_FILE*, align 8\l  %2 = alloca [2000 x i8], align 16\l  %3 = alloca [4096 x i8], align 16\l  %4 = alloca [2000 x i8], align 16\l  %5 = alloca i32, align 4\l  %6 = alloca i32, align 4\l  %7 = alloca %struct.move_s, align 8\l  %8 = alloca i32, align 4\l  %9 = alloca i32, align 4\l  %10 = alloca %struct.move_s, align 4\l  store i32 0, i32* %8, align 4\l  store i32 0, i32* %9, align 4\l  %11 = getelementptr inbounds [25 x i8], [25 x i8]* @.str.3.55, i64 0, i64 0\l  %12 = call i32 (i8*, ...) @printf(i8* %11)\l  %13 = getelementptr inbounds [4096 x i8], [4096 x i8]* %3, i64 0, i64 0\l  %14 = bitcast %struct._IO_FILE.64** @stdin to %struct._IO_FILE**\l  %15 = load %struct._IO_FILE*, %struct._IO_FILE** %14, align 8\l  call fastcc void @rinput(i8* %13, i32 256, %struct._IO_FILE* %15)\l  %16 = getelementptr inbounds [21 x i8], [21 x i8]* @.str.4.56, i64 0, i64 0\l  %17 = call i32 (i8*, ...) @printf(i8* %16)\l  %18 = getelementptr inbounds [2000 x i8], [2000 x i8]* %2, i64 0, i64 0\l  %19 = bitcast %struct._IO_FILE.64** @stdin to %struct._IO_FILE**\l  %20 = load %struct._IO_FILE*, %struct._IO_FILE** %19, align 8\l  call fastcc void @rinput(i8* %18, i32 256, %struct._IO_FILE* %20)\l  %21 = getelementptr inbounds [2000 x i8], [2000 x i8]* %2, i64 0, i64 0\l  %22 = call fastcc i64 @atol(i8* %21) #21\l  %23 = trunc i64 %22 to i32\l  store i32 %23, i32* %6, align 4\l  %24 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.5.57, i64 0, i64 0\l  %25 = call i32 (i8*, ...) @printf(i8* %24)\l  %26 = load i32, i32* %6, align 4\l  %27 = mul nsw i32 %26, 100\l  store i32 %27, i32* %6, align 4\l  %28 = getelementptr inbounds [4096 x i8], [4096 x i8]* %3, i64 0, i64 0\l  %29 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.6, i64 0, i64 0\l  %30 = bitcast %struct._IO_FILE.41* (i8*, i8*)* @fopen to %struct._IO_FILE*\l... (i8*, i8*)*\l  %31 = call %struct._IO_FILE* %30(i8* %28, i8* %29)\l  store %struct._IO_FILE* %31, %struct._IO_FILE** %1, align 8\l  br label %32\l}"];
	Node0x2622dd0 -> Node0x2622e20;
	Node0x2622e20 [shape=record,label="{%32:\l32:                                               \l  %33 = getelementptr inbounds [2000 x i8], [2000 x i8]* %2, i64 0, i64 0\l  %34 = load %struct._IO_FILE*, %struct._IO_FILE** %1, align 8\l  %35 = bitcast i8* (i8*, i32, %struct._IO_FILE.35*)* @fgets to i8* (i8*, i32,\l... %struct._IO_FILE*)*\l  %36 = call i8* %35(i8* %33, i32 2000, %struct._IO_FILE* %34)\l  %37 = icmp ne i8* %36, null\l  br i1 %37, label %38, label %153\l|{<s0>T|<s1>F}}"];
	Node0x2622e20:s0 -> Node0x2622e70;
	Node0x2622e20:s1 -> Node0x2623140;
	Node0x2622e70 [shape=record,label="{%38:\l38:                                               \l  %39 = load i32, i32* %8, align 4\l  %40 = add nsw i32 %39, 1\l  store i32 %40, i32* %8, align 4\l  %41 = getelementptr inbounds [2000 x i8], [2000 x i8]* %2, i64 0, i64 0\l  call fastcc void @setup_epd_line(i8* %41)\l  %42 = load i32, i32* @white_to_move, align 4\l  %43 = icmp ne i32 %42, 0\l  %44 = zext i1 %43 to i64\l  %45 = select i1 %43, i32 0, i32 1\l  store i32 %45, i32* @root_to_move, align 4\l  call fastcc void @clear_tt()\l  call fastcc void @initialize_hash()\l  %46 = bitcast %struct._IO_FILE.64** @stdout to %struct._IO_FILE**\l  %47 = load %struct._IO_FILE*, %struct._IO_FILE** %46, align 8\l  call fastcc void @display_board(%struct._IO_FILE* %47, i32 1)\l  store i1 false, i1* @forcedwin, align 1\l  %48 = call fastcc i32 @interrupt()\l  %49 = icmp ne i32 %48, 0\l  br i1 %49, label %50, label %54\l|{<s0>T|<s1>F}}"];
	Node0x2622e70:s0 -> Node0x2622ec0;
	Node0x2622e70:s1 -> Node0x2622f10;
	Node0x2622ec0 [shape=record,label="{%50:\l50:                                               \l  %51 = getelementptr inbounds [2000 x i8], [2000 x i8]* %4, i64 0, i64 0\l  %52 = bitcast %struct._IO_FILE.64** @stdin to %struct._IO_FILE**\l  %53 = load %struct._IO_FILE*, %struct._IO_FILE** %52, align 8\l  call fastcc void @rinput(i8* %51, i32 256, %struct._IO_FILE* %53)\l  br label %54\l}"];
	Node0x2622ec0 -> Node0x2622f10;
	Node0x2622f10 [shape=record,label="{%54:\l54:                                               \l  %55 = load i32, i32* %6, align 4\l  store i32 %55, i32* @fixed_time, align 4\l  call fastcc void @think(%struct.move_s* sret %10)\l  %56 = bitcast %struct.move_s* %7 to i8*\l  %57 = bitcast %struct.move_s* %10 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %56, i8* align 4 %57, i64\l... 24, i1 false)\l  %58 = load i32, i32* @nodes, align 4\l  %59 = load i32, i32* @qnodes, align 4\l  %60 = sitofp i32 %59 to float\l  %61 = load i32, i32* @nodes, align 4\l  %62 = sitofp i32 %61 to float\l  %63 = fdiv float %60, %62\l  %64 = fpext float %63 to double\l  %65 = fmul double %64, 1.000000e+02\l  %66 = fptrunc double %65 to float\l  %67 = fpext float %66 to double\l  %68 = getelementptr inbounds [29 x i8], [29 x i8]* @.str.7.58, i64 0, i64 0\l  %69 = call i32 (i8*, ...) @printf(i8* %68, i32 %58, double %67)\l  %70 = load i32, i32* @ECacheProbes, align 4\l  %71 = load i32, i32* @ECacheHits, align 4\l  %72 = load i32, i32* @ECacheHits, align 4\l  %73 = uitofp i32 %72 to float\l  %74 = load i32, i32* @ECacheProbes, align 4\l  %75 = uitofp i32 %74 to float\l  %76 = fadd float %75, 1.000000e+00\l  %77 = fdiv float %73, %76\l  %78 = fmul float %77, 1.000000e+02\l  %79 = fpext float %78 to double\l  %80 = getelementptr inbounds [54 x i8], [54 x i8]* @.str.8, i64 0, i64 0\l  %81 = call i32 (i8*, ...) @printf(i8* %80, i32 %70, i32 %71, double %79)\l  %82 = load i32, i32* @TTStores, align 4\l  %83 = load i32, i32* @TTProbes, align 4\l  %84 = load i32, i32* @TTHits, align 4\l  %85 = load i32, i32* @TTHits, align 4\l  %86 = uitofp i32 %85 to float\l  %87 = load i32, i32* @TTProbes, align 4\l  %88 = uitofp i32 %87 to float\l  %89 = fadd float %88, 1.000000e+00\l  %90 = fdiv float %86, %89\l  %91 = fmul float %90, 1.000000e+02\l  %92 = fpext float %91 to double\l  %93 = getelementptr inbounds [60 x i8], [60 x i8]* @.str.9, i64 0, i64 0\l  %94 = call i32 (i8*, ...) @printf(i8* %93, i32 %82, i32 %83, i32 %84, double\l... %92)\l  %95 = load i32, i32* @NTries, align 4\l  %96 = load i32, i32* @NCuts, align 4\l  %97 = load i32, i32* @NCuts, align 4\l  %98 = uitofp i32 %97 to float\l  %99 = fmul float %98, 1.000000e+02\l  %100 = load i32, i32* @NTries, align 4\l  %101 = uitofp i32 %100 to float\l  %102 = fadd float %101, 1.000000e+00\l  %103 = fdiv float %99, %102\l  %104 = fpext float %103 to double\l  %105 = load i32, i32* @TExt, align 4\l  %106 = getelementptr inbounds [51 x i8], [51 x i8]* @.str.10, i64 0, i64 0\l  %107 = call i32 (i8*, ...) @printf(i8* %106, i32 %95, i32 %96, double %104,\l... i32 %105)\l  %108 = load i32, i32* @ext_check, align 4\l  %109 = load i32, i32* @razor_drop, align 4\l  %110 = load i32, i32* @razor_material, align 4\l  %111 = getelementptr inbounds [61 x i8], [61 x i8]* @.str.11, i64 0, i64 0\l  %112 = call i32 (i8*, ...) @printf(i8* %111, i32 %108, i32 %109, i32 %110)\l  %113 = load i32, i32* @FHF, align 4\l  %114 = uitofp i32 %113 to float\l  %115 = fmul float %114, 1.000000e+02\l  %116 = load i32, i32* @FH, align 4\l  %117 = uitofp i32 %116 to float\l  %118 = fdiv float %115, %117\l  %119 = fadd float %118, 1.000000e+00\l  %120 = fpext float %119 to double\l  %121 = getelementptr inbounds [22 x i8], [22 x i8]* @.str.12, i64 0, i64 0\l  %122 = call i32 (i8*, ...) @printf(i8* %121, double %120)\l  %123 = load i32, i32* @Material, align 4\l  %124 = call fastcc i32 @eval(i32 -1000000, i32 1000000)\l  %125 = load i32, i32* @maxposdiff, align 4\l  %126 = getelementptr inbounds [47 x i8], [47 x i8]* @.str.13.59, i64 0, i64 0\l  %127 = call i32 (i8*, ...) @printf(i8* %126, i32 %123, i32 %124, i32 %125)\l  %128 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.5.57, i64 0, i64 0\l  %129 = call i32 (i8*, ...) @printf(i8* %128)\l  %.b = load i1, i1* @forcedwin, align 1\l  %130 = zext i1 %.b to i32\l  %131 = icmp ne i32 %130, 0\l  br i1 %131, label %145, label %132\l|{<s0>T|<s1>F}}"];
	Node0x2622f10:s0 -> Node0x26230a0;
	Node0x2622f10:s1 -> Node0x2622f60;
	Node0x2622f60 [shape=record,label="{%132:\l132:                                              \l  %133 = getelementptr inbounds [2000 x i8], [2000 x i8]* %2, i64 0, i64 0\l  %134 = call fastcc i32 @check_solution(i8* %133, %struct.move_s*\l... byval(%struct.move_s) align 8 %7)\l  %135 = icmp ne i32 %134, 0\l  br i1 %135, label %136, label %141\l|{<s0>T|<s1>F}}"];
	Node0x2622f60:s0 -> Node0x2622fb0;
	Node0x2622f60:s1 -> Node0x2623000;
	Node0x2622fb0 [shape=record,label="{%136:\l136:                                              \l  %137 = load i32, i32* %9, align 4\l  %138 = add nsw i32 %137, 1\l  store i32 %138, i32* %9, align 4\l  %139 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.14, i64 0, i64 0\l  %140 = call i32 (i8*, ...) @printf(i8* %139)\l  br label %144\l}"];
	Node0x2622fb0 -> Node0x2623050;
	Node0x2623000 [shape=record,label="{%141:\l141:                                              \l  %142 = getelementptr inbounds [21 x i8], [21 x i8]* @.str.15, i64 0, i64 0\l  %143 = call i32 (i8*, ...) @printf(i8* %142)\l  br label %144\l}"];
	Node0x2623000 -> Node0x2623050;
	Node0x2623050 [shape=record,label="{%144:\l144:                                              \l  br label %148\l}"];
	Node0x2623050 -> Node0x26230f0;
	Node0x26230a0 [shape=record,label="{%145:\l145:                                              \l  %146 = load i32, i32* %9, align 4\l  %147 = add nsw i32 %146, 1\l  store i32 %147, i32* %9, align 4\l  br label %148\l}"];
	Node0x26230a0 -> Node0x26230f0;
	Node0x26230f0 [shape=record,label="{%148:\l148:                                              \l  %149 = load i32, i32* %9, align 4\l  %150 = load i32, i32* %8, align 4\l  %151 = getelementptr inbounds [15 x i8], [15 x i8]* @.str.16, i64 0, i64 0\l  %152 = call i32 (i8*, ...) @printf(i8* %151, i32 %149, i32 %150)\l  br label %32\l}"];
	Node0x26230f0 -> Node0x2622e20;
	Node0x2623140 [shape=record,label="{%153:\l153:                                              \l  %154 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.5.57, i64 0, i64 0\l  %155 = call i32 (i8*, ...) @printf(i8* %154)\l  ret void\l}"];
}
