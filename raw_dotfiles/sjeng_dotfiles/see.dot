digraph "CFG for 'see' function" {
	label="CFG for 'see' function";

	Node0x2589e90 [shape=record,label="{%3:\l  %4 = alloca i32, align 4\l  %5 = alloca i32, align 4\l  %6 = alloca i32, align 4\l  %7 = alloca i32, align 4\l  %8 = alloca i32, align 4\l  %9 = alloca [2 x i32], align 4\l  %10 = alloca i32, align 4\l  %11 = alloca i32, align 4\l  %12 = alloca i32, align 4\l  %13 = alloca i32, align 4\l  store i32 %0, i32* %5, align 4\l  store i32 %1, i32* %6, align 4\l  store i32 %2, i32* %7, align 4\l  %14 = getelementptr inbounds [2 x i32], [2 x i32]* @see_num_attackers, i64\l... 0, i64 0\l  store i32 0, i32* %14, align 4\l  %15 = getelementptr inbounds [2 x i32], [2 x i32]* @see_num_attackers, i64\l... 0, i64 1\l  store i32 0, i32* %15, align 4\l  %16 = load i32, i32* %7, align 4\l  %17 = sext i32 %16 to i64\l  %18 = getelementptr inbounds [144 x i32], [144 x i32]* @board, i64 0, i64 %17\l  %19 = load i32, i32* %18, align 4\l  store i32 %19, i32* %11, align 4\l  %20 = load i32, i32* %7, align 4\l  %21 = sext i32 %20 to i64\l  %22 = getelementptr inbounds [144 x i32], [144 x i32]* @board, i64 0, i64 %21\l  store i32 13, i32* %22, align 4\l  %23 = load i32, i32* %5, align 4\l  %24 = sext i32 %23 to i64\l  %25 = getelementptr inbounds [2 x i32], [2 x i32]* @see_num_attackers, i64\l... 0, i64 %24\l  %26 = load i32, i32* %25, align 4\l  %27 = add nsw i32 %26, 1\l  store i32 %27, i32* %25, align 4\l  %28 = load i32, i32* %11, align 4\l  %29 = load i32, i32* %5, align 4\l  %30 = sext i32 %29 to i64\l  %31 = getelementptr inbounds [2 x [16 x %struct.see_data]], [2 x [16 x\l... %struct.see_data]]* @see_attackers, i64 0, i64 %30\l  %32 = getelementptr inbounds [16 x %struct.see_data], [16 x\l... %struct.see_data]* %31, i64 0, i64 0\l  %33 = getelementptr inbounds %struct.see_data, %struct.see_data* %32, i32 0,\l... i32 0\l  store i32 %28, i32* %33, align 16\l  %34 = load i32, i32* %7, align 4\l  %35 = load i32, i32* %5, align 4\l  %36 = sext i32 %35 to i64\l  %37 = getelementptr inbounds [2 x [16 x %struct.see_data]], [2 x [16 x\l... %struct.see_data]]* @see_attackers, i64 0, i64 %36\l  %38 = getelementptr inbounds [16 x %struct.see_data], [16 x\l... %struct.see_data]* %37, i64 0, i64 0\l  %39 = getelementptr inbounds %struct.see_data, %struct.see_data* %38, i32 0,\l... i32 1\l  store i32 %34, i32* %39, align 4\l  %40 = load i32, i32* %6, align 4\l  call fastcc void @setup_attackers(i32 %40)\l  %41 = load i32, i32* %6, align 4\l  %42 = sext i32 %41 to i64\l  %43 = getelementptr inbounds [144 x i32], [144 x i32]* @board, i64 0, i64 %42\l  %44 = load i32, i32* %43, align 4\l  %45 = sext i32 %44 to i64\l  %46 = getelementptr inbounds [14 x i32], [14 x i32]* @material, i64 0, i64\l... %45\l  %47 = load i32, i32* %46, align 4\l  %48 = call fastcc i32 @abs(i32 %47) #21\l  store i32 %48, i32* %10, align 4\l  %49 = load i32, i32* %5, align 4\l  %50 = icmp ne i32 %49, 0\l  %51 = xor i1 %50, true\l  %52 = zext i1 %51 to i32\l  %53 = sext i32 %52 to i64\l  %54 = getelementptr inbounds [2 x i32], [2 x i32]* @see_num_attackers, i64\l... 0, i64 %53\l  %55 = load i32, i32* %54, align 4\l  %56 = icmp ne i32 %55, 0\l  br i1 %56, label %63, label %57\l|{<s0>T|<s1>F}}"];
	Node0x2589e90:s0 -> Node0x2589f30;
	Node0x2589e90:s1 -> Node0x2589ee0;
	Node0x2589ee0 [shape=record,label="{%57:\l57:                                               \l  %58 = load i32, i32* %11, align 4\l  %59 = load i32, i32* %7, align 4\l  %60 = sext i32 %59 to i64\l  %61 = getelementptr inbounds [144 x i32], [144 x i32]* @board, i64 0, i64 %60\l  store i32 %58, i32* %61, align 4\l  %62 = load i32, i32* %10, align 4\l  store i32 %62, i32* %4, align 4\l  br label %226\l}"];
	Node0x2589ee0 -> Node0x258a5c0;
	Node0x2589f30 [shape=record,label="{%63:\l63:                                               \l  %64 = load i32, i32* %10, align 4\l  store i32 %64, i32* %13, align 4\l  store i32 -1000000, i32* %12, align 4\l  br label %65\l}"];
	Node0x2589f30 -> Node0x2589f80;
	Node0x2589f80 [shape=record,label="{%65:\l65:                                               \l  %66 = load i32, i32* %5, align 4\l  %67 = sext i32 %66 to i64\l  %68 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 %67\l  store i32 1, i32* %68, align 4\l  %69 = load i32, i32* %5, align 4\l  %70 = icmp ne i32 %69, 0\l  %71 = xor i1 %70, true\l  %72 = zext i1 %71 to i32\l  %73 = sext i32 %72 to i64\l  %74 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 %73\l  store i32 0, i32* %74, align 4\l  %75 = load i32, i32* %5, align 4\l  %76 = icmp ne i32 %75, 0\l  %77 = xor i1 %76, true\l  %78 = zext i1 %77 to i32\l  store i32 %78, i32* %8, align 4\l  br label %79\l}"];
	Node0x2589f80 -> Node0x2589fd0;
	Node0x2589fd0 [shape=record,label="{%79:\l79:                                               \l  %80 = load i32, i32* %8, align 4\l  %81 = sext i32 %80 to i64\l  %82 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 %81\l  %83 = load i32, i32* %82, align 4\l  %84 = load i32, i32* %8, align 4\l  %85 = sext i32 %84 to i64\l  %86 = getelementptr inbounds [2 x i32], [2 x i32]* @see_num_attackers, i64\l... 0, i64 %85\l  %87 = load i32, i32* %86, align 4\l  %88 = icmp slt i32 %83, %87\l  br i1 %88, label %89, label %212\l|{<s0>T|<s1>F}}"];
	Node0x2589fd0:s0 -> Node0x258a020;
	Node0x2589fd0:s1 -> Node0x258a480;
	Node0x258a020 [shape=record,label="{%89:\l89:                                               \l  %90 = load i32, i32* %8, align 4\l  %91 = load i32, i32* %8, align 4\l  %92 = sext i32 %91 to i64\l  %93 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 %92\l  %94 = load i32, i32* %93, align 4\l  call fastcc void @findlowest(i32 %90, i32 %94)\l  %95 = load i32, i32* %8, align 4\l  %96 = load i32, i32* %5, align 4\l  %97 = icmp eq i32 %95, %96\l  br i1 %97, label %98, label %151\l|{<s0>T|<s1>F}}"];
	Node0x258a020:s0 -> Node0x258a070;
	Node0x258a020:s1 -> Node0x258a250;
	Node0x258a070 [shape=record,label="{%98:\l98:                                               \l  %99 = load i32, i32* %8, align 4\l  %100 = icmp ne i32 %99, 0\l  %101 = xor i1 %100, true\l  %102 = zext i1 %101 to i32\l  %103 = sext i32 %102 to i64\l  %104 = getelementptr inbounds [2 x [16 x %struct.see_data]], [2 x [16 x\l... %struct.see_data]]* @see_attackers, i64 0, i64 %103\l  %105 = load i32, i32* %8, align 4\l  %106 = icmp ne i32 %105, 0\l  %107 = xor i1 %106, true\l  %108 = zext i1 %107 to i32\l  %109 = sext i32 %108 to i64\l  %110 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 %109\l  %111 = load i32, i32* %110, align 4\l  %112 = sub nsw i32 %111, 1\l  %113 = sext i32 %112 to i64\l  %114 = getelementptr inbounds [16 x %struct.see_data], [16 x\l... %struct.see_data]* %104, i64 0, i64 %113\l  %115 = getelementptr inbounds %struct.see_data, %struct.see_data* %114, i32\l... 0, i32 0\l  %116 = load i32, i32* %115, align 8\l  %117 = sext i32 %116 to i64\l  %118 = getelementptr inbounds [14 x i32], [14 x i32]* @material, i64 0, i64\l... %117\l  %119 = load i32, i32* %118, align 4\l  %120 = call fastcc i32 @abs(i32 %119) #21\l  %121 = load i32, i32* %10, align 4\l  %122 = add nsw i32 %121, %120\l  store i32 %122, i32* %10, align 4\l  %123 = load i32, i32* %8, align 4\l  %124 = icmp ne i32 %123, 0\l  %125 = xor i1 %124, true\l  %126 = zext i1 %125 to i32\l  %127 = sext i32 %126 to i64\l  %128 = getelementptr inbounds [2 x i32], [2 x i32]* @see_num_attackers, i64\l... 0, i64 %127\l  %129 = load i32, i32* %128, align 4\l  %130 = load i32, i32* %8, align 4\l  %131 = icmp ne i32 %130, 0\l  %132 = xor i1 %131, true\l  %133 = zext i1 %132 to i32\l  %134 = sext i32 %133 to i64\l  %135 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 %134\l  %136 = load i32, i32* %135, align 4\l  %137 = icmp sle i32 %129, %136\l  br i1 %137, label %138, label %144\l|{<s0>T|<s1>F}}"];
	Node0x258a070:s0 -> Node0x258a0c0;
	Node0x258a070:s1 -> Node0x258a160;
	Node0x258a0c0 [shape=record,label="{%138:\l138:                                              \l  %139 = load i32, i32* %10, align 4\l  %140 = load i32, i32* %12, align 4\l  %141 = icmp sgt i32 %139, %140\l  br i1 %141, label %142, label %144\l|{<s0>T|<s1>F}}"];
	Node0x258a0c0:s0 -> Node0x258a110;
	Node0x258a0c0:s1 -> Node0x258a160;
	Node0x258a110 [shape=record,label="{%142:\l142:                                              \l  %143 = load i32, i32* %10, align 4\l  store i32 %143, i32* %12, align 4\l  br label %144\l}"];
	Node0x258a110 -> Node0x258a160;
	Node0x258a160 [shape=record,label="{%144:\l144:                                              \l  %145 = load i32, i32* %10, align 4\l  %146 = load i32, i32* %13, align 4\l  %147 = icmp slt i32 %145, %146\l  br i1 %147, label %148, label %150\l|{<s0>T|<s1>F}}"];
	Node0x258a160:s0 -> Node0x258a1b0;
	Node0x258a160:s1 -> Node0x258a200;
	Node0x258a1b0 [shape=record,label="{%148:\l148:                                              \l  %149 = load i32, i32* %10, align 4\l  store i32 %149, i32* %13, align 4\l  br label %150\l}"];
	Node0x258a1b0 -> Node0x258a200;
	Node0x258a200 [shape=record,label="{%150:\l150:                                              \l  br label %204\l}"];
	Node0x258a200 -> Node0x258a430;
	Node0x258a250 [shape=record,label="{%151:\l151:                                              \l  %152 = load i32, i32* %8, align 4\l  %153 = icmp ne i32 %152, 0\l  %154 = xor i1 %153, true\l  %155 = zext i1 %154 to i32\l  %156 = sext i32 %155 to i64\l  %157 = getelementptr inbounds [2 x [16 x %struct.see_data]], [2 x [16 x\l... %struct.see_data]]* @see_attackers, i64 0, i64 %156\l  %158 = load i32, i32* %8, align 4\l  %159 = icmp ne i32 %158, 0\l  %160 = xor i1 %159, true\l  %161 = zext i1 %160 to i32\l  %162 = sext i32 %161 to i64\l  %163 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 %162\l  %164 = load i32, i32* %163, align 4\l  %165 = sub nsw i32 %164, 1\l  %166 = sext i32 %165 to i64\l  %167 = getelementptr inbounds [16 x %struct.see_data], [16 x\l... %struct.see_data]* %157, i64 0, i64 %166\l  %168 = getelementptr inbounds %struct.see_data, %struct.see_data* %167, i32\l... 0, i32 0\l  %169 = load i32, i32* %168, align 8\l  %170 = sext i32 %169 to i64\l  %171 = getelementptr inbounds [14 x i32], [14 x i32]* @material, i64 0, i64\l... %170\l  %172 = load i32, i32* %171, align 4\l  %173 = call fastcc i32 @abs(i32 %172) #21\l  %174 = load i32, i32* %10, align 4\l  %175 = sub nsw i32 %174, %173\l  store i32 %175, i32* %10, align 4\l  %176 = load i32, i32* %10, align 4\l  %177 = load i32, i32* %12, align 4\l  %178 = icmp sgt i32 %176, %177\l  br i1 %178, label %179, label %181\l|{<s0>T|<s1>F}}"];
	Node0x258a250:s0 -> Node0x258a2a0;
	Node0x258a250:s1 -> Node0x258a2f0;
	Node0x258a2a0 [shape=record,label="{%179:\l179:                                              \l  %180 = load i32, i32* %10, align 4\l  store i32 %180, i32* %12, align 4\l  br label %181\l}"];
	Node0x258a2a0 -> Node0x258a2f0;
	Node0x258a2f0 [shape=record,label="{%181:\l181:                                              \l  %182 = load i32, i32* %8, align 4\l  %183 = icmp ne i32 %182, 0\l  %184 = xor i1 %183, true\l  %185 = zext i1 %184 to i32\l  %186 = sext i32 %185 to i64\l  %187 = getelementptr inbounds [2 x i32], [2 x i32]* @see_num_attackers, i64\l... 0, i64 %186\l  %188 = load i32, i32* %187, align 4\l  %189 = load i32, i32* %8, align 4\l  %190 = icmp ne i32 %189, 0\l  %191 = xor i1 %190, true\l  %192 = zext i1 %191 to i32\l  %193 = sext i32 %192 to i64\l  %194 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 %193\l  %195 = load i32, i32* %194, align 4\l  %196 = icmp sle i32 %188, %195\l  br i1 %196, label %197, label %203\l|{<s0>T|<s1>F}}"];
	Node0x258a2f0:s0 -> Node0x258a340;
	Node0x258a2f0:s1 -> Node0x258a3e0;
	Node0x258a340 [shape=record,label="{%197:\l197:                                              \l  %198 = load i32, i32* %10, align 4\l  %199 = load i32, i32* %13, align 4\l  %200 = icmp slt i32 %198, %199\l  br i1 %200, label %201, label %203\l|{<s0>T|<s1>F}}"];
	Node0x258a340:s0 -> Node0x258a390;
	Node0x258a340:s1 -> Node0x258a3e0;
	Node0x258a390 [shape=record,label="{%201:\l201:                                              \l  %202 = load i32, i32* %10, align 4\l  store i32 %202, i32* %13, align 4\l  br label %203\l}"];
	Node0x258a390 -> Node0x258a3e0;
	Node0x258a3e0 [shape=record,label="{%203:\l203:                                              \l  br label %204\l}"];
	Node0x258a3e0 -> Node0x258a430;
	Node0x258a430 [shape=record,label="{%204:\l204:                                              \l  %205 = load i32, i32* %8, align 4\l  %206 = sext i32 %205 to i64\l  %207 = getelementptr inbounds [2 x i32], [2 x i32]* %9, i64 0, i64 %206\l  %208 = load i32, i32* %207, align 4\l  %209 = add nsw i32 %208, 1\l  store i32 %209, i32* %207, align 4\l  %210 = load i32, i32* %8, align 4\l  %211 = xor i32 %210, 1\l  store i32 %211, i32* %8, align 4\l  br label %79\l}"];
	Node0x258a430 -> Node0x2589fd0;
	Node0x258a480 [shape=record,label="{%212:\l212:                                              \l  %213 = load i32, i32* %11, align 4\l  %214 = load i32, i32* %7, align 4\l  %215 = sext i32 %214 to i64\l  %216 = getelementptr inbounds [144 x i32], [144 x i32]* @board, i64 0, i64\l... %215\l  store i32 %213, i32* %216, align 4\l  %217 = load i32, i32* %12, align 4\l  %218 = load i32, i32* %13, align 4\l  %219 = icmp sgt i32 %217, %218\l  br i1 %219, label %220, label %222\l|{<s0>T|<s1>F}}"];
	Node0x258a480:s0 -> Node0x258a4d0;
	Node0x258a480:s1 -> Node0x258a520;
	Node0x258a4d0 [shape=record,label="{%220:\l220:                                              \l  %221 = load i32, i32* %13, align 4\l  br label %224\l}"];
	Node0x258a4d0 -> Node0x258a570;
	Node0x258a520 [shape=record,label="{%222:\l222:                                              \l  %223 = load i32, i32* %12, align 4\l  br label %224\l}"];
	Node0x258a520 -> Node0x258a570;
	Node0x258a570 [shape=record,label="{%224:\l224:                                              \l  %225 = phi i32 [ %221, %220 ], [ %223, %222 ]\l  store i32 %225, i32* %4, align 4\l  br label %226\l}"];
	Node0x258a570 -> Node0x258a5c0;
	Node0x258a5c0 [shape=record,label="{%226:\l226:                                              \l  %227 = load i32, i32* %4, align 4\l  ret i32 %227\l}"];
}
