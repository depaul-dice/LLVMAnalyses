digraph "CFG for 'Rook' function" {
	label="CFG for 'Rook' function";

	Node0x25bb9f0 [shape=record,label="{%2:\l  %3 = alloca i32, align 4\l  %4 = alloca i32, align 4\l  %5 = alloca i32, align 4\l  %6 = alloca i32, align 4\l  %7 = alloca i32, align 4\l  store i32 %0, i32* %3, align 4\l  store i32 %1, i32* %4, align 4\l  store i32 0, i32* %5, align 4\l  %8 = load i32, i32* %4, align 4\l  %9 = xor i32 %8, 1\l  store i32 %9, i32* %7, align 4\l  %10 = load i32, i32* %5, align 4\l  %11 = add nsw i32 %10, 500\l  store i32 %11, i32* %5, align 4\l  %12 = load i32, i32* %3, align 4\l  %13 = sext i32 %12 to i64\l  %14 = getelementptr inbounds [144 x [144 x i32]], [144 x [144 x i32]]*\l... @rookdistance, i64 0, i64 %13\l  %15 = load i32, i32* %7, align 4\l  %16 = sext i32 %15 to i64\l  %17 = getelementptr inbounds [2 x i32], [2 x i32]* @king_locs, i64 0, i64 %16\l  %18 = load i32, i32* %17, align 4\l  %19 = sext i32 %18 to i64\l  %20 = getelementptr inbounds [144 x i32], [144 x i32]* %14, i64 0, i64 %19\l  %21 = load i32, i32* %20, align 4\l  %22 = sext i32 %21 to i64\l  %23 = bitcast \<\{ i32, i32, i32, i32, i32, i32, [10 x i32] \}\>* @std_r_tropism\l... to [16 x i32]*\l  %24 = getelementptr inbounds [16 x i32], [16 x i32]* %23, i64 0, i64 %22\l  %25 = load i32, i32* %24, align 4\l  %26 = load i32, i32* %5, align 4\l  %27 = add nsw i32 %26, %25\l  store i32 %27, i32* %5, align 4\l  %28 = load i32, i32* %3, align 4\l  %29 = call fastcc i32 @rook_mobility(i32 %28)\l  %30 = shl i32 %29, 1\l  store i32 %30, i32* %6, align 4\l  %31 = load i32, i32* %6, align 4\l  %32 = icmp sle i32 %31, 2\l  br i1 %32, label %33, label %36\l|{<s0>T|<s1>F}}"];
	Node0x25bb9f0:s0 -> Node0x25bf400;
	Node0x25bb9f0:s1 -> Node0x25c0830;
	Node0x25bf400 [shape=record,label="{%33:\l33:                                               \l  %34 = load i32, i32* %6, align 4\l  %35 = sub nsw i32 %34, 5\l  store i32 %35, i32* %6, align 4\l  br label %36\l}"];
	Node0x25bf400 -> Node0x25c0830;
	Node0x25c0830 [shape=record,label="{%36:\l36:                                               \l  %37 = load i32, i32* %6, align 4\l  %38 = load i32, i32* %5, align 4\l  %39 = add nsw i32 %38, %37\l  store i32 %39, i32* %5, align 4\l  %40 = load i32, i32* %3, align 4\l  %41 = sub nsw i32 %40, 1\l  %42 = sext i32 %41 to i64\l  %43 = getelementptr inbounds [144 x i32], [144 x i32]* @board, i64 0, i64 %42\l  %44 = load i32, i32* %43, align 4\l  %45 = icmp ne i32 %44, 13\l  br i1 %45, label %46, label %56\l|{<s0>T|<s1>F}}"];
	Node0x25c0830:s0 -> Node0x25c0880;
	Node0x25c0830:s1 -> Node0x25c0920;
	Node0x25c0880 [shape=record,label="{%46:\l46:                                               \l  %47 = load i32, i32* %3, align 4\l  %48 = add nsw i32 %47, 1\l  %49 = sext i32 %48 to i64\l  %50 = getelementptr inbounds [144 x i32], [144 x i32]* @board, i64 0, i64 %49\l  %51 = load i32, i32* %50, align 4\l  %52 = icmp ne i32 %51, 13\l  br i1 %52, label %53, label %56\l|{<s0>T|<s1>F}}"];
	Node0x25c0880:s0 -> Node0x25c08d0;
	Node0x25c0880:s1 -> Node0x25c0920;
	Node0x25c08d0 [shape=record,label="{%53:\l53:                                               \l  %54 = load i32, i32* %5, align 4\l  %55 = sub nsw i32 %54, 5\l  store i32 %55, i32* %5, align 4\l  br label %56\l}"];
	Node0x25c08d0 -> Node0x25c0920;
	Node0x25c0920 [shape=record,label="{%56:\l56:                                               \l  %57 = load i32, i32* @wmat, align 4\l  %58 = icmp ne i32 %57, 1300\l  br i1 %58, label %62, label %59\l|{<s0>T|<s1>F}}"];
	Node0x25c0920:s0 -> Node0x25c09c0;
	Node0x25c0920:s1 -> Node0x25c0970;
	Node0x25c0970 [shape=record,label="{%59:\l59:                                               \l  %60 = load i32, i32* @bmat, align 4\l  %61 = icmp ne i32 %60, 1300\l  br i1 %61, label %62, label %112\l|{<s0>T|<s1>F}}"];
	Node0x25c0970:s0 -> Node0x25c09c0;
	Node0x25c0970:s1 -> Node0x25c0c40;
	Node0x25c09c0 [shape=record,label="{%62:\l62:                                               \l  %63 = load i32, i32* %3, align 4\l  %64 = load i32, i32* %4, align 4\l  %65 = sext i32 %64 to i64\l  %66 = getelementptr inbounds [2 x i32], [2 x i32]* @Rook.square_d1, i64 0,\l... i64 %65\l  %67 = load i32, i32* %66, align 4\l  %68 = icmp eq i32 %63, %67\l  br i1 %68, label %69, label %100\l|{<s0>T|<s1>F}}"];
	Node0x25c09c0:s0 -> Node0x25c0a10;
	Node0x25c09c0:s1 -> Node0x25c0b50;
	Node0x25c0a10 [shape=record,label="{%69:\l69:                                               \l  %70 = load i32, i32* %5, align 4\l  %71 = add nsw i32 %70, 10\l  store i32 %71, i32* %5, align 4\l  %72 = load i32, i32* %4, align 4\l  %73 = sext i32 %72 to i64\l  %74 = getelementptr inbounds [2 x i32], [2 x i32]* @Rook.square_d1, i64 0,\l... i64 %73\l  %75 = load i32, i32* %74, align 4\l  %76 = add nsw i32 %75, 1\l  %77 = sext i32 %76 to i64\l  %78 = getelementptr inbounds [144 x i32], [144 x i32]* @board, i64 0, i64 %77\l  %79 = load i32, i32* %78, align 4\l  %80 = add nsw i32 %79, 1\l  %81 = ashr i32 %80, 1\l  %82 = icmp eq i32 %81, 4\l  br i1 %82, label %83, label %99\l|{<s0>T|<s1>F}}"];
	Node0x25c0a10:s0 -> Node0x25c0a60;
	Node0x25c0a10:s1 -> Node0x25c0b00;
	Node0x25c0a60 [shape=record,label="{%83:\l83:                                               \l  %84 = load i32, i32* %4, align 4\l  %85 = sext i32 %84 to i64\l  %86 = getelementptr inbounds [2 x i32], [2 x i32]* @Rook.square_d1, i64 0,\l... i64 %85\l  %87 = load i32, i32* %86, align 4\l  %88 = add nsw i32 %87, 1\l  %89 = sext i32 %88 to i64\l  %90 = getelementptr inbounds [144 x i32], [144 x i32]* @board, i64 0, i64 %89\l  %91 = load i32, i32* %90, align 4\l  %92 = add nsw i32 %91, 1\l  %93 = and i32 %92, 1\l  %94 = load i32, i32* %4, align 4\l  %95 = icmp eq i32 %93, %94\l  br i1 %95, label %96, label %99\l|{<s0>T|<s1>F}}"];
	Node0x25c0a60:s0 -> Node0x25c0ab0;
	Node0x25c0a60:s1 -> Node0x25c0b00;
	Node0x25c0ab0 [shape=record,label="{%96:\l96:                                               \l  %97 = load i32, i32* %5, align 4\l  %98 = add nsw i32 %97, 5\l  store i32 %98, i32* %5, align 4\l  br label %99\l}"];
	Node0x25c0ab0 -> Node0x25c0b00;
	Node0x25c0b00 [shape=record,label="{%99:\l99:                                               \l  br label %100\l}"];
	Node0x25c0b00 -> Node0x25c0b50;
	Node0x25c0b50 [shape=record,label="{%100:\l100:                                              \l  %101 = load i32, i32* %3, align 4\l  %102 = load i32, i32* %4, align 4\l  %103 = sext i32 %102 to i64\l  %104 = getelementptr inbounds [2 x i32], [2 x i32]* @Rook.square_d1, i64 0,\l... i64 %103\l  %105 = load i32, i32* %104, align 4\l  %106 = add nsw i32 %105, 1\l  %107 = icmp eq i32 %101, %106\l  br i1 %107, label %108, label %111\l|{<s0>T|<s1>F}}"];
	Node0x25c0b50:s0 -> Node0x25c0ba0;
	Node0x25c0b50:s1 -> Node0x25c0bf0;
	Node0x25c0ba0 [shape=record,label="{%108:\l108:                                              \l  %109 = load i32, i32* %5, align 4\l  %110 = add nsw i32 %109, 10\l  store i32 %110, i32* %5, align 4\l  br label %111\l}"];
	Node0x25c0ba0 -> Node0x25c0bf0;
	Node0x25c0bf0 [shape=record,label="{%111:\l111:                                              \l  br label %112\l}"];
	Node0x25c0bf0 -> Node0x25c0c40;
	Node0x25c0c40 [shape=record,label="{%112:\l112:                                              \l  %113 = load i32, i32* %4, align 4\l  %114 = icmp eq i32 %113, 1\l  br i1 %114, label %115, label %118\l|{<s0>T|<s1>F}}"];
	Node0x25c0c40:s0 -> Node0x25c0c90;
	Node0x25c0c40:s1 -> Node0x25c0ce0;
	Node0x25c0c90 [shape=record,label="{%115:\l115:                                              \l  %116 = load i32, i32* %5, align 4\l  %117 = sub nsw i32 0, %116\l  store i32 %117, i32* %5, align 4\l  br label %118\l}"];
	Node0x25c0c90 -> Node0x25c0ce0;
	Node0x25c0ce0 [shape=record,label="{%118:\l118:                                              \l  %119 = load i32, i32* %5, align 4\l  ret i32 %119\l}"];
}
