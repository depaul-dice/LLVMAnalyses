digraph "CFG for 'CheckBadFlow' function" {
	label="CFG for 'CheckBadFlow' function";

	Node0x26308a0 [shape=record,label="{%1:\l  %2 = alloca i32, align 4\l  %3 = alloca [512 x %struct.move_s], align 16\l  %4 = alloca [512 x %struct.move_s], align 16\l  %5 = alloca i32, align 4\l  %6 = alloca i32, align 4\l  %7 = alloca i32, align 4\l  %8 = alloca i32, align 4\l  %9 = alloca i32, align 4\l  %10 = alloca i32, align 4\l  %11 = alloca i32, align 4\l  %12 = alloca i32, align 4\l  %13 = alloca i32, align 4\l  %14 = alloca i32, align 4\l  %15 = alloca i32, align 4\l  %16 = alloca i32, align 4\l  %17 = alloca i32, align 4\l  %18 = alloca i32, align 4\l  %19 = alloca i32, align 4\l  %20 = alloca i32, align 4\l  %21 = alloca i32, align 4\l  store i32 %0, i32* %2, align 4\l  store i32 0, i32* %11, align 4\l  store i32 0, i32* %12, align 4\l  store i32 0, i32* %13, align 4\l  store i32 0, i32* %14, align 4\l  store i32 0, i32* %15, align 4\l  store i32 0, i32* %16, align 4\l  store i32 0, i32* %17, align 4\l  store i32 0, i32* %18, align 4\l  store i32 0, i32* %19, align 4\l  store i32 0, i32* %20, align 4\l  store i32 0, i32* %21, align 4\l  %22 = load i32, i32* %2, align 4\l  %23 = icmp ne i32 %22, 0\l  br i1 %23, label %24, label %25\l|{<s0>T|<s1>F}}"];
	Node0x26308a0:s0 -> Node0x262cbe0;
	Node0x26308a0:s1 -> Node0x262cc30;
	Node0x262cbe0 [shape=record,label="{%24:\l24:                                               \l  store i32 0, i32* @CheckBadFlow.pawnmated, align 4\l  store i32 0, i32* @CheckBadFlow.knightmated, align 4\l  store i32 0, i32* @CheckBadFlow.bishopmated, align 4\l  store i32 0, i32* @CheckBadFlow.rookmated, align 4\l  store i32 0, i32* @CheckBadFlow.queenmated, align 4\l  br label %643\l}"];
	Node0x262cbe0 -> Node0x2652f50;
	Node0x262cc30 [shape=record,label="{%25:\l25:                                               \l  %26 = call fastcc i32 @in_check()\l  store i32 %26, i32* %9, align 4\l  %27 = load i32, i32* @white_to_move, align 4\l  %28 = icmp ne i32 %27, 0\l  %29 = xor i1 %28, true\l  %30 = zext i1 %29 to i32\l  %31 = sext i32 %30 to i64\l  %32 = getelementptr inbounds [2 x [16 x i32]], [2 x [16 x i32]]* @holding,\l... i64 0, i64 %31\l  %33 = load i32, i32* @white_to_move, align 4\l  %34 = icmp ne i32 %33, 0\l  %35 = zext i1 %34 to i64\l  %36 = select i1 %34, i32 1, i32 2\l  %37 = sext i32 %36 to i64\l  %38 = getelementptr inbounds [16 x i32], [16 x i32]* %32, i64 0, i64 %37\l  %39 = load i32, i32* %38, align 4\l  %40 = icmp ne i32 %39, 0\l  br i1 %40, label %113, label %41\l|{<s0>T|<s1>F}}"];
	Node0x262cc30:s0 -> Node0x2650340;
	Node0x262cc30:s1 -> Node0x264fdf0;
	Node0x264fdf0 [shape=record,label="{%41:\l41:                                               \l  %42 = load i32, i32* @white_to_move, align 4\l  %43 = icmp ne i32 %42, 0\l  %44 = zext i1 %43 to i64\l  %45 = select i1 %43, i32 1, i32 2\l  %46 = load i32, i32* @white_to_move, align 4\l  %47 = icmp ne i32 %46, 0\l  %48 = xor i1 %47, true\l  %49 = zext i1 %48 to i32\l  call fastcc void @DropaddHolding(i32 %45, i32 %49)\l  %50 = getelementptr inbounds [512 x %struct.move_s], [512 x %struct.move_s]*\l... %3, i64 0, i64 0\l  call fastcc void @gen(%struct.move_s* %50)\l  %51 = load i32, i32* @numb_moves, align 4\l  store i32 %51, i32* %5, align 4\l  store i32 0, i32* %8, align 4\l  br label %52\l}"];
	Node0x264fdf0 -> Node0x264fe40;
	Node0x264fe40 [shape=record,label="{%52:\l52:                                               \l  %53 = load i32, i32* %8, align 4\l  %54 = load i32, i32* %5, align 4\l  %55 = icmp slt i32 %53, %54\l  br i1 %55, label %56, label %59\l|{<s0>T|<s1>F}}"];
	Node0x264fe40:s0 -> Node0x264fe90;
	Node0x264fe40:s1 -> Node0x264fee0;
	Node0x264fe90 [shape=record,label="{%56:\l56:                                               \l  %57 = load i32, i32* %12, align 4\l  %58 = icmp eq i32 %57, 0\l  br label %59\l}"];
	Node0x264fe90 -> Node0x264fee0;
	Node0x264fee0 [shape=record,label="{%59:\l59:                                               \l  %60 = phi i1 [ false, %52 ], [ %58, %56 ]\l  br i1 %60, label %61, label %104\l|{<s0>T|<s1>F}}"];
	Node0x264fee0:s0 -> Node0x264ff30;
	Node0x264fee0:s1 -> Node0x26502f0;
	Node0x264ff30 [shape=record,label="{%61:\l61:                                               \l  %62 = getelementptr inbounds [512 x %struct.move_s], [512 x %struct.move_s]*\l... %3, i64 0, i64 0\l  %63 = load i32, i32* %8, align 4\l  call fastcc void @make(%struct.move_s* %62, i32 %63)\l  %64 = getelementptr inbounds [512 x %struct.move_s], [512 x %struct.move_s]*\l... %3, i64 0, i64 0\l  %65 = load i32, i32* %8, align 4\l  %66 = load i32, i32* %9, align 4\l  %67 = call fastcc i32 @check_legal(%struct.move_s* %64, i32 %65, i32 %66)\l  %68 = icmp ne i32 %67, 0\l  br i1 %68, label %69, label %98\l|{<s0>T|<s1>F}}"];
	Node0x264ff30:s0 -> Node0x264ff80;
	Node0x264ff30:s1 -> Node0x2650250;
	Node0x264ff80 [shape=record,label="{%69:\l69:                                               \l  store i32 3, i32* %12, align 4\l  %70 = call fastcc i32 @in_check()\l  store i32 %70, i32* %10, align 4\l  %71 = getelementptr inbounds [512 x %struct.move_s], [512 x %struct.move_s]*\l... %4, i64 0, i64 0\l  call fastcc void @gen(%struct.move_s* %71)\l  %72 = load i32, i32* @numb_moves, align 4\l  store i32 %72, i32* %6, align 4\l  store i32 0, i32* %7, align 4\l  br label %73\l}"];
	Node0x264ff80 -> Node0x264ffd0;
	Node0x264ffd0 [shape=record,label="{%73:\l73:                                               \l  %74 = load i32, i32* %7, align 4\l  %75 = load i32, i32* %6, align 4\l  %76 = icmp slt i32 %74, %75\l  br i1 %76, label %77, label %80\l|{<s0>T|<s1>F}}"];
	Node0x264ffd0:s0 -> Node0x2650020;
	Node0x264ffd0:s1 -> Node0x2650070;
	Node0x2650020 [shape=record,label="{%77:\l77:                                               \l  %78 = load i32, i32* %12, align 4\l  %79 = icmp ne i32 %78, 0\l  br label %80\l}"];
	Node0x2650020 -> Node0x2650070;
	Node0x2650070 [shape=record,label="{%80:\l80:                                               \l  %81 = phi i1 [ false, %73 ], [ %79, %77 ]\l  br i1 %81, label %82, label %97\l|{<s0>T|<s1>F}}"];
	Node0x2650070:s0 -> Node0x26500c0;
	Node0x2650070:s1 -> Node0x2650200;
	Node0x26500c0 [shape=record,label="{%82:\l82:                                               \l  %83 = getelementptr inbounds [512 x %struct.move_s], [512 x %struct.move_s]*\l... %4, i64 0, i64 0\l  %84 = load i32, i32* %7, align 4\l  call fastcc void @make(%struct.move_s* %83, i32 %84)\l  %85 = getelementptr inbounds [512 x %struct.move_s], [512 x %struct.move_s]*\l... %4, i64 0, i64 0\l  %86 = load i32, i32* %7, align 4\l  %87 = load i32, i32* %10, align 4\l  %88 = call fastcc i32 @check_legal(%struct.move_s* %85, i32 %86, i32 %87)\l  %89 = icmp ne i32 %88, 0\l  br i1 %89, label %90, label %91\l|{<s0>T|<s1>F}}"];
	Node0x26500c0:s0 -> Node0x2650110;
	Node0x26500c0:s1 -> Node0x2650160;
	Node0x2650110 [shape=record,label="{%90:\l90:                                               \l  store i32 0, i32* %12, align 4\l  br label %91\l}"];
	Node0x2650110 -> Node0x2650160;
	Node0x2650160 [shape=record,label="{%91:\l91:                                               \l  %92 = getelementptr inbounds [512 x %struct.move_s], [512 x %struct.move_s]*\l... %4, i64 0, i64 0\l  %93 = load i32, i32* %7, align 4\l  call fastcc void @unmake(%struct.move_s* %92, i32 %93)\l  br label %94\l}"];
	Node0x2650160 -> Node0x26501b0;
	Node0x26501b0 [shape=record,label="{%94:\l94:                                               \l  %95 = load i32, i32* %7, align 4\l  %96 = add nsw i32 %95, 1\l  store i32 %96, i32* %7, align 4\l  br label %73\l}"];
	Node0x26501b0 -> Node0x264ffd0;
	Node0x2650200 [shape=record,label="{%97:\l97:                                               \l  br label %98\l}"];
	Node0x2650200 -> Node0x2650250;
	Node0x2650250 [shape=record,label="{%98:\l98:                                               \l  %99 = getelementptr inbounds [512 x %struct.move_s], [512 x %struct.move_s]*\l... %3, i64 0, i64 0\l  %100 = load i32, i32* %8, align 4\l  call fastcc void @unmake(%struct.move_s* %99, i32 %100)\l  br label %101\l}"];
	Node0x2650250 -> Node0x26502a0;
	Node0x26502a0 [shape=record,label="{%101:\l101:                                              \l  %102 = load i32, i32* %8, align 4\l  %103 = add nsw i32 %102, 1\l  store i32 %103, i32* %8, align 4\l  br label %52\l}"];
	Node0x26502a0 -> Node0x264fe40;
	Node0x26502f0 [shape=record,label="{%104:\l104:                                              \l  %105 = load i32, i32* @white_to_move, align 4\l  %106 = icmp ne i32 %105, 0\l  %107 = zext i1 %106 to i64\l  %108 = select i1 %106, i32 1, i32 2\l  %109 = load i32, i32* @white_to_move, align 4\l  %110 = icmp ne i32 %109, 0\l  %111 = xor i1 %110, true\l  %112 = zext i1 %111 to i32\l  call fastcc void @DropremoveHolding(i32 %108, i32 %112)\l  br label %113\l}"];
	Node0x26502f0 -> Node0x2650340;
	Node0x2650340 [shape=record,label="{%113:\l113:                                              \l  %114 = load i32, i32* @white_to_move, align 4\l  %115 = icmp ne i32 %114, 0\l  %116 = xor i1 %115, true\l  %117 = zext i1 %116 to i32\l  %118 = sext i32 %117 to i64\l  %119 = getelementptr inbounds [2 x [16 x i32]], [2 x [16 x i32]]* @holding,\l... i64 0, i64 %118\l  %120 = load i32, i32* @white_to_move, align 4\l  %121 = icmp ne i32 %120, 0\l  %122 = zext i1 %121 to i64\l  %123 = select i1 %121, i32 3, i32 4\l  %124 = sext i32 %123 to i64\l  %125 = getelementptr inbounds [16 x i32], [16 x i32]* %119, i64 0, i64 %124\l  %126 = load i32, i32* %125, align 4\l  %127 = icmp ne i32 %126, 0\l  br i1 %127, label %200, label %128\l|{<s0>T|<s1>F}}"];
	Node0x2650340:s0 -> Node0x26508e0;
	Node0x2650340:s1 -> Node0x2650390;
	Node0x2650390 [shape=record,label="{%128:\l128:                                              \l  %129 = load i32, i32* @white_to_move, align 4\l  %130 = icmp ne i32 %129, 0\l  %131 = zext i1 %130 to i64\l  %132 = select i1 %130, i32 3, i32 4\l  %133 = load i32, i32* @white_to_move, align 4\l  %134 = icmp ne i32 %133, 0\l  %135 = xor i1 %134, true\l  %136 = zext i1 %135 to i32\l  call fastcc void @DropaddHolding(i32 %132, i32 %136)\l  %137 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %3, i64 0, i64 0\l  call fastcc void @gen(%struct.move_s* %137)\l  %138 = load i32, i32* @numb_moves, align 4\l  store i32 %138, i32* %5, align 4\l  store i32 0, i32* %8, align 4\l  br label %139\l}"];
	Node0x2650390 -> Node0x26503e0;
	Node0x26503e0 [shape=record,label="{%139:\l139:                                              \l  %140 = load i32, i32* %8, align 4\l  %141 = load i32, i32* %5, align 4\l  %142 = icmp slt i32 %140, %141\l  br i1 %142, label %143, label %146\l|{<s0>T|<s1>F}}"];
	Node0x26503e0:s0 -> Node0x2650430;
	Node0x26503e0:s1 -> Node0x2650480;
	Node0x2650430 [shape=record,label="{%143:\l143:                                              \l  %144 = load i32, i32* %13, align 4\l  %145 = icmp eq i32 %144, 0\l  br label %146\l}"];
	Node0x2650430 -> Node0x2650480;
	Node0x2650480 [shape=record,label="{%146:\l146:                                              \l  %147 = phi i1 [ false, %139 ], [ %145, %143 ]\l  br i1 %147, label %148, label %191\l|{<s0>T|<s1>F}}"];
	Node0x2650480:s0 -> Node0x26504d0;
	Node0x2650480:s1 -> Node0x2650890;
	Node0x26504d0 [shape=record,label="{%148:\l148:                                              \l  %149 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %3, i64 0, i64 0\l  %150 = load i32, i32* %8, align 4\l  call fastcc void @make(%struct.move_s* %149, i32 %150)\l  %151 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %3, i64 0, i64 0\l  %152 = load i32, i32* %8, align 4\l  %153 = load i32, i32* %9, align 4\l  %154 = call fastcc i32 @check_legal(%struct.move_s* %151, i32 %152, i32 %153)\l  %155 = icmp ne i32 %154, 0\l  br i1 %155, label %156, label %185\l|{<s0>T|<s1>F}}"];
	Node0x26504d0:s0 -> Node0x2650520;
	Node0x26504d0:s1 -> Node0x26507f0;
	Node0x2650520 [shape=record,label="{%156:\l156:                                              \l  store i32 3, i32* %13, align 4\l  %157 = call fastcc i32 @in_check()\l  store i32 %157, i32* %10, align 4\l  %158 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %4, i64 0, i64 0\l  call fastcc void @gen(%struct.move_s* %158)\l  %159 = load i32, i32* @numb_moves, align 4\l  store i32 %159, i32* %6, align 4\l  store i32 0, i32* %7, align 4\l  br label %160\l}"];
	Node0x2650520 -> Node0x2650570;
	Node0x2650570 [shape=record,label="{%160:\l160:                                              \l  %161 = load i32, i32* %7, align 4\l  %162 = load i32, i32* %6, align 4\l  %163 = icmp slt i32 %161, %162\l  br i1 %163, label %164, label %167\l|{<s0>T|<s1>F}}"];
	Node0x2650570:s0 -> Node0x26505c0;
	Node0x2650570:s1 -> Node0x2650610;
	Node0x26505c0 [shape=record,label="{%164:\l164:                                              \l  %165 = load i32, i32* %13, align 4\l  %166 = icmp ne i32 %165, 0\l  br label %167\l}"];
	Node0x26505c0 -> Node0x2650610;
	Node0x2650610 [shape=record,label="{%167:\l167:                                              \l  %168 = phi i1 [ false, %160 ], [ %166, %164 ]\l  br i1 %168, label %169, label %184\l|{<s0>T|<s1>F}}"];
	Node0x2650610:s0 -> Node0x2650660;
	Node0x2650610:s1 -> Node0x26507a0;
	Node0x2650660 [shape=record,label="{%169:\l169:                                              \l  %170 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %4, i64 0, i64 0\l  %171 = load i32, i32* %7, align 4\l  call fastcc void @make(%struct.move_s* %170, i32 %171)\l  %172 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %4, i64 0, i64 0\l  %173 = load i32, i32* %7, align 4\l  %174 = load i32, i32* %10, align 4\l  %175 = call fastcc i32 @check_legal(%struct.move_s* %172, i32 %173, i32 %174)\l  %176 = icmp ne i32 %175, 0\l  br i1 %176, label %177, label %178\l|{<s0>T|<s1>F}}"];
	Node0x2650660:s0 -> Node0x26506b0;
	Node0x2650660:s1 -> Node0x2650700;
	Node0x26506b0 [shape=record,label="{%177:\l177:                                              \l  store i32 0, i32* %13, align 4\l  br label %178\l}"];
	Node0x26506b0 -> Node0x2650700;
	Node0x2650700 [shape=record,label="{%178:\l178:                                              \l  %179 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %4, i64 0, i64 0\l  %180 = load i32, i32* %7, align 4\l  call fastcc void @unmake(%struct.move_s* %179, i32 %180)\l  br label %181\l}"];
	Node0x2650700 -> Node0x2650750;
	Node0x2650750 [shape=record,label="{%181:\l181:                                              \l  %182 = load i32, i32* %7, align 4\l  %183 = add nsw i32 %182, 1\l  store i32 %183, i32* %7, align 4\l  br label %160\l}"];
	Node0x2650750 -> Node0x2650570;
	Node0x26507a0 [shape=record,label="{%184:\l184:                                              \l  br label %185\l}"];
	Node0x26507a0 -> Node0x26507f0;
	Node0x26507f0 [shape=record,label="{%185:\l185:                                              \l  %186 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %3, i64 0, i64 0\l  %187 = load i32, i32* %8, align 4\l  call fastcc void @unmake(%struct.move_s* %186, i32 %187)\l  br label %188\l}"];
	Node0x26507f0 -> Node0x2650840;
	Node0x2650840 [shape=record,label="{%188:\l188:                                              \l  %189 = load i32, i32* %8, align 4\l  %190 = add nsw i32 %189, 1\l  store i32 %190, i32* %8, align 4\l  br label %139\l}"];
	Node0x2650840 -> Node0x26503e0;
	Node0x2650890 [shape=record,label="{%191:\l191:                                              \l  %192 = load i32, i32* @white_to_move, align 4\l  %193 = icmp ne i32 %192, 0\l  %194 = zext i1 %193 to i64\l  %195 = select i1 %193, i32 3, i32 4\l  %196 = load i32, i32* @white_to_move, align 4\l  %197 = icmp ne i32 %196, 0\l  %198 = xor i1 %197, true\l  %199 = zext i1 %198 to i32\l  call fastcc void @DropremoveHolding(i32 %195, i32 %199)\l  br label %200\l}"];
	Node0x2650890 -> Node0x26508e0;
	Node0x26508e0 [shape=record,label="{%200:\l200:                                              \l  %201 = load i32, i32* @white_to_move, align 4\l  %202 = icmp ne i32 %201, 0\l  %203 = xor i1 %202, true\l  %204 = zext i1 %203 to i32\l  %205 = sext i32 %204 to i64\l  %206 = getelementptr inbounds [2 x [16 x i32]], [2 x [16 x i32]]* @holding,\l... i64 0, i64 %205\l  %207 = load i32, i32* @white_to_move, align 4\l  %208 = icmp ne i32 %207, 0\l  %209 = zext i1 %208 to i64\l  %210 = select i1 %208, i32 11, i32 12\l  %211 = sext i32 %210 to i64\l  %212 = getelementptr inbounds [16 x i32], [16 x i32]* %206, i64 0, i64 %211\l  %213 = load i32, i32* %212, align 4\l  %214 = icmp ne i32 %213, 0\l  br i1 %214, label %287, label %215\l|{<s0>T|<s1>F}}"];
	Node0x26508e0:s0 -> Node0x2650e80;
	Node0x26508e0:s1 -> Node0x2650930;
	Node0x2650930 [shape=record,label="{%215:\l215:                                              \l  %216 = load i32, i32* @white_to_move, align 4\l  %217 = icmp ne i32 %216, 0\l  %218 = zext i1 %217 to i64\l  %219 = select i1 %217, i32 11, i32 12\l  %220 = load i32, i32* @white_to_move, align 4\l  %221 = icmp ne i32 %220, 0\l  %222 = xor i1 %221, true\l  %223 = zext i1 %222 to i32\l  call fastcc void @DropaddHolding(i32 %219, i32 %223)\l  %224 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %3, i64 0, i64 0\l  call fastcc void @gen(%struct.move_s* %224)\l  %225 = load i32, i32* @numb_moves, align 4\l  store i32 %225, i32* %5, align 4\l  store i32 0, i32* %8, align 4\l  br label %226\l}"];
	Node0x2650930 -> Node0x2650980;
	Node0x2650980 [shape=record,label="{%226:\l226:                                              \l  %227 = load i32, i32* %8, align 4\l  %228 = load i32, i32* %5, align 4\l  %229 = icmp slt i32 %227, %228\l  br i1 %229, label %230, label %233\l|{<s0>T|<s1>F}}"];
	Node0x2650980:s0 -> Node0x26509d0;
	Node0x2650980:s1 -> Node0x2650a20;
	Node0x26509d0 [shape=record,label="{%230:\l230:                                              \l  %231 = load i32, i32* %14, align 4\l  %232 = icmp eq i32 %231, 0\l  br label %233\l}"];
	Node0x26509d0 -> Node0x2650a20;
	Node0x2650a20 [shape=record,label="{%233:\l233:                                              \l  %234 = phi i1 [ false, %226 ], [ %232, %230 ]\l  br i1 %234, label %235, label %278\l|{<s0>T|<s1>F}}"];
	Node0x2650a20:s0 -> Node0x2650a70;
	Node0x2650a20:s1 -> Node0x2650e30;
	Node0x2650a70 [shape=record,label="{%235:\l235:                                              \l  %236 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %3, i64 0, i64 0\l  %237 = load i32, i32* %8, align 4\l  call fastcc void @make(%struct.move_s* %236, i32 %237)\l  %238 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %3, i64 0, i64 0\l  %239 = load i32, i32* %8, align 4\l  %240 = load i32, i32* %9, align 4\l  %241 = call fastcc i32 @check_legal(%struct.move_s* %238, i32 %239, i32 %240)\l  %242 = icmp ne i32 %241, 0\l  br i1 %242, label %243, label %272\l|{<s0>T|<s1>F}}"];
	Node0x2650a70:s0 -> Node0x2650ac0;
	Node0x2650a70:s1 -> Node0x2650d90;
	Node0x2650ac0 [shape=record,label="{%243:\l243:                                              \l  store i32 3, i32* %14, align 4\l  %244 = call fastcc i32 @in_check()\l  store i32 %244, i32* %10, align 4\l  %245 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %4, i64 0, i64 0\l  call fastcc void @gen(%struct.move_s* %245)\l  %246 = load i32, i32* @numb_moves, align 4\l  store i32 %246, i32* %6, align 4\l  store i32 0, i32* %7, align 4\l  br label %247\l}"];
	Node0x2650ac0 -> Node0x2650b10;
	Node0x2650b10 [shape=record,label="{%247:\l247:                                              \l  %248 = load i32, i32* %7, align 4\l  %249 = load i32, i32* %6, align 4\l  %250 = icmp slt i32 %248, %249\l  br i1 %250, label %251, label %254\l|{<s0>T|<s1>F}}"];
	Node0x2650b10:s0 -> Node0x2650b60;
	Node0x2650b10:s1 -> Node0x2650bb0;
	Node0x2650b60 [shape=record,label="{%251:\l251:                                              \l  %252 = load i32, i32* %14, align 4\l  %253 = icmp ne i32 %252, 0\l  br label %254\l}"];
	Node0x2650b60 -> Node0x2650bb0;
	Node0x2650bb0 [shape=record,label="{%254:\l254:                                              \l  %255 = phi i1 [ false, %247 ], [ %253, %251 ]\l  br i1 %255, label %256, label %271\l|{<s0>T|<s1>F}}"];
	Node0x2650bb0:s0 -> Node0x2650c00;
	Node0x2650bb0:s1 -> Node0x2650d40;
	Node0x2650c00 [shape=record,label="{%256:\l256:                                              \l  %257 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %4, i64 0, i64 0\l  %258 = load i32, i32* %7, align 4\l  call fastcc void @make(%struct.move_s* %257, i32 %258)\l  %259 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %4, i64 0, i64 0\l  %260 = load i32, i32* %7, align 4\l  %261 = load i32, i32* %10, align 4\l  %262 = call fastcc i32 @check_legal(%struct.move_s* %259, i32 %260, i32 %261)\l  %263 = icmp ne i32 %262, 0\l  br i1 %263, label %264, label %265\l|{<s0>T|<s1>F}}"];
	Node0x2650c00:s0 -> Node0x2650c50;
	Node0x2650c00:s1 -> Node0x2650ca0;
	Node0x2650c50 [shape=record,label="{%264:\l264:                                              \l  store i32 0, i32* %14, align 4\l  br label %265\l}"];
	Node0x2650c50 -> Node0x2650ca0;
	Node0x2650ca0 [shape=record,label="{%265:\l265:                                              \l  %266 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %4, i64 0, i64 0\l  %267 = load i32, i32* %7, align 4\l  call fastcc void @unmake(%struct.move_s* %266, i32 %267)\l  br label %268\l}"];
	Node0x2650ca0 -> Node0x2650cf0;
	Node0x2650cf0 [shape=record,label="{%268:\l268:                                              \l  %269 = load i32, i32* %7, align 4\l  %270 = add nsw i32 %269, 1\l  store i32 %270, i32* %7, align 4\l  br label %247\l}"];
	Node0x2650cf0 -> Node0x2650b10;
	Node0x2650d40 [shape=record,label="{%271:\l271:                                              \l  br label %272\l}"];
	Node0x2650d40 -> Node0x2650d90;
	Node0x2650d90 [shape=record,label="{%272:\l272:                                              \l  %273 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %3, i64 0, i64 0\l  %274 = load i32, i32* %8, align 4\l  call fastcc void @unmake(%struct.move_s* %273, i32 %274)\l  br label %275\l}"];
	Node0x2650d90 -> Node0x2650de0;
	Node0x2650de0 [shape=record,label="{%275:\l275:                                              \l  %276 = load i32, i32* %8, align 4\l  %277 = add nsw i32 %276, 1\l  store i32 %277, i32* %8, align 4\l  br label %226\l}"];
	Node0x2650de0 -> Node0x2650980;
	Node0x2650e30 [shape=record,label="{%278:\l278:                                              \l  %279 = load i32, i32* @white_to_move, align 4\l  %280 = icmp ne i32 %279, 0\l  %281 = zext i1 %280 to i64\l  %282 = select i1 %280, i32 11, i32 12\l  %283 = load i32, i32* @white_to_move, align 4\l  %284 = icmp ne i32 %283, 0\l  %285 = xor i1 %284, true\l  %286 = zext i1 %285 to i32\l  call fastcc void @DropremoveHolding(i32 %282, i32 %286)\l  br label %287\l}"];
	Node0x2650e30 -> Node0x2650e80;
	Node0x2650e80 [shape=record,label="{%287:\l287:                                              \l  %288 = load i32, i32* @white_to_move, align 4\l  %289 = icmp ne i32 %288, 0\l  %290 = xor i1 %289, true\l  %291 = zext i1 %290 to i32\l  %292 = sext i32 %291 to i64\l  %293 = getelementptr inbounds [2 x [16 x i32]], [2 x [16 x i32]]* @holding,\l... i64 0, i64 %292\l  %294 = load i32, i32* @white_to_move, align 4\l  %295 = icmp ne i32 %294, 0\l  %296 = zext i1 %295 to i64\l  %297 = select i1 %295, i32 7, i32 8\l  %298 = sext i32 %297 to i64\l  %299 = getelementptr inbounds [16 x i32], [16 x i32]* %293, i64 0, i64 %298\l  %300 = load i32, i32* %299, align 4\l  %301 = icmp ne i32 %300, 0\l  br i1 %301, label %374, label %302\l|{<s0>T|<s1>F}}"];
	Node0x2650e80:s0 -> Node0x2651420;
	Node0x2650e80:s1 -> Node0x2650ed0;
	Node0x2650ed0 [shape=record,label="{%302:\l302:                                              \l  %303 = load i32, i32* @white_to_move, align 4\l  %304 = icmp ne i32 %303, 0\l  %305 = zext i1 %304 to i64\l  %306 = select i1 %304, i32 7, i32 8\l  %307 = load i32, i32* @white_to_move, align 4\l  %308 = icmp ne i32 %307, 0\l  %309 = xor i1 %308, true\l  %310 = zext i1 %309 to i32\l  call fastcc void @DropaddHolding(i32 %306, i32 %310)\l  %311 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %3, i64 0, i64 0\l  call fastcc void @gen(%struct.move_s* %311)\l  %312 = load i32, i32* @numb_moves, align 4\l  store i32 %312, i32* %5, align 4\l  store i32 0, i32* %8, align 4\l  br label %313\l}"];
	Node0x2650ed0 -> Node0x2650f20;
	Node0x2650f20 [shape=record,label="{%313:\l313:                                              \l  %314 = load i32, i32* %8, align 4\l  %315 = load i32, i32* %5, align 4\l  %316 = icmp slt i32 %314, %315\l  br i1 %316, label %317, label %320\l|{<s0>T|<s1>F}}"];
	Node0x2650f20:s0 -> Node0x2650f70;
	Node0x2650f20:s1 -> Node0x2650fc0;
	Node0x2650f70 [shape=record,label="{%317:\l317:                                              \l  %318 = load i32, i32* %15, align 4\l  %319 = icmp eq i32 %318, 0\l  br label %320\l}"];
	Node0x2650f70 -> Node0x2650fc0;
	Node0x2650fc0 [shape=record,label="{%320:\l320:                                              \l  %321 = phi i1 [ false, %313 ], [ %319, %317 ]\l  br i1 %321, label %322, label %365\l|{<s0>T|<s1>F}}"];
	Node0x2650fc0:s0 -> Node0x2651010;
	Node0x2650fc0:s1 -> Node0x26513d0;
	Node0x2651010 [shape=record,label="{%322:\l322:                                              \l  %323 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %3, i64 0, i64 0\l  %324 = load i32, i32* %8, align 4\l  call fastcc void @make(%struct.move_s* %323, i32 %324)\l  %325 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %3, i64 0, i64 0\l  %326 = load i32, i32* %8, align 4\l  %327 = load i32, i32* %9, align 4\l  %328 = call fastcc i32 @check_legal(%struct.move_s* %325, i32 %326, i32 %327)\l  %329 = icmp ne i32 %328, 0\l  br i1 %329, label %330, label %359\l|{<s0>T|<s1>F}}"];
	Node0x2651010:s0 -> Node0x2651060;
	Node0x2651010:s1 -> Node0x2651330;
	Node0x2651060 [shape=record,label="{%330:\l330:                                              \l  store i32 3, i32* %15, align 4\l  %331 = call fastcc i32 @in_check()\l  store i32 %331, i32* %10, align 4\l  %332 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %4, i64 0, i64 0\l  call fastcc void @gen(%struct.move_s* %332)\l  %333 = load i32, i32* @numb_moves, align 4\l  store i32 %333, i32* %6, align 4\l  store i32 0, i32* %7, align 4\l  br label %334\l}"];
	Node0x2651060 -> Node0x26510b0;
	Node0x26510b0 [shape=record,label="{%334:\l334:                                              \l  %335 = load i32, i32* %7, align 4\l  %336 = load i32, i32* %6, align 4\l  %337 = icmp slt i32 %335, %336\l  br i1 %337, label %338, label %341\l|{<s0>T|<s1>F}}"];
	Node0x26510b0:s0 -> Node0x2651100;
	Node0x26510b0:s1 -> Node0x2651150;
	Node0x2651100 [shape=record,label="{%338:\l338:                                              \l  %339 = load i32, i32* %15, align 4\l  %340 = icmp ne i32 %339, 0\l  br label %341\l}"];
	Node0x2651100 -> Node0x2651150;
	Node0x2651150 [shape=record,label="{%341:\l341:                                              \l  %342 = phi i1 [ false, %334 ], [ %340, %338 ]\l  br i1 %342, label %343, label %358\l|{<s0>T|<s1>F}}"];
	Node0x2651150:s0 -> Node0x26511a0;
	Node0x2651150:s1 -> Node0x26512e0;
	Node0x26511a0 [shape=record,label="{%343:\l343:                                              \l  %344 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %4, i64 0, i64 0\l  %345 = load i32, i32* %7, align 4\l  call fastcc void @make(%struct.move_s* %344, i32 %345)\l  %346 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %4, i64 0, i64 0\l  %347 = load i32, i32* %7, align 4\l  %348 = load i32, i32* %10, align 4\l  %349 = call fastcc i32 @check_legal(%struct.move_s* %346, i32 %347, i32 %348)\l  %350 = icmp ne i32 %349, 0\l  br i1 %350, label %351, label %352\l|{<s0>T|<s1>F}}"];
	Node0x26511a0:s0 -> Node0x26511f0;
	Node0x26511a0:s1 -> Node0x2651240;
	Node0x26511f0 [shape=record,label="{%351:\l351:                                              \l  store i32 0, i32* %15, align 4\l  br label %352\l}"];
	Node0x26511f0 -> Node0x2651240;
	Node0x2651240 [shape=record,label="{%352:\l352:                                              \l  %353 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %4, i64 0, i64 0\l  %354 = load i32, i32* %7, align 4\l  call fastcc void @unmake(%struct.move_s* %353, i32 %354)\l  br label %355\l}"];
	Node0x2651240 -> Node0x2651290;
	Node0x2651290 [shape=record,label="{%355:\l355:                                              \l  %356 = load i32, i32* %7, align 4\l  %357 = add nsw i32 %356, 1\l  store i32 %357, i32* %7, align 4\l  br label %334\l}"];
	Node0x2651290 -> Node0x26510b0;
	Node0x26512e0 [shape=record,label="{%358:\l358:                                              \l  br label %359\l}"];
	Node0x26512e0 -> Node0x2651330;
	Node0x2651330 [shape=record,label="{%359:\l359:                                              \l  %360 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %3, i64 0, i64 0\l  %361 = load i32, i32* %8, align 4\l  call fastcc void @unmake(%struct.move_s* %360, i32 %361)\l  br label %362\l}"];
	Node0x2651330 -> Node0x2651380;
	Node0x2651380 [shape=record,label="{%362:\l362:                                              \l  %363 = load i32, i32* %8, align 4\l  %364 = add nsw i32 %363, 1\l  store i32 %364, i32* %8, align 4\l  br label %313\l}"];
	Node0x2651380 -> Node0x2650f20;
	Node0x26513d0 [shape=record,label="{%365:\l365:                                              \l  %366 = load i32, i32* @white_to_move, align 4\l  %367 = icmp ne i32 %366, 0\l  %368 = zext i1 %367 to i64\l  %369 = select i1 %367, i32 7, i32 8\l  %370 = load i32, i32* @white_to_move, align 4\l  %371 = icmp ne i32 %370, 0\l  %372 = xor i1 %371, true\l  %373 = zext i1 %372 to i32\l  call fastcc void @DropremoveHolding(i32 %369, i32 %373)\l  br label %374\l}"];
	Node0x26513d0 -> Node0x2651420;
	Node0x2651420 [shape=record,label="{%374:\l374:                                              \l  %375 = load i32, i32* @white_to_move, align 4\l  %376 = icmp ne i32 %375, 0\l  %377 = xor i1 %376, true\l  %378 = zext i1 %377 to i32\l  %379 = sext i32 %378 to i64\l  %380 = getelementptr inbounds [2 x [16 x i32]], [2 x [16 x i32]]* @holding,\l... i64 0, i64 %379\l  %381 = load i32, i32* @white_to_move, align 4\l  %382 = icmp ne i32 %381, 0\l  %383 = zext i1 %382 to i64\l  %384 = select i1 %382, i32 9, i32 10\l  %385 = sext i32 %384 to i64\l  %386 = getelementptr inbounds [16 x i32], [16 x i32]* %380, i64 0, i64 %385\l  %387 = load i32, i32* %386, align 4\l  %388 = icmp ne i32 %387, 0\l  br i1 %388, label %461, label %389\l|{<s0>T|<s1>F}}"];
	Node0x2651420:s0 -> Node0x26519c0;
	Node0x2651420:s1 -> Node0x2651470;
	Node0x2651470 [shape=record,label="{%389:\l389:                                              \l  %390 = load i32, i32* @white_to_move, align 4\l  %391 = icmp ne i32 %390, 0\l  %392 = zext i1 %391 to i64\l  %393 = select i1 %391, i32 9, i32 10\l  %394 = load i32, i32* @white_to_move, align 4\l  %395 = icmp ne i32 %394, 0\l  %396 = xor i1 %395, true\l  %397 = zext i1 %396 to i32\l  call fastcc void @DropaddHolding(i32 %393, i32 %397)\l  %398 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %3, i64 0, i64 0\l  call fastcc void @gen(%struct.move_s* %398)\l  %399 = load i32, i32* @numb_moves, align 4\l  store i32 %399, i32* %5, align 4\l  store i32 0, i32* %8, align 4\l  br label %400\l}"];
	Node0x2651470 -> Node0x26514c0;
	Node0x26514c0 [shape=record,label="{%400:\l400:                                              \l  %401 = load i32, i32* %8, align 4\l  %402 = load i32, i32* %5, align 4\l  %403 = icmp slt i32 %401, %402\l  br i1 %403, label %404, label %407\l|{<s0>T|<s1>F}}"];
	Node0x26514c0:s0 -> Node0x2651510;
	Node0x26514c0:s1 -> Node0x2651560;
	Node0x2651510 [shape=record,label="{%404:\l404:                                              \l  %405 = load i32, i32* %16, align 4\l  %406 = icmp eq i32 %405, 0\l  br label %407\l}"];
	Node0x2651510 -> Node0x2651560;
	Node0x2651560 [shape=record,label="{%407:\l407:                                              \l  %408 = phi i1 [ false, %400 ], [ %406, %404 ]\l  br i1 %408, label %409, label %452\l|{<s0>T|<s1>F}}"];
	Node0x2651560:s0 -> Node0x26515b0;
	Node0x2651560:s1 -> Node0x2651970;
	Node0x26515b0 [shape=record,label="{%409:\l409:                                              \l  %410 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %3, i64 0, i64 0\l  %411 = load i32, i32* %8, align 4\l  call fastcc void @make(%struct.move_s* %410, i32 %411)\l  %412 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %3, i64 0, i64 0\l  %413 = load i32, i32* %8, align 4\l  %414 = load i32, i32* %9, align 4\l  %415 = call fastcc i32 @check_legal(%struct.move_s* %412, i32 %413, i32 %414)\l  %416 = icmp ne i32 %415, 0\l  br i1 %416, label %417, label %446\l|{<s0>T|<s1>F}}"];
	Node0x26515b0:s0 -> Node0x2651600;
	Node0x26515b0:s1 -> Node0x26518d0;
	Node0x2651600 [shape=record,label="{%417:\l417:                                              \l  store i32 3, i32* %16, align 4\l  %418 = call fastcc i32 @in_check()\l  store i32 %418, i32* %10, align 4\l  %419 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %4, i64 0, i64 0\l  call fastcc void @gen(%struct.move_s* %419)\l  %420 = load i32, i32* @numb_moves, align 4\l  store i32 %420, i32* %6, align 4\l  store i32 0, i32* %7, align 4\l  br label %421\l}"];
	Node0x2651600 -> Node0x2651650;
	Node0x2651650 [shape=record,label="{%421:\l421:                                              \l  %422 = load i32, i32* %7, align 4\l  %423 = load i32, i32* %6, align 4\l  %424 = icmp slt i32 %422, %423\l  br i1 %424, label %425, label %428\l|{<s0>T|<s1>F}}"];
	Node0x2651650:s0 -> Node0x26516a0;
	Node0x2651650:s1 -> Node0x26516f0;
	Node0x26516a0 [shape=record,label="{%425:\l425:                                              \l  %426 = load i32, i32* %16, align 4\l  %427 = icmp ne i32 %426, 0\l  br label %428\l}"];
	Node0x26516a0 -> Node0x26516f0;
	Node0x26516f0 [shape=record,label="{%428:\l428:                                              \l  %429 = phi i1 [ false, %421 ], [ %427, %425 ]\l  br i1 %429, label %430, label %445\l|{<s0>T|<s1>F}}"];
	Node0x26516f0:s0 -> Node0x2651740;
	Node0x26516f0:s1 -> Node0x2651880;
	Node0x2651740 [shape=record,label="{%430:\l430:                                              \l  %431 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %4, i64 0, i64 0\l  %432 = load i32, i32* %7, align 4\l  call fastcc void @make(%struct.move_s* %431, i32 %432)\l  %433 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %4, i64 0, i64 0\l  %434 = load i32, i32* %7, align 4\l  %435 = load i32, i32* %10, align 4\l  %436 = call fastcc i32 @check_legal(%struct.move_s* %433, i32 %434, i32 %435)\l  %437 = icmp ne i32 %436, 0\l  br i1 %437, label %438, label %439\l|{<s0>T|<s1>F}}"];
	Node0x2651740:s0 -> Node0x2651790;
	Node0x2651740:s1 -> Node0x26517e0;
	Node0x2651790 [shape=record,label="{%438:\l438:                                              \l  store i32 0, i32* %16, align 4\l  br label %439\l}"];
	Node0x2651790 -> Node0x26517e0;
	Node0x26517e0 [shape=record,label="{%439:\l439:                                              \l  %440 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %4, i64 0, i64 0\l  %441 = load i32, i32* %7, align 4\l  call fastcc void @unmake(%struct.move_s* %440, i32 %441)\l  br label %442\l}"];
	Node0x26517e0 -> Node0x2651830;
	Node0x2651830 [shape=record,label="{%442:\l442:                                              \l  %443 = load i32, i32* %7, align 4\l  %444 = add nsw i32 %443, 1\l  store i32 %444, i32* %7, align 4\l  br label %421\l}"];
	Node0x2651830 -> Node0x2651650;
	Node0x2651880 [shape=record,label="{%445:\l445:                                              \l  br label %446\l}"];
	Node0x2651880 -> Node0x26518d0;
	Node0x26518d0 [shape=record,label="{%446:\l446:                                              \l  %447 = getelementptr inbounds [512 x %struct.move_s], [512 x\l... %struct.move_s]* %3, i64 0, i64 0\l  %448 = load i32, i32* %8, align 4\l  call fastcc void @unmake(%struct.move_s* %447, i32 %448)\l  br label %449\l}"];
	Node0x26518d0 -> Node0x2651920;
	Node0x2651920 [shape=record,label="{%449:\l449:                                              \l  %450 = load i32, i32* %8, align 4\l  %451 = add nsw i32 %450, 1\l  store i32 %451, i32* %8, align 4\l  br label %400\l}"];
	Node0x2651920 -> Node0x26514c0;
	Node0x2651970 [shape=record,label="{%452:\l452:                                              \l  %453 = load i32, i32* @white_to_move, align 4\l  %454 = icmp ne i32 %453, 0\l  %455 = zext i1 %454 to i64\l  %456 = select i1 %454, i32 9, i32 10\l  %457 = load i32, i32* @white_to_move, align 4\l  %458 = icmp ne i32 %457, 0\l  %459 = xor i1 %458, true\l  %460 = zext i1 %459 to i32\l  call fastcc void @DropremoveHolding(i32 %456, i32 %460)\l  br label %461\l}"];
	Node0x2651970 -> Node0x26519c0;
	Node0x26519c0 [shape=record,label="{%461:\l461:                                              \l  %462 = load i32, i32* %12, align 4\l  %463 = load i32, i32* @CheckBadFlow.pawnmated, align 4\l  %464 = icmp ne i32 %462, %463\l  br i1 %464, label %465, label %480\l|{<s0>T|<s1>F}}"];
	Node0x26519c0:s0 -> Node0x2651a10;
	Node0x26519c0:s1 -> Node0x2651c40;
	Node0x2651a10 [shape=record,label="{%465:\l465:                                              \l  %466 = load i32, i32* %12, align 4\l  %467 = icmp eq i32 %466, 3\l  br i1 %467, label %468, label %469\l|{<s0>T|<s1>F}}"];
	Node0x2651a10:s0 -> Node0x2651a60;
	Node0x2651a10:s1 -> Node0x2651ab0;
	Node0x2651a60 [shape=record,label="{%468:\l468:                                              \l  store i32 1, i32* %17, align 4\l  br label %479\l}"];
	Node0x2651a60 -> Node0x2651bf0;
	Node0x2651ab0 [shape=record,label="{%469:\l469:                                              \l  %470 = load i32, i32* %12, align 4\l  %471 = icmp eq i32 %470, 0\l  br i1 %471, label %472, label %478\l|{<s0>T|<s1>F}}"];
	Node0x2651ab0:s0 -> Node0x2651b00;
	Node0x2651ab0:s1 -> Node0x2651ba0;
	Node0x2651b00 [shape=record,label="{%472:\l472:                                              \l  %473 = load i32, i32* @CheckBadFlow.pawnmated, align 4\l  %474 = icmp eq i32 %473, 0\l  br i1 %474, label %475, label %478\l|{<s0>T|<s1>F}}"];
	Node0x2651b00:s0 -> Node0x2651b50;
	Node0x2651b00:s1 -> Node0x2651ba0;
	Node0x2651b50 [shape=record,label="{%475:\l475:                                              \l  %476 = getelementptr inbounds [41 x i8], [41 x i8]* @.str.72, i64 0, i64 0\l  %477 = call i32 (i8*, ...) @printf(i8* %476)\l  store i32 1, i32* %11, align 4\l  br label %478\l}"];
	Node0x2651b50 -> Node0x2651ba0;
	Node0x2651ba0 [shape=record,label="{%478:\l478:                                              \l  br label %479\l}"];
	Node0x2651ba0 -> Node0x2651bf0;
	Node0x2651bf0 [shape=record,label="{%479:\l479:                                              \l  br label %480\l}"];
	Node0x2651bf0 -> Node0x2651c40;
	Node0x2651c40 [shape=record,label="{%480:\l480:                                              \l  %481 = load i32, i32* %13, align 4\l  %482 = load i32, i32* @CheckBadFlow.knightmated, align 4\l  %483 = icmp ne i32 %481, %482\l  br i1 %483, label %484, label %499\l|{<s0>T|<s1>F}}"];
	Node0x2651c40:s0 -> Node0x2651c90;
	Node0x2651c40:s1 -> Node0x2651ec0;
	Node0x2651c90 [shape=record,label="{%484:\l484:                                              \l  %485 = load i32, i32* %13, align 4\l  %486 = icmp eq i32 %485, 3\l  br i1 %486, label %487, label %488\l|{<s0>T|<s1>F}}"];
	Node0x2651c90:s0 -> Node0x2651ce0;
	Node0x2651c90:s1 -> Node0x2651d30;
	Node0x2651ce0 [shape=record,label="{%487:\l487:                                              \l  store i32 1, i32* %18, align 4\l  br label %498\l}"];
	Node0x2651ce0 -> Node0x2651e70;
	Node0x2651d30 [shape=record,label="{%488:\l488:                                              \l  %489 = load i32, i32* %13, align 4\l  %490 = icmp eq i32 %489, 0\l  br i1 %490, label %491, label %497\l|{<s0>T|<s1>F}}"];
	Node0x2651d30:s0 -> Node0x2651d80;
	Node0x2651d30:s1 -> Node0x2651e20;
	Node0x2651d80 [shape=record,label="{%491:\l491:                                              \l  %492 = load i32, i32* @CheckBadFlow.knightmated, align 4\l  %493 = icmp eq i32 %492, 0\l  br i1 %493, label %494, label %497\l|{<s0>T|<s1>F}}"];
	Node0x2651d80:s0 -> Node0x2651dd0;
	Node0x2651d80:s1 -> Node0x2651e20;
	Node0x2651dd0 [shape=record,label="{%494:\l494:                                              \l  %495 = getelementptr inbounds [41 x i8], [41 x i8]* @.str.73, i64 0, i64 0\l  %496 = call i32 (i8*, ...) @printf(i8* %495)\l  store i32 1, i32* %11, align 4\l  br label %497\l}"];
	Node0x2651dd0 -> Node0x2651e20;
	Node0x2651e20 [shape=record,label="{%497:\l497:                                              \l  br label %498\l}"];
	Node0x2651e20 -> Node0x2651e70;
	Node0x2651e70 [shape=record,label="{%498:\l498:                                              \l  br label %499\l}"];
	Node0x2651e70 -> Node0x2651ec0;
	Node0x2651ec0 [shape=record,label="{%499:\l499:                                              \l  %500 = load i32, i32* %14, align 4\l  %501 = load i32, i32* @CheckBadFlow.bishopmated, align 4\l  %502 = icmp ne i32 %500, %501\l  br i1 %502, label %503, label %518\l|{<s0>T|<s1>F}}"];
	Node0x2651ec0:s0 -> Node0x2651f10;
	Node0x2651ec0:s1 -> Node0x2652140;
	Node0x2651f10 [shape=record,label="{%503:\l503:                                              \l  %504 = load i32, i32* %14, align 4\l  %505 = icmp eq i32 %504, 3\l  br i1 %505, label %506, label %507\l|{<s0>T|<s1>F}}"];
	Node0x2651f10:s0 -> Node0x2651f60;
	Node0x2651f10:s1 -> Node0x2651fb0;
	Node0x2651f60 [shape=record,label="{%506:\l506:                                              \l  store i32 1, i32* %19, align 4\l  br label %517\l}"];
	Node0x2651f60 -> Node0x26520f0;
	Node0x2651fb0 [shape=record,label="{%507:\l507:                                              \l  %508 = load i32, i32* %14, align 4\l  %509 = icmp eq i32 %508, 0\l  br i1 %509, label %510, label %516\l|{<s0>T|<s1>F}}"];
	Node0x2651fb0:s0 -> Node0x2652000;
	Node0x2651fb0:s1 -> Node0x26520a0;
	Node0x2652000 [shape=record,label="{%510:\l510:                                              \l  %511 = load i32, i32* @CheckBadFlow.bishopmated, align 4\l  %512 = icmp eq i32 %511, 0\l  br i1 %512, label %513, label %516\l|{<s0>T|<s1>F}}"];
	Node0x2652000:s0 -> Node0x2652050;
	Node0x2652000:s1 -> Node0x26520a0;
	Node0x2652050 [shape=record,label="{%513:\l513:                                              \l  %514 = getelementptr inbounds [41 x i8], [41 x i8]* @.str.74, i64 0, i64 0\l  %515 = call i32 (i8*, ...) @printf(i8* %514)\l  store i32 1, i32* %11, align 4\l  br label %516\l}"];
	Node0x2652050 -> Node0x26520a0;
	Node0x26520a0 [shape=record,label="{%516:\l516:                                              \l  br label %517\l}"];
	Node0x26520a0 -> Node0x26520f0;
	Node0x26520f0 [shape=record,label="{%517:\l517:                                              \l  br label %518\l}"];
	Node0x26520f0 -> Node0x2652140;
	Node0x2652140 [shape=record,label="{%518:\l518:                                              \l  %519 = load i32, i32* %15, align 4\l  %520 = load i32, i32* @CheckBadFlow.rookmated, align 4\l  %521 = icmp ne i32 %519, %520\l  br i1 %521, label %522, label %537\l|{<s0>T|<s1>F}}"];
	Node0x2652140:s0 -> Node0x2652190;
	Node0x2652140:s1 -> Node0x26523c0;
	Node0x2652190 [shape=record,label="{%522:\l522:                                              \l  %523 = load i32, i32* %15, align 4\l  %524 = icmp eq i32 %523, 3\l  br i1 %524, label %525, label %526\l|{<s0>T|<s1>F}}"];
	Node0x2652190:s0 -> Node0x26521e0;
	Node0x2652190:s1 -> Node0x2652230;
	Node0x26521e0 [shape=record,label="{%525:\l525:                                              \l  store i32 1, i32* %20, align 4\l  br label %536\l}"];
	Node0x26521e0 -> Node0x2652370;
	Node0x2652230 [shape=record,label="{%526:\l526:                                              \l  %527 = load i32, i32* %15, align 4\l  %528 = icmp eq i32 %527, 0\l  br i1 %528, label %529, label %535\l|{<s0>T|<s1>F}}"];
	Node0x2652230:s0 -> Node0x2652280;
	Node0x2652230:s1 -> Node0x2652320;
	Node0x2652280 [shape=record,label="{%529:\l529:                                              \l  %530 = load i32, i32* @CheckBadFlow.rookmated, align 4\l  %531 = icmp eq i32 %530, 0\l  br i1 %531, label %532, label %535\l|{<s0>T|<s1>F}}"];
	Node0x2652280:s0 -> Node0x26522d0;
	Node0x2652280:s1 -> Node0x2652320;
	Node0x26522d0 [shape=record,label="{%532:\l532:                                              \l  %533 = getelementptr inbounds [41 x i8], [41 x i8]* @.str.75, i64 0, i64 0\l  %534 = call i32 (i8*, ...) @printf(i8* %533)\l  store i32 1, i32* %11, align 4\l  br label %535\l}"];
	Node0x26522d0 -> Node0x2652320;
	Node0x2652320 [shape=record,label="{%535:\l535:                                              \l  br label %536\l}"];
	Node0x2652320 -> Node0x2652370;
	Node0x2652370 [shape=record,label="{%536:\l536:                                              \l  br label %537\l}"];
	Node0x2652370 -> Node0x26523c0;
	Node0x26523c0 [shape=record,label="{%537:\l537:                                              \l  %538 = load i32, i32* %16, align 4\l  %539 = load i32, i32* @CheckBadFlow.queenmated, align 4\l  %540 = icmp ne i32 %538, %539\l  br i1 %540, label %541, label %556\l|{<s0>T|<s1>F}}"];
	Node0x26523c0:s0 -> Node0x2652410;
	Node0x26523c0:s1 -> Node0x2652640;
	Node0x2652410 [shape=record,label="{%541:\l541:                                              \l  %542 = load i32, i32* %16, align 4\l  %543 = icmp eq i32 %542, 3\l  br i1 %543, label %544, label %545\l|{<s0>T|<s1>F}}"];
	Node0x2652410:s0 -> Node0x2652460;
	Node0x2652410:s1 -> Node0x26524b0;
	Node0x2652460 [shape=record,label="{%544:\l544:                                              \l  store i32 1, i32* %21, align 4\l  br label %555\l}"];
	Node0x2652460 -> Node0x26525f0;
	Node0x26524b0 [shape=record,label="{%545:\l545:                                              \l  %546 = load i32, i32* %16, align 4\l  %547 = icmp eq i32 %546, 0\l  br i1 %547, label %548, label %554\l|{<s0>T|<s1>F}}"];
	Node0x26524b0:s0 -> Node0x2652500;
	Node0x26524b0:s1 -> Node0x26525a0;
	Node0x2652500 [shape=record,label="{%548:\l548:                                              \l  %549 = load i32, i32* @CheckBadFlow.queenmated, align 4\l  %550 = icmp eq i32 %549, 0\l  br i1 %550, label %551, label %554\l|{<s0>T|<s1>F}}"];
	Node0x2652500:s0 -> Node0x2652550;
	Node0x2652500:s1 -> Node0x26525a0;
	Node0x2652550 [shape=record,label="{%551:\l551:                                              \l  %552 = getelementptr inbounds [41 x i8], [41 x i8]* @.str.76, i64 0, i64 0\l  %553 = call i32 (i8*, ...) @printf(i8* %552)\l  store i32 1, i32* %11, align 4\l  br label %554\l}"];
	Node0x2652550 -> Node0x26525a0;
	Node0x26525a0 [shape=record,label="{%554:\l554:                                              \l  br label %555\l}"];
	Node0x26525a0 -> Node0x26525f0;
	Node0x26525f0 [shape=record,label="{%555:\l555:                                              \l  br label %556\l}"];
	Node0x26525f0 -> Node0x2652640;
	Node0x2652640 [shape=record,label="{%556:\l556:                                              \l  %557 = load i32, i32* %17, align 4\l  %558 = icmp ne i32 %557, 0\l  br i1 %558, label %559, label %562\l|{<s0>T|<s1>F}}"];
	Node0x2652640:s0 -> Node0x2652690;
	Node0x2652640:s1 -> Node0x26526e0;
	Node0x2652690 [shape=record,label="{%559:\l559:                                              \l  %560 = getelementptr inbounds [20 x i8], [20 x i8]* @.str.77, i64 0, i64 0\l  %561 = call i32 (i8*, ...) @printf(i8* %560)\l  br label %562\l}"];
	Node0x2652690 -> Node0x26526e0;
	Node0x26526e0 [shape=record,label="{%562:\l562:                                              \l  %563 = load i32, i32* %18, align 4\l  %564 = icmp ne i32 %563, 0\l  br i1 %564, label %565, label %568\l|{<s0>T|<s1>F}}"];
	Node0x26526e0:s0 -> Node0x2652730;
	Node0x26526e0:s1 -> Node0x2652780;
	Node0x2652730 [shape=record,label="{%565:\l565:                                              \l  %566 = getelementptr inbounds [20 x i8], [20 x i8]* @.str.78, i64 0, i64 0\l  %567 = call i32 (i8*, ...) @printf(i8* %566)\l  br label %568\l}"];
	Node0x2652730 -> Node0x2652780;
	Node0x2652780 [shape=record,label="{%568:\l568:                                              \l  %569 = load i32, i32* %19, align 4\l  %570 = icmp ne i32 %569, 0\l  br i1 %570, label %571, label %574\l|{<s0>T|<s1>F}}"];
	Node0x2652780:s0 -> Node0x26527d0;
	Node0x2652780:s1 -> Node0x2652820;
	Node0x26527d0 [shape=record,label="{%571:\l571:                                              \l  %572 = getelementptr inbounds [20 x i8], [20 x i8]* @.str.79, i64 0, i64 0\l  %573 = call i32 (i8*, ...) @printf(i8* %572)\l  br label %574\l}"];
	Node0x26527d0 -> Node0x2652820;
	Node0x2652820 [shape=record,label="{%574:\l574:                                              \l  %575 = load i32, i32* %20, align 4\l  %576 = icmp ne i32 %575, 0\l  br i1 %576, label %577, label %580\l|{<s0>T|<s1>F}}"];
	Node0x2652820:s0 -> Node0x2652870;
	Node0x2652820:s1 -> Node0x26528c0;
	Node0x2652870 [shape=record,label="{%577:\l577:                                              \l  %578 = getelementptr inbounds [20 x i8], [20 x i8]* @.str.80, i64 0, i64 0\l  %579 = call i32 (i8*, ...) @printf(i8* %578)\l  br label %580\l}"];
	Node0x2652870 -> Node0x26528c0;
	Node0x26528c0 [shape=record,label="{%580:\l580:                                              \l  %581 = load i32, i32* %21, align 4\l  %582 = icmp ne i32 %581, 0\l  br i1 %582, label %583, label %586\l|{<s0>T|<s1>F}}"];
	Node0x26528c0:s0 -> Node0x2652910;
	Node0x26528c0:s1 -> Node0x2652960;
	Node0x2652910 [shape=record,label="{%583:\l583:                                              \l  %584 = getelementptr inbounds [20 x i8], [20 x i8]* @.str.81, i64 0, i64 0\l  %585 = call i32 (i8*, ...) @printf(i8* %584)\l  br label %586\l}"];
	Node0x2652910 -> Node0x2652960;
	Node0x2652960 [shape=record,label="{%586:\l586:                                              \l  %.b = load i1, i1* @piecedead, align 1\l  %587 = zext i1 %.b to i32\l  %588 = icmp ne i32 %587, 0\l  br i1 %588, label %589, label %597\l|{<s0>T|<s1>F}}"];
	Node0x2652960:s0 -> Node0x26529b0;
	Node0x2652960:s1 -> Node0x2652a50;
	Node0x26529b0 [shape=record,label="{%589:\l589:                                              \l  %590 = load i32, i32* %11, align 4\l  %591 = icmp ne i32 %590, 0\l  br i1 %591, label %592, label %597\l|{<s0>T|<s1>F}}"];
	Node0x26529b0:s0 -> Node0x2652a00;
	Node0x26529b0:s1 -> Node0x2652a50;
	Node0x2652a00 [shape=record,label="{%592:\l592:                                              \l  store i1 false, i1* @piecedead, align 1\l  %593 = getelementptr inbounds [17 x i8], [17 x i8]* @.str.82, i64 0, i64 0\l  %594 = call i32 (i8*, ...) @printf(i8* %593)\l  %595 = getelementptr inbounds [18 x i8], [18 x i8]* @.str.83, i64 0, i64 0\l  %596 = call i32 (i8*, ...) @printf(i8* %595)\l  store i1 false, i1* @go_fast, align 1\l  br label %597\l}"];
	Node0x2652a00 -> Node0x2652a50;
	Node0x2652a50 [shape=record,label="{%597:\l597:                                              \l  %598 = load i32, i32* %12, align 4\l  %599 = icmp ne i32 %598, 0\l  br i1 %599, label %600, label %602\l|{<s0>T|<s1>F}}"];
	Node0x2652a50:s0 -> Node0x2652aa0;
	Node0x2652a50:s1 -> Node0x2652af0;
	Node0x2652aa0 [shape=record,label="{%600:\l600:                                              \l  %601 = load i32, i32* %12, align 4\l  store i32 %601, i32* @CheckBadFlow.pawnmated, align 4\l  br label %605\l}"];
	Node0x2652aa0 -> Node0x2652b40;
	Node0x2652af0 [shape=record,label="{%602:\l602:                                              \l  %603 = load i32, i32* @CheckBadFlow.pawnmated, align 4\l  %604 = add nsw i32 %603, -1\l  store i32 %604, i32* @CheckBadFlow.pawnmated, align 4\l  br label %605\l}"];
	Node0x2652af0 -> Node0x2652b40;
	Node0x2652b40 [shape=record,label="{%605:\l605:                                              \l  %606 = phi i32 [ %601, %600 ], [ %603, %602 ]\l  %607 = load i32, i32* %14, align 4\l  %608 = icmp ne i32 %607, 0\l  br i1 %608, label %609, label %611\l|{<s0>T|<s1>F}}"];
	Node0x2652b40:s0 -> Node0x2652b90;
	Node0x2652b40:s1 -> Node0x2652be0;
	Node0x2652b90 [shape=record,label="{%609:\l609:                                              \l  %610 = load i32, i32* %14, align 4\l  store i32 %610, i32* @CheckBadFlow.bishopmated, align 4\l  br label %614\l}"];
	Node0x2652b90 -> Node0x2652c30;
	Node0x2652be0 [shape=record,label="{%611:\l611:                                              \l  %612 = load i32, i32* @CheckBadFlow.bishopmated, align 4\l  %613 = add nsw i32 %612, -1\l  store i32 %613, i32* @CheckBadFlow.bishopmated, align 4\l  br label %614\l}"];
	Node0x2652be0 -> Node0x2652c30;
	Node0x2652c30 [shape=record,label="{%614:\l614:                                              \l  %615 = phi i32 [ %610, %609 ], [ %612, %611 ]\l  %616 = load i32, i32* %15, align 4\l  %617 = icmp ne i32 %616, 0\l  br i1 %617, label %618, label %620\l|{<s0>T|<s1>F}}"];
	Node0x2652c30:s0 -> Node0x2652c80;
	Node0x2652c30:s1 -> Node0x2652cd0;
	Node0x2652c80 [shape=record,label="{%618:\l618:                                              \l  %619 = load i32, i32* %15, align 4\l  store i32 %619, i32* @CheckBadFlow.rookmated, align 4\l  br label %623\l}"];
	Node0x2652c80 -> Node0x2652d20;
	Node0x2652cd0 [shape=record,label="{%620:\l620:                                              \l  %621 = load i32, i32* @CheckBadFlow.rookmated, align 4\l  %622 = add nsw i32 %621, -1\l  store i32 %622, i32* @CheckBadFlow.rookmated, align 4\l  br label %623\l}"];
	Node0x2652cd0 -> Node0x2652d20;
	Node0x2652d20 [shape=record,label="{%623:\l623:                                              \l  %624 = phi i32 [ %619, %618 ], [ %621, %620 ]\l  %625 = load i32, i32* %16, align 4\l  %626 = icmp ne i32 %625, 0\l  br i1 %626, label %627, label %629\l|{<s0>T|<s1>F}}"];
	Node0x2652d20:s0 -> Node0x2652d70;
	Node0x2652d20:s1 -> Node0x2652dc0;
	Node0x2652d70 [shape=record,label="{%627:\l627:                                              \l  %628 = load i32, i32* %16, align 4\l  store i32 %628, i32* @CheckBadFlow.queenmated, align 4\l  br label %632\l}"];
	Node0x2652d70 -> Node0x2652e10;
	Node0x2652dc0 [shape=record,label="{%629:\l629:                                              \l  %630 = load i32, i32* @CheckBadFlow.queenmated, align 4\l  %631 = add nsw i32 %630, -1\l  store i32 %631, i32* @CheckBadFlow.queenmated, align 4\l  br label %632\l}"];
	Node0x2652dc0 -> Node0x2652e10;
	Node0x2652e10 [shape=record,label="{%632:\l632:                                              \l  %633 = phi i32 [ %628, %627 ], [ %630, %629 ]\l  %634 = load i32, i32* %13, align 4\l  %635 = icmp ne i32 %634, 0\l  br i1 %635, label %636, label %638\l|{<s0>T|<s1>F}}"];
	Node0x2652e10:s0 -> Node0x2652e60;
	Node0x2652e10:s1 -> Node0x2652eb0;
	Node0x2652e60 [shape=record,label="{%636:\l636:                                              \l  %637 = load i32, i32* %13, align 4\l  store i32 %637, i32* @CheckBadFlow.knightmated, align 4\l  br label %641\l}"];
	Node0x2652e60 -> Node0x2652f00;
	Node0x2652eb0 [shape=record,label="{%638:\l638:                                              \l  %639 = load i32, i32* @CheckBadFlow.knightmated, align 4\l  %640 = add nsw i32 %639, -1\l  store i32 %640, i32* @CheckBadFlow.knightmated, align 4\l  br label %641\l}"];
	Node0x2652eb0 -> Node0x2652f00;
	Node0x2652f00 [shape=record,label="{%641:\l641:                                              \l  %642 = phi i32 [ %637, %636 ], [ %639, %638 ]\l  br label %643\l}"];
	Node0x2652f00 -> Node0x2652f50;
	Node0x2652f50 [shape=record,label="{%643:\l643:                                              \l  ret void\l}"];
}
