digraph "CFG for 'realloc' function" {
	label="CFG for 'realloc' function";

	Node0x22fd9c0 [shape=record,label="{%2:\l  %3 = icmp eq i8* %0, null\l  br i1 %3, label %4, label %6\l|{<s0>T|<s1>F}}"];
	Node0x22fd9c0:s0 -> Node0x22fdc30;
	Node0x22fd9c0:s1 -> Node0x22fdc80;
	Node0x22fdc30 [shape=record,label="{%4:\l4:                                                \l  %5 = tail call i8* @malloc(i64 %1) #20\l  br label %232\l}"];
	Node0x22fdc30 -> Node0x22fec70;
	Node0x22fdc80 [shape=record,label="{%6:\l6:                                                \l  %7 = add i64 %1, -1\l  %8 = icmp ugt i64 %7, 9223372036854771679\l  br i1 %8, label %9, label %11\l|{<s0>T|<s1>F}}"];
	Node0x22fdc80:s0 -> Node0x22fdcd0;
	Node0x22fdc80:s1 -> Node0x22fdd20;
	Node0x22fdcd0 [shape=record,label="{%9:\l9:                                                \l  %10 = icmp eq i64 %1, 0\l  br i1 %10, label %16, label %14\l|{<s0>T|<s1>F}}"];
	Node0x22fdcd0:s0 -> Node0x22fddc0;
	Node0x22fdcd0:s1 -> Node0x22fdd70;
	Node0x22fdd20 [shape=record,label="{%11:\l11:                                               \l  %12 = add nuw nsw i64 %1, 47\l  %13 = and i64 %12, -32\l  br label %16\l}"];
	Node0x22fdd20 -> Node0x22fddc0;
	Node0x22fdd70 [shape=record,label="{%14:\l14:                                               \l  %15 = tail call i32* @___errno_location() #21\l  store i32 12, i32* %15, align 4, !tbaa !73\l  br label %232\l}"];
	Node0x22fdd70 -> Node0x22fec70;
	Node0x22fddc0 [shape=record,label="{%16:\l16:                                               \l  %17 = phi i64 [ 32, %9 ], [ %13, %11 ]\l  %18 = getelementptr inbounds i8, i8* %0, i64 -16\l  %19 = getelementptr inbounds i8, i8* %0, i64 -8\l  %20 = bitcast i8* %19 to i64*\l  %21 = load i64, i64* %20, align 8, !tbaa !77\l  %22 = and i64 %21, -2\l  %23 = and i64 %21, 1\l  %24 = icmp eq i64 %23, 0\l  br i1 %24, label %25, label %54\l|{<s0>T|<s1>F}}"];
	Node0x22fddc0:s0 -> Node0x22fde10;
	Node0x22fddc0:s1 -> Node0x22fe040;
	Node0x22fde10 [shape=record,label="{%25:\l25:                                               \l  %26 = bitcast i8* %18 to i64*\l  %27 = load i64, i64* %26, align 8, !tbaa !81\l  %28 = sub i64 0, %27\l  %29 = getelementptr inbounds i8, i8* %18, i64 %28\l  %30 = add i64 %27, %22\l  %31 = add i64 %27, %17\l  %32 = and i64 %27, 1\l  %33 = icmp eq i64 %32, 0\l  br i1 %33, label %35, label %34\l|{<s0>T|<s1>F}}"];
	Node0x22fde10:s0 -> Node0x22fdeb0;
	Node0x22fde10:s1 -> Node0x22fde60;
	Node0x22fde60 [shape=record,label="{%34:\l34:                                               \l  tail call void asm sideeffect \"hlt\",\l... \"~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}\"() #22, !srcloc !82\l  br label %35\l}"];
	Node0x22fde60 -> Node0x22fdeb0;
	Node0x22fdeb0 [shape=record,label="{%35:\l35:                                               \l  %36 = icmp ult i64 %31, 4096\l  br i1 %36, label %37, label %41\l|{<s0>T|<s1>F}}"];
	Node0x22fdeb0:s0 -> Node0x22fdf00;
	Node0x22fdeb0:s1 -> Node0x22fdf50;
	Node0x22fdf00 [shape=record,label="{%37:\l37:                                               \l  %38 = add nsw i64 %17, -16\l  %39 = tail call i8* @malloc(i64 %38) #20\l  %40 = icmp eq i8* %39, null\l  br i1 %40, label %41, label %211\l|{<s0>T|<s1>F}}"];
	Node0x22fdf00:s0 -> Node0x22fdf50;
	Node0x22fdf00:s1 -> Node0x22feae0;
	Node0x22fdf50 [shape=record,label="{%41:\l41:                                               \l  %42 = add i64 %31, 4095\l  %43 = and i64 %42, -4096\l  %44 = icmp eq i64 %30, %43\l  br i1 %44, label %232, label %45\l|{<s0>T|<s1>F}}"];
	Node0x22fdf50:s0 -> Node0x22fec70;
	Node0x22fdf50:s1 -> Node0x22fdfa0;
	Node0x22fdfa0 [shape=record,label="{%45:\l45:                                               \l  %46 = tail call i8* (i8*, i64, i64, i32, ...) @__mremap(i8* nonnull %29, i64\l... %30, i64 %43, i32 1) #21\l  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)\l  br i1 %47, label %205, label %48\l|{<s0>T|<s1>F}}"];
	Node0x22fdfa0:s0 -> Node0x22fea40;
	Node0x22fdfa0:s1 -> Node0x22fdff0;
	Node0x22fdff0 [shape=record,label="{%48:\l48:                                               \l  %49 = getelementptr inbounds i8, i8* %46, i64 %27\l  %50 = sub i64 %43, %27\l  %51 = getelementptr inbounds i8, i8* %49, i64 8\l  %52 = bitcast i8* %51 to i64*\l  store i64 %50, i64* %52, align 8, !tbaa !77\l  %53 = getelementptr inbounds i8, i8* %49, i64 16\l  br label %232\l}"];
	Node0x22fdff0 -> Node0x22fec70;
	Node0x22fe040 [shape=record,label="{%54:\l54:                                               \l  %55 = getelementptr inbounds i8, i8* %18, i64 %22\l  %56 = bitcast i8* %55 to %struct.chunk*\l  %57 = bitcast i8* %55 to i64*\l  %58 = load i64, i64* %57, align 8, !tbaa !81\l  %59 = icmp eq i64 %58, %21\l  br i1 %59, label %61, label %60\l|{<s0>T|<s1>F}}"];
	Node0x22fe040:s0 -> Node0x22fe0e0;
	Node0x22fe040:s1 -> Node0x22fe090;
	Node0x22fe090 [shape=record,label="{%60:\l60:                                               \l  tail call void asm sideeffect \"hlt\",\l... \"~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}\"() #22, !srcloc !82\l  br label %61\l}"];
	Node0x22fe090 -> Node0x22fe0e0;
	Node0x22fe0e0 [shape=record,label="{%61:\l61:                                               \l  %62 = icmp ugt i64 %17, %22\l  br i1 %62, label %63, label %184\l|{<s0>T|<s1>F}}"];
	Node0x22fe0e0:s0 -> Node0x22fe130;
	Node0x22fe0e0:s1 -> Node0x22fe950;
	Node0x22fe130 [shape=record,label="{%63:\l63:                                               \l  %64 = getelementptr inbounds i8, i8* %55, i64 8\l  %65 = bitcast i8* %64 to i64*\l  %66 = load i64, i64* %65, align 8, !tbaa !77\l  %67 = and i64 %66, 1\l  %68 = icmp eq i64 %67, 0\l  br i1 %68, label %69, label %184\l|{<s0>T|<s1>F}}"];
	Node0x22fe130:s0 -> Node0x22fe180;
	Node0x22fe130:s1 -> Node0x22fe950;
	Node0x22fe180 [shape=record,label="{%69:\l69:                                               \l  %70 = phi i64 [ %175, %174 ], [ %66, %63 ]\l  %71 = lshr i64 %70, 5\l  %72 = add nsw i64 %71, -1\l  %73 = icmp ult i64 %72, 33\l  br i1 %73, label %91, label %74\l|{<s0>T|<s1>F}}"];
	Node0x22fe180:s0 -> Node0x22fe310;
	Node0x22fe180:s1 -> Node0x22fe1d0;
	Node0x22fe1d0 [shape=record,label="{%74:\l74:                                               \l  %75 = icmp ult i64 %72, 512\l  br i1 %75, label %76, label %82\l|{<s0>T|<s1>F}}"];
	Node0x22fe1d0:s0 -> Node0x22fe220;
	Node0x22fe1d0:s1 -> Node0x22fe270;
	Node0x22fe220 [shape=record,label="{%76:\l76:                                               \l  %77 = lshr i64 %72, 3\l  %78 = add nsw i64 %77, -4\l  %79 = getelementptr inbounds [60 x i8], [60 x i8]* @bin_tab, i64 0, i64 %78\l  %80 = load i8, i8* %79, align 1, !tbaa !83\l  %81 = zext i8 %80 to i64\l  br label %91\l}"];
	Node0x22fe220 -> Node0x22fe310;
	Node0x22fe270 [shape=record,label="{%82:\l82:                                               \l  %83 = icmp ugt i64 %72, 7168\l  br i1 %83, label %91, label %84\l|{<s0>T|<s1>F}}"];
	Node0x22fe270:s0 -> Node0x22fe310;
	Node0x22fe270:s1 -> Node0x22fe2c0;
	Node0x22fe2c0 [shape=record,label="{%84:\l84:                                               \l  %85 = lshr i64 %72, 7\l  %86 = add nsw i64 %85, -4\l  %87 = getelementptr inbounds [60 x i8], [60 x i8]* @bin_tab, i64 0, i64 %86\l  %88 = load i8, i8* %87, align 1, !tbaa !83\l  %89 = zext i8 %88 to i64\l  %90 = add nuw nsw i64 %89, 16\l  br label %91\l}"];
	Node0x22fe2c0 -> Node0x22fe310;
	Node0x22fe310 [shape=record,label="{%91:\l91:                                               \l  %92 = phi i64 [ %81, %76 ], [ %90, %84 ], [ 63, %82 ], [ %72, %69 ]\l  %93 = getelementptr inbounds %struct.anon.39, %struct.anon.39* @mal, i64 0,\l... i32 1, i64 %92, i32 0, i64 0\l  %94 = load volatile i32, i32* getelementptr inbounds (%struct.__libc,\l... %struct.__libc* @__libc, i64 0, i32 3), align 4, !tbaa !84\l  %95 = icmp eq i32 %94, 0\l  br i1 %95, label %104, label %96\l|{<s0>T|<s1>F}}"];
	Node0x22fe310:s0 -> Node0x22fe450;
	Node0x22fe310:s1 -> Node0x22fe360;
	Node0x22fe360 [shape=record,label="{%96:\l96:                                               \l  %97 = tail call i32 asm sideeffect \"xchg $0, $1\",\l... \"=r,=*m,0,~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}\"(i32* nonnull %93, i32 1)\l... #22, !srcloc !87\l  %98 = icmp eq i32 %97, 0\l  br i1 %98, label %104, label %99\l|{<s0>T|<s1>F}}"];
	Node0x22fe360:s0 -> Node0x22fe450;
	Node0x22fe360:s1 -> Node0x22fe3b0;
	Node0x22fe3b0 [shape=record,label="{%99:\l99:                                               \l  %100 = getelementptr inbounds %struct.anon.39, %struct.anon.39* @mal, i64 0,\l... i32 1, i64 %92, i32 0, i64 1\l  br label %101\l}"];
	Node0x22fe3b0 -> Node0x22fe400;
	Node0x22fe400 [shape=record,label="{%101:\l101:                                              \l  tail call void @__wait(i32* nonnull %93, i32* nonnull %100, i32 1, i32 1) #21\l  %102 = tail call i32 asm sideeffect \"xchg $0, $1\",\l... \"=r,=*m,0,~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}\"(i32* nonnull %93, i32 1)\l... #22, !srcloc !87\l  %103 = icmp eq i32 %102, 0\l  br i1 %103, label %104, label %101\l|{<s0>T|<s1>F}}"];
	Node0x22fe400:s0 -> Node0x22fe450;
	Node0x22fe400:s1 -> Node0x22fe400;
	Node0x22fe450 [shape=record,label="{%104:\l104:                                              \l  %105 = getelementptr inbounds %struct.anon.39, %struct.anon.39* @mal, i64 0,\l... i32 1, i64 %92, i32 1\l  %106 = load %struct.chunk*, %struct.chunk** %105, align 8, !tbaa !88\l  %107 = icmp eq %struct.chunk* %106, null\l  br i1 %107, label %108, label %113\l|{<s0>T|<s1>F}}"];
	Node0x22fe450:s0 -> Node0x22fe4a0;
	Node0x22fe450:s1 -> Node0x22fe4f0;
	Node0x22fe4a0 [shape=record,label="{%108:\l108:                                              \l  %109 = getelementptr inbounds %struct.chunk*, %struct.chunk** %105, i64 -2\l  %110 = getelementptr inbounds %struct.anon.39, %struct.anon.39* @mal, i64 0,\l... i32 1, i64 %92, i32 2\l  %111 = bitcast %struct.chunk** %110 to %struct.chunk***\l  store %struct.chunk** %109, %struct.chunk*** %111, align 8, !tbaa !90\l  %112 = bitcast %struct.chunk** %105 to %struct.chunk***\l  store %struct.chunk** %109, %struct.chunk*** %112, align 8, !tbaa !88\l  br label %113\l}"];
	Node0x22fe4a0 -> Node0x22fe4f0;
	Node0x22fe4f0 [shape=record,label="{%113:\l113:                                              \l  %114 = load i64, i64* %65, align 8, !tbaa !77\l  %115 = icmp eq i64 %114, %70\l  br i1 %115, label %116, label %161\l|{<s0>T|<s1>F}}"];
	Node0x22fe4f0:s0 -> Node0x22fe540;
	Node0x22fe4f0:s1 -> Node0x22fe770;
	Node0x22fe540 [shape=record,label="{%116:\l116:                                              \l  %117 = getelementptr inbounds i8, i8* %55, i64 24\l  %118 = bitcast i8* %117 to %struct.chunk**\l  %119 = load %struct.chunk*, %struct.chunk** %118, align 8, !tbaa !91\l  %120 = getelementptr inbounds i8, i8* %55, i64 16\l  %121 = bitcast i8* %120 to %struct.chunk**\l  %122 = load %struct.chunk*, %struct.chunk** %121, align 8, !tbaa !92\l  %123 = icmp eq %struct.chunk* %119, %122\l  br i1 %123, label %126, label %124\l|{<s0>T|<s1>F}}"];
	Node0x22fe540:s0 -> Node0x22fe5e0;
	Node0x22fe540:s1 -> Node0x22fe590;
	Node0x22fe590 [shape=record,label="{%124:\l124:                                              \l  %125 = ptrtoint %struct.chunk* %122 to i64\l  br label %133\l}"];
	Node0x22fe590 -> Node0x22fe630;
	Node0x22fe5e0 [shape=record,label="{%126:\l126:                                              \l  %127 = shl nuw i64 1, %92\l  %128 = xor i64 %127, -1\l  tail call void asm sideeffect \"lock \l  %129 = bitcast i8* %120 to i64*\l  %130 = load i64, i64* %129, align 8, !tbaa !92\l  %131 = load %struct.chunk*, %struct.chunk** %118, align 8, !tbaa !91\l  %132 = load i64, i64* %65, align 8, !tbaa !77\l  br label %133\l}"];
	Node0x22fe5e0 -> Node0x22fe630;
	Node0x22fe630 [shape=record,label="{%133:\l133:                                              \l  %134 = phi i64 [ %132, %126 ], [ %70, %124 ]\l  %135 = phi %struct.chunk* [ %131, %126 ], [ %119, %124 ]\l  %136 = phi i64 [ %130, %126 ], [ %125, %124 ]\l  %137 = ptrtoint %struct.chunk* %135 to i64\l  %138 = getelementptr inbounds %struct.chunk, %struct.chunk* %135, i64 0, i32\l... 2\l  %139 = bitcast %struct.chunk** %138 to i64*\l  store i64 %136, i64* %139, align 8, !tbaa !92\l  %140 = load %struct.chunk*, %struct.chunk** %121, align 8, !tbaa !92\l  %141 = getelementptr inbounds %struct.chunk, %struct.chunk* %140, i64 0, i32\l... 3\l  %142 = bitcast %struct.chunk** %141 to i64*\l  store i64 %137, i64* %142, align 8, !tbaa !91\l  %143 = or i64 %134, 1\l  store i64 %143, i64* %65, align 8, !tbaa !77\l  %144 = and i64 %134, -2\l  %145 = getelementptr inbounds i8, i8* %55, i64 %144\l  %146 = bitcast i8* %145 to i64*\l  %147 = load i64, i64* %146, align 8, !tbaa !81\l  %148 = or i64 %147, 1\l  store i64 %148, i64* %146, align 8, !tbaa !81\l  %149 = load volatile i32, i32* %93, align 8, !tbaa !73\l  %150 = icmp eq i32 %149, 0\l  br i1 %150, label %178, label %151\l|{<s0>T|<s1>F}}"];
	Node0x22fe630:s0 -> Node0x22fe900;
	Node0x22fe630:s1 -> Node0x22fe680;
	Node0x22fe680 [shape=record,label="{%151:\l151:                                              \l  tail call void asm sideeffect \"mov $1, $0 \l  %152 = getelementptr inbounds %struct.anon.39, %struct.anon.39* @mal, i64 0,\l... i32 1, i64 %92, i32 0, i64 1\l  %153 = load volatile i32, i32* %152, align 4, !tbaa !73\l  %154 = icmp eq i32 %153, 0\l  br i1 %154, label %178, label %155\l|{<s0>T|<s1>F}}"];
	Node0x22fe680:s0 -> Node0x22fe900;
	Node0x22fe680:s1 -> Node0x22fe6d0;
	Node0x22fe6d0 [shape=record,label="{%155:\l155:                                              \l  %156 = ptrtoint i32* %93 to i64\l  %157 = tail call i64 asm sideeffect \"syscall\",\l... \"=\{ax\},\{ax\},\{di\},\{si\},\{dx\},~\{rcx\},~\{r11\},~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}\l...\"(i64 202, i64 %156, i64 129, i64 1) #22, !srcloc !95\l  %158 = icmp eq i64 %157, -38\l  br i1 %158, label %159, label %178\l|{<s0>T|<s1>F}}"];
	Node0x22fe6d0:s0 -> Node0x22fe720;
	Node0x22fe6d0:s1 -> Node0x22fe900;
	Node0x22fe720 [shape=record,label="{%159:\l159:                                              \l  %160 = tail call i64 asm sideeffect \"syscall\",\l... \"=\{ax\},\{ax\},\{di\},\{si\},\{dx\},~\{rcx\},~\{r11\},~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}\l...\"(i64 202, i64 %156, i64 1, i64 1) #22, !srcloc !95\l  br label %178\l}"];
	Node0x22fe720 -> Node0x22fe900;
	Node0x22fe770 [shape=record,label="{%161:\l161:                                              \l  %162 = load volatile i32, i32* %93, align 8, !tbaa !73\l  %163 = icmp eq i32 %162, 0\l  br i1 %163, label %174, label %164\l|{<s0>T|<s1>F}}"];
	Node0x22fe770:s0 -> Node0x22fe8b0;
	Node0x22fe770:s1 -> Node0x22fe7c0;
	Node0x22fe7c0 [shape=record,label="{%164:\l164:                                              \l  tail call void asm sideeffect \"mov $1, $0 \l  %165 = getelementptr inbounds %struct.anon.39, %struct.anon.39* @mal, i64 0,\l... i32 1, i64 %92, i32 0, i64 1\l  %166 = load volatile i32, i32* %165, align 4, !tbaa !73\l  %167 = icmp eq i32 %166, 0\l  br i1 %167, label %174, label %168\l|{<s0>T|<s1>F}}"];
	Node0x22fe7c0:s0 -> Node0x22fe8b0;
	Node0x22fe7c0:s1 -> Node0x22fe810;
	Node0x22fe810 [shape=record,label="{%168:\l168:                                              \l  %169 = ptrtoint i32* %93 to i64\l  %170 = tail call i64 asm sideeffect \"syscall\",\l... \"=\{ax\},\{ax\},\{di\},\{si\},\{dx\},~\{rcx\},~\{r11\},~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}\l...\"(i64 202, i64 %169, i64 129, i64 1) #22, !srcloc !95\l  %171 = icmp eq i64 %170, -38\l  br i1 %171, label %172, label %174\l|{<s0>T|<s1>F}}"];
	Node0x22fe810:s0 -> Node0x22fe860;
	Node0x22fe810:s1 -> Node0x22fe8b0;
	Node0x22fe860 [shape=record,label="{%172:\l172:                                              \l  %173 = tail call i64 asm sideeffect \"syscall\",\l... \"=\{ax\},\{ax\},\{di\},\{si\},\{dx\},~\{rcx\},~\{r11\},~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}\l...\"(i64 202, i64 %169, i64 1, i64 1) #22, !srcloc !95\l  br label %174\l}"];
	Node0x22fe860 -> Node0x22fe8b0;
	Node0x22fe8b0 [shape=record,label="{%174:\l174:                                              \l  %175 = load i64, i64* %65, align 8, !tbaa !77\l  %176 = and i64 %175, 1\l  %177 = icmp eq i64 %176, 0\l  br i1 %177, label %69, label %184\l|{<s0>T|<s1>F}}"];
	Node0x22fe8b0:s0 -> Node0x22fe180;
	Node0x22fe8b0:s1 -> Node0x22fe950;
	Node0x22fe900 [shape=record,label="{%178:\l178:                                              \l  %179 = load i64, i64* %65, align 8, !tbaa !77\l  %180 = and i64 %179, -2\l  %181 = add i64 %180, %22\l  %182 = getelementptr inbounds i8, i8* %55, i64 %180\l  %183 = bitcast i8* %182 to %struct.chunk*\l  br label %184\l}"];
	Node0x22fe900 -> Node0x22fe950;
	Node0x22fe950 [shape=record,label="{%184:\l184:                                              \l  %185 = phi %struct.chunk* [ %183, %178 ], [ %56, %61 ], [ %56, %63 ], [ %56,\l... %174 ]\l  %186 = phi i64 [ %181, %178 ], [ %22, %61 ], [ %22, %63 ], [ %22, %174 ]\l  %187 = or i64 %186, 1\l  store i64 %187, i64* %20, align 8, !tbaa !77\l  %188 = getelementptr inbounds %struct.chunk, %struct.chunk* %185, i64 0, i32\l... 0\l  store i64 %187, i64* %188, align 8, !tbaa !81\l  %189 = icmp ugt i64 %17, %186\l  br i1 %189, label %205, label %190\l|{<s0>T|<s1>F}}"];
	Node0x22fe950:s0 -> Node0x22fea40;
	Node0x22fe950:s1 -> Node0x22fe9a0;
	Node0x22fe9a0 [shape=record,label="{%190:\l190:                                              \l  %191 = and i64 %186, -2\l  %192 = add i64 %191, -16\l  %193 = icmp ugt i64 %192, %17\l  br i1 %193, label %194, label %232\l|{<s0>T|<s1>F}}"];
	Node0x22fe9a0:s0 -> Node0x22fe9f0;
	Node0x22fe9a0:s1 -> Node0x22fec70;
	Node0x22fe9f0 [shape=record,label="{%194:\l194:                                              \l  %195 = getelementptr inbounds i8, i8* %18, i64 %191\l  %196 = getelementptr inbounds i8, i8* %18, i64 %17\l  %197 = bitcast i8* %196 to %struct.chunk*\l  %198 = or i64 %17, 1\l  %199 = bitcast i8* %196 to i64*\l  store i64 %198, i64* %199, align 8, !tbaa !81\l  %200 = sub i64 %191, %17\l  %201 = or i64 %200, 1\l  %202 = getelementptr inbounds i8, i8* %196, i64 8\l  %203 = bitcast i8* %202 to i64*\l  store i64 %201, i64* %203, align 8, !tbaa !77\l  %204 = bitcast i8* %195 to i64*\l  store i64 %201, i64* %204, align 8, !tbaa !81\l  store i64 %198, i64* %20, align 8, !tbaa !77\l  tail call void @__bin_chunk(%struct.chunk* nonnull %197) #21\l  br label %232\l}"];
	Node0x22fe9f0 -> Node0x22fec70;
	Node0x22fea40 [shape=record,label="{%205:\l205:                                              \l  %206 = add i64 %17, -16\l  %207 = tail call i8* @malloc(i64 %206) #20\l  %208 = icmp eq i8* %207, null\l  br i1 %208, label %232, label %209\l|{<s0>T|<s1>F}}"];
	Node0x22fea40:s0 -> Node0x22fec70;
	Node0x22fea40:s1 -> Node0x22fea90;
	Node0x22fea90 [shape=record,label="{%209:\l209:                                              \l  %210 = add i64 %22, -16\l  br label %211\l}"];
	Node0x22fea90 -> Node0x22feae0;
	Node0x22feae0 [shape=record,label="{%211:\l211:                                              \l  %212 = phi i64 [ %210, %209 ], [ %38, %37 ]\l  %213 = phi i8* [ %207, %209 ], [ %39, %37 ]\l  %214 = tail call i8* @memcpy(i8* nonnull %213, i8* nonnull %0, i64 %212) #21\l  %215 = load i64, i64* %20, align 8, !tbaa !77\l  %216 = and i64 %215, 1\l  %217 = icmp eq i64 %216, 0\l  br i1 %217, label %218, label %230\l|{<s0>T|<s1>F}}"];
	Node0x22feae0:s0 -> Node0x22feb30;
	Node0x22feae0:s1 -> Node0x22fec20;
	Node0x22feb30 [shape=record,label="{%218:\l218:                                              \l  %219 = bitcast i8* %18 to i64*\l  %220 = load i64, i64* %219, align 8, !tbaa !81\l  %221 = sub i64 0, %220\l  %222 = getelementptr inbounds i8, i8* %18, i64 %221\l  %223 = and i64 %215, -2\l  %224 = add i64 %220, %223\l  %225 = and i64 %220, 1\l  %226 = icmp eq i64 %225, 0\l  br i1 %226, label %228, label %227\l|{<s0>T|<s1>F}}"];
	Node0x22feb30:s0 -> Node0x22febd0;
	Node0x22feb30:s1 -> Node0x22feb80;
	Node0x22feb80 [shape=record,label="{%227:\l227:                                              \l  tail call void asm sideeffect \"hlt\",\l... \"~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}\"() #22, !srcloc !82\l  br label %228\l}"];
	Node0x22feb80 -> Node0x22febd0;
	Node0x22febd0 [shape=record,label="{%228:\l228:                                              \l  %229 = tail call i32 @__munmap(i8* nonnull %222, i64 %224) #21\l  br label %232\l}"];
	Node0x22febd0 -> Node0x22fec70;
	Node0x22fec20 [shape=record,label="{%230:\l230:                                              \l  %231 = bitcast i8* %18 to %struct.chunk*\l  tail call void @__bin_chunk(%struct.chunk* nonnull %231) #21\l  br label %232\l}"];
	Node0x22fec20 -> Node0x22fec70;
	Node0x22fec70 [shape=record,label="{%232:\l232:                                              \l  %233 = phi i8* [ %5, %4 ], [ null, %14 ], [ null, %205 ], [ %0, %190 ], [\l... %0, %194 ], [ %213, %228 ], [ %213, %230 ], [ %0, %41 ], [ %53, %48 ]\l  ret i8* %233\l}"];
}
