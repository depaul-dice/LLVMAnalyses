digraph "CFG for 'malloc' function" {
	label="CFG for 'malloc' function";

	Node0x23060f0 [shape=record,label="{%1:\l  %2 = alloca i64, align 8\l  %3 = add i64 %0, -1\l  %4 = icmp ugt i64 %3, 9223372036854771679\l  br i1 %4, label %5, label %9\l|{<s0>T|<s1>F}}"];
	Node0x23060f0:s0 -> Node0x2306360;
	Node0x23060f0:s1 -> Node0x2306400;
	Node0x2306360 [shape=record,label="{%5:\l5:                                                \l  %6 = icmp eq i64 %0, 0\l  br i1 %6, label %29, label %7\l|{<s0>T|<s1>F}}"];
	Node0x2306360:s0 -> Node0x2306540;
	Node0x2306360:s1 -> Node0x23063b0;
	Node0x23063b0 [shape=record,label="{%7:\l7:                                                \l  %8 = tail call i32* @___errno_location() #20\l  store i32 12, i32* %8, align 4, !tbaa !73\l  br label %322\l}"];
	Node0x23063b0 -> Node0x2307760;
	Node0x2306400 [shape=record,label="{%9:\l9:                                                \l  %10 = add nuw nsw i64 %0, 47\l  %11 = and i64 %10, -32\l  %12 = icmp ugt i64 %11, 229376\l  br i1 %12, label %13, label %25\l|{<s0>T|<s1>F}}"];
	Node0x2306400:s0 -> Node0x2306450;
	Node0x2306400:s1 -> Node0x23064f0;
	Node0x2306450 [shape=record,label="{%13:\l13:                                               \l  %14 = add nuw i64 %11, 4111\l  %15 = and i64 %14, -4096\l  %16 = tail call i8* @__mmap(i8* null, i64 %15, i32 3, i32 34, i32 -1, i64 0)\l... #20\l  %17 = icmp eq i8* %16, inttoptr (i64 -1 to i8*)\l  br i1 %17, label %322, label %18\l|{<s0>T|<s1>F}}"];
	Node0x2306450:s0 -> Node0x2307760;
	Node0x2306450:s1 -> Node0x23064a0;
	Node0x23064a0 [shape=record,label="{%18:\l18:                                               \l  %19 = getelementptr inbounds i8, i8* %16, i64 16\l  %20 = add i64 %15, -16\l  %21 = getelementptr inbounds i8, i8* %16, i64 24\l  %22 = bitcast i8* %21 to i64*\l  store i64 %20, i64* %22, align 8, !tbaa !77\l  %23 = bitcast i8* %19 to i64*\l  store i64 16, i64* %23, align 8, !tbaa !81\l  %24 = getelementptr inbounds i8, i8* %16, i64 32\l  br label %322\l}"];
	Node0x23064a0 -> Node0x2307760;
	Node0x23064f0 [shape=record,label="{%25:\l25:                                               \l  %26 = lshr i64 %10, 5\l  %27 = add nsw i64 %26, -1\l  %28 = icmp ult i64 %27, 33\l  br i1 %28, label %29, label %33\l|{<s0>T|<s1>F}}"];
	Node0x23064f0:s0 -> Node0x2306540;
	Node0x23064f0:s1 -> Node0x2306590;
	Node0x2306540 [shape=record,label="{%29:\l29:                                               \l  %30 = phi i64 [ %27, %25 ], [ 0, %5 ]\l  %31 = phi i64 [ %11, %25 ], [ 32, %5 ]\l  %32 = trunc i64 %30 to i32\l  br label %50\l}"];
	Node0x2306540 -> Node0x2306680;
	Node0x2306590 [shape=record,label="{%33:\l33:                                               \l  %34 = add nsw i64 %26, -2\l  %35 = icmp ult i64 %34, 512\l  br i1 %35, label %36, label %43\l|{<s0>T|<s1>F}}"];
	Node0x2306590:s0 -> Node0x23065e0;
	Node0x2306590:s1 -> Node0x2306630;
	Node0x23065e0 [shape=record,label="{%36:\l36:                                               \l  %37 = lshr i64 %34, 3\l  %38 = add nsw i64 %37, -4\l  %39 = getelementptr inbounds [60 x i8], [60 x i8]* @bin_tab, i64 0, i64 %38\l  %40 = load i8, i8* %39, align 1, !tbaa !82\l  %41 = zext i8 %40 to i32\l  %42 = add nuw nsw i32 %41, 1\l  br label %50\l}"];
	Node0x23065e0 -> Node0x2306680;
	Node0x2306630 [shape=record,label="{%43:\l43:                                               \l  %44 = lshr i64 %34, 7\l  %45 = add nsw i64 %44, -4\l  %46 = getelementptr inbounds [60 x i8], [60 x i8]* @bin_tab, i64 0, i64 %45\l  %47 = load i8, i8* %46, align 1, !tbaa !82\l  %48 = zext i8 %47 to i32\l  %49 = add nuw nsw i32 %48, 17\l  br label %50\l}"];
	Node0x2306630 -> Node0x2306680;
	Node0x2306680 [shape=record,label="{%50:\l50:                                               \l  %51 = phi i64 [ %31, %29 ], [ %11, %36 ], [ %11, %43 ]\l  %52 = phi i32 [ %32, %29 ], [ %42, %36 ], [ %49, %43 ]\l  %53 = load volatile i64, i64* getelementptr inbounds (%struct.anon.39,\l... %struct.anon.39* @mal, i64 0, i32 0), align 8, !tbaa !83\l  %54 = zext i32 %52 to i64\l  %55 = shl nsw i64 -1, %54\l  %56 = and i64 %53, %55\l  %57 = icmp eq i64 %56, 0\l  br i1 %57, label %58, label %138\l|{<s0>T|<s1>F}}"];
	Node0x2306680:s0 -> Node0x23066d0;
	Node0x2306680:s1 -> Node0x2306c20;
	Node0x23066d0 [shape=record,label="{%58:\l58:                                               \l  %59 = bitcast i64* %2 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59)\l  %60 = add i64 %51, 32\l  store i64 %60, i64* %2, align 8, !tbaa !85\l  %61 = load volatile i32, i32* getelementptr inbounds (%struct.__libc,\l... %struct.__libc* @__libc, i64 0, i32 3), align 4, !tbaa !86\l  %62 = icmp eq i32 %61, 0\l  br i1 %62, label %69, label %63\l|{<s0>T|<s1>F}}"];
	Node0x23066d0:s0 -> Node0x23067c0;
	Node0x23066d0:s1 -> Node0x2306720;
	Node0x2306720 [shape=record,label="{%63:\l63:                                               \l  %64 = tail call i32 asm sideeffect \"xchg $0, $1\",\l... \"=r,=*m,0,~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}\"(i32* getelementptr inbounds\l... ([2 x i32], [2 x i32]* @expand_heap.heap_lock, i64 0, i64 0), i32 1) #21,\l... !srcloc !89\l  %65 = icmp eq i32 %64, 0\l  br i1 %65, label %69, label %66\l|{<s0>T|<s1>F}}"];
	Node0x2306720:s0 -> Node0x23067c0;
	Node0x2306720:s1 -> Node0x2306770;
	Node0x2306770 [shape=record,label="{%66:\l66:                                               \l  tail call void @__wait(i32* getelementptr inbounds ([2 x i32], [2 x i32]*\l... @expand_heap.heap_lock, i64 0, i64 0), i32* nonnull getelementptr inbounds\l... ([2 x i32], [2 x i32]* @expand_heap.heap_lock, i64 0, i64 1), i32 1, i32 1)\l... #20\l  %67 = tail call i32 asm sideeffect \"xchg $0, $1\",\l... \"=r,=*m,0,~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}\"(i32* getelementptr inbounds\l... ([2 x i32], [2 x i32]* @expand_heap.heap_lock, i64 0, i64 0), i32 1) #21,\l... !srcloc !89\l  %68 = icmp eq i32 %67, 0\l  br i1 %68, label %69, label %66\l|{<s0>T|<s1>F}}"];
	Node0x2306770:s0 -> Node0x23067c0;
	Node0x2306770:s1 -> Node0x2306770;
	Node0x23067c0 [shape=record,label="{%69:\l69:                                               \l  %70 = call i8* @__expand_heap(i64* nonnull %2) #20\l  %71 = icmp eq i8* %70, null\l  br i1 %71, label %72, label %83\l|{<s0>T|<s1>F}}"];
	Node0x23067c0:s0 -> Node0x2306810;
	Node0x23067c0:s1 -> Node0x2306950;
	Node0x2306810 [shape=record,label="{%72:\l72:                                               \l  %73 = load volatile i32, i32* getelementptr inbounds ([2 x i32], [2 x i32]*\l... @expand_heap.heap_lock, i64 0, i64 0), align 4, !tbaa !73\l  %74 = icmp eq i32 %73, 0\l  br i1 %74, label %117, label %75\l|{<s0>T|<s1>F}}"];
	Node0x2306810:s0 -> Node0x2306b30;
	Node0x2306810:s1 -> Node0x2306860;
	Node0x2306860 [shape=record,label="{%75:\l75:                                               \l  call void asm sideeffect \"mov $1, $0 \l  %76 = load volatile i32, i32* getelementptr inbounds ([2 x i32], [2 x i32]*\l... @expand_heap.heap_lock, i64 0, i64 1), align 4, !tbaa !73\l  %77 = icmp eq i32 %76, 0\l  br i1 %77, label %117, label %78\l|{<s0>T|<s1>F}}"];
	Node0x2306860:s0 -> Node0x2306b30;
	Node0x2306860:s1 -> Node0x23068b0;
	Node0x23068b0 [shape=record,label="{%78:\l78:                                               \l  %79 = call i64 asm sideeffect \"syscall\",\l... \"=\{ax\},\{ax\},\{di\},\{si\},\{dx\},~\{rcx\},~\{r11\},~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}\l...\"(i64 202, i64 ptrtoint ([2 x i32]* @expand_heap.heap_lock to i64), i64 129,\l... i64 1) #21, !srcloc !91\l  %80 = icmp eq i64 %79, -38\l  br i1 %80, label %81, label %117\l|{<s0>T|<s1>F}}"];
	Node0x23068b0:s0 -> Node0x2306900;
	Node0x23068b0:s1 -> Node0x2306b30;
	Node0x2306900 [shape=record,label="{%81:\l81:                                               \l  %82 = call i64 asm sideeffect \"syscall\",\l... \"=\{ax\},\{ax\},\{di\},\{si\},\{dx\},~\{rcx\},~\{r11\},~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}\l...\"(i64 202, i64 ptrtoint ([2 x i32]* @expand_heap.heap_lock to i64), i64 1, i64\l... 1) #21, !srcloc !91\l  br label %117\l}"];
	Node0x2306900 -> Node0x2306b30;
	Node0x2306950 [shape=record,label="{%83:\l83:                                               \l  %84 = load i8*, i8** @expand_heap.end, align 8, !tbaa !92\l  %85 = icmp eq i8* %70, %84\l  %86 = load i64, i64* %2, align 8, !tbaa !85\l  br i1 %85, label %92, label %87\l|{<s0>T|<s1>F}}"];
	Node0x2306950:s0 -> Node0x23069f0;
	Node0x2306950:s1 -> Node0x23069a0;
	Node0x23069a0 [shape=record,label="{%87:\l87:                                               \l  %88 = add i64 %86, -32\l  store i64 %88, i64* %2, align 8, !tbaa !85\l  %89 = getelementptr inbounds i8, i8* %70, i64 32\l  %90 = getelementptr inbounds i8, i8* %70, i64 16\l  %91 = bitcast i8* %90 to i64*\l  store i64 1, i64* %91, align 8, !tbaa !81\l  br label %92\l}"];
	Node0x23069a0 -> Node0x23069f0;
	Node0x23069f0 [shape=record,label="{%92:\l92:                                               \l  %93 = phi i64 [ %88, %87 ], [ %86, %83 ]\l  %94 = phi i8* [ %89, %87 ], [ %70, %83 ]\l  %95 = getelementptr inbounds i8, i8* %94, i64 %93\l  store i8* %95, i8** @expand_heap.end, align 8, !tbaa !92\l  %96 = getelementptr inbounds i8, i8* %95, i64 -16\l  %97 = or i64 %93, 1\l  %98 = bitcast i8* %96 to i64*\l  store i64 %97, i64* %98, align 8, !tbaa !81\l  %99 = getelementptr inbounds i8, i8* %96, i64 8\l  %100 = bitcast i8* %99 to i64*\l  store i64 1, i64* %100, align 8, !tbaa !77\l  %101 = getelementptr inbounds i8, i8* %94, i64 -16\l  %102 = bitcast i8* %101 to %struct.chunk*\l  %103 = load i64, i64* %2, align 8, !tbaa !85\l  %104 = or i64 %103, 1\l  %105 = getelementptr inbounds i8, i8* %94, i64 -8\l  %106 = bitcast i8* %105 to i64*\l  store i64 %104, i64* %106, align 8, !tbaa !77\l  %107 = load volatile i32, i32* getelementptr inbounds ([2 x i32], [2 x i32]*\l... @expand_heap.heap_lock, i64 0, i64 0), align 4, !tbaa !73\l  %108 = icmp eq i32 %107, 0\l  br i1 %108, label %118, label %109\l|{<s0>T|<s1>F}}"];
	Node0x23069f0:s0 -> Node0x2306b80;
	Node0x23069f0:s1 -> Node0x2306a40;
	Node0x2306a40 [shape=record,label="{%109:\l109:                                              \l  call void asm sideeffect \"mov $1, $0 \l  %110 = load volatile i32, i32* getelementptr inbounds ([2 x i32], [2 x i32]*\l... @expand_heap.heap_lock, i64 0, i64 1), align 4, !tbaa !73\l  %111 = icmp eq i32 %110, 0\l  br i1 %111, label %118, label %112\l|{<s0>T|<s1>F}}"];
	Node0x2306a40:s0 -> Node0x2306b80;
	Node0x2306a40:s1 -> Node0x2306a90;
	Node0x2306a90 [shape=record,label="{%112:\l112:                                              \l  %113 = call i64 asm sideeffect \"syscall\",\l... \"=\{ax\},\{ax\},\{di\},\{si\},\{dx\},~\{rcx\},~\{r11\},~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}\l...\"(i64 202, i64 ptrtoint ([2 x i32]* @expand_heap.heap_lock to i64), i64 129,\l... i64 1) #21, !srcloc !91\l  %114 = icmp eq i64 %113, -38\l  br i1 %114, label %115, label %118\l|{<s0>T|<s1>F}}"];
	Node0x2306a90:s0 -> Node0x2306ae0;
	Node0x2306a90:s1 -> Node0x2306b80;
	Node0x2306ae0 [shape=record,label="{%115:\l115:                                              \l  %116 = call i64 asm sideeffect \"syscall\",\l... \"=\{ax\},\{ax\},\{di\},\{si\},\{dx\},~\{rcx\},~\{r11\},~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}\l...\"(i64 202, i64 ptrtoint ([2 x i32]* @expand_heap.heap_lock to i64), i64 1, i64\l... 1) #21, !srcloc !91\l  br label %118\l}"];
	Node0x2306ae0 -> Node0x2306b80;
	Node0x2306b30 [shape=record,label="{%117:\l117:                                              \l  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59)\l  br label %322\l}"];
	Node0x2306b30 -> Node0x2307760;
	Node0x2306b80 [shape=record,label="{%118:\l118:                                              \l  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59)\l  %119 = call fastcc i32 @alloc_rev(%struct.chunk* nonnull %102) #22\l  %120 = icmp eq i32 %119, 0\l  br i1 %120, label %300, label %121\l|{<s0>T|<s1>F}}"];
	Node0x2306b80:s0 -> Node0x2307670;
	Node0x2306b80:s1 -> Node0x2306bd0;
	Node0x2306bd0 [shape=record,label="{%121:\l121:                                              \l  %122 = bitcast i8* %101 to i64*\l  %123 = load i64, i64* %122, align 8, !tbaa !81\l  %124 = and i64 %123, -2\l  %125 = sub i64 0, %124\l  %126 = getelementptr inbounds i8, i8* %101, i64 %125\l  %127 = bitcast i8* %126 to %struct.chunk*\l  %128 = load i64, i64* %106, align 8, !tbaa !77\l  %129 = getelementptr inbounds i8, i8* %126, i64 8\l  %130 = bitcast i8* %129 to i64*\l  %131 = load i64, i64* %130, align 8, !tbaa !77\l  %132 = and i64 %131, -2\l  %133 = add i64 %132, %128\l  store i64 %133, i64* %130, align 8, !tbaa !77\l  %134 = load i64, i64* %106, align 8, !tbaa !77\l  %135 = and i64 %134, -2\l  %136 = getelementptr inbounds i8, i8* %101, i64 %135\l  %137 = bitcast i8* %136 to i64*\l  store i64 %133, i64* %137, align 8, !tbaa !81\l  br label %300\l}"];
	Node0x2306bd0 -> Node0x2307670;
	Node0x2306c20 [shape=record,label="{%138:\l138:                                              \l  %139 = phi i64 [ %298, %296 ], [ %56, %50 ]\l  %140 = tail call i64 asm \"bsf $1,$0\", \"=r,r,~\{dirflag\},~\{fpsr\},~\{flags\}\"(i64\l... %139) #23, !srcloc !93\l  %141 = shl i64 %140, 32\l  %142 = ashr exact i64 %141, 32\l  %143 = getelementptr inbounds %struct.anon.39, %struct.anon.39* @mal, i64 0,\l... i32 1, i64 %142, i32 0, i64 0\l  %144 = load volatile i32, i32* getelementptr inbounds (%struct.__libc,\l... %struct.__libc* @__libc, i64 0, i32 3), align 4, !tbaa !86\l  %145 = icmp eq i32 %144, 0\l  br i1 %145, label %154, label %146\l|{<s0>T|<s1>F}}"];
	Node0x2306c20:s0 -> Node0x2306d60;
	Node0x2306c20:s1 -> Node0x2306c70;
	Node0x2306c70 [shape=record,label="{%146:\l146:                                              \l  %147 = tail call i32 asm sideeffect \"xchg $0, $1\",\l... \"=r,=*m,0,~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}\"(i32* nonnull %143, i32 1)\l... #21, !srcloc !89\l  %148 = icmp eq i32 %147, 0\l  br i1 %148, label %154, label %149\l|{<s0>T|<s1>F}}"];
	Node0x2306c70:s0 -> Node0x2306d60;
	Node0x2306c70:s1 -> Node0x2306cc0;
	Node0x2306cc0 [shape=record,label="{%149:\l149:                                              \l  %150 = getelementptr inbounds %struct.anon.39, %struct.anon.39* @mal, i64 0,\l... i32 1, i64 %142, i32 0, i64 1\l  br label %151\l}"];
	Node0x2306cc0 -> Node0x2306d10;
	Node0x2306d10 [shape=record,label="{%151:\l151:                                              \l  tail call void @__wait(i32* nonnull %143, i32* nonnull %150, i32 1, i32 1)\l... #20\l  %152 = tail call i32 asm sideeffect \"xchg $0, $1\",\l... \"=r,=*m,0,~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}\"(i32* nonnull %143, i32 1)\l... #21, !srcloc !89\l  %153 = icmp eq i32 %152, 0\l  br i1 %153, label %154, label %151\l|{<s0>T|<s1>F}}"];
	Node0x2306d10:s0 -> Node0x2306d60;
	Node0x2306d10:s1 -> Node0x2306d10;
	Node0x2306d60 [shape=record,label="{%154:\l154:                                              \l  %155 = getelementptr inbounds %struct.anon.39, %struct.anon.39* @mal, i64 0,\l... i32 1, i64 %142, i32 1\l  %156 = load %struct.chunk*, %struct.chunk** %155, align 8, !tbaa !94\l  %157 = icmp eq %struct.chunk* %156, null\l  %158 = getelementptr inbounds %struct.chunk*, %struct.chunk** %155, i64 -2\l  br i1 %157, label %159, label %163\l|{<s0>T|<s1>F}}"];
	Node0x2306d60:s0 -> Node0x2306db0;
	Node0x2306d60:s1 -> Node0x2306e00;
	Node0x2306db0 [shape=record,label="{%159:\l159:                                              \l  %160 = getelementptr inbounds %struct.anon.39, %struct.anon.39* @mal, i64 0,\l... i32 1, i64 %142, i32 2\l  %161 = bitcast %struct.chunk** %160 to %struct.chunk***\l  store %struct.chunk** %158, %struct.chunk*** %161, align 8, !tbaa !96\l  %162 = bitcast %struct.chunk** %155 to %struct.chunk***\l  store %struct.chunk** %158, %struct.chunk*** %162, align 8, !tbaa !94\l  br label %283\l}"];
	Node0x2306db0 -> Node0x23074e0;
	Node0x2306e00 [shape=record,label="{%163:\l163:                                              \l  %164 = bitcast %struct.chunk** %158 to %struct.chunk*\l  %165 = icmp eq %struct.chunk* %156, %164\l  br i1 %165, label %283, label %166\l|{<s0>T|<s1>F}}"];
	Node0x2306e00:s0 -> Node0x23074e0;
	Node0x2306e00:s1 -> Node0x2306e50;
	Node0x2306e50 [shape=record,label="{%166:\l166:                                              \l  %167 = trunc i64 %140 to i32\l  %168 = icmp slt i32 %167, 40\l  br i1 %168, label %237, label %169\l|{<s0>T|<s1>F}}"];
	Node0x2306e50:s0 -> Node0x2307260;
	Node0x2306e50:s1 -> Node0x2306ea0;
	Node0x2306ea0 [shape=record,label="{%169:\l169:                                              \l  %170 = add nsw i32 %52, 3\l  %171 = icmp sgt i32 %170, %167\l  br i1 %171, label %172, label %180\l|{<s0>T|<s1>F}}"];
	Node0x2306ea0:s0 -> Node0x2306ef0;
	Node0x2306ea0:s1 -> Node0x2306f90;
	Node0x2306ef0 [shape=record,label="{%172:\l172:                                              \l  %173 = icmp eq i32 %167, 63\l  br i1 %173, label %174, label %237\l|{<s0>T|<s1>F}}"];
	Node0x2306ef0:s0 -> Node0x2306f40;
	Node0x2306ef0:s1 -> Node0x2307260;
	Node0x2306f40 [shape=record,label="{%174:\l174:                                              \l  %175 = getelementptr inbounds %struct.chunk, %struct.chunk* %156, i64 0, i32\l... 1\l  %176 = load i64, i64* %175, align 8, !tbaa !77\l  %177 = and i64 %176, -2\l  %178 = sub i64 %177, %51\l  %179 = icmp ult i64 %178, 229377\l  br i1 %179, label %237, label %185\l|{<s0>T|<s1>F}}"];
	Node0x2306f40:s0 -> Node0x2307260;
	Node0x2306f40:s1 -> Node0x2306fe0;
	Node0x2306f90 [shape=record,label="{%180:\l180:                                              \l  %181 = getelementptr inbounds %struct.chunk, %struct.chunk* %156, i64 0, i32\l... 1\l  %182 = load i64, i64* %181, align 8, !tbaa !77\l  %183 = and i64 %182, -2\l  %184 = sub i64 %183, %51\l  br label %185\l}"];
	Node0x2306f90 -> Node0x2306fe0;
	Node0x2306fe0 [shape=record,label="{%185:\l185:                                              \l  %186 = phi i64 [ %178, %174 ], [ %184, %180 ]\l  %187 = phi i64 [ %176, %174 ], [ %182, %180 ]\l  %188 = lshr i64 %186, 5\l  %189 = add nsw i64 %188, -1\l  %190 = icmp ult i64 %189, 33\l  br i1 %190, label %191, label %193\l|{<s0>T|<s1>F}}"];
	Node0x2306fe0:s0 -> Node0x2307030;
	Node0x2306fe0:s1 -> Node0x2307080;
	Node0x2307030 [shape=record,label="{%191:\l191:                                              \l  %192 = trunc i64 %189 to i32\l  br label %210\l}"];
	Node0x2307030 -> Node0x23071c0;
	Node0x2307080 [shape=record,label="{%193:\l193:                                              \l  %194 = icmp ult i64 %189, 512\l  br i1 %194, label %195, label %201\l|{<s0>T|<s1>F}}"];
	Node0x2307080:s0 -> Node0x23070d0;
	Node0x2307080:s1 -> Node0x2307120;
	Node0x23070d0 [shape=record,label="{%195:\l195:                                              \l  %196 = lshr i64 %189, 3\l  %197 = add nsw i64 %196, -4\l  %198 = getelementptr inbounds [60 x i8], [60 x i8]* @bin_tab, i64 0, i64 %197\l  %199 = load i8, i8* %198, align 1, !tbaa !82\l  %200 = zext i8 %199 to i32\l  br label %210\l}"];
	Node0x23070d0 -> Node0x23071c0;
	Node0x2307120 [shape=record,label="{%201:\l201:                                              \l  %202 = icmp ugt i64 %189, 7168\l  br i1 %202, label %210, label %203\l|{<s0>T|<s1>F}}"];
	Node0x2307120:s0 -> Node0x23071c0;
	Node0x2307120:s1 -> Node0x2307170;
	Node0x2307170 [shape=record,label="{%203:\l203:                                              \l  %204 = lshr i64 %189, 7\l  %205 = add nsw i64 %204, -4\l  %206 = getelementptr inbounds [60 x i8], [60 x i8]* @bin_tab, i64 0, i64 %205\l  %207 = load i8, i8* %206, align 1, !tbaa !82\l  %208 = zext i8 %207 to i32\l  %209 = add nuw nsw i32 %208, 16\l  br label %210\l}"];
	Node0x2307170 -> Node0x23071c0;
	Node0x23071c0 [shape=record,label="{%210:\l210:                                              \l  %211 = phi i32 [ %192, %191 ], [ %200, %195 ], [ %209, %203 ], [ 63, %201 ]\l  %212 = icmp eq i32 %211, %167\l  br i1 %212, label %213, label %237\l|{<s0>T|<s1>F}}"];
	Node0x23071c0:s0 -> Node0x2307210;
	Node0x23071c0:s1 -> Node0x2307260;
	Node0x2307210 [shape=record,label="{%213:\l213:                                              \l  %214 = bitcast %struct.chunk* %156 to i8*\l  %215 = getelementptr inbounds %struct.chunk, %struct.chunk* %156, i64 0, i32\l... 1\l  %216 = and i64 %187, -2\l  %217 = getelementptr inbounds i8, i8* %214, i64 %216\l  %218 = getelementptr inbounds i8, i8* %214, i64 %51\l  %219 = getelementptr inbounds %struct.chunk, %struct.chunk* %156, i64 0, i32\l... 2\l  %220 = bitcast %struct.chunk** %219 to \<2 x i64\>*\l  %221 = load \<2 x i64\>, \<2 x i64\>* %220, align 8, !tbaa !92\l  %222 = getelementptr inbounds i8, i8* %218, i64 16\l  %223 = bitcast i8* %222 to %struct.chunk**\l  %224 = bitcast i8* %222 to \<2 x i64\>*\l  store \<2 x i64\> %221, \<2 x i64\>* %224, align 8, !tbaa !92\l  %225 = extractelement \<2 x i64\> %221, i32 1\l  %226 = inttoptr i64 %225 to %struct.chunk*\l  %227 = getelementptr inbounds %struct.chunk, %struct.chunk* %226, i64 0, i32\l... 2\l  %228 = bitcast %struct.chunk** %227 to i8**\l  store i8* %218, i8** %228, align 8, !tbaa !97\l  %229 = load %struct.chunk*, %struct.chunk** %223, align 8, !tbaa !97\l  %230 = getelementptr inbounds %struct.chunk, %struct.chunk* %229, i64 0, i32\l... 3\l  %231 = bitcast %struct.chunk** %230 to i8**\l  store i8* %218, i8** %231, align 8, !tbaa !98\l  %232 = or i64 %51, 1\l  %233 = bitcast i8* %218 to i64*\l  store i64 %232, i64* %233, align 8, !tbaa !81\l  %234 = getelementptr inbounds i8, i8* %218, i64 8\l  %235 = bitcast i8* %234 to i64*\l  store i64 %186, i64* %235, align 8, !tbaa !77\l  %236 = bitcast i8* %217 to i64*\l  store i64 %186, i64* %236, align 8, !tbaa !81\l  store i64 %232, i64* %215, align 8, !tbaa !77\l  br label %270\l}"];
	Node0x2307210 -> Node0x23073a0;
	Node0x2307260 [shape=record,label="{%237:\l237:                                              \l  %238 = getelementptr inbounds %struct.chunk, %struct.chunk* %156, i64 0, i32\l... 3\l  %239 = load %struct.chunk*, %struct.chunk** %238, align 8, !tbaa !98\l  %240 = getelementptr inbounds %struct.chunk, %struct.chunk* %156, i64 0, i32\l... 2\l  %241 = load %struct.chunk*, %struct.chunk** %240, align 8, !tbaa !97\l  %242 = icmp eq %struct.chunk* %239, %241\l  br i1 %242, label %245, label %243\l|{<s0>T|<s1>F}}"];
	Node0x2307260:s0 -> Node0x2307300;
	Node0x2307260:s1 -> Node0x23072b0;
	Node0x23072b0 [shape=record,label="{%243:\l243:                                              \l  %244 = ptrtoint %struct.chunk* %241 to i64\l  br label %252\l}"];
	Node0x23072b0 -> Node0x2307350;
	Node0x2307300 [shape=record,label="{%245:\l245:                                              \l  %246 = and i64 %140, 4294967295\l  %247 = shl nuw i64 1, %246\l  %248 = xor i64 %247, -1\l  tail call void asm sideeffect \"lock \l  %249 = bitcast %struct.chunk** %240 to i64*\l  %250 = load i64, i64* %249, align 8, !tbaa !97\l  %251 = load %struct.chunk*, %struct.chunk** %238, align 8, !tbaa !98\l  br label %252\l}"];
	Node0x2307300 -> Node0x2307350;
	Node0x2307350 [shape=record,label="{%252:\l252:                                              \l  %253 = phi %struct.chunk* [ %251, %245 ], [ %239, %243 ]\l  %254 = phi i64 [ %250, %245 ], [ %244, %243 ]\l  %255 = ptrtoint %struct.chunk* %253 to i64\l  %256 = getelementptr inbounds %struct.chunk, %struct.chunk* %253, i64 0, i32\l... 2\l  %257 = bitcast %struct.chunk** %256 to i64*\l  store i64 %254, i64* %257, align 8, !tbaa !97\l  %258 = load %struct.chunk*, %struct.chunk** %240, align 8, !tbaa !97\l  %259 = getelementptr inbounds %struct.chunk, %struct.chunk* %258, i64 0, i32\l... 3\l  %260 = bitcast %struct.chunk** %259 to i64*\l  store i64 %255, i64* %260, align 8, !tbaa !98\l  %261 = getelementptr inbounds %struct.chunk, %struct.chunk* %156, i64 0, i32\l... 1\l  %262 = load i64, i64* %261, align 8, !tbaa !77\l  %263 = or i64 %262, 1\l  store i64 %263, i64* %261, align 8, !tbaa !77\l  %264 = bitcast %struct.chunk* %156 to i8*\l  %265 = and i64 %262, -2\l  %266 = getelementptr inbounds i8, i8* %264, i64 %265\l  %267 = bitcast i8* %266 to i64*\l  %268 = load i64, i64* %267, align 8, !tbaa !81\l  %269 = or i64 %268, 1\l  store i64 %269, i64* %267, align 8, !tbaa !81\l  br label %270\l}"];
	Node0x2307350 -> Node0x23073a0;
	Node0x23073a0 [shape=record,label="{%270:\l270:                                              \l  %271 = load volatile i32, i32* %143, align 8, !tbaa !73\l  %272 = icmp eq i32 %271, 0\l  br i1 %272, label %300, label %273\l|{<s0>T|<s1>F}}"];
	Node0x23073a0:s0 -> Node0x2307670;
	Node0x23073a0:s1 -> Node0x23073f0;
	Node0x23073f0 [shape=record,label="{%273:\l273:                                              \l  tail call void asm sideeffect \"mov $1, $0 \l  %274 = getelementptr inbounds %struct.anon.39, %struct.anon.39* @mal, i64 0,\l... i32 1, i64 %142, i32 0, i64 1\l  %275 = load volatile i32, i32* %274, align 4, !tbaa !73\l  %276 = icmp eq i32 %275, 0\l  br i1 %276, label %300, label %277\l|{<s0>T|<s1>F}}"];
	Node0x23073f0:s0 -> Node0x2307670;
	Node0x23073f0:s1 -> Node0x2307440;
	Node0x2307440 [shape=record,label="{%277:\l277:                                              \l  %278 = ptrtoint i32* %143 to i64\l  %279 = tail call i64 asm sideeffect \"syscall\",\l... \"=\{ax\},\{ax\},\{di\},\{si\},\{dx\},~\{rcx\},~\{r11\},~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}\l...\"(i64 202, i64 %278, i64 129, i64 1) #21, !srcloc !91\l  %280 = icmp eq i64 %279, -38\l  br i1 %280, label %281, label %300\l|{<s0>T|<s1>F}}"];
	Node0x2307440:s0 -> Node0x2307490;
	Node0x2307440:s1 -> Node0x2307670;
	Node0x2307490 [shape=record,label="{%281:\l281:                                              \l  %282 = tail call i64 asm sideeffect \"syscall\",\l... \"=\{ax\},\{ax\},\{di\},\{si\},\{dx\},~\{rcx\},~\{r11\},~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}\l...\"(i64 202, i64 %278, i64 1, i64 1) #21, !srcloc !91\l  br label %300\l}"];
	Node0x2307490 -> Node0x2307670;
	Node0x23074e0 [shape=record,label="{%283:\l283:                                              \l  %284 = load volatile i32, i32* %143, align 8, !tbaa !73\l  %285 = icmp eq i32 %284, 0\l  br i1 %285, label %296, label %286\l|{<s0>T|<s1>F}}"];
	Node0x23074e0:s0 -> Node0x2307620;
	Node0x23074e0:s1 -> Node0x2307530;
	Node0x2307530 [shape=record,label="{%286:\l286:                                              \l  tail call void asm sideeffect \"mov $1, $0 \l  %287 = getelementptr inbounds %struct.anon.39, %struct.anon.39* @mal, i64 0,\l... i32 1, i64 %142, i32 0, i64 1\l  %288 = load volatile i32, i32* %287, align 4, !tbaa !73\l  %289 = icmp eq i32 %288, 0\l  br i1 %289, label %296, label %290\l|{<s0>T|<s1>F}}"];
	Node0x2307530:s0 -> Node0x2307620;
	Node0x2307530:s1 -> Node0x2307580;
	Node0x2307580 [shape=record,label="{%290:\l290:                                              \l  %291 = ptrtoint i32* %143 to i64\l  %292 = tail call i64 asm sideeffect \"syscall\",\l... \"=\{ax\},\{ax\},\{di\},\{si\},\{dx\},~\{rcx\},~\{r11\},~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}\l...\"(i64 202, i64 %291, i64 129, i64 1) #21, !srcloc !91\l  %293 = icmp eq i64 %292, -38\l  br i1 %293, label %294, label %296\l|{<s0>T|<s1>F}}"];
	Node0x2307580:s0 -> Node0x23075d0;
	Node0x2307580:s1 -> Node0x2307620;
	Node0x23075d0 [shape=record,label="{%294:\l294:                                              \l  %295 = tail call i64 asm sideeffect \"syscall\",\l... \"=\{ax\},\{ax\},\{di\},\{si\},\{dx\},~\{rcx\},~\{r11\},~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}\l...\"(i64 202, i64 %291, i64 1, i64 1) #21, !srcloc !91\l  br label %296\l}"];
	Node0x23075d0 -> Node0x2307620;
	Node0x2307620 [shape=record,label="{%296:\l296:                                              \l  %297 = load volatile i64, i64* getelementptr inbounds (%struct.anon.39,\l... %struct.anon.39* @mal, i64 0, i32 0), align 8, !tbaa !83\l  %298 = and i64 %297, %55\l  %299 = icmp eq i64 %298, 0\l  br i1 %299, label %58, label %138\l|{<s0>T|<s1>F}}"];
	Node0x2307620:s0 -> Node0x23066d0;
	Node0x2307620:s1 -> Node0x2306c20;
	Node0x2307670 [shape=record,label="{%300:\l300:                                              \l  %301 = phi %struct.chunk* [ %156, %281 ], [ %156, %277 ], [ %156, %273 ], [\l... %156, %270 ], [ %102, %118 ], [ %127, %121 ]\l  %302 = getelementptr inbounds %struct.chunk, %struct.chunk* %301, i64 0, i32\l... 1\l  %303 = load i64, i64* %302, align 8, !tbaa !77\l  %304 = and i64 %303, -2\l  %305 = add i64 %304, -16\l  %306 = icmp ugt i64 %305, %51\l  br i1 %306, label %307, label %319\l|{<s0>T|<s1>F}}"];
	Node0x2307670:s0 -> Node0x23076c0;
	Node0x2307670:s1 -> Node0x2307710;
	Node0x23076c0 [shape=record,label="{%307:\l307:                                              \l  %308 = bitcast %struct.chunk* %301 to i8*\l  %309 = getelementptr inbounds i8, i8* %308, i64 %304\l  %310 = getelementptr inbounds i8, i8* %308, i64 %51\l  %311 = bitcast i8* %310 to %struct.chunk*\l  %312 = or i64 %51, 1\l  %313 = bitcast i8* %310 to i64*\l  store i64 %312, i64* %313, align 8, !tbaa !81\l  %314 = sub i64 %304, %51\l  %315 = or i64 %314, 1\l  %316 = getelementptr inbounds i8, i8* %310, i64 8\l  %317 = bitcast i8* %316 to i64*\l  store i64 %315, i64* %317, align 8, !tbaa !77\l  %318 = bitcast i8* %309 to i64*\l  store i64 %315, i64* %318, align 8, !tbaa !81\l  store i64 %312, i64* %302, align 8, !tbaa !77\l  call void @__bin_chunk(%struct.chunk* %311) #20\l  br label %319\l}"];
	Node0x23076c0 -> Node0x2307710;
	Node0x2307710 [shape=record,label="{%319:\l319:                                              \l  %320 = getelementptr inbounds %struct.chunk, %struct.chunk* %301, i64 0, i32\l... 2\l  %321 = bitcast %struct.chunk** %320 to i8*\l  br label %322\l}"];
	Node0x2307710 -> Node0x2307760;
	Node0x2307760 [shape=record,label="{%322:\l322:                                              \l  %323 = phi i8* [ %321, %319 ], [ null, %7 ], [ %24, %18 ], [ null, %13 ], [\l... null, %117 ]\l  ret i8* %323\l}"];
}
