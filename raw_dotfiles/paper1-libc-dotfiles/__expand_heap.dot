digraph "CFG for '__expand_heap' function" {
	label="CFG for '__expand_heap' function";

	Node0x235f1d0 [shape=record,label="{%1:\l  %2 = alloca i64, align 8\l  %3 = load i64, i64* %0, align 8, !tbaa !73\l  %4 = icmp ugt i64 %3, 9223372036854771711\l  br i1 %4, label %5, label %7\l|{<s0>T|<s1>F}}"];
	Node0x235f1d0:s0 -> Node0x235f290;
	Node0x235f1d0:s1 -> Node0x235f2e0;
	Node0x235f290 [shape=record,label="{%5:\l5:                                                \l  %6 = tail call i32* @___errno_location() #20\l  store i32 12, i32* %6, align 4, !tbaa !77\l  br label %58\l}"];
	Node0x235f290 -> Node0x235f600;
	Node0x235f2e0 [shape=record,label="{%7:\l7:                                                \l  %8 = sub nsw i64 0, %3\l  %9 = and i64 %8, 4095\l  %10 = add nuw nsw i64 %9, %3\l  %11 = load i64, i64* @__expand_heap.brk, align 8, !tbaa !73\l  %12 = icmp eq i64 %11, 0\l  br i1 %12, label %13, label %18\l|{<s0>T|<s1>F}}"];
	Node0x235f2e0:s0 -> Node0x235f330;
	Node0x235f2e0:s1 -> Node0x235f380;
	Node0x235f330 [shape=record,label="{%13:\l13:                                               \l  %14 = tail call i64 asm sideeffect \"syscall\",\l... \"=\{ax\},\{ax\},\{di\},~\{rcx\},~\{r11\},~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}\"(i64 12,\l... i64 0) #21, !srcloc !79\l  %15 = sub i64 0, %14\l  %16 = and i64 %15, 4095\l  %17 = add i64 %16, %14\l  store i64 %17, i64* @__expand_heap.brk, align 8, !tbaa !73\l  br label %18\l}"];
	Node0x235f330 -> Node0x235f380;
	Node0x235f380 [shape=record,label="{%18:\l18:                                               \l  %19 = phi i64 [ %11, %7 ], [ %17, %13 ]\l  %20 = xor i64 %19, -1\l  %21 = icmp ult i64 %10, %20\l  br i1 %21, label %22, label %46\l|{<s0>T|<s1>F}}"];
	Node0x235f380:s0 -> Node0x235f3d0;
	Node0x235f380:s1 -> Node0x235f560;
	Node0x235f3d0 [shape=record,label="{%22:\l22:                                               \l  %23 = add i64 %19, %10\l  %24 = bitcast i64* %2 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #21\l  %25 = load i64, i64* bitcast (i64** getelementptr inbounds (%struct.__libc,\l... %struct.__libc* @__libc, i64 0, i32 4) to i64*), align 8, !tbaa !80\l  store i64 %25, i64* %2, align 8, !tbaa !73\l  %26 = tail call i64 @llvm.usub.sat.i64(i64 %25, i64 8388608) #18\l  %27 = icmp ult i64 %26, %23\l  %28 = icmp ugt i64 %25, %19\l  %29 = and i1 %28, %27\l  br i1 %29, label %30, label %31\l|{<s0>T|<s1>F}}"];
	Node0x235f3d0:s0 -> Node0x235f420;
	Node0x235f3d0:s1 -> Node0x235f470;
	Node0x235f420 [shape=record,label="{%30:\l30:                                               \l  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #21\l  br label %46\l}"];
	Node0x235f420 -> Node0x235f560;
	Node0x235f470 [shape=record,label="{%31:\l31:                                               \l  %32 = ptrtoint i64* %2 to i64\l  %33 = icmp ugt i64* %2, inttoptr (i64 8388608 to i64*)\l  %34 = add i64 %32, -8388608\l  %35 = select i1 %33, i64 %34, i64 0\l  %36 = icmp uge i64 %35, %23\l  %37 = icmp uge i64 %19, %32\l  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #21\l  %38 = or i1 %37, %36\l  br i1 %38, label %39, label %46\l|{<s0>T|<s1>F}}"];
	Node0x235f470:s0 -> Node0x235f4c0;
	Node0x235f470:s1 -> Node0x235f560;
	Node0x235f4c0 [shape=record,label="{%39:\l39:                                               \l  %40 = call i64 asm sideeffect \"syscall\",\l... \"=\{ax\},\{ax\},\{di\},~\{rcx\},~\{r11\},~\{memory\},~\{dirflag\},~\{fpsr\},~\{flags\}\"(i64 12,\l... i64 %23) #21, !srcloc !79\l  %41 = load i64, i64* @__expand_heap.brk, align 8, !tbaa !73\l  %42 = add i64 %41, %10\l  %43 = icmp eq i64 %40, %42\l  br i1 %43, label %44, label %46\l|{<s0>T|<s1>F}}"];
	Node0x235f4c0:s0 -> Node0x235f510;
	Node0x235f4c0:s1 -> Node0x235f560;
	Node0x235f510 [shape=record,label="{%44:\l44:                                               \l  store i64 %10, i64* %0, align 8, !tbaa !73\l  store i64 %40, i64* @__expand_heap.brk, align 8, !tbaa !73\l  %45 = inttoptr i64 %41 to i8*\l  br label %58\l}"];
	Node0x235f510 -> Node0x235f600;
	Node0x235f560 [shape=record,label="{%46:\l46:                                               \l  %47 = load i32, i32* @__expand_heap.mmap_step, align 4, !tbaa !77\l  %48 = lshr i32 %47, 1\l  %49 = zext i32 %48 to i64\l  %50 = shl i64 4096, %49\l  %51 = icmp ult i64 %10, %50\l  %52 = select i1 %51, i64 %50, i64 %10\l  %53 = call i8* @__mmap(i8* null, i64 %52, i32 3, i32 34, i32 -1, i64 0) #20\l  %54 = icmp eq i8* %53, inttoptr (i64 -1 to i8*)\l  br i1 %54, label %58, label %55\l|{<s0>T|<s1>F}}"];
	Node0x235f560:s0 -> Node0x235f600;
	Node0x235f560:s1 -> Node0x235f5b0;
	Node0x235f5b0 [shape=record,label="{%55:\l55:                                               \l  store i64 %52, i64* %0, align 8, !tbaa !73\l  %56 = load i32, i32* @__expand_heap.mmap_step, align 4, !tbaa !77\l  %57 = add i32 %56, 1\l  store i32 %57, i32* @__expand_heap.mmap_step, align 4, !tbaa !77\l  br label %58\l}"];
	Node0x235f5b0 -> Node0x235f600;
	Node0x235f600 [shape=record,label="{%58:\l58:                                               \l  %59 = phi i8* [ null, %5 ], [ %45, %44 ], [ %53, %55 ], [ null, %46 ]\l  ret i8* %59\l}"];
}
