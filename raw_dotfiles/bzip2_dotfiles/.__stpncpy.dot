digraph "CFG for '__stpncpy' function" {
	label="CFG for '__stpncpy' function";

	Node0x1fe7970 [shape=record,label="{%3:\l  %4 = ptrtoint i8* %1 to i64\l  %5 = ptrtoint i8* %0 to i64\l  %6 = xor i64 %4, %5\l  %7 = and i64 %6, 7\l  %8 = icmp eq i64 %7, 0\l  br i1 %8, label %9, label %64\l|{<s0>T|<s1>F}}"];
	Node0x1fe7970:s0 -> Node0x1fe7ac0;
	Node0x1fe7970:s1 -> Node0x1fe7de0;
	Node0x1fe7ac0 [shape=record,label="{%9:\l9:                                                \l  %10 = and i64 %4, 7\l  %11 = icmp ne i64 %10, 0\l  %12 = icmp ne i64 %2, 0\l  %13 = and i1 %12, %11\l  br i1 %13, label %14, label %29\l|{<s0>T|<s1>F}}"];
	Node0x1fe7ac0:s0 -> Node0x1fe7b10;
	Node0x1fe7ac0:s1 -> Node0x1fe7bb0;
	Node0x1fe7b10 [shape=record,label="{%14:\l14:                                               \l  %15 = phi i64 [ %21, %20 ], [ %2, %9 ]\l  %16 = phi i8* [ %22, %20 ], [ %1, %9 ]\l  %17 = phi i8* [ %23, %20 ], [ %0, %9 ]\l  %18 = load i8, i8* %16, align 1, !tbaa !2\l  store i8 %18, i8* %17, align 1, !tbaa !2\l  %19 = icmp eq i8 %18, 0\l  br i1 %19, label %80, label %20\l|{<s0>T|<s1>F}}"];
	Node0x1fe7b10:s0 -> Node0x1fe7ed0;
	Node0x1fe7b10:s1 -> Node0x1fe7b60;
	Node0x1fe7b60 [shape=record,label="{%20:\l20:                                               \l  %21 = add i64 %15, -1\l  %22 = getelementptr inbounds i8, i8* %16, i64 1\l  %23 = getelementptr inbounds i8, i8* %17, i64 1\l  %24 = ptrtoint i8* %22 to i64\l  %25 = and i64 %24, 7\l  %26 = icmp ne i64 %25, 0\l  %27 = icmp ne i64 %21, 0\l  %28 = and i1 %27, %26\l  br i1 %28, label %14, label %29\l|{<s0>T|<s1>F}}"];
	Node0x1fe7b60:s0 -> Node0x1fe7b10;
	Node0x1fe7b60:s1 -> Node0x1fe7bb0;
	Node0x1fe7bb0 [shape=record,label="{%29:\l29:                                               \l  %30 = phi i8* [ %0, %9 ], [ %23, %20 ]\l  %31 = phi i8* [ %1, %9 ], [ %22, %20 ]\l  %32 = phi i64 [ %2, %9 ], [ %21, %20 ]\l  %33 = phi i1 [ %12, %9 ], [ %27, %20 ]\l  br i1 %33, label %34, label %80\l|{<s0>T|<s1>F}}"];
	Node0x1fe7bb0:s0 -> Node0x1fe7c00;
	Node0x1fe7bb0:s1 -> Node0x1fe7ed0;
	Node0x1fe7c00 [shape=record,label="{%34:\l34:                                               \l  %35 = load i8, i8* %31, align 1, !tbaa !2\l  %36 = icmp eq i8 %35, 0\l  br i1 %36, label %80, label %37\l|{<s0>T|<s1>F}}"];
	Node0x1fe7c00:s0 -> Node0x1fe7ed0;
	Node0x1fe7c00:s1 -> Node0x1fe7c50;
	Node0x1fe7c50 [shape=record,label="{%37:\l37:                                               \l  %38 = bitcast i8* %30 to i64*\l  %39 = bitcast i8* %31 to i64*\l  %40 = icmp ugt i64 %32, 7\l  br i1 %40, label %41, label %58\l|{<s0>T|<s1>F}}"];
	Node0x1fe7c50:s0 -> Node0x1fe7ca0;
	Node0x1fe7c50:s1 -> Node0x1fe7d90;
	Node0x1fe7ca0 [shape=record,label="{%41:\l41:                                               \l  %42 = and i64 %32, 7\l  br label %43\l}"];
	Node0x1fe7ca0 -> Node0x1fe7cf0;
	Node0x1fe7cf0 [shape=record,label="{%43:\l43:                                               \l  %44 = phi i64* [ %55, %53 ], [ %39, %41 ]\l  %45 = phi i64* [ %56, %53 ], [ %38, %41 ]\l  %46 = phi i64 [ %54, %53 ], [ %32, %41 ]\l  %47 = load i64, i64* %44, align 8, !tbaa !2\l  %48 = add i64 %47, -72340172838076673\l  %49 = and i64 %47, -9187201950435737472\l  %50 = xor i64 %49, -9187201950435737472\l  %51 = and i64 %50, %48\l  %52 = icmp eq i64 %51, 0\l  br i1 %52, label %53, label %58\l|{<s0>T|<s1>F}}"];
	Node0x1fe7cf0:s0 -> Node0x1fe7d40;
	Node0x1fe7cf0:s1 -> Node0x1fe7d90;
	Node0x1fe7d40 [shape=record,label="{%53:\l53:                                               \l  store i64 %47, i64* %45, align 8, !tbaa !2\l  %54 = add i64 %46, -8\l  %55 = getelementptr inbounds i64, i64* %44, i64 1\l  %56 = getelementptr inbounds i64, i64* %45, i64 1\l  %57 = icmp ugt i64 %54, 7\l  br i1 %57, label %43, label %58\l|{<s0>T|<s1>F}}"];
	Node0x1fe7d40:s0 -> Node0x1fe7cf0;
	Node0x1fe7d40:s1 -> Node0x1fe7d90;
	Node0x1fe7d90 [shape=record,label="{%58:\l58:                                               \l  %59 = phi i64 [ %32, %37 ], [ %42, %53 ], [ %46, %43 ]\l  %60 = phi i64* [ %38, %37 ], [ %56, %53 ], [ %45, %43 ]\l  %61 = phi i64* [ %39, %37 ], [ %55, %53 ], [ %44, %43 ]\l  %62 = bitcast i64* %60 to i8*\l  %63 = bitcast i64* %61 to i8*\l  br label %64\l}"];
	Node0x1fe7d90 -> Node0x1fe7de0;
	Node0x1fe7de0 [shape=record,label="{%64:\l64:                                               \l  %65 = phi i8* [ %62, %58 ], [ %0, %3 ]\l  %66 = phi i8* [ %63, %58 ], [ %1, %3 ]\l  %67 = phi i64 [ %59, %58 ], [ %2, %3 ]\l  %68 = icmp eq i64 %67, 0\l  br i1 %68, label %80, label %69\l|{<s0>T|<s1>F}}"];
	Node0x1fe7de0:s0 -> Node0x1fe7ed0;
	Node0x1fe7de0:s1 -> Node0x1fe7e30;
	Node0x1fe7e30 [shape=record,label="{%69:\l69:                                               \l  %70 = phi i64 [ %76, %75 ], [ %67, %64 ]\l  %71 = phi i8* [ %77, %75 ], [ %66, %64 ]\l  %72 = phi i8* [ %78, %75 ], [ %65, %64 ]\l  %73 = load i8, i8* %71, align 1, !tbaa !2\l  store i8 %73, i8* %72, align 1, !tbaa !2\l  %74 = icmp eq i8 %73, 0\l  br i1 %74, label %80, label %75\l|{<s0>T|<s1>F}}"];
	Node0x1fe7e30:s0 -> Node0x1fe7ed0;
	Node0x1fe7e30:s1 -> Node0x1fe7e80;
	Node0x1fe7e80 [shape=record,label="{%75:\l75:                                               \l  %76 = add i64 %70, -1\l  %77 = getelementptr inbounds i8, i8* %71, i64 1\l  %78 = getelementptr inbounds i8, i8* %72, i64 1\l  %79 = icmp eq i64 %76, 0\l  br i1 %79, label %80, label %69\l|{<s0>T|<s1>F}}"];
	Node0x1fe7e80:s0 -> Node0x1fe7ed0;
	Node0x1fe7e80:s1 -> Node0x1fe7e30;
	Node0x1fe7ed0 [shape=record,label="{%80:\l80:                                               \l  %81 = phi i8* [ %30, %34 ], [ %30, %29 ], [ %65, %64 ], [ %78, %75 ], [ %72,\l... %69 ], [ %17, %14 ]\l  %82 = phi i64 [ %32, %34 ], [ 0, %29 ], [ 0, %64 ], [ 0, %75 ], [ %70, %69\l... ], [ %15, %14 ]\l  %83 = tail call fastcc i8* @memset(i8* %81, i32 0, i64 %82) #19\l  ret i8* %81\l}"];
}
