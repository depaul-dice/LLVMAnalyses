digraph "CFG for 'setlocale' function" {
	label="CFG for 'setlocale' function";

	Node0x161a1e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%2:\l  %3 = alloca %struct.__locale_struct, align 8\l  %4 = alloca [24 x i8], align 16\l  %5 = icmp ugt i32 %0, 6\l  br i1 %5, label %95, label %6\l|{<s0>T|<s1>F}}"];
	Node0x161a1e0:s0 -> Node0x161a8e0;
	Node0x161a1e0:s1 -> Node0x161a340;
	Node0x161a340 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f5c1a970",label="{%6:\l6:                                                \l  %7 = getelementptr inbounds [1 x i32], [1 x i32]* @setlocale.lock, i64 0,\l... i64 0\l  tail call fastcc void @__lock(i32* %7) #26\l  %8 = icmp eq i32 %0, 6\l  %9 = icmp eq i8* %1, null\l  br i1 %8, label %10, label %74\l|{<s0>T|<s1>F}}"];
	Node0x161a340:s0 -> Node0x161a390;
	Node0x161a340:s1 -> Node0x161a700;
	Node0x161a390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%10:\l10:                                               \l  br i1 %9, label %11, label %13\l|{<s0>T|<s1>F}}"];
	Node0x161a390:s0 -> Node0x161a3e0;
	Node0x161a390:s1 -> Node0x161a430;
	Node0x161a3e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%11:\l11:                                               \l  %12 = getelementptr inbounds [144 x i8], [144 x i8]* @buf.1128, i64 0, i64 0\l  br label %47\l}"];
	Node0x161a3e0 -> Node0x161a660;
	Node0x161a430 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%13:\l13:                                               \l  %14 = bitcast %struct.__locale_struct* %3 to i8*\l  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %14) #27\l  %15 = getelementptr inbounds [24 x i8], [24 x i8]* %4, i64 0, i64 0\l  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #27\l  %16 = getelementptr inbounds [24 x i8], [24 x i8]* @__const.setlocale.part,\l... i64 0, i64 0\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16\l... dereferenceable(24) %15, i8* nonnull align 16 dereferenceable(24) %16, i64\l... 24, i1 false)\l  br label %17\l}"];
	Node0x161a430 -> Node0x161a480;
	Node0x161a480 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%17:\l17:                                               \l  %18 = phi i64 [ 0, %13 ], [ %40, %38 ]\l  %19 = phi i8* [ %1, %13 ], [ %33, %38 ]\l  %20 = call fastcc i8* @__strchrnul(i8* %19, i32 59) #26\l  %21 = ptrtoint i8* %20 to i64\l  %22 = ptrtoint i8* %19 to i64\l  %23 = sub i64 %21, %22\l  %24 = icmp slt i64 %23, 24\l  br i1 %24, label %25, label %32\l|{<s0>T|<s1>F}}"];
	Node0x161a480:s0 -> Node0x161a4d0;
	Node0x161a480:s1 -> Node0x161a520;
	Node0x161a4d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f2907270",label="{%25:\l25:                                               \l  %26 = call fastcc i8* @memcpy(i8* nonnull %15, i8* %19, i64 %23) #26\l  %27 = getelementptr inbounds [24 x i8], [24 x i8]* %4, i64 0, i64 %23\l  store i8 0, i8* %27, align 1, !tbaa !1086\l  %28 = load i8, i8* %20, align 1, !tbaa !1086\l  %29 = icmp eq i8 %28, 0\l  %30 = getelementptr inbounds i8, i8* %20, i64 1\l  %31 = select i1 %29, i8* %19, i8* %30\l  br label %32\l}"];
	Node0x161a4d0 -> Node0x161a520;
	Node0x161a520 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70",label="{%32:\l32:                                               \l  %33 = phi i8* [ %19, %17 ], [ %31, %25 ]\l  %34 = trunc i64 %18 to i32\l  %35 = call fastcc %struct.__locale_map* @__get_locale(i32 %34, i8* nonnull\l... %15) #26\l  %36 = inttoptr i64 -1 to %struct.__locale_map*\l  %37 = icmp eq %struct.__locale_map* %35, %36\l  br i1 %37, label %45, label %38\l|{<s0>T|<s1>F}}"];
	Node0x161a520:s0 -> Node0x161a610;
	Node0x161a520:s1 -> Node0x161a570;
	Node0x161a570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#de614d70",label="{%38:\l38:                                               \l  %39 = getelementptr inbounds %struct.__locale_struct,\l... %struct.__locale_struct* %3, i64 0, i32 0, i64 %18\l  store %struct.__locale_map* %35, %struct.__locale_map** %39, align 8, !tbaa\l... !1089\l  %40 = add nuw nsw i64 %18, 1\l  %41 = icmp eq i64 %40, 6\l  br i1 %41, label %42, label %17\l|{<s0>T|<s1>F}}"];
	Node0x161a570:s0 -> Node0x161a5c0;
	Node0x161a570:s1 -> Node0x161a480;
	Node0x161a5c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%42:\l42:                                               \l  %43 = getelementptr inbounds %struct.__libc, %struct.__libc* @__libc, i64 0,\l... i32 10\l  %44 = bitcast %struct.__locale_struct* %43 to i8*\l  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 dereferenceable(48)\l... %44, i8* nonnull align 8 dereferenceable(48) %14, i64 48, i1 false),\l... !tbaa.struct !1091\l  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #27\l  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %14) #27\l  br label %11\l}"];
	Node0x161a5c0 -> Node0x161a3e0;
	Node0x161a610 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%45:\l45:                                               \l  %46 = getelementptr inbounds [1 x i32], [1 x i32]* @setlocale.lock, i64 0,\l... i64 0\l  call fastcc void @__unlock(i32* %46) #26\l  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #27\l  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %14) #27\l  br label %95\l}"];
	Node0x161a610 -> Node0x161a8e0;
	Node0x161a660 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%47:\l47:                                               \l  %48 = phi i64 [ %67, %47 ], [ 0, %11 ]\l  %49 = phi i32 [ %57, %47 ], [ 0, %11 ]\l  %50 = phi i8* [ %66, %47 ], [ %12, %11 ]\l  %51 = getelementptr inbounds %struct.__libc, %struct.__libc* @__libc, i64 0,\l... i32 10, i32 0, i64 %48\l  %52 = load %struct.__locale_map*, %struct.__locale_map** %51, align 8, !tbaa\l... !1089\l  %53 = getelementptr inbounds %struct.__libc, %struct.__libc* @__libc, i64 0,\l... i32 10, i32 0, i64 0\l  %54 = load %struct.__locale_map*, %struct.__locale_map** %53, align 8, !tbaa\l... !1089\l  %55 = icmp eq %struct.__locale_map* %52, %54\l  %56 = zext i1 %55 to i32\l  %57 = add nuw nsw i32 %49, %56\l  %58 = icmp eq %struct.__locale_map* %52, null\l  %59 = getelementptr inbounds %struct.__locale_map, %struct.__locale_map*\l... %52, i64 0, i32 2, i64 0\l  %60 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.1129, i64 0, i64 0\l  %61 = select i1 %58, i8* %60, i8* %59\l  %62 = call fastcc i64 @strlen(i8* %61) #26\l  %63 = call fastcc i8* @memcpy(i8* %50, i8* %61, i64 %62) #26\l  %64 = getelementptr inbounds i8, i8* %50, i64 %62\l  store i8 59, i8* %64, align 1, !tbaa !1086\l  %65 = add i64 %62, 1\l  %66 = getelementptr inbounds i8, i8* %50, i64 %65\l  %67 = add nuw nsw i64 %48, 1\l  %68 = icmp eq i64 %67, 6\l  br i1 %68, label %69, label %47\l|{<s0>T|<s1>F}}"];
	Node0x161a660:s0 -> Node0x161a6b0;
	Node0x161a660:s1 -> Node0x161a660;
	Node0x161a6b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6dce470",label="{%69:\l69:                                               \l  store i8 0, i8* %64, align 1, !tbaa !1086\l  %70 = getelementptr inbounds [1 x i32], [1 x i32]* @setlocale.lock, i64 0,\l... i64 0\l  call fastcc void @__unlock(i32* %70) #26\l  %71 = icmp eq i32 %57, 6\l  %72 = getelementptr inbounds [144 x i8], [144 x i8]* @buf.1128, i64 0, i64 0\l  %73 = select i1 %71, i8* %61, i8* %72\l  br label %95\l}"];
	Node0x161a6b0 -> Node0x161a8e0;
	Node0x161a700 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5d8d170",label="{%74:\l74:                                               \l  br i1 %9, label %84, label %75\l|{<s0>T|<s1>F}}"];
	Node0x161a700:s0 -> Node0x161a840;
	Node0x161a700:s1 -> Node0x161a750;
	Node0x161a750 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d4dbe670",label="{%75:\l75:                                               \l  %76 = tail call fastcc %struct.__locale_map* @__get_locale(i32 %0, i8*\l... nonnull %1) #26\l  %77 = inttoptr i64 -1 to %struct.__locale_map*\l  %78 = icmp eq %struct.__locale_map* %76, %77\l  br i1 %78, label %79, label %81\l|{<s0>T|<s1>F}}"];
	Node0x161a750:s0 -> Node0x161a7a0;
	Node0x161a750:s1 -> Node0x161a7f0;
	Node0x161a7a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#9ebeff70",label="{%79:\l79:                                               \l  %80 = getelementptr inbounds [1 x i32], [1 x i32]* @setlocale.lock, i64 0,\l... i64 0\l  tail call fastcc void @__unlock(i32* %80) #26\l  br label %95\l}"];
	Node0x161a7a0 -> Node0x161a8e0;
	Node0x161a7f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#bbd1f870",label="{%81:\l81:                                               \l  %82 = zext i32 %0 to i64\l  %83 = getelementptr inbounds %struct.__libc, %struct.__libc* @__libc, i64 0,\l... i32 10, i32 0, i64 %82\l  store %struct.__locale_map* %76, %struct.__locale_map** %83, align 8, !tbaa\l... !1089\l  br label %88\l}"];
	Node0x161a7f0 -> Node0x161a890;
	Node0x161a840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{%84:\l84:                                               \l  %85 = zext i32 %0 to i64\l  %86 = getelementptr inbounds %struct.__libc, %struct.__libc* @__libc, i64 0,\l... i32 10, i32 0, i64 %85\l  %87 = load %struct.__locale_map*, %struct.__locale_map** %86, align 8, !tbaa\l... !1089\l  br label %88\l}"];
	Node0x161a840 -> Node0x161a890;
	Node0x161a890 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dbdcde70",label="{%88:\l88:                                               \l  %89 = phi %struct.__locale_map* [ %76, %81 ], [ %87, %84 ]\l  %90 = icmp eq %struct.__locale_map* %89, null\l  %91 = getelementptr inbounds %struct.__locale_map, %struct.__locale_map*\l... %89, i64 0, i32 2, i64 0\l  %92 = getelementptr inbounds [2 x i8], [2 x i8]* @.str.1129, i64 0, i64 0\l  %93 = select i1 %90, i8* %92, i8* %91\l  %94 = getelementptr inbounds [1 x i32], [1 x i32]* @setlocale.lock, i64 0,\l... i64 0\l  tail call fastcc void @__unlock(i32* %94) #26\l  br label %95\l}"];
	Node0x161a890 -> Node0x161a8e0;
	Node0x161a8e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f59c7d70",label="{%95:\l95:                                               \l  %96 = phi i8* [ null, %79 ], [ %93, %88 ], [ null, %2 ], [ %73, %69 ], [\l... null, %45 ]\l  ret i8* %96\l}"];
}
