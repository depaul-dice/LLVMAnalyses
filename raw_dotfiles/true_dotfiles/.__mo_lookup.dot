digraph "CFG for '__mo_lookup' function" {
	label="CFG for '__mo_lookup' function";

	Node0x254d410 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%3:\l  %4 = bitcast i8* %0 to i32*\l  %5 = load i32, i32* %4, align 4, !tbaa !1086\l  %6 = getelementptr inbounds i8, i8* %0, i64 8\l  %7 = bitcast i8* %6 to i32*\l  %8 = load i32, i32* %7, align 4, !tbaa !1086\l  %9 = icmp eq i32 %5, -1794895138\l  %10 = tail call i32 @llvm.bswap.i32(i32 %8) #6\l  %11 = select i1 %9, i32 %8, i32 %10\l  %12 = getelementptr inbounds i8, i8* %0, i64 12\l  %13 = bitcast i8* %12 to i32*\l  %14 = load i32, i32* %13, align 4, !tbaa !1086\l  %15 = tail call i32 @llvm.bswap.i32(i32 %14) #6\l  %16 = select i1 %9, i32 %14, i32 %15\l  %17 = getelementptr inbounds i8, i8* %0, i64 16\l  %18 = bitcast i8* %17 to i32*\l  %19 = load i32, i32* %18, align 4, !tbaa !1086\l  %20 = tail call i32 @llvm.bswap.i32(i32 %19) #6\l  %21 = select i1 %9, i32 %19, i32 %20\l  %22 = zext i32 %11 to i64\l  %23 = lshr i64 %1, 2\l  %24 = icmp ugt i64 %23, %22\l  br i1 %24, label %25, label %131\l|{<s0>T|<s1>F}}"];
	Node0x254d410:s0 -> Node0x254d560;
	Node0x254d410:s1 -> Node0x254d920;
	Node0x254d560 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070",label="{%25:\l25:                                               \l  %26 = zext i32 %16 to i64\l  %27 = shl i32 %11, 2\l  %28 = zext i32 %27 to i64\l  %29 = sub i64 %1, %28\l  %30 = icmp ugt i64 %29, %26\l  %31 = zext i32 %21 to i64\l  %32 = icmp ugt i64 %29, %31\l  %33 = and i1 %30, %32\l  br i1 %33, label %34, label %131\l|{<s0>T|<s1>F}}"];
	Node0x254d560:s0 -> Node0x254d5b0;
	Node0x254d560:s1 -> Node0x254d920;
	Node0x254d5b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e97a5f70",label="{%34:\l34:                                               \l  %35 = or i32 %21, %16\l  %36 = and i32 %35, 3\l  %37 = icmp eq i32 %36, 0\l  br i1 %37, label %38, label %131\l|{<s0>T|<s1>F}}"];
	Node0x254d5b0:s0 -> Node0x254d600;
	Node0x254d5b0:s1 -> Node0x254d920;
	Node0x254d600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f7ac8e70",label="{%38:\l38:                                               \l  %39 = lshr i32 %16, 2\l  %40 = lshr i32 %21, 2\l  %41 = lshr i32 %11, 1\l  %42 = and i32 %11, -2\l  %43 = add i32 %42, %39\l  %44 = zext i32 %43 to i64\l  %45 = getelementptr inbounds i32, i32* %4, i64 %44\l  %46 = load i32, i32* %45, align 4, !tbaa !1086\l  %47 = add i32 %43, 1\l  %48 = zext i32 %47 to i64\l  %49 = getelementptr inbounds i32, i32* %4, i64 %48\l  %50 = load i32, i32* %49, align 4, !tbaa !1086\l  %51 = tail call i32 @llvm.bswap.i32(i32 %50) #6\l  %52 = select i1 %9, i32 %50, i32 %51\l  %53 = zext i32 %52 to i64\l  %54 = icmp ult i64 %53, %1\l  br i1 %54, label %55, label %131\l|{<s0>T|<s1>F}}"];
	Node0x254d600:s0 -> Node0x254d650;
	Node0x254d600:s1 -> Node0x254d920;
	Node0x254d650 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#f4c5ad70",label="{%55:\l55:                                               \l  %56 = tail call i32 @llvm.bswap.i32(i32 %46) #6\l  %57 = select i1 %9, i32 %46, i32 %56\l  br label %58\l}"];
	Node0x254d650 -> Node0x254d6a0;
	Node0x254d6a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%58:\l58:                                               \l  %59 = phi i64 [ %129, %109 ], [ %53, %55 ]\l  %60 = phi i32 [ %128, %109 ], [ %52, %55 ]\l  %61 = phi i32 [ %122, %109 ], [ %57, %55 ]\l  %62 = phi i32 [ %116, %109 ], [ %42, %55 ]\l  %63 = phi i32 [ %115, %109 ], [ %41, %55 ]\l  %64 = phi i32 [ %114, %109 ], [ %41, %55 ]\l  %65 = phi i32 [ %113, %109 ], [ 0, %55 ]\l  %66 = phi i32 [ %112, %109 ], [ %11, %55 ]\l  %67 = zext i32 %61 to i64\l  %68 = sub i64 %1, %59\l  %69 = icmp ugt i64 %68, %67\l  br i1 %69, label %70, label %131\l|{<s0>T|<s1>F}}"];
	Node0x254d6a0:s0 -> Node0x254d6f0;
	Node0x254d6a0:s1 -> Node0x254d920;
	Node0x254d6f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e36c5570",label="{%70:\l70:                                               \l  %71 = add i32 %60, %61\l  %72 = zext i32 %71 to i64\l  %73 = getelementptr inbounds i8, i8* %0, i64 %72\l  %74 = load i8, i8* %73, align 1, !tbaa !1090\l  %75 = icmp eq i8 %74, 0\l  br i1 %75, label %76, label %131\l|{<s0>T|<s1>F}}"];
	Node0x254d6f0:s0 -> Node0x254d740;
	Node0x254d6f0:s1 -> Node0x254d920;
	Node0x254d740 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%76:\l76:                                               \l  %77 = getelementptr inbounds i8, i8* %0, i64 %59\l  %78 = tail call fastcc i32 @strcmp(i8* %2, i8* %77) #26\l  %79 = icmp eq i32 %78, 0\l  br i1 %79, label %80, label %107\l|{<s0>T|<s1>F}}"];
	Node0x254d740:s0 -> Node0x254d790;
	Node0x254d740:s1 -> Node0x254d880;
	Node0x254d790 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#c7d7f070",label="{%80:\l80:                                               \l  %81 = add i32 %62, %40\l  %82 = zext i32 %81 to i64\l  %83 = getelementptr inbounds i32, i32* %4, i64 %82\l  %84 = load i32, i32* %83, align 4, !tbaa !1086\l  %85 = tail call i32 @llvm.bswap.i32(i32 %84) #6\l  %86 = select i1 %9, i32 %84, i32 %85\l  %87 = add i32 %81, 1\l  %88 = zext i32 %87 to i64\l  %89 = getelementptr inbounds i32, i32* %4, i64 %88\l  %90 = load i32, i32* %89, align 4, !tbaa !1086\l  %91 = tail call i32 @llvm.bswap.i32(i32 %90) #6\l  %92 = select i1 %9, i32 %90, i32 %91\l  %93 = zext i32 %92 to i64\l  %94 = icmp ult i64 %93, %1\l  br i1 %94, label %95, label %131\l|{<s0>T|<s1>F}}"];
	Node0x254d790:s0 -> Node0x254d7e0;
	Node0x254d790:s1 -> Node0x254d920;
	Node0x254d7e0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#aec9fc70",label="{%95:\l95:                                               \l  %96 = zext i32 %86 to i64\l  %97 = sub i64 %1, %93\l  %98 = icmp ugt i64 %97, %96\l  br i1 %98, label %99, label %131\l|{<s0>T|<s1>F}}"];
	Node0x254d7e0:s0 -> Node0x254d830;
	Node0x254d7e0:s1 -> Node0x254d920;
	Node0x254d830 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#8fb1fe70",label="{%99:\l99:                                               \l  %100 = add i32 %92, %86\l  %101 = zext i32 %100 to i64\l  %102 = getelementptr inbounds i8, i8* %0, i64 %101\l  %103 = load i8, i8* %102, align 1, !tbaa !1090\l  %104 = icmp eq i8 %103, 0\l  %105 = getelementptr inbounds i8, i8* %0, i64 %93\l  %106 = select i1 %104, i8* %105, i8* null\l  br label %131\l}"];
	Node0x254d830 -> Node0x254d920;
	Node0x254d880 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%107:\l107:                                              \l  %108 = icmp eq i32 %66, 1\l  br i1 %108, label %131, label %109\l|{<s0>T|<s1>F}}"];
	Node0x254d880:s0 -> Node0x254d920;
	Node0x254d880:s1 -> Node0x254d8d0;
	Node0x254d8d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#e5705870",label="{%109:\l109:                                              \l  %110 = icmp slt i32 %78, 0\l  %111 = sub i32 %66, %64\l  %112 = select i1 %110, i32 %64, i32 %111\l  %113 = select i1 %110, i32 %65, i32 %63\l  %114 = lshr i32 %112, 1\l  %115 = add i32 %113, %114\l  %116 = shl i32 %115, 1\l  %117 = add i32 %116, %39\l  %118 = zext i32 %117 to i64\l  %119 = getelementptr inbounds i32, i32* %4, i64 %118\l  %120 = load i32, i32* %119, align 4, !tbaa !1086\l  %121 = tail call i32 @llvm.bswap.i32(i32 %120) #6\l  %122 = select i1 %9, i32 %120, i32 %121\l  %123 = add i32 %117, 1\l  %124 = zext i32 %123 to i64\l  %125 = getelementptr inbounds i32, i32* %4, i64 %124\l  %126 = load i32, i32* %125, align 4, !tbaa !1086\l  %127 = tail call i32 @llvm.bswap.i32(i32 %126) #6\l  %128 = select i1 %9, i32 %126, i32 %127\l  %129 = zext i32 %128 to i64\l  %130 = icmp ult i64 %129, %1\l  br i1 %130, label %58, label %131\l|{<s0>T|<s1>F}}"];
	Node0x254d8d0:s0 -> Node0x254d6a0;
	Node0x254d8d0:s1 -> Node0x254d920;
	Node0x254d920 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{%131:\l131:                                              \l  %132 = phi i8* [ null, %34 ], [ null, %25 ], [ null, %3 ], [ %106, %99 ], [\l... null, %80 ], [ null, %95 ], [ null, %38 ], [ null, %107 ], [ null, %109 ], [\l... null, %58 ], [ null, %70 ]\l  ret i8* %132\l}"];
}
