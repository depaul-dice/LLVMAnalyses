digraph "CFG for 'alloc_rev' function" {
	label="CFG for 'alloc_rev' function";

	Node0x1448210 [shape=record,label="{%1:\l  %2 = getelementptr inbounds %struct.chunk, %struct.chunk* %0, i64 0, i32 0\l  %3 = load i64, i64* %2, align 8, !tbaa !2\l  %4 = and i64 %3, 1\l  %5 = icmp eq i64 %4, 0\l  br i1 %5, label %6, label %44\l|{<s0>T|<s1>F}}"];
	Node0x1448210:s0 -> Node0x14482c0;
	Node0x1448210:s1 -> Node0x1448590;
	Node0x14482c0 [shape=record,label="{%6:\l6:                                                \l  %7 = phi i64 [ %41, %40 ], [ %3, %1 ]\l  %8 = lshr i64 %7, 5\l  %9 = add nsw i64 %8, -1\l  %10 = icmp ult i64 %9, 33\l  br i1 %10, label %11, label %13\l|{<s0>T|<s1>F}}"];
	Node0x14482c0:s0 -> Node0x1448310;
	Node0x14482c0:s1 -> Node0x1448360;
	Node0x1448310 [shape=record,label="{%11:\l11:                                               \l  %12 = trunc i64 %9 to i32\l  br label %30\l}"];
	Node0x1448310 -> Node0x14484a0;
	Node0x1448360 [shape=record,label="{%13:\l13:                                               \l  %14 = icmp ult i64 %9, 512\l  br i1 %14, label %15, label %21\l|{<s0>T|<s1>F}}"];
	Node0x1448360:s0 -> Node0x14483b0;
	Node0x1448360:s1 -> Node0x1448400;
	Node0x14483b0 [shape=record,label="{%15:\l15:                                               \l  %16 = lshr i64 %9, 3\l  %17 = add nsw i64 %16, -4\l  %18 = getelementptr inbounds [60 x i8], [60 x i8]* @bin_tab, i64 0, i64 %17\l  %19 = load i8, i8* %18, align 1, !tbaa !8\l  %20 = zext i8 %19 to i32\l  br label %30\l}"];
	Node0x14483b0 -> Node0x14484a0;
	Node0x1448400 [shape=record,label="{%21:\l21:                                               \l  %22 = icmp ugt i64 %9, 7168\l  br i1 %22, label %30, label %23\l|{<s0>T|<s1>F}}"];
	Node0x1448400:s0 -> Node0x14484a0;
	Node0x1448400:s1 -> Node0x1448450;
	Node0x1448450 [shape=record,label="{%23:\l23:                                               \l  %24 = lshr i64 %9, 7\l  %25 = add nsw i64 %24, -4\l  %26 = getelementptr inbounds [60 x i8], [60 x i8]* @bin_tab, i64 0, i64 %25\l  %27 = load i8, i8* %26, align 1, !tbaa !8\l  %28 = zext i8 %27 to i32\l  %29 = add nuw nsw i32 %28, 16\l  br label %30\l}"];
	Node0x1448450 -> Node0x14484a0;
	Node0x14484a0 [shape=record,label="{%30:\l30:                                               \l  %31 = phi i32 [ %12, %11 ], [ %20, %15 ], [ %29, %23 ], [ 63, %21 ]\l  tail call fastcc void @lock_bin(i32 %31) #17\l  %32 = load i64, i64* %2, align 8, !tbaa !2\l  %33 = icmp eq i64 %32, %7\l  br i1 %33, label %34, label %40\l|{<s0>T|<s1>F}}"];
	Node0x14484a0:s0 -> Node0x14484f0;
	Node0x14484a0:s1 -> Node0x1448540;
	Node0x14484f0 [shape=record,label="{%34:\l34:                                               \l  %35 = bitcast %struct.chunk* %0 to i8*\l  %36 = and i64 %7, -2\l  %37 = sub i64 0, %36\l  %38 = getelementptr inbounds i8, i8* %35, i64 %37\l  %39 = bitcast i8* %38 to %struct.chunk*\l  tail call fastcc void @unbin(%struct.chunk* %39, i32 %31) #17\l  tail call fastcc void @unlock_bin(i32 %31) #17\l  br label %44\l}"];
	Node0x14484f0 -> Node0x1448590;
	Node0x1448540 [shape=record,label="{%40:\l40:                                               \l  tail call fastcc void @unlock_bin(i32 %31) #17\l  %41 = load i64, i64* %2, align 8, !tbaa !2\l  %42 = and i64 %41, 1\l  %43 = icmp eq i64 %42, 0\l  br i1 %43, label %6, label %44\l|{<s0>T|<s1>F}}"];
	Node0x1448540:s0 -> Node0x14482c0;
	Node0x1448540:s1 -> Node0x1448590;
	Node0x1448590 [shape=record,label="{%44:\l44:                                               \l  %45 = phi i32 [ 1, %34 ], [ 0, %1 ], [ 0, %40 ]\l  ret i32 %45\l}"];
}
