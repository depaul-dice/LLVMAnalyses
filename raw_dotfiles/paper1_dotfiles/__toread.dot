digraph "CFG for '__toread' function" {
	label="CFG for '__toread' function";

	Node0x14303f0 [shape=record,label="{%1:\l  %2 = getelementptr inbounds %struct._IO_FILE.65, %struct._IO_FILE.65* %0,\l... i64 0, i32 18\l  %3 = load i32, i32* %2, align 8, !tbaa !2\l  %4 = add nsw i32 %3, -1\l  %5 = or i32 %4, %3\l  store i32 %5, i32* %2, align 8, !tbaa !2\l  %6 = getelementptr inbounds %struct._IO_FILE.65, %struct._IO_FILE.65* %0,\l... i64 0, i32 5\l  %7 = load i8*, i8** %6, align 8, !tbaa !9\l  %8 = getelementptr inbounds %struct._IO_FILE.65, %struct._IO_FILE.65* %0,\l... i64 0, i32 7\l  %9 = load i8*, i8** %8, align 8, !tbaa !10\l  %10 = icmp eq i8* %7, %9\l  br i1 %10, label %if.end.icp, label %11\l|{<s0>T|<s1>F}}"];
	Node0x14303f0:s0 -> Node0x1430670;
	Node0x14303f0:s1 -> Node0x1430580;
	Node0x1430580 [shape=record,label="{%11:\l11:                                               \l  %12 = getelementptr inbounds %struct._IO_FILE.65, %struct._IO_FILE.65* %0,\l... i64 0, i32 9\l  %13 = load i64 (%struct._IO_FILE.65*, i8*, i64)*, i64 (%struct._IO_FILE.65*,\l... i8*, i64)** %12, align 8, !tbaa !11\l  %14 = bitcast i64 (%struct._IO_FILE.58*, i8*, i64)* @__stdio_read to i64\l... (%struct._IO_FILE.65*, i8*, i64)*\l  %15 = icmp eq i64 (%struct._IO_FILE.65*, i8*, i64)* %13, %14\l  br i1 %15, label %if.true.direct_targ, label %if.false.orig_indirect\l|{<s0>T|<s1>F}}"];
	Node0x1430580:s0 -> Node0x14305d0;
	Node0x1430580:s1 -> Node0x1430620;
	Node0x14305d0 [shape=record,label="{if.true.direct_targ:                              \l  %16 = bitcast %struct._IO_FILE.65* %0 to %struct._IO_FILE.58*\l  %17 = tail call i64 @__stdio_read(%struct._IO_FILE.58* nonnull %16, i8*\l... null, i64 0) #17\l  br label %if.end.icp\l}"];
	Node0x14305d0 -> Node0x1430670;
	Node0x1430620 [shape=record,label="{if.false.orig_indirect:                           \l  %18 = bitcast i64 (%struct._IO_FILE.62*, i8*, i64)* @__stdio_write to i64\l... (%struct._IO_FILE.65*, i8*, i64)*\l  %19 = icmp eq i64 (%struct._IO_FILE.65*, i8*, i64)* %13, %18\l  call void @llvm.assume(i1 %19)\l  %20 = bitcast %struct._IO_FILE.65* %0 to %struct._IO_FILE.62*\l  %21 = tail call i64 @__stdio_write(%struct._IO_FILE.62* nonnull %20, i8*\l... null, i64 0) #17\l  br label %if.end.icp\l}"];
	Node0x1430620 -> Node0x1430670;
	Node0x1430670 [shape=record,label="{if.end.icp:                                       \l  %22 = getelementptr inbounds %struct._IO_FILE.65, %struct._IO_FILE.65* %0,\l... i64 0, i32 4\l  store i8* null, i8** %8, align 8, !tbaa !10\l  %23 = bitcast i8** %22 to \<2 x i8*\>*\l  store \<2 x i8*\> zeroinitializer, \<2 x i8*\>* %23, align 8, !tbaa !12\l  %24 = getelementptr inbounds %struct._IO_FILE.65, %struct._IO_FILE.65* %0,\l... i64 0, i32 0\l  %25 = load i32, i32* %24, align 8, !tbaa !13\l  %26 = and i32 %25, 4\l  %27 = icmp eq i32 %26, 0\l  br i1 %27, label %30, label %28\l|{<s0>T|<s1>F}}"];
	Node0x1430670:s0 -> Node0x1430710;
	Node0x1430670:s1 -> Node0x14306c0;
	Node0x14306c0 [shape=record,label="{%28:\l28:                                               \l  %29 = or i32 %25, 32\l  store i32 %29, i32* %24, align 8, !tbaa !13\l  br label %40\l}"];
	Node0x14306c0 -> Node0x1430760;
	Node0x1430710 [shape=record,label="{%30:\l30:                                               \l  %31 = getelementptr inbounds %struct._IO_FILE.65, %struct._IO_FILE.65* %0,\l... i64 0, i32 11\l  %32 = load i8*, i8** %31, align 8, !tbaa !14\l  %33 = getelementptr inbounds %struct._IO_FILE.65, %struct._IO_FILE.65* %0,\l... i64 0, i32 12\l  %34 = load i64, i64* %33, align 8, !tbaa !15\l  %35 = getelementptr inbounds i8, i8* %32, i64 %34\l  %36 = getelementptr inbounds %struct._IO_FILE.65, %struct._IO_FILE.65* %0,\l... i64 0, i32 2\l  store i8* %35, i8** %36, align 8, !tbaa !16\l  %37 = getelementptr inbounds %struct._IO_FILE.65, %struct._IO_FILE.65* %0,\l... i64 0, i32 1\l  store i8* %35, i8** %37, align 8, !tbaa !17\l  %38 = shl i32 %25, 27\l  %39 = ashr i32 %38, 31\l  br label %40\l}"];
	Node0x1430710 -> Node0x1430760;
	Node0x1430760 [shape=record,label="{%40:\l40:                                               \l  %41 = phi i32 [ -1, %28 ], [ %39, %30 ]\l  ret i32 %41\l}"];
}
